/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 42219:
/*!********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[7].use[1]!./vendor/akeneo/pim-community-dev/frontend/webpack/require-polyfill.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, requireContext) {
  /**
   * Provides a polyfill to hijack require() calls in twig templates
   *
   * @param  {String|Array}   modules An array of module names to request, or a string for a single module
   * @param  {Function} cb      The callback to run after fetching the module
   */
  return function (modules, cb) {
    var resolvedModules = [];

    if (typeof modules === 'string') {
      return requireContext(modules);
    } else {
      _.each(modules, function (module) {
        var resolvedModule = requireContext(module);
        resolvedModules.push(resolvedModule);
      });
    }

    if (cb) {
      cb.apply(this, resolvedModules);
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 37513:
/*!***********************************************************************************!*\
  !*** ./public/bundles/akeneocommunicationchannel/menu/communication-channel.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknCommunicationChannelMenu-link\" title=\"<%= title %>\">\n</div>\n"

/***/ }),

/***/ 57823:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/action-configure-columns.html ***!
  \*************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGridToolbar-actionButton\">\n    <a class=\"AknActionButton configure-columns\" title=\"<%- label %>\">\n        <%- label %>\n    </a>\n</div>\n"

/***/ }),

/***/ 97704:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/action-launcher-button.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<% hidden = !icon && !iconClassName && !label %>\n<<%- tagName %> <% if (!noHref) { %>href=\"<%= link %>\"<% } %> class=\"<%- className %><% if (hidden) { %> AknIconButton--hide<% } %><% if (!enabled) { %> disabled<% } %>\"\n    <% _.each(attributes, function(attribute, name) { %>\n        <%- name %>=\"<%- attribute %>\"\n    <% }) %>\n    title=\"<%- label %>\"\n>\n    <% if (icon) { %>\n        <i class=\"icon-<%- icon %>\"></i>\n    <% } else { %>\n        <% if (iconClassName) { %>\n            <i class=\"<%- iconClassName %>\"></i>\n        <% } %>\n        <%- label %>\n    <% } %>\n</<%- tagName %>>\n"

/***/ }),

/***/ 13490:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/action-launcher-list-item.html ***!
  \**************************************************************************************/
/***/ ((module) => {

module.exports = "<li>\n    <<%- tagName %> href=\"<%= link %>\" class=\"<%- className %><% if (!enabled) { %> disabled<% } %>\"\n        <% _.each(attributes, function(attribute, name) { %>\n            <%- name %>=\"<%- attribute %>\"\n        <% }) %>\n        title=\"<%- label %>\"\n    >\n        <%- label %>\n    </<%- tagName %>>\n</li>\n"

/***/ }),

/***/ 23730:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/actions-group.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknButtonList-item <%- classname %>\" title=\"<%- group.title %>\">\n  <%- __(group.label) %>\n</div>\n"

/***/ }),

/***/ 30714:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/add-filter-button.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<div id=\"add-filter-button\" ><%- label %></div>\n"

/***/ }),

/***/ 85125:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/add-filter-select.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<select id=\"add-filter-select\" multiple>\n    <% groups.forEach((group) => { %>\n        <optgroup label=\"<%= group %>\">\n            <% Object.keys(filters).forEach((filterKey) => { %>\n                <% if (filters[filterKey].group === group) { %>\n                    <option value=\"<%= filterKey %>\" <% if (filters[filterKey].enabled) { %>selected<% } %>>\n                        <%= filters[filterKey].label %>\n                    </option>\n                    <% } %>\n            <% }); %>\n        </optgroup>\n    <% }); %>\n</select>\n"

/***/ }),

/***/ 14543:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/cell/credentials-cell.html ***!
  \**********************************************************************************/
/***/ ((module) => {

module.exports = "<div>\n    <span class=\"AknGrid-label\">\n        <%- clientIdLabel %>:\n    </span>\n    <%- publicId %>\n</div>\n<div>\n    <span class=\"AknGrid-label\">\n        <%- secretLabel %>:\n    </span>\n    <%- secret %>\n</div>\n"

/***/ }),

/***/ 12493:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/cell/enabled-cell.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknBadge AknBadge--<%- enabled %> status-<%- enabled %>\">\n    <%- label %>\n</div>\n"

/***/ }),

/***/ 3631:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/cell/expand-history-cell.html ***!
  \*************************************************************************************/
/***/ ((module) => {

module.exports = "<span class=\"AknButtonList\"><div class=\"AknButtonList-item version-expander AknGrid-expand\"></div><span class=\"AknButtonList-item AknButton AknButton--grey AknButton--round\"><%- value %></span></span>\n"

/***/ }),

/***/ 5286:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/cell/history-diff-cell.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<table class=\"table-history-details\">\n    <tbody>\n        <% _.each(changes, function(value, label) { %>\n            <tr class=\"AknGrid-bodyRow\">\n                <td class=\"AknGrid-bodyCell AknGrid-bodyCell--highlightAlternative AknGrid-bodyCell--withoutBottomBorder property\" colspan=\"2\"><%= label %></td>\n            </tr>\n            <tr class=\"AknGrid-bodyRow AknGrid-bodyRow--wordBreakable\">\n                <td class=\"AknGrid-bodyCell AknGrid-bodyCell--withoutTopBorder\"><span class=\"AknDiff--remove\"><%- __('pim_enrich.entity.product.module.history.old_value') %>:</span> <span class=\"old-values\"><%- value.old %></span></td>\n                <td class=\"AknGrid-bodyCell AknGrid-bodyCell--withoutTopBorder\"><span class=\"AknDiff--add\"><%- __('pim_enrich.entity.product.module.history.new_value') %>:</span> <span class=\"new-values\"><%- value.new %></span></td>\n            </tr>\n        <% }); %>\n    </tbody>\n</table>\n"

/***/ }),

/***/ 61057:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/cell/image-cell.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<img class=\"AknGrid-image\" src=\"<%- src %>\" title=\"<%- label %>\" />\n"

/***/ }),

/***/ 56874:
/*!******************************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/cell/product-and-product-model-image-cell.html ***!
  \******************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGrid-imageLayer\"></div>\n<img class=\"AknGrid-image AknGrid-image--withLayer\" src=\"<%- src %>\" title=\"<%- label %>\" />\n"

/***/ }),

/***/ 58285:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/column-selector/button.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGridToolbar-actionButton\"><a class=\"AknActionButton configure-columns\" title=\"<%- label %>\" data-open><%- label %></a></div>\n"

/***/ }),

/***/ 76961:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/column-selector/columns.html ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = "<ul id=\"column-list\" class=\"AknVerticalList connected-sortable\">\n    <% _.each(columns, function(column) { %>\n    <li class=\"AknVerticalList-item AknVerticalList-item--movable\" data-value=\"<%- column.code %>\" data-group=\"<%- column.group %>\">\n        <div class=\"AknVerticalList-item-itemLabel\" title=\"<%- column.label %>\"><%- column.label %></div>\n    </li>\n    <% }); %>\n</ul>\n"

/***/ }),

/***/ 28927:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/column-selector/modal.html ***!
  \**********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumnConfigurator\">\n    <div class=\"AknColumnConfigurator-column AknColumnConfigurator-column--gray\">\n        <div class=\"AknColumnConfigurator-columnHeader\"><%- attributeGroupsLabel %></div>\n        <div class=\"AknColumnConfigurator-listContainer\" data-attributes>\n            <ul class=\"AknVerticalList nav-list\">\n                <li class=\"AknVerticalList-item AknVerticalList-item--selectable tab active\" data-group data-value=\"\">\n                    All Groups\n                </li>\n                <% _.each(groups, (group) => { %>\n                <li class=\"AknVerticalList-item AknVerticalList-item--selectable tab\" data-group data-value=\"<%- group.code %>\">\n                    <div class=\"AknVerticalList-item-itemLabel\" title=\"<%- group.label %>\"><%- group.label %></div>\n                    <span class=\"AknBadge\"><%- group.count %></span>\n                </li>\n                <% }) %>\n            </ul>\n        </div>\n    </div>\n    <div class=\"AknColumnConfigurator-column\">\n        <div class=\"AknColumnConfigurator-columnHeader\"> <input class=\"AknTextField AknColumnConfigurator-searchInput\" type=\"search\" placeholder=\"<%- _.__('pim_datagrid.column_configurator.search') %>\"/> </div>\n        <div class=\"AknColumnConfigurator-listContainer more\" data-columns></div>\n    </div>\n    <div class=\"AknColumnConfigurator-column\">\n        <div class=\"AknColumnConfigurator-columnHeader\"><%- _.__(\"pim_datagrid.column_configurator.displayed_columns\") %>\n            <button class=\"AknButton AknButton--grey reset\"><%- _.__(\"pim_datagrid.column_configurator.clear\") %></button>\n        </div>\n        <div class=\"AknColumnConfigurator-listContainer\" data-columns-selected></div>\n    </div>\n</div>\n"

/***/ }),

/***/ 85935:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/column-selector/selected.html ***!
  \*************************************************************************************/
/***/ ((module) => {

module.exports = "<ul id=\"column-selection\" class=\"AknVerticalList connected-sortable ui-sortable\">\n    <% _.each(columns, (column) => { %>\n    <li class=\"AknVerticalList-item AknVerticalList-item--movable\" data-value=\"<%- column.code %>\" data-group=\"<%- column.group %>\">\n        <div class=\"AknVerticalList-item-itemLabel\" title=\"<%- column.label %>\"><%- column.label %></div>\n        <% if (column.removable) { %>\n        <div class=\"AknVerticalList-delete action\" title=\"<%- _.__('pim_datagrid.column_configurator.remove_column') %>\"></div>\n        <% } %>\n    </li>\n    <% }) %>\n    <div class=\"AknMessageBox AknMessageBox--error AknMessageBox--hide alert alert-error\"><%- _.__('pim_datagrid.column_configurator.min_message') %></div>\n</ul>\n"

/***/ }),

/***/ 26215:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/display-selector.html ***!
  \*****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n    <%- displayLabel %>:\n    <span class=\"AknActionButton-highlight\"><%- types[selectedType].label %></span>\n    <span class=\"AknActionButton-caret\"></span>\n</div>\n<ul class=\"AknDropdown-menu\">\n    <div class=\"AknDropdown-menuTitle\"><%- displayLabel %></div>\n    <% _.each(types, (type, key) => { %>\n        <li class=\"display-selector-item\" data-type=\"<%- key %>\">\n            <a class=\"AknDropdown-menuLink<% if (key === selectedType) { %> AknDropdown-menuLink--active<% } %>\" data-type=\"<%- key %>\"><%- type.label %></a>\n        </li>\n    <% }) %>\n</ul>\n"

/***/ }),

/***/ 83961:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/done-button.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknButton AknButton--apply close\"><%- label %></div>\n"

/***/ }),

/***/ 47932:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/done-container.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-bottomButtonContainer\"></div>\n"

/***/ }),

/***/ 35311:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/pagination.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<% _.each(handles, function (handle) { %>\n<a class=\"AknActionButton AknGridToolbar-actionButton <% if (handle.className || disabled) { %><%- handle.className %> <% if (disabled) { %>disabled<% } %><% } %>\" href=\"#\" <% if (handle.title) {%> title=\"<%- handle.title %>\"<% } %>>\n    <span <% if (handle.wrapClass) { %>class=\"<%- handle.wrapClass %>\"<% } %>><%- handle.label %></span>\n</a>\n<% }); %>\n"

/***/ }),

/***/ 74456:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/row/changes.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<tr class=\"AknGrid-bodyRow AknGrid-bodyRow--withoutTopBorder changeset\" data-version=\"<%- version %>\">\n    <td class=\"AknGrid-bodyCell\"></td>\n</tr>\n"

/***/ }),

/***/ 19675:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/row/product-thumbnail.html ***!
  \**********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGrid-fullImage\" style=\"background-image: url('<%- imagePath %>');background-size: contain;background-repeat: no-repeat;\"></div>\n<div class=\"AknGrid-title\"><%- label %></div>\n<div class=\"AknGrid-subTitle\"><%- identifier %></div>\n<% if (completenessText !== null) { %>\n    <div class=\"AknGrid-bodyCell string-cell AknBadge--topRight\">\n        <span class=\"AknBadge <%- completenessClass %>\"><%- completenessText %></span>\n    </div>\n<% } %>\n"

/***/ }),

/***/ 75320:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/row/product.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<tr title=\"<%- label %>\" class=\"AknGrid-bodyRow AknGrid-bodyRow--thumbnail AknGrid-bodyRow--withoutTopBorder <% if (useLayerStyle) { %>AknGrid-bodyRow--withLayer<% } %>\"></tr>\n"

/***/ }),

/***/ 54376:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/datagrid/row/version.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<tr class=\"AknGrid-bodyRow AknGrid-bodyRow--withoutTopBorder entity-version\" data-version=\"<%- version %>\"></tr>\n"

/***/ }),

/***/ 18779:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/date-filter.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFilterChoice\">\n    <div class=\"AknFilterChoice-header\">\n        <div class=\"AknFilterChoice-title\"><%- label %></div>\n\n        <div class=\"AknDropdown operator\">\n            <div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n                <span class=\"AknActionButton-highlight\"><%- selectedOperatorLabel %></span>\n                <span class=\"AknActionButton-caret\"></span>\n            </div>\n            <div class=\"AknDropdown-menu\">\n                <div class=\"AknDropdown-menuTitle\"><%- operatorLabel %></div>\n                <% _.each(choices, function (option) { %>\n                <div class=\"AknDropdown-menuLink<% if (selectedChoice == option.value) { %> AknDropdown-menuLink--active active<% } %>\">\n                    <span class=\"label operator_choice\" data-value=\"<%= option.value %>\"><%= option.label %></span>\n                </div>\n                <% }); %>\n            </div>\n        </div>\n    </div>\n    <div class=\"AknFilterChoice-dates\">\n        <span class=\"AknFilterChoice-date from\">\n            <input type=\"text\" value=\"<%- from %>\" class=\"date-selector <%= inputClass %> add-on\" name=\"start\" placeholder=\"<%- fromLabel %>\" size=\"1\">\n        </span>\n        <span class=\"AknFilterChoice-separator separator\">-</span>\n        <span class=\"AknFilterChoice-date to\">\n            <input type=\"text\" value=\"<%- to %>\" class=\"date-selector <%= inputClass %> add-on\" name=\"end\" placeholder=\"<%- toLabel %>\" size=\"1\">\n        </span>\n    </div>\n    <div class=\"AknFilterChoice-button\">\n        <button class=\"AknButtonList-item AknButton AknButton--apply filter-update\" type=\"button\"><%- updateLabel %></button>\n    </div>\n</div>\n"

/***/ }),

/***/ 35368:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/filter-column.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<button type=\"button\" class=\"AknFilterBox-addFilterButton AknFilterBox-addFilterButton--asPanel\" aria-haspopup=\"true\" style=\"width: 280px\" data-toggle>\n    <div><%- filtersLabel %></div>\n</button>\n<div class=\"filter-selector\">\n    <div>\n        <div class=\"ui-multiselect-menu ui-widget ui-widget-content ui-corner-all AknFilterBox-addFilterButton AknFilterBox-column filter-list select-filter-widget pimmultiselect\">\n            <div class=\"ui-multiselect-filter\"><input placeholder=\"\" type=\"search\"></div>\n            <div class=\"AknLoadingMask loading-mask filter-loading\" style=\"top: 50px\"></div>\n            <div class=\"filters-column\"></div>\n            <div class=\"AknColumn-bottomButtonContainer AknColumn-bottomButtonContainer--sticky\">\n                <div class=\"AknButton AknButton--apply close\"><%- doneLabel %></div>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 74340:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/filter-group.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<ul class=\"ui-multiselect-checkboxes ui-helper-reset full\">\n    <li class=\"ui-multiselect-optgroup-label\">\n        <a title=\"<%- groupName %>\"><%- groupName %></a>\n    </li>\n    <% filters.forEach(filter => { %>\n    <li>\n        <label for=\"<%- filter.name %>\" title=\"<%- filter.label %>\" class=\"ui-corner-all ui-state-hover\">\n            <input\n                    id=\"<%- filter.name %>\"\n                    name=\"multiselect_add-filter-select\"\n                    type=\"checkbox\" value=\"<%- filter.name %>\"\n                    title=\"<%- filter.label %>\"\n            <%- filter.enabled ? 'checked=\"checked\"' : ''  %>\n            <%- true === ignoredFilters.includes(filter.name) ? 'disabled=\"true\"' : ''  %>\n            aria-selected=\"true\">\n            <span><%- filter.label %></span>\n        </label>\n    </li>\n    <% }) %>\n</ul>\n"

/***/ }),

/***/ 26131:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/filter-grouped-variant.html ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n    <%- label %>:\n    <span class=\"AknActionButton-highlight\"></span>\n    <span class=\"AknActionButton-caret\"></span>\n</div>\n<ul class=\"AknDropdown-menu\">\n    <div class=\"AknDropdown-menuTitle\"><%- label %></div>\n    <% _.each(options, (option) => { %>\n        <li class=\"AknDropdown-menuLink\">\n            <span class=\"display-grouped-item\" data-value=\"<%- option.value %>\"><%- __(option.label) %></span>\n        </li>\n    <% }) %>\n</ul>\n"

/***/ }),

/***/ 20694:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/metric-filter.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFilterChoice unitfilter choicefilter\">\n    <div class=\"AknFilterChoice-header\">\n        <div class=\"AknFilterChoice-title\"><%- label %></div>\n        <div class=\"AknDropdown operator\">\n            <div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n                <span class=\"AknActionButton-highlight\"><%- selectedOperatorLabel %></span>\n                <span class=\"AknActionButton-caret\"></span>\n            </div>\n            <div class=\"AknDropdown-menu\">\n                <div class=\"AknDropdown-menuTitle\"><%- operatorLabel %></div>\n                <% _.each(operatorChoices, function (label, operator) { %>\n                <div class=\"AknDropdown-menuLink<% if (selectedOperator == operator) { %> AknDropdown-menuLink--active active<% } %>\">\n                    <span class=\"label operator_choice\" data-value=\"<%- operator %>\"><%- label %></span>\n                </div>\n                <% }); %>\n            </div>\n        </div>\n    </div>\n    <div class=\"AknFilterChoice-inputContainer\">\n        <input type=\"text\" name=\"value\" class=\"AknTextField select-field\" value=\"<%- value %>\"/>\n        <div class=\"AknFilterChoice-unit\">\n            <div class=\"AknDropdown unit\">\n                <div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n                    <span class=\"AknActionButton-highlight\"><%- i18n.getLabel(selectedUnit.labels, locale, selectedUnit.code) %></span>\n                    <span class=\"AknActionButton-caret\"></span>\n                </div>\n                <div class=\"AknDropdown-menu unit\">\n                    <div class=\"AknDropdown-menuTitle\"><%- unitLabel %></div>\n                    <% _.each(units, function (unit) { %>\n                    <div class=\"AknDropdown-menuLink<% if (selectedUnit.code === unit.code) { %> AknDropdown-menuLink--active active<% } %>\">\n                        <span class=\"label unit_choice\" data-value=\"<%- unit.code %>\">\n                           <%- i18n.getLabel(unit.labels, locale, unit.code) %>\n                        </span>\n                    </div>\n                    <% }); %>\n                </div>\n            </div>\n        </div>\n        <input class=\"name_input\" type=\"hidden\" name=\"metric_unit\" value=\"<%- selectedUnit.code %>\"/>\n    </div>\n    <div class=\"AknFilterChoice-button\">\n        <button type=\"button\" class=\"AknButton AknButton--apply filter-update\"><%- updateLabel %></button>\n    </div>\n</div>\n"

/***/ }),

/***/ 87732:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/price-filter.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFilterChoice currencyfilter choicefilter\">\n    <div class=\"AknFilterChoice-header\">\n        <div class=\"AknFilterChoice-title\"><%- label %></div>\n        <div class=\"AknDropdown operator\">\n            <div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n                <span class=\"AknActionButton-highlight\"><%- selectedOperatorLabel %></span>\n                <span class=\"AknActionButton-caret\"></span>\n            </div>\n            <div class=\"AknDropdown-menu\">\n                <div class=\"AknDropdown-menuTitle\"><%- operatorLabel %></div>\n                <% _.each(operatorChoices, function (label, operator) { %>\n                <div class=\"AknDropdown-menuLink<% if (selectedOperator == operator) { %> AknDropdown-menuLink--active active<% } %>\">\n                    <span class=\"label operator_choice\" data-value=\"<%= operator %>\"><%- label %></span>\n                </div>\n                <% }); %>\n            </div>\n        </div>\n    </div>\n    <div class=\"AknFilterChoice-inputContainer\">\n        <input type=\"text\" name=\"value\" class=\"AknTextField select-field\" value=\"<%- value %>\"/>\n        <div class=\"AknFilterChoice-currency\">\n            <div class=\"AknDropdown currency\">\n                <div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n                    <span class=\"AknActionButton-highlight\"><%- selectedCurrency %></span>\n                    <span class=\"AknActionButton-caret\"></span>\n                </div>\n                <div class=\"AknDropdown-menu\">\n                    <div class=\"AknDropdown-menuTitle\"><%- currencyLabel %></div>\n                    <% _.each(currencies, function (currency) { %>\n                    <div class=\"AknDropdown-menuLink<% if (selectedCurrency == currency) { %> AknDropdown-menuLink--active active<% } %>\">\n                        <span class=\"label currency_choice\" data-value=\"<%= currency %>\"><%- currency %></span>\n                    </div>\n                    <% }); %>\n                </div>\n            </div>\n        </div>\n        <input class=\"name_input\" type=\"hidden\" name=\"currency_currency\" value=\"<%- selectedCurrency %>\"/>\n    </div>\n    <div class=\"AknFilterChoice-button\">\n        <button type=\"button\" class=\"AknButton AknButton--apply filter-update\"><%- updateLabel %></button>\n    </div>\n</div>\n"

/***/ }),

/***/ 31269:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/scope-filter.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFilterBox-filter filter-select\" data-toggle=\"dropdown\">\n    <span class=\"AknFilterBox-filterLabel\"><%- label %></span>\n    <span class=\"AknFilterBox-filterCriteria value\"></span>\n    <span class=\"AknFilterBox-filterCaret\"></span>\n</div>\n<div class=\"AknDropdown-menu\">\n    <div class=\"AknDropdown-menuTitle\"><%- label %></div>\n    <% _.each(options, function (option) { %>\n    <div class=\"AknDropdown-menuLink\" data-value=\"<%- option.value %>\">\n        <span class=\"label\"><%- option.label %></span>\n    </div>\n    <% }) %>\n</div>\n"

/***/ }),

/***/ 37636:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/search-filter.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<input class=\"AknFilterBox-search\" maxlength=\"255\" autocomplete=\"non\" type=\"text\" name=\"value\" value=\"<%- (typeof value !== 'undefined') ? value : '' %>\" placeholder=\"<%- label %>\">\n"

/***/ }),

/***/ 32220:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/templates/filter/text-filter.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFilterChoice choicefilter\">\n    <div class=\"AknFilterChoice-header\">\n        <div class=\"AknFilterChoice-title\"><%- label %></div>\n        <% if (emptyChoice) { %>\n        <div class=\"AknDropdown operator\">\n            <div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n                <span class=\"AknActionButton-highlight\"><%- selectedOperatorLabel %></span>\n                <span class=\"AknActionButton-caret\"></span>\n            </div>\n            <div class=\"AknDropdown-menu\">\n                <div class=\"AknDropdown-menuTitle\"><%- operatorLabel %></div>\n                <% _.each(operatorChoices, function (label, operator) { %>\n                <div class=\"AknDropdown-menuLink<% if (selectedOperator == operator) { %> AknDropdown-menuLink--active active<% } %>\">\n                    <span class=\"label operator_choice\" data-value=\"<%= operator %>\"><%- label %></span>\n                </div>\n                <% }); %>\n            </div>\n        </div>\n        <% } %>\n    </div>\n    <div>\n        <input type=\"text\" name=\"value\" class=\"AknTextField select-field\"/>\n    </div>\n    <div class=\"AknFilterChoice-button\">\n        <button type=\"button\" class=\"AknButton AknButton--apply filter-update\"><%- updateLabel %></button>\n    </div>\n</div>\n"

/***/ }),

/***/ 54359:
/*!****************************************************************************************!*\
  !*** ./public/bundles/pimnotification/templates/notification/notification-footer.html ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = "<p class=\"AknNotificationList-footer\">\n    <% if (loading) { %>\n        <img src=\"<%= options.imgUrl %>\" alt=\"<%= options.loadingText %>\"/>\n    <% } %>\n\n    <% if (!loading && !hasNotifications && !hasMore) { %>\n        <span><%= options.noNotificationsMessage %></span>\n    <% } %>\n\n    <% if (hasNotifications && hasUnread) { %>\n        <button class=\"AknButton AknButton--grey mark-as-read\"><%= options.markAsReadMessage %></button>\n    <% } %>\n</p>\n"

/***/ }),

/***/ 30186:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimnotification/templates/notification/notification-list.html ***!
  \**************************************************************************************/
/***/ ((module) => {

module.exports = "<a href=\"<%= url ? '#' + url : 'javascript: void(0);' %>\" class=\"AknNotification-link <%= viewed ? '' : 'AknNotification-link--new new' %>\">\n    <div class=\"AknNotification-header\">\n        <div class=\"AknNotification-icon AknNotification-icon--<%= actionType %>\">\n            <i class=\"AknNotification-status AknNotification-status--<%= type %> icon-<%= icon %>\"></i>\n        </div>\n        <div class=\"AknNotification-metas\">\n            <time class=\"AknNotification-time\"><%= createdAt %></time>\n            <span class=\"AknNotification-title\"><%= actionTypeMessage %></span>\n        </div>\n        <i class=\"AknIconButton AknIconButton--light icon-<%= viewed ? 'trash' : 'eye-close' %> action\"></i>\n    </div>\n    <div class=\"AknNotification-message\"><%= message %></div>\n    <% if (comment) { %> <div class=\"AknNotification-comment\"><%= comment %></div> <% } %>\n    <% if (showReportButton) { %>\n    <button class=\"AknNotification-button AknButton AknButton--micro AknButton--grey \"><%- _.__(buttonLabel) %></button>\n    <% } %>\n</a>\n"

/***/ }),

/***/ 79838:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimnotification/templates/notification/notification.html ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknNotificationMenu-link notification-link\" data-toggle=\"dropdown\">\n    <span class=\"AknNotificationMenu-countContainer\"></span>\n</div>\n\n<ul class=\"AknNotificationList AknDropdown-menu AknDropdown-menu--right\"></ul>\n"

/***/ }),

/***/ 50031:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/templates/system/tab/loading-message.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--withPadding system-loading-message-field\">\n    <div class=\"AknFieldContainer\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label\" for=\"loading_message_enabled\"><%- _.__('oro_config.form.config.group.loading_message.label') %></label>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer system-loading-message-enabled-field\">\n            <div class=\"switch switch-small\" data-on-label=\"<%- _.__('pim_common.yes') %>\" data-off-label=\"<%- _.__('pim_common.no') %>\">\n                <input type=\"checkbox\" id=\"loading_message_enabled\" <%- loading_message_enabled === '1' ? 'checked' : '' %> />\n            </div>\n        </div>\n    </div>\n\n    <div class=\"AknFieldContainer\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label\" for=\"loading_messages\"><%- _.__('oro_config.form.config.group.loading_messages.label') %></label>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer system-loading-messages-field\">\n            <textarea class=\"AknTextareaField\" id=\"loading_messages\"><%- loading_messages %></textarea>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 72233:
/*!*************************************************!*\
  !*** ./public/bundles/pimui/templates/app.html ***!
  \*************************************************/
/***/ ((module) => {

module.exports = "<div id=\"page\" class=\"AknDefault-page\">\n    <div data-drop-zone=\"menu\"></div>\n    <div id=\"container\" class=\"AknDefault-container\"></div>\n    <div id=\"overlay\" class=\"AknOverlay\"></div>\n    <div data-drop-zone=\"communication-channel-panel\"></div>\n    <div id=\"flash-messages\"></div>\n</div>\n"

/***/ }),

/***/ 49644:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute-group/list.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGridContainer\">\n    <table class=\"AknGrid AknGrid--unclickable groups\">\n        <% _.each(attributeGroups, function (attributeGroup) { %>\n        <tr class=\"AknGrid-bodyRow attribute-group\" data-attribute-group-code=\"<%- attributeGroup.code %>\">\n            <% if (canSortAttributeGroup) { %>\n            <td class=\"AknGrid-bodyCell AknGrid-bodyCell--tight\">\n                <span class=\"handle\">\n                    <i class=\"icon-reorder\"></i>\n                </span>\n            </td>\n            <% } %>\n            <td class=\"AknGrid-bodyCell attribute-group-link\" data-attribute-group-code=\"<%- attributeGroup.code %>\"><%- i18n.getLabel(attributeGroup.labels, uiLocale, attributeGroup.code) %></td>\n        </tr>\n        <% }); %>\n    </table>\n</div>\n"

/***/ }),

/***/ 9613:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute-group/tab/attribute.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknHorizontalNavtab-item--active AknVerticalNavtab-item--active\">\n    <div class=\"AknGridToolbar\">\n        <div class=\"AknGridToolbar-center\"></div>\n        <div class=\"AknGridToolbar-right AknButtonList AknButtonList--right\" data-drop-zone=\"actions\">\n        </div>\n    </div>\n    <div class=\"tabsection-content\">\n        <div class=\"AknGridContainer\">\n            <table class=\"AknGrid AknGrid--unclickable table attributes\">\n                <thead>\n                    <tr>\n                        <% if (canSortAttributes) { %>\n                            <th class=\"AknGrid-headerCell\">&nbsp;</th>\n                        <% } %>\n                        <th class=\"AknGrid-headerCell\"><%- __('pim_enrich.entity.attribute.property.name') %></th>\n                        <th class=\"AknGrid-headerCell\"><%- __('pim_common.type') %></th>\n                        <th class=\"AknGrid-headerCell\"><%- __('pim_enrich.entity.attribute.property.scopable') %></th>\n                        <th class=\"AknGrid-headerCell\"><%- __('pim_enrich.entity.attribute.property.localizable') %></th>\n                        <% if (hasRightToRemove) { %>\n                        <th class=\"AknGrid-headerCell\">&nbsp;</th>\n                        <% } %>\n                    </tr>\n                </thead>\n                <tbody class=\"attribute-list\">\n                    <% _.each(attributes, function (attribute) { %>\n                        <tr class=\"AknGrid-bodyRow attribute\" data-attribute-code=\"<%- attribute.code %>\">\n                            <% if (canSortAttributes) { %>\n                                <td class=\"AknGrid-bodyCell AknGrid-bodyCell--tight\">\n                                    <span class=\"handle\">\n                                        <i class=\"icon-reorder\"></i>\n                                    </span>\n                                </td>\n                            <% } %>\n                            <td class=\"AknGrid-bodyCell\"><%- i18n.getLabel(attribute.labels, UserContext.get('catalogLocale'), attribute.code) %></td>\n                            <td class=\"AknGrid-bodyCell\"><%- __('pim_enrich.entity.attribute.property.type.' + attribute.type) %></td>\n                            <td class=\"AknGrid-bodyCell\">\n                                <input type=\"checkbox\" disabled=\"disabled\"<%- attribute.scopable ? ' checked=\"checked\"' : '' %>>\n                            </td>\n                            <td class=\"AknGrid-bodyCell\">\n                                <input type=\"checkbox\" disabled=\"disabled\"<%- attribute.localizable ? ' checked=\"checked\"' : '' %>>\n                            </td>\n                            <% if (hasRightToRemove) { %>\n                            <td class=\"AknGrid-bodyCell AknGrid-bodyCell--right\">\n                                <span class=\"AknIconButton AknIconButton--small AknIconButton--trash remove-attribute\" data-attribute-code=\"<%- attribute.code %>\"></span>\n                            </td>\n                            <% } %>\n                        </tr>\n                    <% }) %>\n                </tbody>\n            </table>\n            <% if (totalAttributeCount !== attributeCount) { %>\n                <div class=\"AknGridContainer-notEnoughDataTitle\"><%- __('pim_enrich.entity.attribute_group.show_more_attribute.title', {attributeCount: attributeCount, totalAttributeCount: totalAttributeCount}) %></div>\n                <div class=\"AknGridContainer-notEnoughDataSubtitle\"><%- __('pim_enrich.entity.attribute_group.show_more_attribute.subtitle') %></div>\n                <button class=\"AknButton AknButton--big AknButton--apply AknButton--centered redirect-attribute-list\"><%- __('pim_enrich.entity.attribute_group.show_more_attribute.button') %></button>\n                <img class=\"AknImage--centeredWithMargin\" src=\"/bundles/pimui/images/illustration_scroll.svg\"/>\n            <% } %>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 10055:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute-option/edit.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<td class=\"AknGrid-bodyCell field-cell AknAttributeOptions-rowHeader\">\n    <div class=\"AknFieldContainer AknFieldContainer--withoutMargin\">\n        <div class=\"AknFieldContainer-inputContainer\">\n            <% if (item.id) { %>\n                <input type=\"hidden\" class=\"attribute_option_code\" value=\"<%- item.code %>\"/>\n                <span class=\"option-code\"><%- item.code %></span>\n            <% } else { %>\n                <input type=\"text\" class=\"AknTextField attribute_option_code exclude\" value=\"<%- item.code %>\"/>\n                <div class=\"AknFieldContainer-iconsContainer\">\n                    <i class=\"AknIconButton AknIconButton--important AknIconButton--hide icon-warning-sign validation-tooltip\" data-placement=\"top\" data-toggle=\"tooltip\"></i>\n                </div>\n            <% } %>\n        </div>\n    </div>\n</td>\n<% _.each(locales, function (locale) { %>\n    <td class=\"AknGrid-bodyCell field-cell\">\n        <% if (item.optionValues[locale]) { %>\n            <input type=\"text\" class=\"AknTextField attribute-option-value exclude\" data-locale=\"<%- locale %>\"\n                value=\"<%- item.optionValues[locale].value %>\"/>\n        <% } else { %>\n            <input type=\"text\" class=\"AknTextField attribute-option-value exclude\" data-locale=\"<%- locale %>\"\n        value=\"\"/>\n        <% } %>\n    </td>\n<% }); %>\n<td class=\"AknGrid-bodyCell\">\n    <div class=\"AknButtonList AknButtonList--right AknButtonList--expanded\">\n        <span class=\"AknButtonList-item AknIconButton AknIconButton--round AknIconButton--apply AknIconButton--ok update-row\"></span>\n        <span class=\"AknButtonList-item AknIconButton AknIconButton--round AknIconButton--important AknIconButton--removeWhite show-row\"></span>\n    </div>\n</td>\n"

/***/ }),

/***/ 71993:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute-option/form.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--withPadding\">\n    <div class=\"AknFieldContainer\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label\" title=\"<%- __('pim_common.code') %>\">\n                <%- __('pim_common.code') %> <em><%- __('pim_common.required_label') %></em>\n            </label>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer field-input\">\n            <input class=\"AknTextField\" type=\"text\" name=\"code\">\n        </div>\n    </div>\n    <div class=\"AknFieldContainer\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label\">\n                <%- __('pim_common.label') %> <span><%= i18n.getFlag(locale) %></span>\n            </label>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer field-input\">\n            <input class=\"AknTextField input-large\" type=\"text\" name=\"label-<%- locale %>\" data-locale=\"<%- locale %>\">\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 43324:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute-option/index.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<colgroup>\n    <col class=\"code\" span=\"1\">\n    <col class=\"fields\" span=\"<%- locales.length %>\"/>\n    <col class=\"action\" span=\"1\"/>\n</colgroup>\n<thead>\n    <tr>\n        <th class=\"AknGrid-headerCell AknAttributeOptions-columnHeader\"><%- code_label %></th>\n        <% _.each(locales, function (locale) { %>\n            <th class=\"AknGrid-headerCell AknAttributeOptions-columnHeader\">\n                <%- locale %>\n            </th>\n        <% }); %>\n        <th class=\"AknGrid-headerCell AknGrid-headerCell--right AknAttributeOptions-columnHeader\"><%- _.__('pim_common.actions') %></th>\n    </tr>\n</thead>\n<tbody></tbody>\n<tfoot>\n    <tr class=\"AknGrid-bodyRow\">\n        <td class=\"AknGrid-bodyCell\" colspan=\"<%- 2 + locales.length %>\">\n            <span class=\"AknButton AknButton--grey AknButton--small option-add\"><%- add_option_label %></span>\n        </td>\n    </tr>\n</tfoot>\n"

/***/ }),

/***/ 58000:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute-option/show.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<td class=\"AknGrid-bodyCell AknAttributeOptions-rowHeader\">\n    <span class=\"handle ui-sortable-handle AknGrid-movableRow\"><i class=\"icon-reorder\"></i></span>\n    <span class=\"option-code\"><%- item.code %></span>\n</td>\n<% _.each(locales, function (locale) { %>\n    <td class=\"AknGrid-bodyCell\">\n        <% if (item.optionValues[locale]) { %>\n            <span title=\"<%- item.optionValues[locale].value %>\">\n                <%- item.optionValues[locale].value %>\n            </span>\n        <% } %>\n    </td>\n<% }); %>\n<td class=\"AknGrid-bodyCell\">\n    <div class=\"AknButtonList AknButtonList--right AknButtonList--expanded\">\n        <span class=\"AknButtonList-item AknIconButton AknIconButton--round AknIconButton--apply AknIconButton--editWhite edit-row\"></span>\n        <span class=\"AknButtonList-item AknIconButton AknIconButton--round AknIconButton--important AknIconButton--removeWhite delete-row\"></span>\n    </div>\n</td>\n"

/***/ }),

/***/ 69554:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute-option/validation-error.html ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-validationErrors validation-errors\">\n    <% _.each(errors, function(error) { %>\n        <span class=\"AknFieldContainer-validationError\">\n            <span class=\"error-message\"><%- error %></span>\n        </span>\n    <% }) %>\n</div>\n"

/***/ }),

/***/ 42056:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute/attribute-line.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"select2-result-label-attribute\">\n    <span class=\"attribute-label\"><%- item.text %></span>\n    <span class=\"group-label\"><%- item.group.text %></span>\n</div>\n"

/***/ }),

/***/ 66828:
/*!********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute/tab/choices/options-grid.html ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = "<div\n    class=\"AknGridContainer attribute-option-grid\"\n    data-attribute-id=\"<%- attributeId %>\"\n    data-locales=\"<%- JSON.stringify(localeCodes) %>\"\n    data-sortable=\"<%- sortable ? '1' : '0' %>\"\n></div>\n"

/***/ }),

/***/ 53842:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/attribute/tab/properties/group.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<select\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    class=\"select2\"\n    name=\"<%- fieldName %>\"\n    data-placeholder=\"<%- labels.defaultLabel %>\"\n    <% if (readOnly) { %>readonly disabled<% } %>\n>\n    <option value=\"\"<% if (!value) { %> selected<% } %>></option>\n    <% _.each(groups, function (group) { %>\n        <option\n            value=\"<%- group.code %>\"\n            <% if (group.code === value) { %> selected<% } %>\n        >\n            <%- i18n.getLabel(group.labels, locale, group.code) %>\n        </option>\n    <% }); %>\n</select>\n"

/***/ }),

/***/ 91508:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/templates/catalog-volume/average-max.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknCatalogVolume-axis\">\n    <div class=\"AknCatalogVolume-icon AknCatalogVolume-icon--<%- icon %>\"></div>\n    <div class=\"AknCatalogVolume-title\">\n        <%- title %>\n        <div class=\"AknCatalogVolume-value\" data-field=\"<%- name %>\">\n            <span><%- meanLabel %> <div><%- value.average.toLocaleString(userLocale, { useGrouping: true }) %></div></span>\n            <span><%- maxLabel %> <div><%- value.max.toLocaleString(userLocale, { useGrouping: true }) %></div></span>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 15253:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/catalog-volume/number.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknCatalogVolume-axis\">\n    <div class=\"AknCatalogVolume-icon AknCatalogVolume-icon--<%- icon %>\"></div>\n    <div class=\"AknCatalogVolume-title\">\n        <%- title %>\n        <div class=\"AknCatalogVolume-value\" data-field=\"<%- name %>\">\n            <%- value.toLocaleString(userLocale, { useGrouping: true }) %>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 2036:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/channel/tab/properties/conversion-unit.html ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsection-title\"><%- label %></div>\n<div class=\"tabsection-helper\"></div>\n<div class=\"tabsection-content\">\n    <div class=\"AknFormContainer AknFormContainer--withPadding\">\n        <% _.each(metrics, function (attribute, key) { %>\n        <div class=\"AknFieldContainer\">\n            <div class=\"AknFieldContainer-header\">\n                <label class=\"AknFieldContainer-label control-label\" for=\"<%- fieldBaseId + attribute.code %>\">\n                    <%- i18n.getLabel(attribute.labels, locale, attribute.code) %>\n                </label>\n            </div>\n            <div class=\"AknFieldContainer-inputContainer\">\n                <select class=\"select2\" id=\"<%- fieldBaseId + attribute.code %>\">\n                    <% isMetricConfigured = !_.isUndefined(conversionUnits[attribute.code]) %>\n                    <option value=\"no_conversion\" <%- (!isMetricConfigured) ? 'selected' : '' %>>\n                        <%- doNotConvertLabel %>\n                    </option>\n                    <% _.each(measures.find(family => family.code === attribute.metric_family).units, function (unit) { %>\n                    <option value=\"<%- unit.code %>\" <%- (isMetricConfigured && unit.code === conversionUnits[attribute.code]) ? 'selected' : '' %>>\n                        <%- i18n.getLabel(unit.labels, locale, unit.code) %>\n                    </option>\n                    <% }) %>\n                </select>\n            </div>\n        </div>\n        <% }) %>\n    </div>\n</div>\n"

/***/ }),

/***/ 7420:
/*!******************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/channel/tab/properties/general/category-tree.html ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label required\" for=\"pim_enrich_channel_form_category_tree\">\n        <%- label %> <em><%- requiredLabel %></em>\n    </label>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <select class=\"select2\" id=\"pim_enrich_channel_form_category_tree\">\n        <% _.each(categories, function (category) { %>\n        <option value=\"<%- category.code %>\" <%- (categoryTree == category.code) ? 'selected' : '' %> >\n            <%- i18n.getLabel(category.labels, catalogLocale, category.code) %>\n        </option>\n        <% }); %>\n    </select>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <div class=\"AknFieldContainer-validationErrors validation-errors\">\n        <% _.each(errors, function (error) { %>\n        <div class=\"AknFieldContainer-validationError\">\n            <%- error %>\n        </div>\n        <% }); %>\n    </div>\n</div>\n"

/***/ }),

/***/ 77843:
/*!***************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/channel/tab/properties/general/currencies.html ***!
  \***************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label required\" for=\"pim_enrich_channel_form_currencies\">\n        <%- label %> <em><%- requiredLabel %></em>\n    </label>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <select class=\"select2\" multiple id=\"pim_enrich_channel_form_currencies\">\n        <% _.each(currencies, function (currency) { %>\n        <option value=\"<%- currency.code %>\"\n            <%- _.contains(currentCurrencies, currency.code) ? 'selected' : '' %>>\n            <%- currency.code %>\n        </option>\n        <% }); %>\n    </select>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <span class=\"AknFieldContainer-validationErrors validation-errors\">\n        <% _.each(errors, function (error) { %>\n            <span class=\"AknFieldContainer-validationError\">\n                <span class=\"error-message\"><%- error %></span>\n            </span>\n        <% }); %>\n    </span>\n</div>\n"

/***/ }),

/***/ 40536:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/channel/tab/properties/general/locales.html ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label required\" for=\"pim_enrich_channel_form_locales\">\n        <%- label %> <em><%- requiredLabel %></em>\n    </label>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <select class=\"select2\" multiple id=\"pim_enrich_channel_form_locales\">\n        <% _.each(locales, function (locale) { %>\n        <option value=\"<%- locale.code %>\" <%- _.findWhere(currentLocales, locale) ? 'selected' : '' %>><%- locale.label %></option>\n        <% }); %>\n    </select>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <div class=\"AknFieldContainer-validationErrors validation-errors\">\n        <% _.each(errors, function (error) { %>\n        <div class=\"AknFieldContainer-validationError\">\n            <%- error %>\n        </div>\n        <% }); %>\n    </div>\n</div>\n"

/***/ }),

/***/ 39781:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/default-template.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknDefault-contentWithColumn\" data-drop-zone=\"column\">\n    <div class=\"AknDefault-thirdColumnContainer\">\n        <div class=\"AknDefault-thirdColumn\" data-drop-zone=\"tree\"></div>\n    </div>\n    <div class=\"AknDefault-contentWithBottom\" data-drop-zone=\"bottom-panel\">\n        <div class=\"AknDefault-mainContent entity-edit-form edit-form\">\n            <header class=\"AknTitleContainer navigation\">\n                <div class=\"AknTitleContainer-line\">\n                    <div class=\"AknTitleContainer-imageContainer\" data-drop-zone=\"main-image\"></div>\n                    <div class=\"AknTitleContainer-mainContainer\">\n                        <div>\n                            <div class=\"AknTitleContainer-line\">\n                                <div class=\"AknTitleContainer-backLink\" data-drop-zone=\"breadcrumb-back-link\"></div>\n                                <div class=\"AknTitleContainer-breadcrumbs\" data-drop-zone=\"breadcrumbs\"></div>\n                                <div class=\"AknTitleContainer-buttonsContainer\">\n                                    <div class=\"AknTitleContainer-userMenuContainer user-menu\" data-drop-zone=\"user-menu\"></div>\n                                    <div class=\"AknTitleContainer-actionsContainer AknButtonList\" data-drop-zone=\"buttons\"></div>\n                                </div>\n                            </div>\n                            <div class=\"AknTitleContainer-line\">\n                                <div class=\"AknTitleContainer-title\" data-drop-zone=\"title\"></div>\n                                <div class=\"AknTitleContainer-state\" data-drop-zone=\"state\"></div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class=\"AknTitleContainer-line\">\n                                <div class=\"AknTitleContainer-context AknButtonList\" data-drop-zone=\"context\"></div>\n                            </div>\n                            <div class=\"AknTitleContainer-line\">\n                                <div class=\"AknTitleContainer-meta AknButtonList\" data-drop-zone=\"meta\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"AknTitleContainer-line\">\n                    <div data-drop-zone=\"navigation\" class=\"AknTitleContainer-navigation\"></div>\n                </div>\n                <div class=\"AknTitleContainer-line\">\n                    <div data-drop-zone=\"search\" class=\"AknTitleContainer-search search-zone\"></div>\n                </div>\n            </header>\n\n            <div data-drop-zone=\"content\" class=\"content\"></div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 83702:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/description-header.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknDescriptionHeader\">\n    <div class=\"AknDescriptionHeader-icon\" style=\"background-image: url('../bundles/pimui/images/illustrations/<%= illustration %>');\"></div>\n    <div class=\"AknDescriptionHeader-title\">\n        <%= __(title) %>\n        <div class=\"AknDescriptionHeader-description\">\n            <% if (Array.isArray(description)) { %>\n                <% description.forEach((line) => { %>\n                    <p><%= __(line) %></p>\n                <% }) %>\n            <% } else { %>\n                <%= __(description) %>\n            <% } %>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 46143:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/drop-zone.html ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = "<div data-drop-zone=\"content\"></div>\n"

/***/ }),

/***/ 84311:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/form-container.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--withPadding <%- (typeof(large) !== 'undefined' && large) ? ' AknFormContainer--large' : '' %>\" data-drop-zone=\"form-container\"></div>\n<div data-drop-zone=\"bottom\"></div>\n"

/***/ }),

/***/ 86128:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/templates/common/grid.html ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGridContainer <% if (hasCheckbox) { %> AknGridContainer--withCheckbox <% } %>grid-container container-fluid\">\n    <table class=\"AknGrid <% if (hasCheckbox) { %> AknGrid--withCheckbox <% } %> grid\"></table>\n    <div class=\"no-data\"></div>\n    <div class=\"loading-mask\"></div>\n</div>\n"

/***/ }),

/***/ 2372:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/item-picker-basket.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"item-picker-basket panel-container\">\n    <div class=\"AknColumnConfigurator-listContainer\">\n        <div class=\"AknColumnConfigurator-columnHeader\">\n            <%- title %>\n        </div>\n        <div class=\"AknGrid--gallery\">\n            <div class=\"AknGridContainer AknGridContainer--withCheckbox\">\n                <div class=\"AknGrid AknGrid--withCheckbox\">\n                    <div class=\"AknGrid-body basket-inner\">\n                        <% if (!_.isEmpty(items)) { %>\n                        <% _.each(items, function (item) { %>\n                        <div data-itemCode=\"<%- itemCodeMethod(item) %>\" class=\"AknGrid-bodyRow AknGrid-bodyRow--thumbnail AknGrid-bodyRow--withoutTopBorder\">\n                            <div class=\"AknGrid-fullImage\" style=\"background-image: url('<%- imagePathMethod(item) %>')\"></div>\n                            <div class=\"AknButton AknButton--important AknButton--micro AknButton-squareIcon AknButton-squareIcon--delete AknAssetCollectionField-icon remove-item\" data-itemCode=\"<%- itemCodeMethod(item) %>\"></div>\n                            <div class=\"AknGrid-title\"><%- labelMethod(item) %></div>\n                            <div class=\"AknGrid-subTitle\"><%- item[identifierName] %></div>\n                        </div>\n                        <% }); %>\n                        <% } else { %>\n                        <div class=\"empty-basket\">\n                            <%- emptyLabel %>\n                        </div>\n                        <% } %>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 74788:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/item-picker.html ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumnConfigurator\">\n    <div class=\"AknColumnConfigurator-column ui-resizable-container--column\">\n        <div class=\"AknColumnConfigurator-listContainer ui-resizable-container--column-child\">\n            <div class=\"AknColumnConfigurator-relativeContent categories-container\">\n                <div id=\"item-picker-tree\" data-datalocale=\"<%= locale %>\" data-name=\"category\" data-type=\"tree\" class=\"filter-item\" data-relatedentity=\"product\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"AknColumnConfigurator-column AknColumnConfigurator-column--large\">\n        <div class=\"AknColumnConfigurator-listContainer\">\n            <div id=\"<%- datagridIdentifier %>\">\n                <div id=\"grid-<%- datagridIdentifier %>\" data-type=\"datagrid\">\n                    <div class=\"AknFilterBox AknFilterBox--search AknFilterBox--sticky filter-box\" data-drop-zone=\"filters\"></div>\n                    <div class=\"AknTitleContainer-line\">\n                        <div data-drop-zone=\"search\" class=\"AknTitleContainer-search search-zone\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"AknColumnConfigurator-column AknColumnConfigurator-column--fixed\">\n        <div class=\"basket\"></div>\n        <div class=\"selection-inputs\">\n            <input type=\"hidden\" id=\"item-picker-append-field\"/>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 94596:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/modal-centered.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage<% if (typeof innerClassName !== 'undefined') { %> <%- innerClassName %><% } %>\">\n  <div class=\"AknFullPage-content\">\n      <div class=\"AknFullPage-titleContainer\">\n          <% if (typeof subtitle !== 'undefined') { %>\n            <div class=\"AknFullPage-subTitle\"><%- subtitle %></div>\n          <% } %>\n          <div class=\"AknFullPage-title\"><%- title %></div>\n          <% if (typeof innerDescription !== 'undefined') { %>\n              <div class=\"AknFullPage-description description\">\n                  <%- innerDescription %>\n              </div>\n          <% } %>\n      </div>\n      <div class=\"header-helper\"></div>\n      <div class=\"modal-body\"><%= content %></div>\n    </div>\n  </div>\n  <% if (allowCancel) { %>\n    <div class=\"AknFullPage-cancel cancel\"></div>\n  <% } %>\n  <% if (okText !== '') { %>\n    <div class=\"AknButton AknButton--apply AknFullPage-ok ok\"><%- okText %></div>\n  <% } %>\n</div>\n"

/***/ }),

/***/ 73183:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/no-data.html ***!
  \************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGridContainer-noData no-data-inner\">\n    <div class=\"AknGridContainer-noDataImage <%- imageClass %>\"></div>\n    <div class=\"AknGridContainer-noDataTitle\"><%- __(hint) %></div>\n    <div class=\"AknGridContainer-noDataSubtitle\"><%- __(subHint) %></div>\n</div>\n"

/***/ }),

/***/ 43536:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/templates/common/section.html ***!
  \************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknSubsection\">\n    <div class=\"AknSubsection-title AknSubsection-title--glued\">\n        <%- title %>\n        <div class=\"AknIconButton AknIconButton--info AknIconButton--big toggle-hint <%- hintIsHidden ? 'AknIconButton--inactive' : 'active-hint' %>\"></div>\n    </div>\n    <div class=\"AknSubsection-hint <%- hintIsHidden ? 'AknSubsection-hint--hidden' : '' %>\">\n        <div class=\"AknSubsection-hintIcon AknIconButton AknIconButton--info AknIconButton--big\"></div>\n        <div class=\"AknSubsection-hintTitle\"> <%= hintTitle %></div>\n        <div class=\"AknIconButton AknIconButton--remove toggle-hint active-hint\"></div>\n    </div>\n</div>\n<div data-drop-zone=\"content\"></div>\n"

/***/ }),

/***/ 98661:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/templates/create/tab/properties/general.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsection-title\">\n    <%- sectionTitle %>\n</div>\n<div class=\"tabsection-content\">\n    <div class=\"AknFormContainer AknFormContainer--withPadding\" data-drop-zone=\"general-select-fields\">\n        <div class=\"AknFieldContainer\">\n            <div class=\"AknFieldContainer-header\">\n                <label class=\"AknFieldContainer-label control-label required\" for=\"pim_enrich_entity_form_code\">\n                    <%- label %> <em><%- requiredLabel %></em>\n                </label>\n            </div>\n            <div class=\"AknFieldContainer-inputContainer\">\n                <input id=\"pim_enrich_entity_form_code\" class=\"AknTextField code\" type=\"text\"\n                    <%- false === hasId ? '' : 'readonly disabled' %>\n                    required value=\"<%- code %>\">\n            </div>\n            <div class=\"AknFieldContainer-footer\">\n                <div class=\"AknFieldContainer-validationErrors validation-errors\">\n                    <% _.each(errors, function (error) { %>\n                        <div class=\"AknFieldContainer-validationError\">\n                            <%- error %>\n                        </div>\n                    <% }); %>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 44192:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/templates/error/error.html ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknInfoBlock AknInfoBlock--error\">\n    <img src=\"/bundles/pimui/images/illustration-error-<%- statusCode >= 400 && statusCode < 500 ? '404' : '503' %>.svg\"/>\n    <% if (statusCode > 0) {%>\n    <span class=\"AknInfoBlock-errorNumber AknInfoBlock-errorNumber--<%- statusCode >= 400 && statusCode < 500 ? '400' : '500' %>\"><%- statusCode %></span>\n    <h1>\n        <%- _.__('error.exception', {'status_code': statusCode}) %>\n    </h1>\n    <div class=\"AknMessageBox AknMessageBox--danger AknMessageBox--centered\"><%- message %></div>\n    <% } %>\n</div>\n"

/***/ }),

/***/ 60257:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/field/field.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer\">\n    <div class=\"AknFieldContainer-header\">\n        <label class=\"AknFieldContainer-label\" for=\"jobInstance_<%- config.fieldCode.replace('.', '_') %>\"><%- __(config.label) %></label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer field-input\">\n        <% if (undefined !== config.tooltip) { %>\n        <div class=\"icons-container\">\n            <i class=\"AknIconButton icon-info-sign\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"<%- __(config.tooltip) %>\"></i>\n        </div>\n        <% } %>\n    </div>\n    <div class=\"AknFieldContainer-footer\">\n        <span class=\"below-input-elements-container\">\n            <% if (null !== error) { %>\n            <span class=\"validation-container\">\n                <span class=\"AknFieldContainer-validationErrors validation-errors\">\n                    <span class=\"AknFieldContainer-validationError\">\n                        <span class=\"error-message\"><%- error %></span>\n                    </span>\n                </span>\n            </span>\n            <% } %>\n        </span>\n    </div>\n</div>\n"

/***/ }),

/***/ 21380:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/field/select.html ***!
  \*****************************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2\" id=\"jobInstance_<%- config.fieldCode.replace('.', '_') %>\" title=\"<%- __(config.label) %>\" <%- true === config.readOnly ? 'readonly disabled' : '' %>>\n    <% _.each(config.options, function (label, code) { %>\n        <option value=\"<%- code %>\" <%- value === code ? 'selected' : '' %>><%- __(label) %></option>\n    <% }) %>\n</select>\n"

/***/ }),

/***/ 37939:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/field/switch.html ***!
  \*****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"switch switch-small\" data-on-label=\"<%- __('pim_common.yes') %>\" data-off-label=\"<%- __('pim_common.no') %>\">\n    <input type=\"checkbox\" title=\"<%- __(config.label) %>\" id=\"jobInstance_<%- config.fieldCode.replace('.', '_') %>\" <%- value ? 'checked' : '' %> <%- true === config.readOnly ? 'readonly disabled' : '' %>/>\n</div>\n"

/***/ }),

/***/ 96367:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/field/text.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<input class=\"AknTextField\" title=\"<%- __(config.label) %>\" id=\"jobInstance_<%- config.fieldCode.replace('.', '_') %>\" value=\"<%- value %>\" type=\"text\" name=\"jobInstance_<%- config.fieldCode.replace('.', '_') %>\" <%- true === config.readOnly ? 'readonly disabled' : '' %>/>\n"

/***/ }),

/***/ 32032:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/launch.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<button class=\"AknButton AknButton--apply AknButton--centered <%- buttonClass %>\" title=\"<%- title ?? '' %>\">\n    <%- label %>\n</button>\n"

/***/ }),

/***/ 29031:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/meta.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<span class=\"AknTitleContainer-metaItem\"><%- __('pim_import_export.form.job_instance.meta.job') %>: <%- __('batch_jobs.' + jobInstance.job_name + '.label') %> | <%- __('pim_import_export.form.job_instance.meta.connector') %>: <%- jobInstance.connector %></span>\n"

/***/ }),

/***/ 16673:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/properties.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsections\">\n    <div class=\"tabsection\">\n        <div class=\"tabsection-content AknFormContainer AknFormContainer--withPadding\">\n            <div class=\"AknFormContainer\" data-drop-zone=\"properties\"></div>\n        </div>\n        <div data-drop-zone=\"additional-properties\"></div>\n    </div>\n</div>\n"

/***/ }),

/***/ 20693:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/upload.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--large AknFormContainer--withPadding AknFormContainer--centered\">\n    <div class=\"AknMediaField <%- !file ? 'has-file' : '' %>\" >\n        <% if (!file) { %>\n            <input class=\"AknMediaField-fileUploaderInput\" type=\"file\" name=\"Drag and drop a file or click here\"/>\n            <div class=\"AknMediaField-emptyContainer\">\n                <span title=\"upload icon\" class=\"AknMediaField-uploadIcon\"></span>\n                <span><%- __('pim_enrich.entity.job_execution.module.create.upload', {type})%></span>\n            </div>\n        <% } else { %>\n            <div class=\"AknMediaField-preview preview\">\n                <div class=\"AknMediaField-thumb file\">\n                    <span title=\"upload icon\" class=\"AknMediaField-uploadIcon\"></span>\n                </div>\n                <div class=\"AknMediaField-info info\">\n                    <div class=\"filename\" title=\"<%- file.name %>\"><%- file.name %></div>\n                    <div class=\"AknButtonList AknButtonList--centered actions\">\n                        <span class=\"AknButtonList-item clear-field\">\n                            <span class=\"AknMediaField-remove\"></span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        <% } %>\n        <div class=\"AknMediaField-progress AknProgress AknProgress--micro progress\">\n            <div class=\"AknProgress-bar bar\"></div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 93095:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/common/edit/validation.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<span class=\"validation-container\">\n    <span class=\"AknFieldContainer-validationErrors validation-errors\">\n        <% errors.forEach(function (error) { %>\n            <span class=\"AknFieldContainer-validationError\">\n               <span class=\"error-message\"><%- error %></span>\n            </span>\n        <% }); %>\n    </span>\n</span>\n"

/***/ }),

/***/ 21039:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content.html ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsections\" id=\"product-export-content\">\n    <div data-drop-zone=\"structure-filters\" class=\"tabsection\"></div>\n    <div data-drop-zone=\"data-filters\" class=\"tabsection\"></div>\n</div>\n"

/***/ }),

/***/ 18874:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content/data.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsection-title\">\n    <div class=\"pull-right AknButtonList-item\" data-drop-zone=\"headings\"></div>\n    <%- sectionTitle %>\n</div>\n<div class=\"tabsection-content\">\n    <div class=\"AknFormContainer AknFormContainer--withPadding\" data-drop-zone=\"product-filters\"></div>\n    <div class=\"AknFormContainer AknFormContainer--withPadding filters\"></div>\n</div>\n"

/***/ }),

/***/ 5986:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content/data/help.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<span class=\"AknFieldContainer-iconsContainer icons-container\">\n    <i class=\"AknIconButton icon-info-sign\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"<%- text %>\"></i>\n</span>\n"

/***/ }),

/***/ 19685:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content/structure.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsection-title\">\n    <%- __('pim_enrich.export.product.structure.title') %>\n</div>\n<div class=\"tabsection-content\">\n    <div class=\"AknFormContainer AknFormContainer--withPadding\" data-drop-zone=\"filters\">\n    </div>\n</div>\n"

/***/ }),

/***/ 77166:
/*!**************************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content/structure/attribute-list.html ***!
  \**************************************************************************************************/
/***/ ((module) => {

module.exports = "<% _.each(attributes, function (attribute) { %>\n<li class=\"AknVerticalList-item AknVerticalList-item--movable\" data-attribute-code=\"<%- attribute.code %>\">\n    <div class=\"AknVerticalList-item-itemLabel\" title=\"<%- i18n.getLabel(attribute.labels, userContext.get('catalogLocale'), attribute.code) %>\">\n        <span class=\"attribute-label\"><%- i18n.getLabel(attribute.labels, userContext.get('catalogLocale'), attribute.code) %></span>\n    </div>\n    <span class=\"AknIconButton AknIconButton--grey AknIconButton--small remove\"><i class=\"icon-trash\"></i></span>\n</li>\n<% }); %>\n"

/***/ }),

/***/ 65072:
/*!*******************************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content/structure/attributes-selector.html ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumnConfigurator\">\n    <div class=\"AknColumnConfigurator-column attribute-groups\">\n        <header class=\"AknColumnConfigurator-columnHeader\"><%- __('pim_enrich.entity.attribute_group.plural_label') %></header>\n        <div data-scroll-container=\"attribute-groups\" class=\"AknColumnConfigurator-listContainer\">\n            <ul class=\"AknVerticalList\">\n                <li class=\"AknVerticalList-item AknVerticalList-item--selectable <%- null === currentGroup ? 'selected active' : '' %>\" data-attribute-group-code=\"\"><%- __('pim_enrich.export.product.filter.attributes_selector.all_group') %></li>\n                <% _.each(attributeGroups, function (attributeGroup) { %>\n                    <li class=\"AknVerticalList-item AknVerticalList-item--selectable <%- currentGroup === attributeGroup.code ? 'selected active' : '' %>\" data-attribute-group-code=\"<%- attributeGroup.code %>\">\n                        <%- i18n.getLabel(attributeGroup.labels, userContext.get('catalogLocale'), attributeGroup.code) %>\n                    </li>\n                <% }); %>\n            </ul>\n        </div>\n    </div>\n    <div class=\"AknColumnConfigurator-column attributes\">\n        <header class=\"AknColumnConfigurator-columnHeader\">\n            <input class=\"AknTextField AknColumnConfigurator-searchInput search-field\" type=\"text\" placeholder=\"<%- __('pim_enrich.export.product.filter.attributes_selector.attributes', {itemsCount: attributeCount}, attributeCount) %>\"/>\n        </header>\n        <div data-scroll-container=\"attributes\" class=\"AknColumnConfigurator-listContainer\">\n            <ul class=\"AknVerticalList\"></ul>\n        </div>\n    </div>\n    <div class=\"AknColumnConfigurator-column selected-attributes\">\n        <header class=\"AknColumnConfigurator-columnHeader\">\n            <span><%- __('pim_enrich.export.product.filter.attributes_selector.selected') %></span>\n            <span class=\"AknButton AknButton--grey clear\"><%- __('pim_enrich.export.product.filter.attributes_selector.clear') %></span>\n        </header>\n        <div data-scroll-container=\"selected-attributes\" class=\"AknColumnConfigurator-listContainer\">\n            <span class=\"AknMessageBox AknMessageBox--centered empty-message <%- 0 === selectedAttributes.length ? '' : 'AknMessageBox--hide' %>\"><%- __('pim_enrich.export.product.filter.attributes_selector.empty_selection') %></span>\n            <ul class=\"AknVerticalList\"><!--\n                --><% _.each(selectedAttributes, function (attribute) { %>\n                    <li class=\"AknVerticalList-item AknVerticalList-item--movable <%- currentGroup === attribute.code ? 'selected' : '' %>\" data-attribute-code=\"<%- attribute.code %>\">\n                        <div>\n                            <span class=\"attribute-label\"><%- i18n.getLabel(attribute.labels, userContext.get('catalogLocale'), attribute.code) %></span>\n                        </div>\n                        <span class=\"AknIconButton AknIconButton--grey AknIconButton--small remove\"><i class=\"icon-trash\"></i></span>\n                    </li>\n                <% }); %><!--\n            --></ul>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 64575:
/*!**********************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content/structure/attributes.html ***!
  \**********************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label required\" for=\"pim_enrich.export.product.filter.attributes\"><%- __('pim_enrich.entity.attribute.plural_label') %></label>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <div class=\"AknTextField <%- !isEditable ? 'AknTextField--disabled' : 'AknTextField--withRightButton' %>\">\n        <%- labelInfo %>\n        <% if (isEditable) { %>\n        <button type=\"button\" class=\"AknButton AknButton--action AknButton--small edit\">\n            <%- labelEdit %>\n        </button>\n        <% } %>\n    </div>\n    <div class=\"AknFieldContainer-iconsContainer icons-container\">\n        <i class=\"AknIconButton icon-info-sign\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"<%- __('pim_enrich.export.product.filter.attributes.help') %>\"></i>\n    </div>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <span class=\"below-input\">\n        <span class=\"AknFieldContainer-validationErrors validation-errors\">\n            <% errors.forEach(function (error) { %>\n                <span class=\"AknFieldContainer-validationError\">\n                    <span class=\"error-message\"><%- error %></span>\n                </span>\n            <% }); %>\n        </span>\n    </span>\n</div>\n"

/***/ }),

/***/ 579:
/*!*******************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content/structure/locales.html ***!
  \*******************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label required\" for=\"pim_enrich.export.product.filter.locales\">\n        <%- __('pim_enrich.entity.locale.plural_label') %> <em><%- __('pim_common.required_label') %></em>\n    </label>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <select class=\"select2\" multiple <%- isEditable ? '' : 'disabled' %> id=\"pim_enrich.export.product.filter.locales\">\n        <% _.each(availableLocales, function (locale) { %>\n            <option value=\"<%- locale.code %>\" <%- _.contains(locales, locale.code) ? 'selected' : '' %>><%- locale.label %></option>\n        <% }); %>\n    </select>\n    <div class=\"AknFieldContainer-iconsContainer icons-container\">\n        <i class=\"AknIconButton icon-info-sign\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"<%- __('pim_enrich.export.product.filter.locales.help') %>\"></i>\n    </div>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <span class=\"below-input\">\n        <span class=\"AknFieldContainer-validationErrors validation-errors\">\n            <span class=\"AknFieldContainer-validationError\">\n                <span class=\"error-message\">\n                    <% if (errors instanceof Array) { %>\n                        <% errors.forEach(function (error) { %>\n                            <%- error %>\n                        <% }); %>\n                    <% } else { %>\n                        <%- errors %>\n                    <% } %>\n                </span>\n            </span>\n        </span>\n    </span>\n</div>\n"

/***/ }),

/***/ 59679:
/*!*****************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/export/product/edit/content/structure/scope.html ***!
  \*****************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label required\" for=\"pim_enrich.export.product.filter.channel\">\n        <%- __('pim_enrich.entity.channel.uppercase_label') %> <em><%- __('pim_common.required_label') %></em>\n    </label>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <select class=\"select2\" <%- isEditable ? '' : 'disabled' %> id=\"pim_enrich.export.product.filter.channel\">\n        <% _.each(channels, function (channel) { %>\n            <option value=\"<%- channel.code %>\" <%- channel.code === scope ? 'selected' : '' %>><%- channel.label %></option>\n        <% }); %>\n    </select>\n    <div class=\"AknFieldContainer-iconsContainer icons-container\">\n        <i class=\"AknIconButton icon-info-sign\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"<%- __('pim_enrich.export.product.filter.channel.help') %>\"></i>\n    </div>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <span class=\"below-input\">\n        <span class=\"AknFieldContainer-validationErrors validation-errors\">\n            <% errors.forEach(function (error) { %>\n                <span class=\"AknFieldContainer-validationError\">\n                    <span class=\"error-message\"><%- error %></span>\n                </span>\n            <% }); %>\n        </span>\n    </span>\n</div>\n"

/***/ }),

/***/ 71708:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family-variant/attribute-group.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<ul data-level=\"<%- level %>\" id=\"attributes-column-level-<%- level %>\" class=\"AknFamilyVariant-columnList connected-sortable\">\n    <% attributes.forEach(function (attribute) { %>\n        <li\n            data-attribute-code=\"<%- attribute.code %>\"\n            class=\"AknVerticalList-item AknFamilyVariant-columnListItem AknFamilyVariant-attribute attribute <%- !lockedAttributes.includes(attribute.code) && movable ? 'AknFamilyVariant-attribute--movable movable' : 'AknFamilyVariant-attribute--notMovable' %> <%- !lockedAttributes.includes(attribute.code) ? 'deletable' : '' %>\"\n            title=\"<%- i18n.getLabel(attribute.labels, UserContext.get('catalogLocale'), attribute.code) %>\"\n        >\n            <%- i18n.getLabel(attribute.labels, UserContext.get('catalogLocale'), attribute.code) %>\n\n            <% if (axesAttributes.includes(attribute.code)) { %>\n            (<%- __('pim_enrich.entity.family_variant.module.edit.variant_axis_label') %>)\n            <% } %>\n            <% if (!lockedAttributes.includes(attribute.code) && 0 !== level) { %>\n            <span\n                class=\"AknIconButton AknIconButton--small AknIconButton--delete AknButtonList-item delete-attribute\"\n                title=\"<%- __('pim_enrich.entity.family_variant.module.edit.attribute_remove') %>\"\n            ></span>\n            <% } %>\n        </li>\n    <% }) %>\n</ul>\n"

/***/ }),

/***/ 83355:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family-variant/attribute-set.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage-description AknFamilyVariant-description\"><%- __('pim_enrich.entity.family_variant.module.edit.description') %></div>\n<div class=\"AknFamilyVariant family-variant-levels\">\n    <div class=\"AknFamilyVariant-level\">\n        <div class=\"common-attribute AknFamilyVariant-column AknFamilyVariant-column--common\">\n            <div class=\"AknFamilyVariant-axes AknVerticalList-item\" title=\"<%- __('pim_enrich.entity.family.variant.common.title') %>\">\n                <%- __('pim_enrich.entity.family_variant.module.edit.common_attributes') %>\n            </div>\n            <div data-level=\"0\" id=\"attribute-groups-column-level-0\" class=\"attribute-list connected-group-sortable\">\n            <% groupAttributes(commonAttributes, lockedAttributes).forEach(section => { %>\n                <div data-attribute-group-code=\"<%- section.attributeGroup.code %>\" class=\"AknFamilyVariant-attributeGroup AknFamilyVariant-attributeGroup--common <%- !section.attributeGroup.locked ? 'movable-group' : '' %>\">\n                    <span class=\"AknFamilyVariant-columTitle AknVerticalList-item <%- !section.attributeGroup.locked ? 'AknFamilyVariant-columTitle--movable' : '' %>\">\n                        <%- i18n.getLabel(section.attributeGroup.labels, UserContext.get('catalogLocale'), section.attributeGroup.code) %>\n                    </span>\n                    <%= renderSection(0, section.attributes, true) %>\n                </div>\n            <% }) %>\n            <% if (commonAttributes.length === 0) { %>\n                <div class=\"AknFamilyVariant-attributeGroup AknFamilyVariant-attributeGroup--common AknFamilyVariant-attributeGroup--empty\">\n                    <%- __('pim_enrich.entity.family_variant.module.edit.no_common_attributes') %>\n                </div>\n            <% } %>\n            </div>\n        </div>\n    </div>\n    <% familyVariant.variant_attribute_sets.forEach(function (level) { %>\n    <div class=\"AknFamilyVariant-level\">\n        <div class=\"AknFamilyVariant-levelPath\">\n            <span class=\"AknFamilyVariant-levelPathLabel\"><%- __('pim_enrich.entity.family_variant.module.edit.level_' + level.level) %></span>\n        </div>\n        <div class=\"family-variant-level AknFamilyVariant-column AknFamilyVariant-column--level<%- level.level %>\" data-level=\"<%- level.level %>\">\n            <div class=\"AknFamilyVariant-axes AknVerticalList-item\" title=\"\n                <%- level.axes.map(function (axis) {\n                    return i18n.getLabel(getAttribute(axis).labels, UserContext.get('catalogLocale'), getAttribute(axis).code);\n                }).join(', ') %>\n                (<%- __('pim_enrich.entity.family.variant.axis.label') %>)\">\n                <%- level.axes.map(function (axis) {\n                    return i18n.getLabel(getAttribute(axis).labels, UserContext.get('catalogLocale'), getAttribute(axis).code);\n                }).join(', ') %>\n                (<%- __('pim_enrich.entity.family_variant.module.edit.variant_axis_label') %>)\n            </div>\n            <div data-level=\"<%- level.level %>\" id=\"attribute-groups-column-level-<%- level.level %>\" class=\"attribute-list connected-group-sortable\">\n            <% groupAttributes(level.attributes, lockedAttributes).forEach(section => { %>\n                <% const movable = !(section.attributeGroup.locked || familyVariant.variant_attribute_sets.length === level.level); %>\n                <% const deletable = !section.attributeGroup.locked; %>\n                <div data-attribute-group-code=\"<%- section.attributeGroup.code %>\" class=\"AknFamilyVariant-attributeGroup <%- movable ? 'movable-group' : '' %> <%- deletable ? 'deletable-group' : '' %> attribute-group-section\">\n                    <span class=\"AknFamilyVariant-columTitle AknVerticalList-item <%- movable ? 'AknFamilyVariant-columTitle--movable' : '' %>\">\n                        <%- i18n.getLabel(section.attributeGroup.labels, UserContext.get('catalogLocale'), section.attributeGroup.code) %>\n                        <% if (deletable) { %>\n                        <span\n                            class=\"AknIconButton AknIconButton--small AknIconButton--delete AknButtonList-item delete-attribute-group\"\n                            title=\"<%- __('pim_enrich.entity.family_variant.module.edit.attribute_group_remove') %>\"\n                        ></span>\n                        <% } %>\n                    </span>\n                    <%= renderSection(level.level, section.attributes, movable) %>\n                </div>\n            <% }) %>\n            </div>\n        </div>\n    </div>\n<% }); %>\n</div>\n"

/***/ }),

/***/ 42546:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/family-variant/edit.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage-ok\" data-drop-zone=\"buttons\"></div>\n<div class=\"AknFullPage-state\" data-drop-zone=\"state\"></div>\n<div data-drop-zone=\"content\"></div>\n"

/***/ }),

/***/ 86697:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family-variant/labels-container.html ***!
  \*****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage-content AknFullPage-content--withIllustration\">\n    <div>\n        <img src=\"bundles/pimui/images/illustrations/Variant.svg\">\n    </div>\n    <div>\n        <div class=\"AknFullPage-titleContainer\">\n            <div class=\"AknFullPage-subTitle\"><%- __('pim_enrich.entity.family.uppercase_label') %> <%- familyVariant.family %> </div>\n            <div class=\"AknFullPage-title\"><%- __('pim_enrich.entity.family_variant.module.update_translations.title') %></div>\n        </div>\n        <div data-drop-zone=\"fields\" class=\"AknFormContainer\"></div>\n    </div>\n</div>\n"

/***/ }),

/***/ 23306:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/attributes.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsections\">\n    <div class=\"tabsection tab-pane tab-attribute\" data-drop-zone=\"attributes-content\">\n\n    </div>\n</div>\n"

/***/ }),

/***/ 70213:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/attributes/attributes.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGridContainer\">\n    <table class=\"AknGrid AknGrid--unclickable groups\">\n        <thead>\n            <th class=\"AknGrid-headerCell\"><%- label %></th>\n            <% _.each(channels, function (channel) { %>\n            <th class=\"AknGrid-headerCell AknGrid-headerCell--center channel\">\n                <%- i18n.getLabel(channel.labels, catalogLocale, channel.code) %>\n            </th>\n            <% }) %>\n            <th class=\"AknGrid-headerCell\">&nbsp;</th>\n        </thead>\n        <% _.each(_.keys(groupedAttributes), function (group) { %>\n        <% var attributeGroup = _.findWhere(attributeGroups, {code: group}) %>\n        <% var collapsed = (true === attributeGroup.collapsed) %>\n\n        <tbody class=\"AknGrid-bodyContainer <%- collapsed ? 'AknGrid-bodyContainer--collapsed': '' %>\"  data-group=\"<%- group %>\">\n            <tr class=\"AknGrid-bodyRow AknGrid-bodyRow--highlight AknGrid-headerToggle group\">\n                <td class=\"AknGrid-bodyCell AknGrid-bodyCell--tight\">\n                    <div class=\"<%- collapsed ? 'AknGrid-expand' : 'AknGrid-expand AknGrid-expand--expanded' %>\"></div>\n                </td>\n                <td class=\"AknGrid-bodyCell\" colspan=\"<%- colspan %>\">\n                    <%-\n                        i18n.getLabel(\n                            attributeGroup.labels,\n                            catalogLocale,\n                            attributeGroup.code\n                        )\n                    %>\n                </td>\n            </tr>\n            <% _.each(groupedAttributes[group], function (attribute) { %>\n            <tr class=\"AknGrid-bodyRow\">\n                <td class=\"AknGrid-bodyCell\">\n                    <%- i18n.getLabel(attribute.labels, catalogLocale, attribute.code) %>\n                </td>\n                <% _.each(channels, function (channel) { %>\n                <td class=\"AknGrid-bodyCell AknGrid-bodyCell--center\">\n                    <div class=\"attribute-requirement\">\n                        <% isRequired = isAttributeRequirementRequired(attribute, channel) %>\n                        <i\n                            class=\"AknAcl-icon\n                                <%- isRequired ? 'AknSelectButton AknSelectButton--selected required' : 'AknSelectButton non-required' %>\n                                <%- isAttributeEditable() ? '' : 'AknAcl-disabled' %>\"\n                            data-attribute=\"<%- attribute.code %>\"\n                            data-type=\"<%- attribute.type %>\"\n                            data-channel=\"<%- channel.code %>\"\n                            data-required=\"<%- isRequired %>\"\n                            data-toggle=\"tooltip\"\n                            data-original-title=\"<%- getAttributeRequirementTooltip(attribute, channel) %>\"\n                            data-placement=\"right\"\n                        ></i>\n                    </div>\n                </td>\n                <% }) %><!-- end each channel -->\n                <td class=\"AknGrid-bodyCell AknGrid-bodyCell--right\">\n                    <% if (!readOnly) { %>\n                    <span class=\"AknIconButton AknIconButton--small AknIconButton--trash remove-attribute\" data-attribute=\"<%- attribute.code %>\"></span>\n                    <% } %>\n                </td>\n            </tr>\n            <% }) %><!-- end each attribute -->\n        </tbody>\n        <% }) %><!-- end each group -->\n    </table>\n</div>\n"

/***/ }),

/***/ 39694:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/attributes/toolbar.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGridToolbar-center\"></div>\n<div class=\"AknGridToolbar-right\">\n    <div class=\"AknButtonList AknButtonList--right\" data-drop-zone=\"attributes-toolbar\">\n    </div>\n</div>\n"

/***/ }),

/***/ 4972:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/family-variant.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGridToolbar\">\n    <div class=\"AknGridToolbar-center\"></div>\n    <div class=\"AknGridToolbar-right\">\n        <div class=\"AknButtonList AknButtonList--right\" data-drop-zone=\"variant-toolbar\">\n        </div>\n    </div>\n</div>\n\n<div class=\"AknFilterBox AknFilterBox--search\" data-drop-zone=\"filters\"></div>\n<div data-drop-zone=\"grid\"></div>\n"

/***/ }),

/***/ 4469:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/general/attribute-as-image.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label\" for=\"<%- fieldBaseId + 'attribute_as_image' %>\">\n        <%- label %>\n    </label>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <select class=\"select2\" id=\"<%- fieldBaseId + 'attribute_as_image' %>\" <%- isReadOnly ? 'readonly disabled' : '' %>>\n        <option value=\"no_attribute_as_image\" <%- (null === currentAttribute) ? 'selected' : '' %>><%- emptyLabel %></option>\n        <% _.each(attributes, function (attribute) { %>\n            <option value=\"<%- attribute.code %>\" <%- (currentAttribute === attribute.code) ? 'selected' : '' %> >\n                <%- i18n.getLabel(attribute.labels, catalogLocale, attribute.code) %>\n            </option>\n        <% }); %>\n    </select>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <div class=\"AknFieldContainer-validationErrors validation-errors\">\n        <% _.each(errors, function (error) { %>\n        <div class=\"AknFieldContainer-validationError\">\n            <%- error %>\n        </div>\n        <% }); %>\n    </div>\n</div>\n"

/***/ }),

/***/ 7176:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/general/attribute-as-label.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label required\" for=\"<%- fieldBaseId + 'attribute_as_label' %>\">\n        <%- label %> <em><%- requiredLabel %></em>\n    </label>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <select class=\"select2\" id=\"<%- fieldBaseId + 'attribute_as_label' %>\" <%- isReadOnly ? 'readonly disabled' : '' %>>\n        <% _.each(attributes, function (attribute) { %>\n        <option value=\"<%- attribute.code %>\" <%- (currentAttribute === attribute.code) ? 'selected' : '' %> >\n        <%- i18n.getLabel(attribute.labels, catalogLocale, attribute.code) %>\n        </option>\n        <% }); %>\n    </select>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <div class=\"AknFieldContainer-validationErrors validation-errors\">\n        <% _.each(errors, function (error) { %>\n        <div class=\"AknFieldContainer-validationError\">\n            <%- error %>\n        </div>\n        <% }); %>\n    </div>\n</div>\n"

/***/ }),

/***/ 41766:
/*!***************************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/variants/add-variant-form-fields-container.html ***!
  \***************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer\">\n    <div class=\"AknFieldContainer-header\">\n        <label class=\"AknFieldContainer-label\"><%- __('pim_common.code') %> <%- __('pim_common.required_label') %></label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <input type=\"text\" value=\"<%- familyVariant.code %>\" name=\"code\" class=\"AknTextField\" />\n    </div>\n    <footer>\n        <% if (fieldErrors.code) { %>\n        <div class=\"AknFieldContainer-footer footer-elements-container error-code\">\n            <div class=\"AknFieldContainer-validationErrors validation-errors\">\n                <% fieldErrors.code.forEach((error) => { %>\n                <span class=\"AknFieldContainer-validationError\">\n                    <span class=\"error-message\"><%- error.message %></span>\n                </span>\n                <% }); %>\n            </div>\n        </div>\n        <% } %>\n    </footer>\n</div>\n<div class=\"AknFieldContainer\">\n    <div class=\"AknFieldContainer-header\">\n        <label class=\"AknFieldContainer-label\"><%- __('pim_common.label') %></label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <input type=\"text\" value=\"<%- label %>\" name=\"label\" class=\"AknTextField\" />\n    </div>\n    <footer>\n        <% if (fieldErrors['translations[0].label']) { %>\n        <div class=\"AknFieldContainer-footer footer-elements-container error-code\">\n            <div class=\"AknFieldContainer-validationErrors validation-errors\">\n                <% fieldErrors['translations[0].label'].forEach((error) => { %>\n                <span class=\"AknFieldContainer-validationError\">\n                    <span class=\"error-message\"><%- error.message %></span>\n                </span>\n                <% }); %>\n            </div>\n        </div>\n        <% } %>\n    </footer>\n</div>\n<div class=\"AknFieldContainer\">\n    <div class=\"AknFieldContainer-header\">\n        <label class=\"AknFieldContainer-label\"><%- __('pim_enrich.entity.family_variant.module.create.variant_levels') %></label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <select name=\"numberOfLevels\" class=\"AknChoicesField\">\n            <option value=\"1\" <% if(1 === familyVariant.variant_attribute_sets.length) { %> selected <% } %> >1</option>\n            <option value=\"2\" <% if(2 === familyVariant.variant_attribute_sets.length) { %> selected <% } %> >2</option>\n        </select>\n    </div>\n</div>\n<div class=\"AknFieldContainer\">\n    <div class=\"AknFieldContainer-header\">\n        <label for=\"pim_enrich_family_variant_axis1\" class=\"AknFieldContainer-label\"><%- __('pim_enrich.entity.family_variant.module.create.axis_level', { level: 1 }) %> <%- __('pim_common.required_label') %></label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <input id=\"pim_enrich_family_variant_axis1\" type=\"hidden\" value=\"<%- axes1 %>\" name=\"axes1\" class=\"select-field\" />\n    </div>\n</div>\n\n<div class=\"AknFieldContainer <% if(1 === familyVariant.variant_attribute_sets.length) { %> AknFieldContainer--hidden <% } %>\">\n    <div class=\"AknFieldContainer-header\">\n        <label for=\"pim_enrich_family_variant_axis2\" class=\"AknFieldContainer-label\"><%- __('pim_enrich.entity.family_variant.module.create.axis_level', { level: 2 }) %> <%- __('pim_common.required_label') %></label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <input id=\"pim_enrich_family_variant_axis2\" type=\"hidden\" value=\"<%- axes2 %>\" name=\"axes2\" class=\"select-field\" />\n    </div>\n</div>\n\n<% if (globalErrors.length > 0) { %>\n<div class=\"AknMessageBox AknMessageBox--danger global-errors\">\n    <ul class=\"AknMessageBox-list\">\n        <% for (let i in globalErrors) { %>\n        <li class=\"global-error\"><%- globalErrors[i].message %></li>\n        <% } %>\n    </ul>\n</div>\n<% } %>\n"

/***/ }),

/***/ 1406:
/*!*****************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/variants/add-variant-form-header.html ***!
  \*****************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage-titleContainer\">\n    <div class=\"AknFullPage-subTitle\"><%- __('pim_enrich.entity.family.uppercase_label') %> <%- familyName %></div>\n    <div class=\"AknFullPage-title\"><%- __('pim_enrich.entity.family_variant.module.create.title') %></div>\n    <div class=\"AknFullPage-description\"><%- __('pim_enrich.entity.family_variant.module.create.description') %></div>\n</div>\n"

/***/ }),

/***/ 94453:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/family/tab/variants/add-variant-form.html ***!
  \**********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage\">\n    <div class=\"AknFullPage-content AknFullPage-content--withIllustration\">\n        <div>\n            <img src=\"bundles/pimui/images/illustrations/Variant.svg\" alt=\"\"/>\n        </div>\n        <div>\n            <div data-drop-zone=\"header\"></div>\n            <div class=\"AknFormContainer\" data-drop-zone=\"fields-container\"></div>\n            <div class=\"AknButtonList-item AknButton AknButton--apply ok\"><%- okLabel %></div>\n        </div>\n    </div>\n</div>\n<div class=\"AknFullPage-cancel cancel\"></div>\n"

/***/ }),

/***/ 62674:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/attribute/boolean.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"switch switch-small\" data-on-label=\"<%- labels.on %>\" data-off-label=\"<%- labels.off %>\">\n    <input type=\"checkbox\" name=\"filter-value\" <%- value ? 'checked' : '' %> <%- editable ? '' : 'disabled' %>>\n</div>\n"

/***/ }),

/***/ 90595:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/attribute/date.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" <%- isEditable ? '' : 'disabled' %> name=\"filter-operator\">\n    <% _.each(operators, function (operatorChoiceLabel, operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- operatorChoiceLabel %>\n        </option>\n    <% }); %>\n</select>\n\n<% if (!_.contains(['EMPTY', 'NOT EMPTY', 'BETWEEN', 'NOT BETWEEN'], operator)) { %>\n    <span class=\"AknFieldContainer-subContainer start-date-wrapper\">\n        <input name=\"filter-value-start\" class=\"AknTextField AknTextField--noLeftRadius add-on value\" type=\"text\" <%- isEditable ? '' : 'disabled' %> value=\"<%- startValue ? startValue : '' %>\">\n    </span>\n<% } else if (_.contains(['BETWEEN', 'NOT BETWEEN'], operator)) { %>\n    <span class=\"AknFieldContainer-subContainer start-date-wrapper\">\n        <input name=\"filter-value-start\" class=\"AknTextField AknTextField--noLeftRadius add-on value\" type=\"text\" <%- isEditable ? '' : 'disabled' %> value=\"<%- startValue ? startValue : '' %>\">\n    </span>\n    <span class=\"AknFieldContainer-subContainer end-date-wrapper\">\n        <input name=\"filter-value-end\" class=\"AknTextField AknTextField--noLeftRadius add-on value\" type=\"text\" <%- isEditable ? '' : 'disabled' %> value=\"<%- endValue ? endValue : '' %>\">\n    </span>\n<% } %>\n"

/***/ }),

/***/ 44002:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/attribute/media.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" <%- editable ? '' : 'disabled' %> name=\"filter-operator\">\n    <% _.each(operators, function (operatorChoiceLabel, operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- operatorChoiceLabel %>\n        </option>\n    <% }); %>\n</select>\n\n<% if (!_.contains(['EMPTY', 'NOT EMPTY'], operator)) { %>\n    <input type=\"text\" name=\"filter-value\" class=\"AknTextField AknTextField--noLeftRadius value\" value=\"<%- value %>\" <%- editable ? '' : 'disabled' %>>\n<% } %>\n"

/***/ }),

/***/ 78735:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/attribute/metric.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" name=\"filter-operator\" <%- editable ? '' : 'disabled' %>>\n    <% _.each(operators, function (operatorChoiceLabel, operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- operatorChoiceLabel %>\n        </option>\n    <% }); %>\n</select>\n\n<% if (!_.contains(['EMPTY', 'NOT EMPTY'], operator)) { %>\n    <input type=\"text\" name=\"filter-data\" class=\"AknTextField AknTextField--noRightRadius AknTextField--noLeftRadius value\" value=\"<%- value.amount %>\" <%- editable ? '' : 'disabled' %>>\n\n    <select class=\"select2 unit\" name=\"filter-unit\" <%- editable ? '' : 'disabled' %>>\n        <% _.each(units, function (unit) { %>\n            <option value=\"<%- unit.code %>\"<%- value.unit === unit.code ? ' selected' : '' %>>\n                <%- i18n.getLabel(unit.labels, locale, unit.code) %>\n            </option>\n        <% }); %>\n    </select>\n<% } %>\n"

/***/ }),

/***/ 97798:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/attribute/number.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" <%- editable ? '' : 'disabled' %> name=\"filter-operator\">\n    <% _.each(operators, function (operatorChoiceLabel, operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- operatorChoiceLabel %>\n        </option>\n    <% }); %>\n</select>\n\n<% if (!_.contains(['EMPTY', 'NOT EMPTY'], operator)) { %>\n    <input type=\"text\" name=\"filter-value\" class=\"AknTextField AknTextField--noLeftRadius value\" value=\"<%- value %>\" <%- editable ? '' : 'disabled' %>/>\n<% } %>\n"

/***/ }),

/***/ 7765:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/attribute/price-collection.html ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" <%- editable ? '' : 'disabled' %> name=\"filter-operator\">\n    <% _.each(operators, function (operatorChoiceLabel, operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- operatorChoiceLabel %>\n        </option>\n    <% }); %>\n</select>\n\n<% if (!_.contains(['EMPTY', 'NOT EMPTY'], operator)) { %>\n    <input type=\"text\" name=\"filter-data\" class=\"AknTextField AknTextField--noRightRadius AknTextField--noLeftRadius value\" value=\"<%- value.amount %>\" <%- editable ? '' : 'disabled' %>>\n\n    <select class=\"select2 currency\" name=\"filter-currency\" <%- editable ? '' : 'disabled' %>>\n        <% _.each(currencies, function (currencyChoice) { %>\n            <option value=\"<%- currencyChoice.code %>\"<%- value.currency === currencyChoice.code ? ' selected' : '' %>>\n                <%- currencyChoice.code %>\n            </option>\n        <% }); %>\n    </select>\n<% } %>\n"

/***/ }),

/***/ 13870:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/attribute/select.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" name=\"filter-operator\" <%- editable ? '' : 'disabled' %>>\n    <% _.each(operators, function (operatorChoiceLabel, operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- operatorChoiceLabel %>\n        </option>\n    <% }); %>\n</select>\n\n<input type=\"hidden\" name=\"filter-value\" class=\"select2 value noLeftBorder\" value=\"<%- value ? value : '' %>\" <%- editable ? '' : 'disabled' %> />\n"

/***/ }),

/***/ 79412:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/attribute/string.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" <%- editable ? '' : 'disabled' %> name=\"filter-operator\">\n    <% _.each(operators, function (operatorChoiceLabel, operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- operatorChoiceLabel %>\n        </option>\n    <% }); %>\n</select>\n\n<% if (!_.contains(['EMPTY', 'NOT EMPTY'], operator)) { %>\n    <input type=\"text\" name=\"filter-value\" class=\"AknTextField AknTextField--noLeftRadius value\" value=\"<%- value %>\" <%- editable ? '' : 'disabled' %>/>\n<% } %>\n"

/***/ }),

/***/ 52105:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/filter.html ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label\">\n        <%- label %>\n        <span class=\"label-elements-container\"></span>\n    </label>\n    <div class=\"after-label-elements-container\"></div>\n</div>\n<div class=\"AknFieldContainer-inputContainer\">\n    <div class=\"filter-input\"></div>\n    <span class=\"after-input-elements-container\"></span>\n    <% if (removable && editable) { %>\n        <div class=\"AknFieldContainer-iconsContainer icons-container\"><i class=\"AknIconButton remove icon-trash\"></i></div>\n    <% } %>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <span class=\"below-input-elements-container\"></span>\n</div>\n"

/***/ }),

/***/ 59444:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/category.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknTextField <%- isEditable ? 'AknTextField--withRightButton' : 'AknTextField--disabled' %>\">\n    <%- labelInfo %>\n    <% if (isEditable) { %>\n    <button type=\"button\" class=\"AknButton AknButton--action AknButton--small edit\" title=\"<%- titleEdit %>\">\n        <%- labelEdit %>\n    </button>\n    <% } %>\n</div>\n"

/***/ }),

/***/ 33917:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/category/selector.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<h4><%- label %></h4>\n<hr>\n<div class=\"root categories-selector-tree\" data-tree-id=\"<%- tree.id %>\"></div>\n"

/***/ }),

/***/ 39224:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/completeness.html ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" <%- isEditable ? '' : 'disabled' %> name=\"filter-operator\">\n    <% _.each(operatorChoices, function (operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- __('pim_enrich.export.product.filter.completeness.operators.' + operatorChoice) %>\n        </option>\n    <% }); %>\n</select>\n"

/***/ }),

/***/ 58335:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/enabled.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 value\" name=\"filter-value\" <%- isEditable ? '' : 'disabled' %>>\n    <option value=\"all\"<%- value === null ? ' selected' : '' %>><%- labels.valueChoices.all %></option>\n    <option value=\"enabled\"<%- value === true ? ' selected' : '' %>><%- labels.valueChoices.enabled %></option>\n    <option value=\"disabled\"<%- value === false ? ' selected' : '' %>><%- labels.valueChoices.disabled %></option>\n</select>\n"

/***/ }),

/***/ 8575:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/family.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<input\n    class=\"select2 value\"\n    name=\"filter-value\"\n    type=\"hidden\"\n    value=\"<%- value ? value : '' %>\"\n    data-placeholder=\"<%- __('pim_enrich.export.product.filter.' + shortname + '.empty_selection') %>\"\n    <%- isEditable ? '' : 'disabled' %>\n/>\n"

/***/ }),

/***/ 57884:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/identifier.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<textarea\n    class=\"AknTextareaField identifier\"\n    name=\"filter-value\"\n    <%- isEditable ? '' : 'disabled' %>\n><%- value %></textarea>\n"

/***/ }),

/***/ 78755:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/quality-score/filter.html ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer control-group filter-item\">\n    <div class=\"AknFieldContainer-header\">\n        <label class=\"AknFieldContainer-label control-label\">\n            <%- label %>\n            <span class=\"label-elements-container\"></span>\n        </label>\n        <div class=\"after-label-elements-container\"></div>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <div class=\"filter-input\"></div>\n        <span class=\"after-input-elements-container\"></span>\n        <% if (removable && editable) { %>\n            <div class=\"AknFieldContainer-iconsContainer icons-container\"><i class=\"AknIconButton remove icon-trash\"></i></div>\n        <% } %>\n    </div>\n    <div class=\"AknFieldContainer-footer\">\n        <span class=\"below-input-elements-container\"></span>\n    </div>\n</div>\n\n<div class=\"AknFieldContainer control-group filter-item\">\n    <div class=\"AknFieldContainer-header\">\n        <label class=\"AknFieldContainer-label control-label\">\n            <%- label_operator %>\n            <span class=\"label-elements-container\"></span>\n        </label>\n        <div class=\"after-label-elements-container\"></div>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <div class=\"filter-operator\"></div>\n        <span class=\"after-input-elements-container\"></span>\n        <% if (removable && editable) { %>\n        <div class=\"AknFieldContainer-iconsContainer icons-container\"><i class=\"AknIconButton remove icon-trash\"></i></div>\n        <% } %>\n    </div>\n    <div class=\"AknFieldContainer-footer\">\n        <span class=\"below-input-elements-container\"></span>\n    </div>\n</div>\n\n"

/***/ }),

/***/ 6655:
/*!******************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/quality-score/select-operator.html ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2\" <%- isEditable ? '' : 'disabled' %> name=\"filter-operator\">\n<% _.each(operatorChoices, function (operatorChoice) { %>\n<option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n<%- __(`pim_enrich.export.product.filter.${shortname}.operators.${operatorChoice}`) %>\n</option>\n<% }); %>\n</select>\n"

/***/ }),

/***/ 99063:
/*!***************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/quality-score/select-score.html ***!
  \***************************************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 value\"\n    <%- isEditable ? '' : 'disabled' %>\n    multiple=\"multiple\"\n    name=\"filter-value\"\n    data-placeholder=\"<%- __('pim_enrich.export.product.filter.' + shortname + '.empty_selection') %>\"\n>\n<% _.each(scoreChoices, function (scoreChoice) { %>\n    <option value=\"<%- scoreChoice.id %>\"<%- value && value.includes(scoreChoice.id.toString()) ? ' selected' : '' %>>\n    <%- scoreChoice.text.toUpperCase() %>\n    </option>\n<% }); %>\n</select>\n"

/***/ }),

/***/ 40065:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/product/updated.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<select class=\"select2 operator\" <%- isEditable ? '' : 'disabled' %> name=\"filter-operator\">\n    <% _.each(operatorChoices, function (operatorChoice) { %>\n        <option value=\"<%- operatorChoice %>\"<%- operator === operatorChoice ? ' selected' : '' %>>\n            <%- __('pim_enrich.export.product.filter.updated.operators.' + operatorChoice) %>\n        </option>\n    <% }); %>\n</select>\n<% if ('>' === operator) { %>\n    <span class=\"date-wrapper\">\n        <input name=\"filter-value-updated\" class=\"AknTextField add-on value\" type=\"text\" <%- isEditable ? '' : 'disabled' %> value=\"<%- value ? value : '' %>\">\n    </span>\n<% } else if ('SINCE LAST N DAYS' === operator) { %>\n    <input name=\"filter-value-updated\" class=\"AknTextField AknTextField--noLeftRadius\" type=\"text\" value=\"<%- value ? value : '' %>\"<%- isEditable ? '' : ' disabled' %>>\n<% } %>\n"

/***/ }),

/***/ 46763:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/filter/simpleselect.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<label class=\"control-label required\"><%- field %></label>\n<div class=\"controls\">\n    <input type=\"text\" name=\"filter-operator\" value=\"<%- operator %>\"/>\n    <input\n        class=\"select2\"\n        name=\"filter-value\"\n        type=\"hidden\"\n        value=\"<%- value ? value : '' %>\"\n    />\n    <% if (removable) { %><i class=\"remove icon-trash\"></i><% } %>\n</div>\n"

/***/ }),

/***/ 81627:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/add-select/footer.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"ui-multiselect-footer\">\n    <span class=\"item-counter\"><%- _.__(countTitle, {'itemsCount': numberOfItems}) %></span>\n    <button class=\"AknButton AknButton--small AknButton--apply\" type=\"button\">\n        <%- buttonTitle %>\n    </button>\n</div>\n"

/***/ }),

/***/ 53224:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/add-select/line.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"select2-result-label-attribute\">\n    <div>\n        <input data-code=\"<%- item.id %>\" type=\"checkbox\" <%- checked ? 'checked=\"checked\"' : '' %> />\n        <span class=\"attribute-label\"><%- item.text %></span>\n    </div>\n</div>\n"

/***/ }),

/***/ 53486:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/add-select/select.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<input type=\"hidden\" multiple=\"true\" class=\"aknButtonLike select-field\"/>\n"

/***/ }),

/***/ 66872:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/column-navigation.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-navigation\">\n    <div class=\"AknSecondaryActions AknDropdown\">\n        <div class=\"AknSecondaryActions-button AknSecondaryActions-button--rotated dropdown-button\" data-toggle=\"dropdown\"></div>\n        <div class=\"AknDropdown-menu\">\n            <div class=\"AknDropdown-menuTitle\"><%= title %></div>\n            <% _.each(navigationItems, function (navigationItem) { %>\n                <div class=\"AknDropdown-menuLink navigation-link\" data-tab=\"<%- navigationItem.route %>\">\n                    <%- navigationItem.label %>\n                </div>\n            <% }); %>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 94134:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/column-tabs-navigation.html ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-title\"><%= title %></div>\n<% _.each(tabs, function (tab) { %>\n    <div class=\"AknColumn-navigationLink<% if (currentTab === tab.code) { %> AknColumn-navigationLink--active <% } %> column-navigation-link\" data-tab=\"<%- tab.code %>\">\n        <%- tab.label %>\n    </div>\n<% }); %>\n"

/***/ }),

/***/ 89875:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/column-tabs.html ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = "<div data-drop-zone=\"container\" class=\"tab-container tab-content\"></div>\n"

/***/ }),

/***/ 69167:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/templates/form/column.html ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-inner column-inner\">\n    <div class=\"AknColumn-innerTop\" data-drop-zone=\"navigation\"></div>\n    <div class=\"AknColumn-innerBottom\" data-drop-zone=\"bottom\"></div>\n</div>\n<div class=\"AknColumn-collapseButton\"></div>\n"

/***/ }),

/***/ 83865:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/boolean.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"switch switch-small\" data-on-label=\"<%- labels.on %>\" data-off-label=\"<%- labels.off %>\">\n    <input\n        id=\"pim_enrich_form_<%- fieldId %>\"\n        type=\"checkbox\"\n        name=\"<%- fieldName %>\"\n        <% if (value) { %> checked<% } %>\n        <% if (readOnly) { %>readonly disabled<% } %>\n    >\n</div>\n"

/***/ }),

/***/ 21421:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/copiable-text.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<input\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    class=\"AknTextField AknTextField--noRightRadius AknTextField--disabled\"\n    type=\"text\"\n    name=\"<%- fieldName %>\"\n    value=\"<%- value %>\"\n    readonly\n>\n<div class=\"AknIconButton AknIconButton--light AknIconButton--glued AknIconButton--edit AknFieldContainer-editButton copy\" title=\"<%- __(tooltipLabel) %>\"></div>\n"

/***/ }),

/***/ 11847:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/date.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<span class=\"date-wrapper\">\n    <input\n        id=\"pim_enrich_form_<%- fieldId %>\"\n        class=\"AknTextField add-on value\"\n        type=\"text\"\n        name=\"<%- fieldName %>\"\n        value=\"<%- value %>\"\n        <%- readOnly ? 'readonly=\"readonly\"' : '' %>\n    >\n</span>\n"

/***/ }),

/***/ 83102:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/field.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<% if (fieldLabel !== '') { %><div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label\" for=\"pim_enrich_form_<%- fieldId %>\">\n        <%- fieldLabel %><% if (required) { %> <em><%- requiredLabel %></em><% } %>\n    </label>\n</div><% } %>\n<div class=\"AknFieldContainer-inputContainer\">\n    <div class=\"field-input\"></div>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <% if (typeof messageOnReadOnly !== 'undefined' && messageOnReadOnly && readOnly) { %>\n        <span class=\"AknFieldContainer-validationWarning\">\n            <span class=\"AknFieldContainer-validationWarningMessage\"><%- messageOnReadOnly %></span>\n        </span>\n    <% } %>\n\n    <% errors.forEach(function(error) { %>\n        <span class=\"AknFieldContainer-validationError\">\n            <span class=\"error-message\"><%= error.message %></span>\n        </span>\n    <% }) %>\n    <% warnings.forEach(function(warning) { %>\n        <div>\n            <i class=\"icon-warning-sign\"></i>\n            <%- warning.message %>\n        </div>\n    <% }) %>\n</div>\n"

/***/ }),

/***/ 66306:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/media.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknMediaField<%- media.filePath ? ' has-file' : '' %><%- readOnly ? ' AknMediaField--disabled' : '' %>\" >\n    <% if (media.filePath === null) { %>\n        <input class=\"AknMediaField-fileUploaderInput<%- readOnly ? ' AknMediaField-fileUploaderInput--disabled' : '' %>\" type=\"file\" />\n        <div class=\"AknMediaField-emptyContainer\">\n            <span title=\"upload icon\" class=\"AknMediaField-uploadIcon\"></span>\n            <span><%- uploadLabel %></span>\n        </div>\n    <% } else { %>\n        <div class=\"AknMediaField-preview preview\">\n            <% mediaThumbnailUrl = mediaUrlGenerator.getMediaShowUrl(media.filePath, 'thumbnail_small') %>\n            <% mediaPreviewUrl   = mediaUrlGenerator.getMediaShowUrl(media.filePath, 'preview') %>\n            <% mediaDownloadUrl  = mediaUrlGenerator.getMediaDownloadUrl(media.filePath) %>\n            <% if (null != mediaThumbnailUrl) { %>\n                <div class=\"AknMediaField-thumb file\"><img src=\"<%- mediaThumbnailUrl %>\" class=\"AknMediaField-image\"/></div>\n            <% } else { %>\n                <div class=\"AknMediaField-thumb file\">\n                    <span title=\"upload icon\" class=\"AknMediaField-uploadIcon\"></span>\n                </div>\n            <% } %>\n            <div class=\"AknMediaField-info info\">\n                <div class=\"filename\" title=\"Filename\"><%- media.originalFilename %></div>\n                <div class=\"AknButtonList AknButtonList--centered actions\">\n                    <% if (null != mediaPreviewUrl) { %>\n                        <span class=\"AknButtonList-item AknIconButton AknIconButton--grey open-media\"><i class=\"icon icon-eye-open\"></i></span>\n                    <% } %>\n                    <% if (!readOnly) { %>\n                        <a href=\"<%- mediaDownloadUrl %>\" class=\"AknButtonList-item AknIconButton AknIconButton--grey download-file\" download><i class=\"icon icon-cloud-download\"></i></a>\n                        <span class=\"AknButtonList-item AknIconButton AknIconButton--grey clear-field %>\"><i class=\"icon icon-trash\"></i></span>\n                    <% } %>\n                </div>\n            </div>\n        </div>\n    <% } %>\n    <div class=\"AknMediaField-progress AknProgress AknProgress--micro progress\">\n        <div class=\"AknProgress-bar bar\"></div>\n    </div>\n</div>\n"

/***/ }),

/***/ 17487:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/metric.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknMetricField metric-container\">\n    <input id=\"<%- fieldId %>\"\n           class=\"AknTextField AknTextField--noRightRadius amount\"\n           value=\"<%- value.amount %>\"\n           <% if (readOnly) { %>readonly disabled<% } %>\n    >\n\n    <select class=\"AknMetricField-unit unit select-field\"\n            <% if (readOnly) { %>readonly disabled<% } %>\n    >\n        <% _.each(_.keys(unitChoices), function(unit) { %>\n            <option value=\"<%- unit %>\"\n                    <% if ((null === value.unit && defaultUnit === unit) || value.unit === unit) { %> selected<% } %>\n            >\n                <%- unitChoices[unit] %>\n            </option>\n        <% }); %>\n    </select>\n</div>\n"

/***/ }),

/***/ 77239:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/number.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<input\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    class=\"AknTextField\"\n    type=\"number\"\n    name=\"<%- fieldName %>\"\n    value=\"<%- value %>\"\n    <% if (readOnly) { %>readonly disabled<% } %>\n>\n"

/***/ }),

/***/ 3785:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/password.html ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "<input\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    class=\"AknTextField\"\n    type=\"password\"\n    name=\"<%- fieldName %>\"\n    value=\"<%- value %>\"\n    <% if (readOnly) { %>readonly disabled<% } %>\n>\n"

/***/ }),

/***/ 60191:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/select.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<select\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    class=\"select2\"\n    name=\"<%- fieldName %>\"\n    data-placeholder=\"<%- labels.defaultLabel %>\"\n    <% if (multiple) { %>multiple<% } %>\n    <% if (readOnly) { %>readonly disabled<% } %>\n>\n    <option value=\"\"<% if (!value) { %> selected<% } %>></option>\n    <% if (Object.keys(choices).length > 0 && Object.values(choices)[0] instanceof Object) { %>\n        <% _.each(choices, function (optGroupOptions, optGroupLabel) { %>\n            <optgroup label=\"<%- optGroupLabel %>\">\n                <% _.each(optGroupOptions, function (choiceLabel, choiceValue) { %>\n                <option\n                    value=\"<%- choiceValue %>\"\n                    <% if ((!multiple && choiceValue === value) || (multiple && _.contains(value, choiceValue))) { %> selected<% } %>\n                    >\n                    <%- choiceLabel %>\n                </option>\n                <% }); %>\n            </optgroup>\n        <% }); %>\n    <% } else { %>\n        <% _.each(choices, function (choiceLabel, choiceValue) { %>\n            <option\n                value=\"<%- choiceValue %>\"\n                <% if ((!multiple && choiceValue === value) || (multiple && _.contains(value, choiceValue))) { %> selected<% } %>\n            >\n                <%- choiceLabel %>\n            </option>\n        <% }); %>\n    <% } %>\n</select>\n"

/***/ }),

/***/ 50427:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/simple-select-async.html ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = "<input\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    type=\"hidden\"\n    class=\"select2 select-field\"\n    name=\"<%- fieldName %>\"\n    value=\"<%- value %>\"\n    <% if (readOnly) { %>readonly disabled<% } %>\n>\n<div class=\"AknFieldContainer-iconsContainer icons-container\"></div>\n"

/***/ }),

/***/ 71957:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/text.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<input\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    class=\"AknTextField\"\n    type=\"text\"\n    name=\"<%- fieldName %>\"\n    value=\"<%- value %>\"\n    <% if (readOnly) { %>readonly disabled<% } %>\n>\n"

/***/ }),

/***/ 75240:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/textarea-monospaced.html ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = "<textarea\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    class=\"AknTextareaField AknTextareaField--monospaced\"\n    name=\"<%- fieldName %>\"\n    <% if (readOnly) { %>readonly disabled<% } %>\n><%- value %></textarea>\n"

/***/ }),

/***/ 37887:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/common/fields/textarea.html ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "<textarea\n    id=\"pim_enrich_form_<%- fieldId %>\"\n    class=\"AknTextareaField\"\n    name=\"<%- fieldName %>\"\n    <% if (readOnly) { %>readonly disabled<% } %>\n><%- value %></textarea>\n"

/***/ }),

/***/ 19882:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/creation/field.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer\" data-code=\"<%- identifier %>\">\n    <div class=\"AknFieldContainer-header\">\n        <label title=\"<%- label %>\" class=\"AknFieldContainer-label control-label required truncate\" for=\"creation_<%- identifier %>\">\n            <%- label %> <em><%- requiredLabel %></em>\n        </label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer field-input\">\n        <input type=\"text\" class=\"AknTextField\" value=\"<%- value %>\" id=\"creation_<%- identifier %>\" name=\"<%- identifier %>\"/>\n    </div>\n    <div class=\"AknFieldContainer-footer AknFieldContainer-validationErrors validation-errors\">\n        <% _.each(errors, function (error) { %>\n        <span class=\"AknFieldContainer-validationError\">\n                <span class=\"error-message\"><%- error.message %></span>\n            </span>\n        <% }) %>\n    </div>\n</div>\n"

/***/ }),

/***/ 46837:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/creation/job.html ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer\">\n    <div class=\"AknFieldContainer-header\">\n        <label for=\"job\" class=\"AknFieldContainer-label control-label required\">\n            <%- label %> <em><%- required %></em>\n        </label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <select name=\"job\" id=\"job\" class=\"job-input\">\n            <option value=\"\"></option>\n            <% for (var job in jobs) { %>\n                <optgroup label=\"<%- job %>\">\n                    <% for (var name in jobs[job]) { %>\n                        <option <%- (name === selectedJobType ? \"selected\": \"\") %> value=\"<%- name %>\"><%- __(`batch_jobs.${name}.label`) %></option>\n                    <% } %>\n                </optgroup>\n            <% } %>\n        </select>\n    </div>\n    <div class=\"AknFieldContainer-footer AknFieldContainer-validationErrors validation-errors\">\n        <% _.each(errors, function (error) { %>\n        <span class=\"AknFieldContainer-validationError\">\n                <span class=\"error-message\"><%- error.message %></span>\n            </span>\n        <% }) %>\n    </div>\n</div>\n"

/***/ }),

/***/ 77123:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/creation/modal.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<% if (typeof hint !== 'undefined' && hint) { %>\n<div class=\"ModalHint\">\n    <div class=\"ModalHint-icon AknIconButton AknIconButton--info\"></div>\n    <div class=\"ModalHint-title\"> <%= hint %></div>\n</div>\n<% } %>\n<div class=\"AknFormContainer AknFormContainer--withPadding\">\n    <div data-drop-zone=\"fields\" class=\"AknFormContainer\">\n        <% if (null !== fields) { %>\n            <%= fields %>\n        <% } %>\n    </div>\n</div>\n"

/***/ }),

/***/ 52844:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/creation/type.html ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer\" data-code=\"type\">\n    <div class=\"AknFieldContainer-header\">\n        <label for=\"type\" class=\"AknFieldContainer-label control-label required\">\n            <%- label %> <em><%- required %></em>\n        </label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <input type=\"hidden\" name=\"type\" id=\"type\" class=\"select-field\" value=\"<%- type %>\" <%- isEditable ? 'disabled' : '' %> data-placeholder=\"<%- label %>\" />\n    </div>\n</div>\n"

/***/ }),

/***/ 1653:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/templates/form/delete.html ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = "<%- _.__('pim_common.delete') %>\n"

/***/ }),

/***/ 31170:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/download-file.html ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = "<a class=\"AknDropdown-menuLink btn-download\" href=\"<%- url %>\"><%- btnLabel %></a>\n"

/***/ }),

/***/ 39300:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/exclusif-boolean.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--withPadding\">\n    <div data-drop-zone=\"fields\" class=\"AknFormContainer\">\n        <% if (null !== fields) { %>\n        <%= fields %>\n        <% } %>\n    </div>\n</div>\n"

/***/ }),

/***/ 95239:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/form-tabs.html ***!
  \************************************************************/
/***/ ((module) => {

module.exports = "<header class=\"AknHorizontalNavtab <% if (centered) { %> AknHorizontalNavtab--centered<% } %>\">\n    <ul class=\"AknHorizontalNavtab-list nav nav-tabs form-tabs\">\n        <% _.each(tabs, function (tab) { %>\n            <li class=\"AknHorizontalNavtab-item<% if (currentTab === tab.code) { %> active<% } %>\" data-tab=\"<%- tab.code %>\">\n                <a class=\"AknHorizontalNavtab-link <% if (currentTab === tab.code) { %> AknHorizontalNavtab-link--active<% } %>\" href=\"javascript:void(0);\">\n                    <%= tab.label %>\n                    <% if (tab.fieldErrors.length) { %>\n                        <div class=\"AknBadge AknBadge--small  AknBadge--highlight AknBadge--highlight--below-average\"></div>\n                    <% } %>\n                </a>\n            </li>\n        <% }); %>\n    </ul>\n</header>\n<div class=\"AknTabContainer-contentThreeColumns form-container form-horizontal\">\n    <div data-drop-zone=\"container\" class=\"tab-container tab-content\"></div>\n</div>\n"

/***/ }),

/***/ 97213:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/templates/form/grid.html ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<div class=\"grid-drop\" data-type=\"datagrid\"></div>\n<input type=\"hidden\" id=\"added_objects\"/>\n<input type=\"hidden\" id=\"removed_objects\"/>\n"

/***/ }),

/***/ 56915:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/group-selector.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<% _.each(elements, function (element) { %>\n    <li class=\"AknVerticalNavtab-item <%- current === element.code ? 'active' : '' %>\" data-element=\"<%- element.code %>\">\n        <a class=\"AknVerticalNavtab-link <%- current === element.code ? 'AknVerticalNavtab-link--active' : '' %>\">\n            <span class=\"group-label label\"><%- element.label %></span>\n            <span class=\"badge-elements-container\">\n                <% _.each(badges[element.code], function(badge, type) { %>\n                    <span class=\"AknBadge AknBadge--<%- type %> <%- type %>-badge label\"><%- badge %></span>\n                <% }) %>\n            </span>\n        </a>\n    </li>\n<% }); %>\n"

/***/ }),

/***/ 2037:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/index/confirm-button.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<a class=\"AknButton <%- buttonClass %>\" title=\"<%- buttonLabel %>\" data-title=\" <%- title %>\"\n   data-dialog=\"confirm\" data-method=\"POST\"\n   data-buttonlabel=\"<%- buttonLabel %>\"\n   data-subtitle=\"<%- subTitle %>\"\n   data-message=\"<%- message %>\" data-url=\"<%- url %>\" data-redirect-url=\"<%- redirectUrl %>\"\n   data-error-message=\"<%- errorMessage %>\" data-success-message=\"<%- successMessage %>\">\n    <%- buttonLabel %>\n</a>\n"

/***/ }),

/***/ 36342:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/index/create-button.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<a id=\"create-button-extension\" class=\"AknButton AknButton--apply AknButtonList-item\" data-form-url=\"<%- url %>\">\n    <%- title %>\n</a>\n"

/***/ }),

/***/ 67449:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/index/index.html ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFilterBox AknFilterBox--search\" data-drop-zone=\"filters\"></div>\n<div class=\"AknGridToolbar\" data-drop-zone=\"toolbar\"></div>\n"

/***/ }),

/***/ 904:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/main-image.html ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = "<img src=\"<%- path %>\">\n"

/***/ }),

/***/ 78692:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/templates/form/meta.html ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-title\"><%- label %></div>\n<div class=\"meta\" data-drop-zone=\"meta\"></div>\n"

/***/ }),

/***/ 42183:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/meta/created.html ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = "<span title=\"<%- label %>: <%- loggedAt %> <%- labelBy %> <%- author %>\">\n    <%- label %>: <%- loggedAt %> <%- labelBy %> <%- author %>\n</span>\n"

/***/ }),

/***/ 55008:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/meta/updated.html ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = "<span title=\"<%- label %>: <%- loggedAt %> <%- labelBy %> <%- author %>\">\n    <%- label %>: <%- loggedAt %> <%- labelBy %> <%- author %>\n</span>\n"

/***/ }),

/***/ 39005:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/meta/uuid.html ***!
  \************************************************************/
/***/ ((module) => {

module.exports = "<span title=\"<%- label %>\">\n    <%- label %>: <%- uuid %>\n</span>\n"

/***/ }),

/***/ 95478:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/properties/general.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsection-title\">\n    <%- sectionTitle %>\n</div>\n<div class=\"tabsection-content\">\n    <div class=\"AknFormContainer AknFormContainer--withPadding\">\n        <div class=\"AknFieldContainer\">\n            <div class=\"AknFieldContainer-header\">\n                <label class=\"control-label required\" for=\"<%- inputField %>\">\n                    <%- codeLabel %> <em><%- formRequired %></em>\n                </label>\n            </div>\n            <div class=\"AknFieldContainer-inputContainer\">\n                <input id=\"<%- inputField %>\" class=\"AknTextField\" type=\"text\" <%- false === hasId ? '' : 'readonly disabled' %> required value=\"<%- model.code %>\">\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 34696:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/properties/input.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer\">\n    <div class=\"AknFieldContainer-header\">\n        <label class=\"AknFieldContainer-label control-label required\" for=\"<%- fieldName%>\">\n            <%- label %> <% if (isRequired) { %><em><%- requiredLabel %></em><% } %>\n        </label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer\">\n        <input\n                id=\"<%- fieldName%>\"\n                class=\"AknTextField <%- className %>\"\n                type=\"text\"\n                value=\"<%- value %>\"\n                <%- isReadOnly ? 'readonly disabled' : '' %>\n                <%- isRequired ? 'required' : '' %>\n        >\n    </div>\n    <div class=\"AknFieldContainer-footer\">\n        <div class=\"AknFieldContainer-validationErrors validation-errors\">\n            <% _.each(errors, function (error) { %>\n            <div class=\"AknFieldContainer-validationError\">\n                <%- error %>\n            </div>\n            <% }); %>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 62742:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/properties/translation.html ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "<% _.each(locales, function (locale) { %>\n    <div class=\"AknFieldContainer\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label\" for=\"<%- fieldBaseId %><%- locale.code %>\">\n                <%= locale.label %>\n            </label>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer field-input\">\n            <input id=\"<%- fieldBaseId %><%- locale.code %>\"\n                   class=\"AknTextField label-field\"\n                   type=\"text\"\n                   data-locale=\"<%- locale.code %>\"\n                   value=\"<%- model.labels[locale.code] %>\"\n                   <%- isReadOnly ? 'readonly disabled' : '' %>\n            >\n        </div>\n        <% if (errors[locale.code]) { %>\n            <div class=\"AknFieldContainer-footer AknFieldContainer-validationErrors\">\n                <span class=\"AknFieldContainer-validationError validation-error\">\n                    <span class=\"error-message\"><%- errors[locale.code].message %></span>\n                </span>\n            </div>\n        <% } %>\n    </div>\n<% }) %>\n"

/***/ }),

/***/ 32806:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/templates/form/redirect.html ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = "<button class=\"<%- buttonClass %>\" title=\"<%- title ?? '' %>\">\n    <%- label %>\n</button>\n"

/***/ }),

/***/ 12715:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/save-buttons.html ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = "<% if ((primaryButton) && !(secondaryButtons && secondaryButtons.length)) { %>\n    <button class=\"AknButton AknButton--apply <%- primaryButton.className || '' %>\">\n        <%- primaryButton.label %>\n    </button>\n<% } else { %>\n    <div class=\"AknSeveralActionsButton AknSeveralActionsButton--apply AknDropdown\">\n        <button class=\"AknSeveralActionsButton-mainAction <%- primaryButton.className || '' %>\">\n            <%- primaryButton.label %>\n        </button>\n        <button class=\"AknSeveralActionsButton-caretContainer\" data-toggle=\"dropdown\">\n            <img src=\"/bundles/pimui/images/icon-down-white.svg\" class=\"AknSeveralActionsButton-caret\"/>\n        </button>\n        <ul class=\"AknSeveralActionsButton-menu AknDropdown-menu AknDropdown-menu--right\">\n            <% _.each(secondaryButtons, function (btn) { %>\n                <li>\n                    <button type=\"button\" class=\"AknDropdown-menuLink <%- btn.className || '' %>\">\n                        <%- btn.label %>\n                    </button>\n                </li>\n            <% }) %>\n        </ul>\n    </div>\n<% } %>\n"

/***/ }),

/***/ 75322:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/templates/form/save.html ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<button class=\"AknButton AknButton--apply save\">\n    <%- label %>\n</button>\n"

/***/ }),

/***/ 54861:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/secondary-actions.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknSecondaryActions-button dropdown-button\" data-toggle=\"dropdown\"></div>\n<div class=\"AknDropdown-menu AknDropdown-menu--right\" data-drop-zone=\"secondary-actions\">\n    <div class=\"AknDropdown-menuTitle\"><%- titleLabel %></div>\n</div>\n"

/***/ }),

/***/ 89215:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/templates/form/state.html ***!
  \********************************************************/
/***/ ((module) => {

module.exports = "<span class=\"AknState\"><%- message %></span>\n"

/***/ }),

/***/ 92117:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/subsection.html ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknSubsection-title\">\n    <%- title %>\n</div>\n<div data-drop-zone=\"content\"></div>\n"

/***/ }),

/***/ 37961:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/attributes.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tab-content\">\n    <header data-drop-zone=\"header\" class=\"AknAttributeActions tab-header attribute-actions\">\n        <div data-drop-zone=\"edit-actions\" class=\"AknAttributeActions-editActions attribute-edit-actions\">\n            <div data-drop-zone=\"context-selectors\" class=\"AknButtonList AknAttributeActions-contextSelectors context-selectors\"></div>\n            <div data-drop-zone=\"other-actions\" class=\"AknAttributeActions-otherActions AknButtonList AknButtonList--right other-actions\"></div>\n        </div>\n    </header>\n    <div class=\"tab-pane active object-values\"></div>\n</div>\n"

/***/ }),

/***/ 1715:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/attributes/attribute-filter.html ***!
  \**********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n    <span class=\"AknActionButton-highlight\">\n        <%- __('pim_enrich.entity.product.module.attribute_filter.display') %> <%- currentFilter.label %>\n    </span>\n    <span class=\"AknActionButton-caret\"></span>\n</div>\n<ul class=\"AknDropdown-menu AknDropdown-menu--right\">\n    <li class=\"AknDropdown-menuTitle\"><%- __('pim_enrich.entity.product.module.attribute_filter.display') %></li>\n    <% _.each(filters, function (filter) { %>\n        <li class=\"AknDropdown-menuLink <%- currentFilter.code === filter.code ? 'AknDropdown-menuLink--active active' : '' %>\" data-code=\"<%- filter.code %>\">\n            <span class=\"label\"><%- filter.label %></span>\n        </li>\n    <% }); %>\n</ul>\n"

/***/ }),

/***/ 71660:
/*!******************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/attributes/attribute-group-selector.html ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n    <%- label %>:\n    <span class=\"AknActionButton-highlight\">\n        <%- i18n.getLabel(currentElement.labels, locale, currentElement.code) %>\n    </span>\n    <span class=\"AknActionButton-caret\"></span>\n</div>\n<ul class=\"AknDropdown-menu AknDropdown-menu--right\">\n    <li class=\"AknDropdown-menuTitle\"><%- label %></li>\n    <% _.each(elements, function (element) { %>\n        <li class=\"<%- current === element.code ? 'active' : '' %>\" data-element=\"<%- element.code %>\">\n            <div class=\"AknDropdown-menuLink <%- current === element.code ? 'AknDropdown-menuLink--active' : '' %>\">\n                <span class=\"label\"><%- i18n.getLabel(element.labels, locale, element.code) %></span>\n                <span class=\"badge-elements-container\">\n                    <span class=\"AknBadge AknBadge--small AknBadge--highlight <%- !_.contains(toFillAttributeGroups, element.code) && !(element.code === allAttributeCode && 0 < toFillAttributeGroups.length) ? 'AknBadge--hidden' : '' %>\"></span>\n                    <% _.each(badges[element.code], function(badge, type) { %>\n                        <span class=\"AknBadge AknBadge--<%- type %> <%- type %>-badge label\"><%- badge %></span>\n                    <% }) %>\n                </span>\n            </div>\n        </li>\n    <% }); %>\n</ul>\n"

/***/ }),

/***/ 25404:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/attributes/attribute-group.html ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = "<header class=\"AknSubsection-title\">\n    <span class=\"group-label\"><%- label %></span>\n    <% if (0 < fieldCollection.toFill) { %>\n        <span class=\"required-attribute-indicator\" data-group=\"<%- fieldCollection.attributeGroup.code %>\">\n            <span class=\"AknSubsection-comment AknSubsection-comment--clickable\">\n                <span class=\"AknBadge AknBadge--small AknBadge--highlight\"></span>\n                <%- __('pim_enrich.entity.product.module.attribute.to_fill_count', {count: fieldCollection.toFill}, fieldCollection.toFill) %>\n            </span>\n        </span>\n    <% } %>\n</header>\n"

/***/ }),

/***/ 75236:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/attributes/copy-field.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknComparableFields-copyContainer copy-container\">\n    <input type=\"checkbox\" class=\"AknComparableFields-checkbox copy-field-selector\" <%- selected ? 'checked' : '' %>></input>\n    <div class=\"<%- type %> AknFieldContainer AknComparableFields-item\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label\"><%- label %></label>\n            <span class=\"AknFieldContainer-fieldInfo field-info\">\n                <% if (attribute.localizable || attribute.scopable) { %>\n                    <span class=\"field-context\">\n                        <% if (attribute.scopable) { %> <span><%- context.scopeLabel %></span> <% } %>\n                        <% if (attribute.localizable) { %> <span><%= i18n.getFlag(context.locale) %></span> <% } %>\n                    </span>\n                <% } %>\n            </span>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer field-input\">\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 42445:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/attributes/copy.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<% if (copying) { %>\n    <div data-drop-zone=\"context-selectors\" class=\"AknButtonList AknAttributeActions-contextSelectors context-selectors\"></div>\n    <div data-drop-zone=\"other-actions\" class=\"AknAttributeActions-otherActions AknButtonList AknButtonList--right other-actions\">\n        <div data-drop-zone=\"copy-actions\" class=\"AknButtonList AknButtonList--right copy-actions\">\n            <div class=\"AknDropdown AknButtonList-item selection-dropdown\">\n                <a class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n                    <span class=\"AknActionButton-highlight\"><%- _.__('pim_enrich.entity.product.module.copy.select') %></span>\n                    <span class=\"AknActionButton-caret\"></span>\n                </a>\n                <ul class=\"AknDropdown-menu AknDropdown-menu--right\">\n                    <li class=\"AknDropdown-menuTitle\"><%- _.__('pim_enrich.entity.product.module.copy.select') %></li>\n                    <li><a class=\"AknDropdown-menuLink select-all\"><%- _.__('pim_common.all') %></a></li>\n                    <li><a class=\"AknDropdown-menuLink select-all-visible\"><%- _.__('pim_enrich.entity.product.module.copy.all_visible') %></a></li>\n                    <li><a class=\"AknDropdown-menuLink select-none\"><%- _.__('pim_common.none') %></a></li>\n                </ul>\n            </div>\n            <div class=\"AknButtonList-item AknButton AknButton--small AknButton--apply copy\"><%- _.__('pim_enrich.entity.product.module.copy.copy') %></div>\n            <div class=\"AknButtonList-item AknAttributeActions-close AknIconButton--delete stop-copying\"></div>\n        </div>\n    </div>\n<% } %>\n"

/***/ }),

/***/ 68546:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/attributes/create-button.html ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = "<span id=\"attribute-create-button\" class=\"AknButton AknButton--apply AknButtonList-item\">\n    <%- buttonTitle %>\n</span>\n"

/***/ }),

/***/ 46528:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/attributes/create-modal-content.html ***!
  \**************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknSquareList\">\n  <% _.each(attributeTypes, function(attributeType){ %>\n      <span class=\"AknSquareList-item attribute-choice\"\n          data-route=\"<%- generateRoute('pim_enrich_attribute_create', { attribute_type: attributeType.code }) %>\">\n          <i class=\"AknButton-squareIcon AknButton-squareIcon--<%- iconsMap[attributeType.code] %>\"></i>\n          <div><%- attributeType.label %></div>\n      </span>\n  <% }); %>\n</div>\n"

/***/ }),

/***/ 81126:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/history.html ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"grid-drop\" data-type=\"datagrid\"></div>\n"

/***/ }),

/***/ 65534:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/section-large.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsection-title\"><%- __(sectionTitle) %></div>\n<div data-drop-zone=\"afterTitle\"></div>\n<div class=\"tabsection-content\">\n    <div class=\"AknFormContainer AknFormContainer--withPadding AknFormContainer--large\" data-drop-zone=\"<%- dropZone %>\">\n\n    </div>\n</div>\n"

/***/ }),

/***/ 27238:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/section.html ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsection-title\"><%- __(sectionTitle) %></div>\n<div data-drop-zone=\"afterTitle\"></div>\n<div class=\"tabsection-content\">\n    <div class=\"AknFormContainer AknFormContainer--withPadding\" data-drop-zone=\"<%- dropZone %>\">\n\n    </div>\n</div>\n"

/***/ }),

/***/ 99615:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/tab/sections.html ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = "<% if (typeof twoColumns !== 'undefined' && twoColumns) { %>\n    <%\n    // The 2 columns are not displayed for now as it imply lot of work on style, but elements are already divided in 2 containers.\n    %>\n    <div class=\"tabsections AknTabContainer-column\" data-drop-zone=\"accordion\"></div>\n    <div class=\"tabsections AknTabContainer-column\" data-drop-zone=\"secondColumn\"></div>\n<% } else { %>\n    <div class=\"tabsections\" data-drop-zone=\"accordion\"></div>\n<% } %>\n"

/***/ }),

/***/ 62678:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/form/user/login-details.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<span class=\"AknTitleContainer-metaItem\">\n    <%- __('pim_user_management.entity.user.meta.created') %>: <%- created %>\n</span>\n<span class=\"AknTitleContainer-metaItem\">\n    <%- __('pim_user_management.entity.user.meta.updated') %>: <%- updated %>\n</span>\n<span class=\"AknTitleContainer-metaItem\">\n    <%- __('pim_user_management.entity.user.properties.last_logged_in') %>: <%- lastLoggedIn %>\n</span>\n<span class=\"AknTitleContainer-metaItem\">\n    <%- __('pim_user_management.entity.user.properties.login_count') %>: <%- loginCount %>\n</span>\n"

/***/ }),

/***/ 84115:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/templates/grid/mass-actions.html ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"select-button AknSelectButton\"></div>\n<div class=\"AknDropdown select-dropdown\">\n    <div class=\"AknMassActions-dropdown\" data-toggle=\"dropdown\"></div>\n    <div class=\"AknDropdown-menu\">\n        <div class=\"AknDropdown-menuTitle\"><%- select %></div>\n        <div class=\"AknDropdown-menuLink select-all\"><%- selectAll %></div>\n        <div class=\"AknDropdown-menuLink select-visible\"><%- selectVisible %></div>\n        <div class=\"AknDropdown-menuLink select-none\"><%- selectNone %></div>\n    </div>\n</div>\n<div class=\"AknButtonList-item AknMassActions-counter\"><span class=\"count\"></span></div>\n<div data-drop-zone=\"actions-panel\"></div>\n"

/***/ }),

/***/ 65602:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/grid/view-selector-create-view-inputs.html ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer\">\n    <div class=\"AknFieldContainer-header\">\n        <label title=\"<%- __('pim_datagrid.view_selector.choose_label') %>\" class=\"AknFieldContainer-label control-label required truncate\">\n            <%- __('pim_datagrid.view_selector.choose_label') %>\n        </label>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer field-input\">\n        <input name=\"new-view-label\" type=\"text\" class=\"AknTextField\" placeholder=\"<%- __('pim_datagrid.view_selector.placeholder') %>\">\n    </div>\n</div>\n<div class=\"AknFieldContainer\">\n    <label title=\"<%- __('pim_datagrid.view_selector.choose_type') %>\" class=\"AknFieldContainer-inputContainer AknFieldContainer--inline\">\n        <div class=\"AknSelectButton AknSelectButton--selected AknCreateView-typeSelector\"></div>\n        <span class=\"AknFieldContainer-label--inline AknFieldContainer-label--right\">\n            <%- __('pim_datagrid.view_selector.choose_type') %>\n        </span>\n    </label>\n</div>\n"

/***/ }),

/***/ 91575:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/grid/view-selector-create-view.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<a class=\"AknDropdown-menuLink create\">\n    <%- label %>\n</a>\n"

/***/ }),

/***/ 51555:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/templates/grid/view-selector-current.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<span class=\"select2-selection-label-view\">\n    <span class=\"before\" data-drop-zone=\"before\"></span>\n    <span class=\"current\"><%- dirtyColumns || dirtyFilters ? '*' : '' %> <%- view.text %></span>\n    <span class=\"after\" data-drop-zone=\"after\"></span>\n</span>\n"

/***/ }),

/***/ 78504:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/grid/view-selector-line.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"select2-result-label-view\">\n    <div class=\"view-line\">\n        <span class=\"view-label <%- isCurrent ? 'view-label-current' : '' %>\">\n            <%- view.text %>\n        </span>\n        <% if (view.type === 'public') { %>\n        <span class=\"view-type\"><%- _.__('pim_datagrid.view_selector.public_label') %></span>\n        <% } %>\n    </div>\n</div>\n"

/***/ }),

/***/ 62276:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/grid/view-selector-remove-view.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<a class=\"AknDropdown-menuLink remove\">\n    <%- label %>\n</a>\n"

/***/ }),

/***/ 60649:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/templates/grid/view-selector-save-view.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<a class=\"AknDropdown-menuLink save <%- dirty ? '' : 'AknDropdown-menuLink--hidden' %>\">\n    <%- label %>\n</a>\n"

/***/ }),

/***/ 15168:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/templates/grid/view-selector.html ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"grid-view-selector\">\n    <div class=\"AknColumn-block AknColumn-block--inline\">\n        <% if (displaySwitcher) { %>\n        <div class=\"AknDropdown AknColumn-subtitle\">\n            <div class=\"view-selector-type-switcher\" data-toggle=\"dropdown\">\n                <span class=\"current-view-type\"><%- __('pim_datagrid.view_selector.' + currentViewType) %></span>\n                <span class=\"AknActionButton-caret\"></span>\n            </div>\n            <ul class=\"AknDropdown-menu\">\n                <li class=\"AknDropdown-menuTitle\">Type</li>\n                <% viewTypes.forEach(function (type) { %>\n                <li>\n                    <a data-value=\"<%- type %>\" class=\"AknDropdown-menuLink<% if (currentViewType === type) { %> AknDropdown-menuLink--active<% } %> view-type-item\" title=\"<%- __('pim_datagrid.view_selector.' + type) %>\">\n                        <%- __('pim_datagrid.view_selector.' + type) %>\n                    </a>\n                </li>\n                <% });  %>\n            </ul>\n        </div>\n        <% } else { %>\n        <div class=\"AknColumn-subtitle\"><%- __('pim_datagrid.view_selector.' + currentViewType) %></div>\n        <% } %>\n        <div class=\"AknColumn-subtitle\">&nbsp;/&nbsp;</div>\n        <div class=\"AknColumn-value\">\n            <input type=\"hidden\" class=\"select-field\" value=\"0\"/>\n        </div>\n        <div class=\"AknColumn-blockDropdown\" data-drop-zone=\"buttons\"></div>\n    </div>\n    <div class=\"AknColumn-resume\" data-drop-zone=\"resume\"></div>\n</div>\n"

/***/ }),

/***/ 30509:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/group/meta/product-count.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<span title=\"<%- label %>: <%- productCount %>\">\n    <%- label %>: <%- productCount %>\n</span>\n"

/***/ }),

/***/ 37933:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/templates/group/tab/properties/general.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabsection-title\">\n    <%- sectionTitle %>\n</div>\n<div class=\"tabsection-content\">\n    <div class=\"AknFormContainer AknFormContainer--withPadding\">\n        <div class=\"AknFieldContainer\">\n            <div class=\"AknFieldContainer-header\">\n                <label class=\"AknFieldContainer-label control-label required\" for=\"pim_enrich_group_form_code\">\n                    <%- codeLabel %> <em><%- __('pim_common.required_label') %></em>\n                </label>\n            </div>\n            <div class=\"AknFieldContainer-inputContainer\">\n                <input id=\"pim_enrich_group_form_code\" class=\"AknTextField\" type=\"text\" readonly=\"readonly\" disabled=\"disabled\" required=\"required\" value=\"<%- model.code %>\">\n            </div>\n        </div>\n\n        <div class=\"AknFieldContainer\">\n            <div class=\"AknFieldContainer-header\">\n                <label class=\"AknFieldContainer-label control-label required\">\n                    <%- typeLabel %> <em><%- __('pim_common.required_label') %></em>\n                </label>\n            </div>\n            <div class=\"AknFieldContainer-inputContainer\">\n                <select id=\"pim_enrich_group_form_type\" readonly=\"readonly\" disabled=\"disabled\" class=\"select2 input-large\">\n                    <option>[<%- model.type %>]</option>\n                </select>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 79951:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/templates/i18n/flag.html ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<span class=\"flag-language\">\n    <i class=\"flag flag-<%- country %>\"></i>\n    <% if (displayLanguage) { %><span class=\"language\"><%- language %></span><% } %>\n</span>\n"

/***/ }),

/***/ 32282:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/templates/import/file-path.html ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = "<div>\n    <span class=\"storage_type\"></span> <%- label %>: <span class=\"AknCenteredBox-highlight\"><%- path %></span>\n</div>\n<div data-drop-zone=\"buttons\"></div>\n"

/***/ }),

/***/ 8250:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/templates/import/switcher.html ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = "<% _.each(actions, function (action) { %>\n  <div class=\"AknButton AknButton--glued <%- (action.code === current) ? 'AknButton--apply' : 'AknButton--greyLight' %> switcher-action\" data-code=\"<%- action.code %>\"><%- action.label %></div>\n<% }) %>\n"

/***/ }),

/***/ 38354:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/choose.html ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = "<% _.each(operations, function (operation) { %>\n    <div class=\"AknSquareList-item<%- (operation.code === currentOperation) ? ' AknSquareList-item--selected' : '' %> operation\" data-code=\"<%- operation.code %>\">\n        <img src=\"/bundles/pimui/images/bulk/<%- operation.icon %>.svg\" class=\"AknSquareList-icon\">\n        <img src=\"/bundles/pimui/images/bulk/<%- operation.icon %>_selected.svg\" class=\"AknSquareList-icon AknSquareList-icon--selected\">\n        <div><%- operation.label %></div>\n    </div>\n<% }); %>\n"

/***/ }),

/***/ 34238:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/family/set-requirements.html ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"set-requirements\"></div>\n"

/***/ }),

/***/ 76189:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/form.html ***!
  \************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage AknFullPage--withBottom\">\n    <span class=\"AknButtonList-item AknFullPage-cancel wizard-action\" data-action-target=\"grid\"></span>\n    <% if (currentStep === 'choose') { %>\n        <span class=\"AknButton AknFullPage-ok AknButton--apply<% if (!currentOperation) { %> AknButton--disabled<% } %> wizard-action next\" data-action-target=\"configure\">\n            <%- nextLabel %>\n        </span>\n    <% } else if (currentStep === 'configure') { %>\n        <span class=\"<%- currentStep %> AknButton AknButton--apply AknFullPage-ok wizard-action next\" data-action-target=\"confirm\">\n            <%- nextLabel %>\n        </span>\n        <span class=\"<%- currentStep %> AknButton AknButton--grey AknFullPage-previous wizard-action\" data-action-target=\"choose\">\n            <%- previousLabel %>\n        </span>\n    <% } else if (currentStep === 'confirm') { %>\n        <span class=\"<%- currentStep %> AknButton AknButton--grey AknFullPage-previous wizard-action\" data-action-target=\"configure\">\n            <%- previousLabel %>\n        </span>\n    <% } %>\n\n    <% if (currentStep === 'choose') { %>\n    <div class=\"AknFullPage-content\">\n        <div class=\"AknFullPage-titleContainer\">\n            <div class=\"AknFullPage-subTitle\"><%- title %></div>\n            <div class=\"AknFullPage-title\"><%= labelCount %></div>\n        </div>\n        <div class=\"AknSquareList\">\n            <div class=\"step\"></div>\n        </div>\n    </div>\n    <% } else { %>\n    <div class=\"AknFullPage-content AknFullPage-content--withIllustration\">\n        <div>\n            <div class=\"AknFullPage-image AknFullPage-illustration AknFullPage-illustration--<%- illustrationClass %>\"></div>\n        </div>\n        <div>\n            <div class=\"AknFullPage-titleContainer\">\n                <div class=\"AknFullPage-subTitle\"><%- title %></div>\n                <div class=\"AknFullPage-title\"><%= labelCount %></div>\n                <% if (description) { %>\n                <div class=\"AknFullPage-description\">\n                    <%- description %>\n                </div>\n                <% } %>\n            </div>\n            <% if (currentStep === 'confirm') { %>\n            <div class=\"AknMessageBox AknMessageBox--warning AknMessageBox--withIcon AknMessageBox--bold\">\n                <%- confirm %>\n            </div>\n            <% } %>\n            <% if (currentStep === 'confirm') { %>\n            <div class=\"AknButtonList AknButtonList--single\">\n                <div class=\"AknButton AknButtonList-item AknButton--apply wizard-action\" data-action-target=\"validate\">\n                    <%- confirmLabel %>\n                </div>\n            </div>\n            <% } %>\n            <div class=\"step\"></div>\n        </div>\n    </div>\n    <% } %>\n\n    <div class=\"AknFullPage-bottom\">\n        <div class=\"AknSteps\">\n            <div class=\"AknSteps-step AknSteps-step--checked\">\n                <div class=\"AknSteps-stepCircle\"></div>\n                <%- selectActionLabel %>\n            </div>\n            <% if (currentStep === 'choose') { %>\n            <div class=\"AknSteps-step AknSteps-step--undefined\">\n                <div class=\"AknSteps-stepCircle\"></div>\n            </div>\n            <div class=\"AknSteps-step AknSteps-step--undefined\">\n                <div class=\"AknSteps-stepCircle\"></div>\n            </div>\n            <% } else { %>\n            <div class=\"AknSteps-step<% if (currentStepNumber >= 1) { %> AknSteps-step--checked<% } %>\">\n                <div class=\"AknSteps-stepCircle\"></div>\n                <%- label %>\n            </div>\n            <div class=\"AknSteps-step<% if (currentStepNumber >= 2) { %> AknSteps-step--checked<% } %>\">\n                <div class=\"AknSteps-stepCircle\"></div>\n                <%- confirmLabel %>\n            </div>\n            <% } %>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 87312:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/product/add-to-group.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--withPadding\" data-drop-zone=\"inputContainer\"></div>\n"

/***/ }),

/***/ 65579:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/product/associate/confirm.html ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknGrid--gallery AknColumnConfigurator-listContainer\">\n    <div class=\"AknGridContainer AknGridContainer--withCheckbox\">\n        <div class=\"AknGrid AknGrid--withCheckbox\">\n            <div class=\"AknGrid-body AknGrid-body--small basket-inner\">\n                <% if (!_.isEmpty(items)) { %>\n                <% _.each(items, function (item) { %>\n                <div class=\"AknGrid-bodyRow AknGrid-bodyRow--thumbnail AknGrid-bodyRow--withoutTopBorder\">\n                    <div class=\"AknGrid-fullImage AknGrid-fullImage--small\" style=\"background-image: url('<%- imagePathMethod(item) %>')\"></div>\n                    <div class=\"AknGrid-title\"><%- labelMethod(item) %></div>\n                    <div class=\"AknGrid-subTitle\"><%- item['identifier'] %></div>\n                </div>\n                <% }); %>\n                <% } else { %>\n                <div class=\"empty-basket\">\n                    <%- emptyLabel %>\n                </div>\n                <% } %>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 91610:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/product/associate/pick.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknDropdown AknButtonList-item association-type-selector\">\n    <a class=\"AknActionButton AknActionButton--important AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n        <span class=\"AknActionButton-highlight\"><%- i18n.getLabel(associationType.labels, locale, associationType.code) %></span>\n        <span class=\"AknActionButton-caret\"></span>\n    </a>\n    <ul class=\"associations-list AknDropdown-menu\">\n        <div class=\"AknDropdown-menuTitle\"><%- label %></div>\n        <% _.each(associationTypes, function (associationTypeSwitch) { %>\n            <li data-association-type=\"<%- associationTypeSwitch.code %>\">\n                <a class=\"AknDropdown-menuLink<% if (associationType === associationTypeSwitch) { %> AknDropdown-menuLink--active<% } %> label\">\n                    <%- i18n.getLabel(associationTypeSwitch.labels, locale, associationTypeSwitch.code) %>\n                </a>\n            </li>\n        <% }) %>\n    </ul>\n</div>\n\n<div class=\"AknButtonList AknButtonList--right\">\n    <div class=\"AknButton AknButton--action AknButtonList-item add-associations\">\n        <%- addAssociationsLabel %>\n    </div>\n</div>\n"

/***/ }),

/***/ 59472:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/product/category.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabbable\">\n    <div class=\"sidebar\">\n        <div class=\"AknHorizontalNavtab nav nav-tabs\">\n            <div class=\"AknButtonList catalog-switcher\">\n                <ul class=\"AknHorizontalNavtab-list nav nav-tabs\" id=\"trees-list\">\n                <% _.each(trees, function (tree) { %>\n                <li class=\"AknHorizontalNavtab-item tree-selector <% if (tree.code === currentTree.code) { %> active<% } %>\" data-tree=\"<%- tree.code %>\" data-tree-id=\"<%- tree.id %>\">\n                    <div class=\"AknHorizontalNavtab-link\" id=\"tree-link-<%- tree.id %>\">\n                        <span class=\"tree-label label\"><%- i18n.getLabel(tree.labels, locale, tree.code) %></span>\n                        <div class=\"AknAcl\">\n                            <i class=\"icon-ok <%- tree.associated ? 'green AknAcl-icon--granted' : 'gray' %>\"></i>\n                        </div>\n                    </div>\n                </li>\n                <% }) %>\n            </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"AknTabContainer-content tab-content\">\n        <div class=\"AknTabContainer-contentCache AknTabContainer-contentCache--hidden content-cache\"></div>\n        <div class=\"tab-pane active\">\n            <div id=\"trees\" data-datalocale=\"<%- locale %>\" data-selected-tree=\"<%- currentTree.id %>\">\n                <% _.each(trees, function (tree) { %>\n                    <div id=\"root-unselectable\" class=\"tree root-unselectable\" data-tree-id=\"<%- tree.id %>\">\n                        <div id=\"tree-<%- tree.id %>\" class=\"buffer-small-left\"></div>\n                    </div>\n                <% }); %>\n            </div>\n        </div>\n    </div>\n</div>\n<input type=\"hidden\" id=\"hidden-tree-input\" value=\"<%- JSON.stringify(selectedCategories) %>\">\n"

/***/ }),

/***/ 21898:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/product/change-family.html ***!
  \*****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--withPadding\">\n    <div class=\"AknFieldContainer\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label control-label AknFieldContainer-label required\" for=\"pim_enrich_mass_edit_choose_action_operation_change_family\">\n                <%- label %>\n            </label>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer field-input\">\n            <input id=\"pim_enrich_mass_edit_choose_action_operation_change_family\" type=\"hidden\" class=\"input-large family select-field\"\n                   value=\"<%- value !== null ? value : '' %>\"\n                   <%- readOnly ? 'readonly disabled' : '' %>\n                   <%- value ? ' selected' : '' %>\n                   data-placeholder=\"<%- _.__('pim_enrich.entity.product.module.change_family.empty_selection') %>\"\n            />\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 21993:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/product/change-status.html ***!
  \*****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--withPadding\">\n    <div class=\"AknFieldContainer\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label control-label AknFieldContainer-label required\" for=\"pim_enrich_mass_edit_choose_action_operation_enable\">\n                <%- labels.field %>\n            </label>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer field-input\">\n            <div class=\"switch switch-small\" data-on-label=\"<%- labels.on %>\" data-off-label=\"<%- labels.off %>\">\n                <input type=\"checkbox\" name=\"enabled\" id=\"pim_enrich_mass_edit_choose_action_operation_enable\" <%- value ? 'checked' : '' %> <%- readOnly ? 'readonly disabled' : '' %>/>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ 59544:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/product/edit-common-attributes.html ***!
  \**************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"edit-common-attributes\"></div>\n"

/***/ }),

/***/ 97494:
/*!********************************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/mass-edit/product/update-entity-with-family-variant-parent.html ***!
  \********************************************************************************************************/
/***/ ((module) => {

module.exports = "<div data-drop-zone=\"fields\" class=\"AknFormContainer\">\n</div>\n"

/***/ }),

/***/ 56268:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/templates/menu/help.html ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<a id=\"<%= id %>\" class=\"AknHeader-menuItem\" title=\"<%= helper %>\" href=\"<%= url %>\" target=\"_blank\">\n    <div>\n        <span class=\"AknHeader-menuItemImage AknHeader-menuItemImage--iconHelp\"></span>\n        <span class=\"AknHeader-menuItemImage AknHeader-menuItemImage--iconHelp\"></span>\n    </div>\n    <%- title %>\n</a>\n"

/***/ }),

/***/ 85407:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/templates/menu/item.html ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<a href=\"<%- url %>\" class=\"AknColumn-navigationLink<% if (active) { %> AknColumn-navigationLink--active<% } %> navigation-item\"><%- title %></a>\n"

/***/ }),

/***/ 13168:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/templates/menu/logo.html ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknHeader-menuItem\">\n    <img class=\"AknHeader-logoImage\" src=\"/bundles/pimui/images/logo.svg\" alt=\"Akeneo\">\n</div>\n"

/***/ }),

/***/ 22339:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/templates/menu/menu.html ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknHeader-menu\">\n    <div class=\"AknHeader-menuBlock\" data-drop-zone=\"mainMenu\"></div>\n    <div class=\"AknHeader-menuBlock AknHeader-menuBlock--space\"></div>\n    <div class=\"AknHeader-menuBlock\" data-drop-zone=\"helpMenu\"></div>\n</div>\n<div data-drop-zone=\"column\"></div>\n"

/***/ }),

/***/ 18045:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/menu/navigation-block.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-title\"><%- title %></div>\n"

/***/ }),

/***/ 35478:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/templates/menu/tab.html ***!
  \******************************************************/
/***/ ((module) => {

module.exports = "<a class=\"AknHeader-menuItem<% if (active) { %> AknHeader-menuItem--active <% } %>\" href=\"<%- url %>\">\n    <div>\n        <span class=\"AknHeader-menuItemImage AknHeader-menuItemImage--<%= iconModifier %>\"></span>\n        <span class=\"AknHeader-menuItemImage AknHeader-menuItemImage--<%= iconModifier %>\"></span>\n    </div>\n    <%- title %>\n</a>\n"

/***/ }),

/***/ 51348:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/menu/user-navigation.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<% if (freeTrialEnabled) { %>\n    <div id=\"appcues-launchpad-btn\" style=\"margin-right: 10px;\"></div>\n    <div id=\"invite-user-btn\"></div>\n<% } %>\n\n<div class=\"AknDropdown\">\n    <div class=\"AknTitleContainer-userIcon\"\n        data-toggle=\"dropdown\"\n        title=\"<%- firstName %> <%- lastName %>\"\n        style=\"background-image:url('<%- !_.isEmpty(avatar) ? avatar : 'bundles/pimui/images/info-user.png' %>')\"\n    ></div>\n    <div class=\"AknDropdown-menu AknDropdown-menu--right\">\n        <div class=\"AknDropdown-menuTitle\"><%- firstName %> <%- lastName %></div>\n        <div class=\"AknDropdown-menuLink user-account\"><%- userAccountLabel %></div>\n        <div class=\"AknDropdown-menuLink logout\"><%- logoutLabel %></div>\n    </div>\n</div>\n\n<% if (!freeTrialEnabled) { %>\n    <div class=\"AknCommunicationChannelMenu communication-channel\"></div>\n<% } %>\n\n<div class=\"AknNotificationMenu AknDropdown dropdown notification\"></div>\n"

/***/ }),

/***/ 28360:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/comments.html ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknCommentPanel comment-threads\">\n    <ol>\n        <li class=\"comment-create\">\n            <form>\n                <textarea class=\"AknTextareaField AknTextareaField--small new-comment-value\" placeholder=\"<%- _.__('pim_enrich.entity.product.module.comment.post') %>\"></textarea>\n                <span class=\"AknButtonList AknButtonList--hide AknButtonList--right comment-buttons\">\n                    <input class=\"AknButtonList-item AknButton AknButton--small AknButton--important cancel-comment\" type=\"reset\" value=\"<%- _.__('pim_common.cancel') %>\">\n                    <button class=\"AknButtonList-item AknButton AknButton--small AknButton--apply send-comment\"><%- _.__('pim_enrich.entity.product.module.comment.post') %></button>\n                </span>\n            </form>\n        </li>\n        <% if (comments.length) { %>\n            <% _.each(comments, function(comment) { %>\n                <li>\n                    <ol class=\"AknCommentPanel-thread comment-thread\" data-comment-id=\"<%- comment.id %>\">\n                        <li class=\"AknCommentPanel-item comment-topic\">\n                            <div class=\"AknCommentPanel-header\">\n                                <img class=\"AknCommentPanel-avatar\" src=\"/<%- !_.isEmpty(comment.author.avatar) ? comment.author.avatar : 'bundles/pimui/images/info-user.png' %>\" alt=\"<%- !_.isNull(comment.author.username) ? comment.author.username : removedAuthor %>\"/>\n                                <span class=\"AknCommentPanel-title\">\n                                    <%= __('pim_enrich.entity.product.module.comment.header_comment', { user: '<span class=\"AknCommentPanel-author author\">' + (!_.isNull(comment.author.fullName) ? comment.author.fullName : removedAuthor) + '</span>' }) %>\n                                    <% if (comment.author.username === username) { %>\n                                        <span class=\"AknCommentPanel-icon AknIconButton remove-comment\" title=\"Delete\" data-comment-id=\"<%- comment.id %>\">\n                                            <i class=\"icon-trash\"></i>\n                                        </span>\n                                    <% } %>\n                                </span>\n                                <span class=\"AknCommentPanel-date date\"><%- comment.created %></span>\n                            </div>\n                            <div class=\"AknCommentPanel-message\">\n                                <span class=\"message\"><%- comment.body %></span>\n                                <div class=\"AknCommentPanel-replyContainer reply-to-comment\">\n                                    <textarea class=\"AknTextareaField AknTextareaField--small\" name=\"body\" required=\"required\" placeholder=\"<%- _.__('pim_enrich.entity.product.module.comment.reply') %>\"></textarea>\n                                    <span class=\"AknButtonList AknButtonList--hide AknButtonList--right comment-buttons\">\n                                       <button class=\"AknButtonList-item AknButton AknButton--important AknButton--small cancel-comment\" type=\"reset\"><%- _.__('pim_common.cancel') %></button>\n                                       <button class=\"AknButtonList-item AknButton AknButton--apply AknButton--small send-comment\"><%- _.__('pim_enrich.entity.product.module.comment.reply') %></button>\n                                    </span>\n                                </div>\n                            </div>\n                        </li>\n                        <% _.each(comment.replies, function(reply) { %>\n                            <li class=\"AknCommentPanel-item AknCommentPanel-item--reply comment-reply\">\n                                <div class=\"AknCommentPanel-header\">\n                                    <img class=\"AknCommentPanel-avatar\" src=\"/<%- !_.isEmpty(reply.author.avatar) ? reply.author.avatar : 'bundles/pimui/images/info-user.png' %>\" alt=\"<%- (!_.isNull(reply.author.username) ? reply.author.username : removedAuthor) %>\"/>\n                                    <span class=\"AknCommentPanel-title\">\n                                        <%= __('pim_enrich.entity.product.module.comment.header_reply', { user: '<span class=\"AknCommentPanel-author author\">' + (!_.isNull(reply.author.fullName) ? reply.author.fullName : removedAuthor) + '</span>' }) %>\n                                        <% if (reply.author.username === username) { %>\n                                            <span class=\"AknCommentPanel-icon AknIconButton remove-comment\" title=\"Delete\" data-comment-id=\"<%- reply.id %>\">\n                                                <i class=\"icon-trash\"></i>\n                                            </span>\n                                        <% } %>\n                                    </span>\n                                    <span class=\"AknCommentPanel-date date\"><%- reply.created %></span>\n                                </div>\n                                <div class=\"AknCommentPanel-message message\"><%- reply.body %></div>\n                            </li>\n                        <% }); %>\n                    </ol>\n                </li>\n            <% }); %>\n        <% } else { %>\n            <li class=\"no-data AknCommentPanel-thread AknMessageBox AknMessageBox--centered\">\n                <p><%- emptyLabel %></p>\n            </li>\n        <% } %>\n    </ol>\n</div>\n"

/***/ }),

/***/ 6689:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/completeness.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<% if (!hasFamily) { %>\n    <p><%- noFamilyLabel %></p>\n<% } else if (_.isEmpty(completenesses) || hasFamilyChanged) { %>\n    <p><%- noCompletenessLabel %></p>\n<% } else { %>\n    <% _.each(completenesses, function(channel) { %>\n        <% var ratio = channel['stats']['average']; %>\n        <div class=\"AknCompletenessPanel-block completeness-block\">\n            <header class=\"AknCompletenessPanel-header\">\n                <span class=\"AknCompletenessPanel-headerLocale channel\" data-channel=\"<%- channel.channel %>\">\n                    <%- (null !== channel.labels[catalogLocale]) ? channel.labels[catalogLocale] : ('[' + channel.channel + ']') %>\n                </span>\n                <span class=\"AknCompletenessPanel-headerStats stats\">\n                    <%- ratio %>%\n                </span>\n            </header>\n            <div class=\"AknCompletenessPanel-content content\">\n                <% _.each(channel['locales'], function(localeCompleteness) { %>\n                    <% if (localeCompleteness.completeness) { %>\n                        <div class=\"AknCompletenessPanel-channel\">\n                            <div class=\"AknCompletenessPanel-progressContainer\">\n                                <span class=\"AknCompletenessPanel-channelTitle locale\" data-locale=\"<%- localeCompleteness.completeness.locale %>\">\n                                    <%- localeCompleteness.label %>\n                                </span>\n                                <span class=\"AknCompletenessPanel-progressRatio literal-progress\"><%- localeCompleteness.completeness.ratio %>%</span>\n                            </div>\n                            <div class=\"AknCompletenessPanel-progress AknProgress AknProgress--micro progress <%- localeCompleteness.completeness.ratio === 100 ? 'AknProgress--apply' : 'AknProgress--warning' %>\">\n                                <div class=\"AknProgress-bar bar\" data-ratio=\"<%- localeCompleteness.completeness.ratio %>\" style=\"width: <%- localeCompleteness.completeness.ratio %>%;\"></div>\n                            </div>\n                            <% if (localeCompleteness.completeness.missing > 0) { %>\n                                <div class=\"AknCompletenessPanel-missing missing\">\n                                    <%- __(missingValuesKey, {count: localeCompleteness.completeness.missing}, localeCompleteness.completeness.missing) %>\n                                </div>\n                            <% } %>\n                        </div>\n                    <% }%>\n                <% }); %>\n            </div>\n        </div>\n    <% }); %>\n<% } %>\n"

/***/ }),

/***/ 93066:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/create-button.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<a title=\"Create product and product models\" class=\"AknButton AknButton--apply AknButtonList-item create-product-button\"> <%- buttonTitle %> </a>\n"

/***/ }),

/***/ 83377:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/create-error.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"control-group\" data-code=\"identifier\">\n    <div class=\"validation-errors\">\n        <span>\n            <span class=\"error-message\"><%- message %></span>\n        </span>\n    </div>\n</div>\n"

/***/ }),

/***/ 19218:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/create-helper.html ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknMessageBox AknMessageBox--inline AknMessageBox--withIcon\"><%= __('pim_enrich.entity.product.module.create.helper', {link}) %></div>\n"

/***/ }),

/***/ 14702:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/create-modal-content.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknSquareList AknSquareList--centered\">\n<% _.each(choices, function(choice, key) { %>\n    <div class=\"AknSquareList-item product-choice\" title=\"<%- choice.title %>\" data-form=\"<%- choice.form %>\">\n        <img src=\"/bundles/pimui/images/<%- choice.icon %>.svg\" class=\"AknSquareList-icon\">\n        <img src=\"/bundles/pimui/images/<%- choice.icon %>.svg\" class=\"AknSquareList-icon AknSquareList-icon--selected\">\n        <div><%- choice.title %></div>\n    </div>\n<% }); %>\n</div>\n"

/***/ }),

/***/ 55697:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/download-pdf.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<%- _.__('pim_enrich.entity.product.module.download_pdf.label') %>\n"

/***/ }),

/***/ 33915:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/date.html ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"datetimepicker AknFieldContainer-subContainer\">\n    <% if (attribute.localizable) { %>\n        <div class=\"AknTextField-layer AknTextField-layer--first\"></div>\n        <div class=\"AknTextField-layer AknTextField-layer--second\"></div>\n    <% } %>\n    <input id=\"<%- fieldId %>\" class=\"AknTextField<% if (attribute.localizable) { %> AknTextField--localizable <% } %> datepicker-field add-on\" type=\"text\" data-locale=\"<%- locale %>\" data-scope=\"<%- scope %>\" value=\"<%- value ? value.data : null %>\" <%- editMode === 'view' ? 'disabled' : '' %>/>\n</div>\n"

/***/ }),

/***/ 4241:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/field-guidelines.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"from-smart AknFieldContainer-footerGuidelines\"><%- guidelines %></div>\n"

/***/ }),

/***/ 43588:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/field.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"<%- type %> AknComparableFields-item AknFieldContainer original-field <%- editMode %>\">\n    <div class=\"AknFieldContainer-header\">\n        <label class=\"AknFieldContainer-label\" for=\"<%- fieldId %>\">\n            <span class=\"AknFieldContainer-labelAnnotation badge-elements-container\"></span>\n            <%- label %>\n            <span class=\"AknFieldContainer-labelAnnotation label-elements-container\"></span>\n        </label>\n        <span class=\"AknFieldContainer-fieldInfo field-info\">\n            <% if (locale || scope) { %>\n                <span class=\"field-context\">\n                    <% if (scope) { %> <span class=\"field-scope\"><%- context.scopeLabel %></span> <% } %>\n                    <% if (locale) { %> <span><%= i18n.getFlag(locale) %></span> <% } %>\n                </span>\n            <% } %>\n        </span>\n        <% if (context.optional && context.removable && 'edit' === editMode) { %>\n            <i class=\"AknIconButton AknIconButton--small icon-remove remove-attribute\" data-attribute=\"<%- attribute.code %>\" data-toggle=\"tooltip\" title=\"<%- _.__('pim_enrich.entity.product.module.attribute.remove_optional') %>\"></i>\n        <% } %>\n    </div>\n    <div class=\"AknFieldContainer-inputContainer field-input\">\n    </div>\n    <footer>\n        <div class=\"AknFieldContainer-footer footer-elements-container\"/>\n    </footer>\n</div>\n<div class=\"AknComparableFields-item AknComparableFields-item--comparisonContainer AknFieldContainer comparison-elements-container\"></div>\n"

/***/ }),

/***/ 90196:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/media.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknMediaField <%- value && value.data && value.data.filePath ? 'has-file' : '' %>\" >\n    <% if (!value || !value.data || value.data.filePath === null) { %>\n        <input class=\"AknMediaField-fileUploaderInput\" id=\"<%- fieldId %>\" type=\"file\" data-locale=\"<%- locale %>\" data-scope=\"<%- scope %>\" <%- editMode === 'view' ? 'disabled' : '' %>/>\n        <div class=\"AknMediaField-emptyContainer\">\n            <span title=\"upload icon\" class=\"AknMediaField-uploadIcon\"></span>\n            <span><%- _.__('pim_common.media_upload')%></span>\n        </div>\n    <% } else { %>\n        <div class=\"AknMediaField-preview preview\">\n            <% mediaThumbnailUrl = mediaUrlGenerator.getMediaShowUrl(value.data.filePath, 'thumbnail_small') %>\n            <% mediaPreviewUrl   = mediaUrlGenerator.getMediaShowUrl(value.data.filePath, 'preview') %>\n            <% mediaDownloadUrl  = mediaUrlGenerator.getMediaDownloadUrl(value.data.filePath) %>\n            <% if ('pim_catalog_image' === attribute.type && null != mediaThumbnailUrl) { %>\n                <div class=\"AknMediaField-thumb file\"><img src=\"<%- mediaThumbnailUrl %>\" class=\"AknMediaField-image\"/></div>\n            <% } else { %>\n                <div class=\"AknMediaField-thumb file\">\n                    <span title=\"upload icon\" class=\"AknMediaField-uploadIcon\"></span>\n                </div>\n            <% } %>\n            <div class=\"AknMediaField-info info\">\n                <div class=\"filename\" title=\"<%- value.data.originalFilename %>\"><%- value.data.originalFilename %></div>\n                <div class=\"AknButtonList AknButtonList--centered actions\">\n                    <% if ('pim_catalog_image' === attribute.type && null != mediaPreviewUrl) { %>\n                        <span class=\"AknButtonList-item AknIconButton AknIconButton--grey open-media\"><i class=\"icon icon-eye-open\"></i></span>\n                    <% } %>\n                    <a href=\"<%- mediaDownloadUrl %>\" class=\"AknButtonList-item AknIconButton AknIconButton--grey download-file\" download><i class=\"icon icon-cloud-download\"></i></a>\n                    <span class=\"AknButtonList-item AknIconButton AknIconButton--grey clear-field <%- editMode === 'view' ? 'AknIconButton--hide' : '' %>\"><i class=\"icon icon-trash\"></i></span>\n                </div>\n            </div>\n        </div>\n    <% } %>\n    <div class=\"AknMediaField-progress AknProgress AknProgress--micro progress\">\n        <div class=\"AknProgress-bar bar\"></div>\n    </div>\n</div>\n"

/***/ }),

/***/ 25676:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/metric.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknMetricField metric-container<% if (attribute.localizable) { %> AknMetricField--localizable<% } %>\">\n    <% if (attribute.localizable) { %>\n        <div class=\"AknTextField-layer AknTextField-layer--first\"></div>\n        <div class=\"AknTextField-layer AknTextField-layer--second\"></div>\n    <% } %>\n    <input class=\"AknTextField AknTextField--noRightRadius data\" id=\"<%- fieldId %>\" type=\"text\" data-locale=\"<%- locale %>\" data-scope=\"<%- scope %>\" value=\"<%- value ? value.data.amount : null %>\" <%- editMode === 'view' ? 'disabled' : '' %>/>\n    <select class=\"AknMetricField-unit unit select-field\" data-locale=\"<%- value ? value.locale : null %>\" data-scope=\"<%- value ? value.scope : null %>\" <%- editMode === 'view' ? 'disabled' : '' %>>\n        <% _.each(units, function(unit) { %>\n            <option value=\"<%- unit.code %>\"<% if (undefined !== value && ((null === value.data.unit && unit.code === attribute.empty_value.unit) || value.data.unit === unit.code)) { %> selected<% } %>>\n                <%- i18n.getLabel(unit.labels, uiLocale, unit.code) %>\n            </option>\n        <% }); %>\n    </select>\n</div>\n"

/***/ }),

/***/ 38638:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/multi-select.html ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-subContainer AknFieldContainer-subContainer-multiSelect\">\n    <% if (attribute.localizable) { %>\n        <div class=\"AknTextField-layer AknTextField-layer--first\"></div>\n        <div class=\"AknTextField-layer AknTextField-layer--second\"></div>\n    <% } %>\n    <input\n        id=\"<%- fieldId %>\"\n        type=\"hidden\"\n        class=\"select-field<% if (attribute.localizable) { %> AknTextField--localizable<% } %>\"\n        value=\"<%- value ? value.data.join(',') : null %>\"\n        data-locale=\"<%- locale %>\"\n        data-scope=\"<%- scope %>\"\n        <%- editMode === 'view' ? 'disabled' : '' %>\n    />\n</div>\n<% if (userCanAddOption) { %>\n    <div class=\"AknFieldContainer-iconsContainer\">\n        <span class=\"AknIconButton AknIconButton--plus add-attribute-option\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"<%- _.__('pim_enrich.entity.product.module.attribute.add_option') %>\"></span>\n    </div>\n<% } %>\n"

/***/ }),

/***/ 39341:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/number.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<% if (attribute.localizable) { %>\n    <div class=\"AknTextField-layer AknTextField-layer--first\"></div>\n    <div class=\"AknTextField-layer AknTextField-layer--second\"></div>\n<% } %>\n<input\n    id=\"<%- fieldId %>\"\n    class=\"AknTextField<% if (attribute.localizable) { %> AknTextField--localizable <% } %>\"\n    type=\"text\"\n    data-locale=\"<%- locale %>\"\n    data-scope=\"<%- scope %>\"\n    value=\"<%- value ? value.data : null %>\"\n    <%- editMode === 'view' ? 'disabled' : '' %>\n/>\n"

/***/ }),

/***/ 76877:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/price-collection.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknPriceList<% if (attribute.localizable) { %> AknPriceList--localizable<% } %>\">\n    <% if (!value || !value.data) { %>\n        <% _.each(currencies, function (currency) { %>\n            <div class=\"AknPriceList-item price-input\">\n                <% if (attribute.localizable) { %>\n                    <div class=\"AknTextField-layer AknTextField-layer--first\"></div>\n                    <div class=\"AknTextField-layer AknTextField-layer--second\"></div>\n                <% } %>\n                <input class=\"AknTextField AknTextField--noRightRadius\" type=\"text\" data-locale=\"<%- locale %>\" data-scope=\"<%- scope %>\" data-currency=\"<%- currency.code %>\" value=\"\" <%- editMode === 'view' ? 'disabled' : '' %> size=\"1\">\n                <span class=\"AknPriceList-currency\"><%- currency.code %></span>\n            </div>\n        <% }) %>\n    <% } else { %>\n        <% _.each(value.data, function (price) { %>\n            <div class=\"AknPriceList-item price-input\">\n                <% if (attribute.localizable) { %>\n                    <div class=\"AknTextField-layer AknTextField-layer--first\"></div>\n                    <div class=\"AknTextField-layer AknTextField-layer--second\"></div>\n                <% } %>\n                <input class=\"AknTextField AknTextField--noRightRadius\" type=\"text\" data-locale=\"<%- locale %>\" data-scope=\"<%- scope %>\" data-currency=\"<%- price.currency %>\" value=\"<%- price.amount %>\" <%- editMode === 'view' ? 'disabled' : '' %> size=\"1\">\n                <span class=\"AknPriceList-currency\"><%- price.currency %></span>\n            </div>\n        <% }) %>\n    <% } %>\n</div>\n"

/***/ }),

/***/ 95411:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/simple-select.html ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFieldContainer-subContainer AknFieldContainer-subContainer-simpleSelect\">\n    <% if (attribute.localizable) { %>\n        <div class=\"AknTextField-layer AknTextField-layer--first\"></div>\n        <div class=\"AknTextField-layer AknTextField-layer--second\"></div>\n    <% } %>\n    <input\n        id=\"<%- fieldId %>\"\n        type=\"hidden\"\n        class=\"select-field<% if (attribute.localizable) { %> AknTextField--localizable<% } %>\"\n        value=\"<%- value ? value.data : null %>\"\n        data-min-input-length=\"0\"\n        data-locale=\"<%- locale %>\"\n        data-scope=\"<%- scope %>\"\n        <%- editMode === 'view' ? 'disabled' : '' %>\n    />\n</div>\n<% if (userCanAddOption) { %>\n    <div class=\"AknFieldContainer-iconsContainer\">\n        <span class=\"AknIconButton AknIconButton--plus add-attribute-option\" data-toggle=\"tooltip\" data-placement=\"top\" data-original-title=\"<%- _.__('pim_enrich.entity.product.module.attribute.add_option') %>\"></span>\n    </div>\n<% } %>\n"

/***/ }),

/***/ 52633:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/text.html ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = "<% if (attribute.localizable) { %>\n    <div class=\"AknTextField-layer AknTextField-layer--first\"></div>\n    <div class=\"AknTextField-layer AknTextField-layer--second\"></div>\n<% } %>\n<input\n    id=\"<%- fieldId %>\"\n    class=\"AknTextField<% if (attribute.localizable) { %> AknTextField--localizable <% } %> <%- context.isRequired ? 'AknTextField--required' : '' %>\"\n    type=\"text\"\n    data-locale=\"<%- locale %>\"\n    data-scope=\"<%- scope %>\"\n    value=\"<%- value ? value.data : null %>\"\n    title=\"<%- value ? value.data : null %>\"\n    <%- editMode === 'view' ? 'disabled' : '' %>\n/>\n"

/***/ }),

/***/ 59571:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/field/textarea.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<% if (attribute.localizable) { %>\n    <div class=\"AknTextareaField-layer AknTextareaField-layer--first\"></div>\n    <div class=\"AknTextareaField-layer AknTextareaField-layer--second\"></div>\n<% } %>\n<textarea\n    id=\"<%- fieldId %>\"\n    class=\"AknTextareaField<% if (attribute.localizable) { %> AknTextareaField--localizable <% } %>\"\n    data-locale=\"<%- locale %>\"\n    data-scope=\"<%- scope %>\"\n    <%- editMode === 'view' ? 'disabled' : '' %>\n>\n<%- value ? value.data: null %></textarea>\n"

/***/ }),

/***/ 3675:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/form/add-select/attribute/line.html ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"select2-result-label-attribute\">\n    <div>\n        <input data-code=\"<%- item.id %>\" type=\"checkbox\" <%- checked ? 'checked=\"checked\"' : '' %> />\n        <span class=\"attribute-label\"><%- item.text %></span>\n    </div>\n    <span class=\"group-label\"><%- item.group.text %></span>\n</div>\n"

/***/ }),

/***/ 89164:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/form/mass-edit/attributes.html ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tab-content\">\n    <header data-drop-zone=\"header\" class=\"AknAttributeActions tab-header attribute-actions\">\n        <div data-drop-zone=\"edit-actions\" class=\"AknAttributeActions-editActions attribute-edit-actions\">\n            <div data-drop-zone=\"context-selectors\" class=\"AknButtonList AknAttributeActions-contextSelectors context-selectors\"></div>\n            <div data-drop-zone=\"other-actions\" class=\"AknAttributeActions-otherActions AknButtonList AknButtonList--vertical other-actions\"></div>\n        </div>\n    </header>\n    <div class=\"tab-pane active object-values\"></div>\n</div>\n"

/***/ }),

/***/ 86100:
/*!********************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/form/total-missing-required-attributes.html ***!
  \********************************************************************************************/
/***/ ((module) => {

module.exports = "<span class=\"required-attribute-indicator\">\n    <span class=\"AknSubsection-comment AknSubsection-comment--clickable\">\n        <span class=\"AknBadge AknBadge--small AknBadge--highlight\"></span>\n        <%- __('pim_enrich.entity.product.module.attribute.to_fill_count', {count: missingRequiredAttributesCount}, missingRequiredAttributesCount) %>\n    </span>\n</span>\n"

/***/ }),

/***/ 29127:
/*!**********************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/form/variant-navigation/add-child-button.html ***!
  \**********************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"select2-drop-footer\">\n    <button class=\"AknButton AknButton--apply add-child\"><%- label %></button>\n</div>\n"

/***/ }),

/***/ 42255:
/*!****************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/form/variant-navigation/navigation.html ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknVariantNavigation\">\n    <% for (let level in navigation) { %>\n\n    <span class=\"AknVariantNavigation-item <% if (navigation[level].selected && navigation[level].selected.id === entity.meta.id) { %>AknVariantNavigation-item--highlight<% } %>\">\n        <% if (level > 0) { %>\n            <span class=\"AknVariantNavigation-itemLabel\" data-action=\"navigateToLevel\" data-level=\"<%- level %>\">\n                <span class=\"AknVariantNavigation-axisName <%- navigation[level].selected ? 'AknVariantNavigation-axisName--selected' : '' %>\" data-level=\"<%- level %>\" title=\"<%- navigation[level].axes[currentLocale] %>\"><%- navigation[level].axes[currentLocale] %></span>\n\n                <% if (navigation[level].selected) { %>\n                    <span class=\"AknVariantNavigation-axisValue\" data-level=\"<%- level %>\" title=\"<%- navigation[level].selected.axes_values_labels[currentLocale] %>\">\n                        <%- navigation[level].selected.axes_values_labels[currentLocale] %>\n                    </span>\n                <% } %>\n            </span>\n\n            <% if (navigation[level - 1].selected) { %>\n                <input type=\"hidden\" class=\"variant-navigation select-field\" value=\"0\" data-level=\"<%- level %>\">\n            <% } %>\n        <% } else { %>\n            <span class=\"AknVariantNavigation-axisName AknVariantNavigation-axisValue AknVariantNavigation-itemLabel\" data-action=\"navigateToLevel\" data-level=\"<%- level %>\"><%- commonLabel %></span>\n        <% } %>\n\n    </span>\n\n    <% } %>\n</div>\n"

/***/ }),

/***/ 4906:
/*!******************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/form/variant-navigation/product-item.html ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknVariantNavigation-listItem\">\n    <img class=\"AknVariantNavigation-listProductImage\" src=\"<%- entity.image %>\" alt=\"\">\n    <span title=\"<%- entity.label %>\" class=\"AknVariantNavigation-listProductLabel\">\n        <%- entity.label %>\n    </span>\n    <span class=\"AknBadge AknBadge--<%- getClass(entity.completeness.ratio) %>\">\n        <%- entity.completeness.ratio %>%\n    </span>\n</div>\n"

/***/ }),

/***/ 86665:
/*!************************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/form/variant-navigation/product-model-item.html ***!
  \************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknVariantNavigation-listItem\">\n    <img class=\"AknVariantNavigation-listProductModelImage\" src=\"<%- entity.image %>\" alt=\"\">\n    <span title=\"<%- entity.label %>\" class=\"AknVariantNavigation-listProductModelLabel\">\n        <%- entity.label %>\n    </span>\n    <% if (entity.completeness) { %>\n        <span class=\"AknBadge AknBadge--<%- getClass(entity.completeness.ratio) %>\">\n            <%- entity.completeness.display %>\n        </span>\n    <% } %>\n</div>\n"

/***/ }),

/***/ 49569:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/grid/category-switcher.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-subtitle\"><%- label %></div>\n<div class=\"AknColumn-value<% if (isOpen) { %> AknColumn-value--highlited<% } %>\">\n    <%- treeLabel %><% if ('' !== categoryLabel) { %> - <%- categoryLabel %><% } %>\n</div>\n"

/***/ }),

/***/ 99840:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/grid/category-tree-done.html ***!
  \*****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknButton AknButton--apply\"><%- label %></div>\n"

/***/ }),

/***/ 23492:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/grid/column-inner.html ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-part AknColumn-part--small\" data-drop-zone=\"view-selector\"></div>\n<div class=\"AknColumn-part\" data-drop-zone=\"column-context-switcher\"></div>\n<div class=\"AknColumn-part AknColumn-part--filter\" data-drop-zone=\"manage-filters-button\"></div>\n<div data-drop-zone=\"filters\"></div>\n"

/***/ }),

/***/ 43646:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/grid/locale-switcher.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<div data-toggle=\"dropdown\">\n    <div class=\"AknColumn-subtitle\"><%- localeLabel %></div>\n    <div class=\"AknColumn-value value\"><%= i18n.getFlag(currentLocale.code, false) %>&nbsp;<%- getDisplayName(currentLocale) %></div>\n</div>\n<div class=\"AknDropdown-menu\">\n    <div class=\"AknDropdown-menuTitle\"><%- localeLabel %></div>\n    <% _.each(locales, (locale) => { %>\n    <div class=\"AknDropdown-menuLink<% if (currentLocale.code === locale.code) { %> AknDropdown-menuLink--active<% } %>\" data-locale=\"<%- locale.code %>\">\n        <span class=\"label\"><%= i18n.getFlag(locale.code, false) %> <%- getDisplayName(locale) %></span>\n    </div>\n    <% }) %>\n</div>\n"

/***/ }),

/***/ 43830:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/history.html ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"history-block\">\n    <table class=\"AknGrid expanded\">\n        <thead>\n            <tr>\n                <th class=\"AknGrid-headerCell\"></th>\n                <th class=\"AknGrid-headerCell version\"><%- _.__('pim_enrich.entity.product.module.history.version') %></th>\n                <th class=\"AknGrid-headerCell author\"><%- _.__('pim_enrich.entity.product.module.history.author') %></th>\n                <th class=\"AknGrid-headerCell loggedAt\"><%- _.__('pim_enrich.entity.product.module.history.logged_at') %></th>\n                <th class=\"AknGrid-headerCell changes\"><%- _.__('pim_enrich.entity.product.module.history.modified') %></th>\n                <% if (hasAction) { %><th class=\"AknGrid-headerCell actions\"><%- _.__('pim_common.actions') %></th><% } %>\n            </tr>\n        </thead>\n        <tbody>\n            <% _.each(versions, function(version) { %>\n                <tr data-version=\"<%- version.version %>\" data-version-id=\"<%- version.id %>\" class=\"AknGrid-bodyRow entity-version <%- expandedVersions.find(item => item == version.version) ? 'AknGrid-bodyRow--expanded' : '' %>\">\n                    <td class=\"AknGrid-bodyCell AknGrid-bodyCell--clickable\">\n                        <div class=\"version-expander AknGrid-expand <%- expandedVersions.find(item => item == version.version) ? 'AknGrid-expand--expanded' : '' %>\"></div>\n                    </td>\n                    <td class=\"AknGrid-bodyCell version\" data-column=\"version\"><span class=\"AknButton AknButton--grey AknButton--round\"><%- version.version %></span></td>\n                    <td class=\"AknGrid-bodyCell AknGridHistory-bodyCell--highlight author\" data-column=\"author\"><%- version.author %><%- version.context ? ' (' + version.context + ')' : '' %></td>\n                    <td class=\"AknGrid-bodyCell AknGrid-bodyCell--noWrap loggedAt\" data-column=\"loggedAt\"><%- version.logged_at %></td>\n                    <td class=\"AknGrid-bodyCell AknGridHistory-bodyCell--changes changes\" data-column=\"changes\"><div class=\"AknGrid-multiline\" title=\"<%- _.keys(version.changeset).join(', ') %>\"><%- _.keys(version.changeset).join(', ') %></div></td>\n                    <% if (hasAction) { %><td class=\"AknGrid-bodyCell AknButtonList AknButtonList--wrap actions\"></td><% } %>\n                </tr>\n                <tr data-version=\"<%- version.version %>\" class=\"AknGrid-bodyRow AknGrid-bodyRow--withoutTopBorder changeset <%- expandedVersions.find(item => item == version.version) ? '' : 'hide' %>\">\n                    <td class=\"AknGrid-bodyCell\"></td>\n                    <td class=\"AknGrid-bodyCell\"></td>\n                    <td class=\"AknGrid-bodyCell\" colspan=\"<%- hasAction ? '4' : '3' %>\">\n                        <table class=\"AknGrid table-history-details\">\n                            <tbody>\n                                <% _.each(version.changeset, function(value) { %>\n                                    <tr class=\"AknGrid-bodyRow\">\n                                        <td class=\"AknGrid-bodyCell AknGrid-bodyCell--highlightAlternative AknGrid-bodyCell--withoutBottomBorder property\" colspan=\"2\"><%= value.label %></td>\n                                    </tr>\n                                    <tr class=\"AknGrid-bodyRow AknGrid-bodyRow--wordBreakable\">\n                                        <td class=\"AknGrid-bodyCell AknGrid-bodyCell--withoutTopBorder\"><span class=\"AknDiff--remove\"><%- _.__('pim_enrich.entity.product.module.history.old_value') %>:</span> <span class=\"old-values\"><%- value.old %></span></td>\n                                        <td class=\"AknGrid-bodyCell AknGrid-bodyCell--withoutTopBorder\"><span class=\"AknDiff--add\"><%- _.__('pim_enrich.entity.product.module.history.new_value') %>:</span> <span class=\"new-values\"><%- value.new %></span></td>\n                                    </tr>\n                                <% }); %>\n                            </tbody>\n                        </table>\n                    </td>\n                </tr>\n            <% }); %>\n        </tbody>\n    </table>\n</div>\n"

/***/ }),

/***/ 14151:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/templates/product/index.html ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = "<div id=\"product-grid\" data-drop-zone=\"grid\">\n    <div class=\"AknFilterBox\" data-drop-zone=\"filters\"></div>\n    <div class=\"AknGridToolbar\" data-drop-zone=\"toolbar\"></div>\n    <div id=\"grid-<%- gridName %>\" data-type=\"datagrid\"></div>\n    <div class=\"AknGridToolbarBottom\" data-drop-zone=\"bottom-toolbar\"></div>\n</div>\n"

/***/ }),

/***/ 32965:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/locale-switcher.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<a class=\"AknActionButton <% if (displayInline) { %> AknActionButton--big AknActionButton--noLeftBorder<% } else { %>AknActionButton--withoutBorder<% } %>\" data-toggle=\"dropdown\">\n    <% if (!displayInline && displayLabel) { %><%- label %>: <% } %>\n    <span class=\"AknActionButton-highlight\"><%= i18n.getFlag(currentLocale.code, false) %> <%- currentLocale.language %></span>\n    <span class=\"AknActionButton-caret\"></span>\n</a>\n<ul class=\"AknDropdown-menu\">\n    <div class=\"AknDropdown-menuTitle\"><%- label %></div>\n    <% _.each(locales, function (locale) { %>\n        <li>\n            <span class=\"AknDropdown-menuLink<% if (currentLocale.code === locale.code) { %> AknDropdown-menuLink--active<% } %>\" data-locale=\"<%- locale.code %>\"><%= i18n.getFlag(locale.code, false) %> <%- locale.language %></span>\n        </li>\n    <% }); %>\n</ul>\n"

/***/ }),

/***/ 21063:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/change-family-modal.html ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer\">\n    <form class=\"AknFieldContainer form-horizontal\">\n        <div class=\"AknFieldContainer-header\">\n            <label class=\"AknFieldContainer-label control-label\"><%- _.__('pim_enrich.entity.product.module.change_family.change_family_to')%>&nbsp;:</label>\n        </div>\n        <div class=\"AknFieldContainer-inputContainer\">\n            <input type=\"hidden\" class=\"input-large family-select2 select-field\"\n                   value=\"<%- product.family !== null ? product.family.code : '' %>\"\n                   <%- product.family ? ' selected' : '' %>\n                   data-placeholder=\"<%- _.__('pim_enrich.entity.product.module.change_family.empty_selection') %>\"\n            />\n        </div>\n    </form>\n</div>\n"

/***/ }),

/***/ 27626:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/created.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-subtitle\"><%- label %></div>\n<div class=\"AknColumn-value\"><%- loggedAt %> <%- labelBy %> <%- author %></div>\n"

/***/ }),

/***/ 28699:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/family-variant.html ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-subtitle\"><%- title %></div>\n<div class=\"AknColumn-value product-family\"><%- familyVariantLabel %></div>\n"

/***/ }),

/***/ 71159:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/family.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-subtitle\"><%- _.__('pim_enrich.entity.family.uppercase_label')%></div>\n<div class=\"AknColumn-value product-family\" data-drop-zone=\"buttons\"><%- familyLabel %></div>\n"

/***/ }),

/***/ 46559:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/group-modal.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer AknFormContainer--withPadding AknFormContainer--expanded\">\n    <% if (products.length) { %>\n        <table class=\"AknGrid AknGrid--condensed AknGrid--unclickable groups\">\n            <thead>\n                <tr>\n                    <th class=\"AknGrid-headerCell\">\n                        <%- identifier.labels[locale] || identifier.code %>\n                    </th>\n                    <th class=\"AknGrid-headerCell\">\n                        <%- _.__('pim_common.label') %>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <% _.each(products, function (product) {  %>\n                    <tr class=\"AknGrid-bodyRow\">\n                        <td class=\"AknGrid-bodyCell\">\n                            <a href=\"javascript:void(0);\" data-product-id=\"<%- product.meta.id %>\">\n                                <%- product.values[identifier.code][0].data %>\n                            </a>\n                        </td>\n                        <td class=\"AknGrid-bodyCell\">\n                            <%- product.meta.label[locale] %>\n                        </td>\n                    </tr>\n                <% }); %>\n                <% if (products.length < productCount) { %>\n                    <tr class=\"AknGrid-bodyRow\">\n                        <td colspan=\"2\" class=\"AknGrid-bodyCell\">\n                            <%- _.__('pim_enrich.entity.product.module.show_group.more_products', { 'count': productCount - products.length }) %>\n                        </td>\n                    </tr>\n                <% } %>\n            </tbody>\n        </table>\n    <% } %>\n</div>\n"

/***/ }),

/***/ 81293:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/groups.html ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-subtitle\"><%- label %></div>\n<div class=\"AknColumn-value product-groups\">\n    <% _.each(groups, function (group, index, list) {  %>\n        <div data-group=\"<%- group.code %>\" data-variant=\"<%- group.isVariant ? 1 : 0 %>\" class=\"product-group\">\n            <%- group.label %>\n        </div>\n        <%- list.length > index + 1 ? ',' : '' %>\n    <% }); %>\n</div>\n"

/***/ }),

/***/ 16219:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/status-switcher.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<div data-toggle=\"dropdown\">\n    <div class=\"AknColumn-subtitle\"><%- label %></div>\n    <div class=\"AknColumn-value product-status\" data-status=\"<%- status ? 'enabled' : 'disabled' %>\">\n        <div class=\"status-switcher\">\n            <%- status ? enabledLabel : disabledLabel %>\n            <div class=\"AknColumn-blockDown\"></div>\n        </div>\n    </div>\n</div>\n<ul class=\"AknDropdown-menu\">\n    <li class=\"AknDropdown-menuTitle\"><%- label %></li>\n    <li>\n        <div class=\"AknDropdown-menuLink <% status ? '' : 'AknDropdown-menuLink--active' %>\" data-status=\"disable\">\n            <span class=\"label\"><%- disabledLabel %></span>\n        </div>\n    </li>\n    <li>\n        <div class=\"AknDropdown-menuLink <% status ? 'AknDropdown-menuLink--active' : '' %>\" data-status=\"enable\">\n            <span class=\"label\"><%- enabledLabel %></span>\n        </div>\n    </li>\n</ul>\n"

/***/ }),

/***/ 93265:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/updated.html ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-subtitle\"><%- label %></div>\n<div class=\"AknColumn-value\"><%- loggedAt %> <%- labelBy %> <%- author %></div>\n"

/***/ }),

/***/ 47142:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/meta/uuid.html ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknColumn-subtitle\"><%- label %></div>\n<div class=\"AknColumn-value\"><%- uuid %></div>\n"

/***/ }),

/***/ 21521:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/scope-switcher.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<a class=\"AknActionButton <% if (displayInline) { %>AknActionButton--big AknActionButton--noLeftBorder<% } else { %>AknActionButton--withoutBorder<% } %>\" data-toggle=\"dropdown\">\n    <% if (!displayInline && displayLabel) { %><%- label %>: <% } %>\n    <span class=\"AknActionButton-highlight\"><%- currentScope %></span>\n    <span class=\"AknActionButton-caret\"></span>\n</a>\n<ul class=\"AknDropdown-menu\">\n    <div class=\"AknDropdown-menuTitle\"><%- label %></div>\n    <% _.each(channels, function (scope) { %>\n        <li>\n            <a class=\"AknDropdown-menuLink <% if (i18n.getLabel(scope.labels, catalogLocale, scope.code) === currentScope) { %> AknDropdown-menuLink--active<% } %>\"\n               data-scope=\"<%- scope.code %>\"\n               data-label=\"<%- i18n.getLabel(scope.labels, catalogLocale, scope.code) %>\">\n                <%- i18n.getLabel(scope.labels, catalogLocale, scope.code) %>\n            </a>\n        </li>\n    <% }); %>\n</ul>\n"

/***/ }),

/***/ 86878:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/sequential-edit.html ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = "<% if (previousObject) { %>\n    <span class=\"AknSequentialEdit-previous\">\n        <span class=\"previous\" data-id=\"<%- previousObject.id %>\" data-type=\"<%- previousObject.type %>\">\n            <%- previousObject.shortLabel %>\n        </span>\n    </span>\n<% } %>\n<span class=\"AknSequentialEdit-progress AknProgress--info AknProgress progress progress-bar\">\n    <div class=\"AknProgress-bar bar\" style=\"width: <%- ratio %>%;\">\n    <% if (ratio < 30) { %></div>&nbsp;&nbsp;<% } %>\n    <%- currentIndex %> / <%- objectCount %> <%- _.__('pim_enrich.entity.product.plural_label') %>\n    <% if (ratio >= 30) { %></div><% } %>\n</span>\n<% if (nextObject) { %>\n    <span class=\"AknSequentialEdit-next\">\n        <span class=\"next\" data-id=\"<%- nextObject.id %>\" data-type=\"<%- nextObject.type %>\">\n            <%- nextObject.shortLabel %>\n        </span>\n    </span>\n<% } %>\n"

/***/ }),

/***/ 63492:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/start-copy.html ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = "<%- label %>\n"

/***/ }),

/***/ 3760:
/*!********************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/tab/associated-product-row.html ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = "<% if (canRemoveAssociation) { %>\n<div class=\"AknGrid-bodyRowRemove AknIconButton AknIconButton--remove AknIconButton--topLeft\"></div>\n<% } %>\n<a href=\"#<%- redirectUrl %>\" target=\"_blank\"\n  ><div class=\"AknGrid-fullImage\" style=\"background-image: url('<%- imagePath %>')\"></div>\n  <td class=\"AknGrid-title\"><%- label %></td>\n  <td class=\"AknGrid-description\"><%- identifier %></td></a\n>\n"

/***/ }),

/***/ 51839:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/tab/association-panes.html ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = "<% _.each(associationTypes, function (associationType) { %>\n<div\n  class=\"AknTabHeader association-type<% if (associationType.code !== currentAssociationType) { %> AknTitleContainer--hidden<% } %>\"\n  data-association-type=\"<%- associationType.code %>\"\n>\n  <div class=\"AknButtonList\">\n    <div class=\"AknDropdown AknButtonList-item association-type-selector\">\n      <a class=\"AknActionButton AknActionButton--important AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n        <span class=\"AknActionButton-highlight\"\n          ><%- getLabel(associationType.labels, locale, associationType.code) %></span\n        >\n        <span class=\"AknActionButton-caret\"></span>\n      </a>\n      <ul class=\"associations-list AknDropdown-menu\">\n        <div class=\"AknDropdown-menuTitle\"><%- label %></div>\n        <% _.each(associationTypes, function (associationTypeSwitch) { %>\n        <li data-association-type=\"<%- associationTypeSwitch.code %>\">\n          <a\n            class=\"AknDropdown-menuLink<% if (associationType === associationTypeSwitch) { %> AknDropdown-menuLink--active<% } %> label\"\n          >\n            <%- `${getLabel(associationTypeSwitch.labels, locale, associationTypeSwitch.code)}\n            (${associationTypeSwitch.productCount + associationTypeSwitch.productModelCount +\n            associationTypeSwitch.groupCount})` %>\n          </a>\n        </li>\n        <% }) %>\n      </ul>\n    </div>\n    <div class=\"AknButtonList-item\">\n      <%- __( numberAssociationLabelKey, { productCount: associationType.productCount, productModelCount:\n      associationType.productModelCount, groupCount: associationType.groupCount } ) %>\n    </div>\n  </div>\n  <div class=\"AknDropdown target-selector <%- isQuantifiedAssociation && 'hide' %>\">\n    <a class=\"AknActionButton AknActionButton--withoutBorder\" data-toggle=\"dropdown\">\n      <span class=\"AknActionButton-highlight\">\n        <% if ('products' === currentAssociationTarget) { %> <%- showProductsLabel %> <% } else { %> <%- showGroupsLabel\n        %> <% } %>\n      </span>\n      <span class=\"AknActionButton-caret\"></span>\n    </a>\n    <ul class=\"AknDropdown-menu\">\n      <div class=\"AknDropdown-menuTitle\"><%- targetLabel %></div>\n      <li\n        class=\"label target-button AknDropdown-menuLink<% if ('products' === currentAssociationTarget) { %> AknDropdown-menuLink--active<% } %>\"\n        data-association-target=\"products\"\n      >\n        <%- showProductsLabel %>\n      </li>\n      <li\n        class=\"label target-button AknDropdown-menuLink<% if ('groups' === currentAssociationTarget) { %> AknDropdown-menuLink--active<% } %>\"\n        data-association-target=\"groups\"\n      >\n        <%- showGroupsLabel %>\n      </li>\n    </ul>\n  </div>\n</div>\n<% }); %>\n"

/***/ }),

/***/ 88312:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/tab/associations.html ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = "<% if (!associationTypes.length) { %>\n<div class=\"buffer-top buffer-left\">\n  <span class=\"buffer-small-right\">\n    <%- _.__('pim_enrich.entity.product.module.associations.none_exist') %>\n  </span>\n</div>\n<% } else { %>\n<div class=\"tabbable\">\n  <div class=\"tab-content\">\n    <div\n      class=\"association-grid-container <%- datagridName %><% if ('products' !== currentAssociationTarget || isQuantifiedAssociation) { %> hide<% } %>\"\n    >\n      <div class=\"AknGrid AknGrid--gallery AknGrid--inner\">\n        <div id=\"grid-<%- datagridName %>\" data-type=\"datagrid\">\n          <% if (addAssociationVisible) { %>\n          <div class=\"AknGridToolbar\">\n            <div class=\"AknGridToolbar-center\"></div>\n            <div class=\"AknGridToolbar-right AknButtonList AknButtonList--right\">\n              <div class=\"AknButton AknButton--action AknButtonList-item add-associations\">\n                <%- addAssociationsLabel %>\n              </div>\n            </div>\n          </div>\n          <% } %>\n        </div>\n      </div>\n    </div>\n\n    <div\n      class=\"association-grid-container  association-group-grid<% if ('groups' !== currentAssociationTarget || isQuantifiedAssociation) { %> hide<% } %>\"\n    >\n      <div id=\"grid-association-group-grid\" data-type=\"datagrid\"></div>\n    </div>\n\n    <div id=\"product-quantified-associations\" class=\"<%- !isQuantifiedAssociation && 'hide' %>\"></div>\n\n    <div class=\"selection-inputs\">\n      <% _.each(associationTypes, function (associationType) { %>\n      <input type=\"hidden\" id=\"<%- associationType.code %>-products-appendfield\" />\n      <input type=\"hidden\" id=\"<%- associationType.code %>-products-removefield\" />\n      <input type=\"hidden\" id=\"<%- associationType.code %>-groups-appendfield\" />\n      <input type=\"hidden\" id=\"<%- associationType.code %>-groups-removefield\" />\n      <% }); %>\n    </div>\n  </div>\n</div>\n<% } %>\n"

/***/ }),

/***/ 30943:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/tab/attributes/validation-error.html ***!
  \*************************************************************************************/
/***/ ((module) => {

module.exports = "<% _.each(errors, function(error) { %>\n    <span class=\"AknFieldContainer-validationError\">\n        <% if (error.locale || error.scope) { %>\n            <span class=\"field-context change-context\" data-locale=\"<%- error.locale %>\" data-scope=\"<%- error.scope %>\">\n                <% if (error.scope) { %> <span><%- error.scope %></span> <% } %>\n                <% if (error.locale) { %> <span><%= i18n.getFlag(error.locale) %></span> <% } %>\n            </span> &nbsp;\n        <% } %>\n        <span class=\"error-message\"><%- error.message %></span>\n    </span>\n<% }) %>\n"

/***/ }),

/***/ 19598:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/tab/catalog-switcher.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<ul class=\"AknHorizontalNavtab-list nav nav-tabs tree-selector\" id=\"trees-list\">\n    <% _.each(trees, function (tree) { %>\n        <li class=\"AknHorizontalNavtab-item<% if (tree.code === state.currentTree) { %> AknHorizontalNavtab-item--active active<% } %>\" data-tree=\"<%- tree.code %>\" data-tree-id=\"<%- tree.id %>\">\n            <div class=\"\n                AknHorizontalNavtab-link\n                <%- _.result(categoriesCount, tree.id, 0) > 0 ? 'tree-has-item' : '' %>\n                \" id=\"<%- treeLinkSelector + tree.id %>\">\n                <span class=\"tree-label label\"><%- tree.label %></span>\n                <span class=\"AknBadge <%- _.result(categoriesCount, tree.id, 0) > 0 ? 'AknBadge--enabled' : '' %>\" data-tree-id=\"<%- tree.code %>\">\n                    <%- _.result(categoriesCount, tree.id, 0) %>\n                </span>\n            </div>\n        </li>\n    <% }); %>\n</ul>\n"

/***/ }),

/***/ 32754:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/tab/categories.html ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabbable\">\n    <div class=\"AknHorizontalNavtab\">\n        <div class=\"AknButtonList catalog-switcher\"></div>\n    </div>\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"product-categories\">\n            <div id=\"trees\" data-id=\"<%- product.meta.id %>\" data-uuid=\"<%- product.meta.id %>\" data-datalocale=\"<%- locale %>\" data-selected-tree=\"<%- trees.find(function (tree) { return tree.id === parseInt(state.currentTreeId); }).id %>\">\n                <% _.each(trees, function (tree) { %>\n                    <div id=\"root-unselectable\" class=\"tree root-unselectable\" data-tree-id=\"<%- tree.id %>\">\n                        <div id=\"tree-<%- tree.id %>\" class=\"buffer-small-left\"></div>\n                    </div>\n                <% }); %>\n            </div>\n        </div>\n    </div>\n</div>\n<input type=\"hidden\" id=\"hidden-tree-input\" value=\"<%- JSON.stringify(state.selectedCategories) %>\">\n"

/***/ }),

/***/ 41092:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product/tab/jstree-locked-item.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"jstree-lockeditem\">\n    <div class=\"AknSelectButton AknSelectButton--disabled\"></div>\n    <div class=\"jstree-lockedicon\"></div>\n    <%- label %>\n</div>\n"

/***/ }),

/***/ 22188:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product_model/add-child-form.html ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage\">\n    <div class=\"AknFullPage-content AknFullPage-content--withIllustration\">\n        <div>\n            <div class=\"AknFullPage-illustration AknFullPage-illustration--<%- illustrationClass %>\"></div>\n        </div>\n        <div>\n            <div data-drop-zone=\"header\"></div>\n            <div data-drop-zone=\"fields-container\"></div>\n            <div class=\"AknButton AknButton--apply ok\"><%- okText %></div>\n        </div>\n    </div>\n</div>\n<div class=\"AknFullPage-cancel cancel\"></div>\n"

/***/ }),

/***/ 46126:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product_model/add-child/fields-container.html ***!
  \**************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFormContainer\">\n    <div data-drop-zone=\"content\"></div>\n    <% if (errors.length > 0) { %>\n        <div class=\"AknMessageBox AknMessageBox--danger global-errors\">\n            <ul class=\"AknMessageBox-list\">\n                <% errors.forEach(function(error) { %>\n                    <li class=\"global-error\"><%- error.message %></li>\n                <% }) %>\n            </ul>\n        </div>\n    <% } %>\n</div>\n"

/***/ }),

/***/ 80747:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product_model/add-child/header.html ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknFullPage-titleContainer\">\n    <div class=\"AknFullPage-subTitle\"><%- __('pim_enrich.entity.product_model.plural_label') %></div>\n    <div class=\"AknFullPage-title\"><%- __('pim_enrich.entity.product_model.module.variant_axis.title_create_label', { axes: axes }, axesCount) %></div>\n</div>\n"

/***/ }),

/***/ 96905:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimui/templates/product_model/complete-variant-product.html ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"AknCompletenessDropdown completeness-badge\" data-toggle=\"dropdown\">\n    <span class=\"AknCompletenessDropdown-label\"><%- label %>:</span>\n    <span class=\"AknCompletenessDropdown-badge AknBadge AknBadge--<%- color %>\"><%- ratio %></span>\n</div>\n"

/***/ }),

/***/ 47151:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimuser/templates/form/fields/select-profile-container.html ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = "<% if (fieldLabel !== '') { %><div class=\"AknFieldContainer-header\">\n    <label class=\"AknFieldContainer-label control-label\" for=\"pim_enrich_form_<%- fieldId %>\">\n        <%- fieldLabel %><% if (required) { %> <em><%- requiredLabel %></em><% } %>\n    </label>\n</div><% } %>\n<div class=\"AknFieldContainer-inputContainer\">\n    <div class=\"field-input\"></div>\n</div>\n<div class=\"AknFieldContainer-footer\">\n    <div>\n        <span style=\"vertical-align: sub;margin-right: 5px;\">\n            <svg viewBox=\"0 0 24 24\" width=\"15px\" height=\"15px\">\n                <g fill=\"none\" fillRule=\"evenodd\">\n                    <circle stroke=\"#5992c7\" strokeLinecap=\"round\" strokeLinejoin=\"round\" cx=\"12\" cy=\"12\" r=\"10\" />\n                    <path\n                        d=\"M14.057 9.54l-2.155 7.016c-.12.401-.179.664-.179.79 0 .072.032.14.095.202s.13.093.2.093c.119 0 .238-.049.357-.148.315-.243.694-.684 1.136-1.322l.357.197c-1.058 1.73-2.183 2.596-3.375 2.596-.456 0-.818-.12-1.088-.36A1.169 1.169 0 019 17.69c0-.244.06-.553.179-.928l1.461-4.717c.14-.454.21-.796.21-1.026 0-.145-.066-.273-.2-.385-.132-.112-.315-.168-.546-.168a8.66 8.66 0 00-.379.01l.137-.395 3.564-.543h.631zM13.405 5c.435 0 .801.141 1.1.424.297.283.446.625.446 1.027 0 .401-.15.743-.452 1.026a1.54 1.54 0 01-1.094.424c-.42 0-.781-.141-1.083-.424a1.356 1.356 0 01-.452-1.026c0-.402.15-.744.447-1.027.298-.283.66-.424 1.088-.424z\"\n                        fill=\"#5992c7\"\n                    />\n                </g>\n            </svg>\n        </span>\n        <a\n            href=\"https://help.akeneo.com/pim/serenity/articles/manage-your-account.html#your-general-information\"\n            target=\"_blank\"\n            style=\"\n                color:#5992c7;\n                text-decoration: underline;\n                font-size: 11px;\n                height: 21px;\n                line-height: 21px;\n            \"\n        >\n            <%- __(linkLabel) %>\n        </a>\n    </div>\n\n    <% if (typeof messageOnReadOnly !== 'undefined' && messageOnReadOnly && readOnly) { %>\n        <span class=\"AknFieldContainer-validationWarning\">\n            <span class=\"AknFieldContainer-validationWarningMessage\"><%- messageOnReadOnly %></span>\n        </span>\n    <% } %>\n\n    <% errors.forEach(function(error) { %>\n        <span class=\"AknFieldContainer-validationError\">\n            <span class=\"error-message\"><%= error.message %></span>\n        </span>\n    <% }) %>\n    <% warnings.forEach(function(warning) { %>\n        <div>\n            <i class=\"icon-warning-sign\"></i>\n            <%- warning.message %>\n        </div>\n    <% }) %>\n</div>\n"

/***/ }),

/***/ 77872:
/*!**************************************************************!*\
  !*** ./public/bundles/akeneocategory/js/category/history.ts ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var Routing = __webpack_require__(/*! routing */ 60847);
var requireContext = __webpack_require__(/*! require-context */ 76925);
var datagridBuilder = __webpack_require__(/*! oro/datagrid-builder */ 10488);
var CategoryHistory = (function (_super) {
    __extends(CategoryHistory, _super);
    function CategoryHistory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CategoryHistory.prototype.render = function () {
        var urlParams = {
            alias: 'history-grid',
            'history-grid': {
                object_class: 'category',
                object_id: this.getFormData().categoryId,
                _pager: {
                    _page: 1,
                    _per_page: 25,
                },
                _sort_by: {
                    loggedAt: 'DESC',
                },
            },
        };
        var that = this;
        $.get(Routing.generate('pim_datagrid_load', urlParams)).done(function (response) {
            that.$el.html('<div id="grid-category-history" data-type="datagrid"></div>');
            $('#grid-category-history').data({ metadata: response.metadata, data: JSON.parse(response.data) });
            var resolvedModules = response.metadata.requireJSModules.map(function (module) {
                return requireContext(module);
            });
            datagridBuilder(resolvedModules);
        });
        return this;
    };
    return CategoryHistory;
}(BaseView));
module.exports = CategoryHistory;


/***/ }),

/***/ 19702:
/*!****************************************************************************!*\
  !*** ./public/bundles/akeneocategory/js/controller/CategoriesSettings.tsx ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var category_1 = __webpack_require__(/*! @akeneo-pim-community/category */ 80178);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var CategoriesSettings = (function (_super) {
    __extends(CategoriesSettings, _super);
    function CategoriesSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.canLeavePage = true;
        return _this;
    }
    CategoriesSettings.prototype.setCanLeavePage = function (canLeavePage) {
        this.canLeavePage = canLeavePage;
    };
    CategoriesSettings.prototype.reactElementToMount = function () {
        var _this = this;
        return (react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(category_1.CategoriesApp, { setCanLeavePage: function (canLeavePage) { return _this.setCanLeavePage(canLeavePage); } }))));
    };
    CategoriesSettings.prototype.routeGuardToUnmount = function () {
        return /pim_category_template_edit|pim_enrich_categorytree_(index|tree|edit)/;
    };
    CategoriesSettings.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-settings' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-settings-product-category' });
        return _super.prototype.renderRoute.call(this);
    };
    CategoriesSettings.prototype.canLeave = function () {
        return this.canLeavePage || confirm(__('akeneo.category.edition_form.unsaved_changes'));
    };
    CategoriesSettings.prototype.getContainerRef = function () {
        return CategoriesSettings.container;
    };
    CategoriesSettings.container = document.createElement('div');
    return CategoriesSettings;
}(react_2.ReactController));
module.exports = CategoriesSettings;


/***/ }),

/***/ 44290:
/*!*************************************************************************!*\
  !*** ./public/bundles/akeneocommunicationchannel/bridge/view/panel.tsx ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var communication_channel_1 = __webpack_require__(/*! @akeneo-pim-community/communication-channel */ 91780);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var PanelView = (function (_super) {
    __extends(PanelView, _super);
    function PanelView() {
        return _super.call(this, { className: 'AknPanel' }) || this;
    }
    PanelView.prototype.configure = function () {
        this.listenTo(mediator, 'communication-channel:panel:open', this.openPanel);
        this.listenTo(mediator, 'communication-channel:panel:close', this.closePanel);
        this.listenTo(mediator, 'pim-app:panel:close', this.closePanelFromOverlay);
        return _super.prototype.configure.call(this);
    };
    PanelView.prototype.reactElementToMount = function () {
        return react_1.default.createElement(communication_channel_1.Index, null);
    };
    PanelView.prototype.render = function () {
        this.closePanel();
        return _super.prototype.render.call(this);
    };
    PanelView.prototype.openPanel = function () {
        this.$el.removeClass('AknPanel--collapsed');
        this.$el.removeClass('AknPanel--no-overflow');
        mediator.trigger('pim-app:overlay:show');
    };
    PanelView.prototype.closePanelFromOverlay = function () {
        mediator.trigger('communication-channel:panel:close');
    };
    PanelView.prototype.closePanel = function () {
        var _this = this;
        if (!this.isColapsed()) {
            this.$el.addClass('AknPanel--collapsed');
            setTimeout(function () {
                _this.$el.addClass('AknPanel--no-overflow');
            }, 300);
            mediator.trigger('pim-app:overlay:hide');
        }
    };
    PanelView.prototype.isColapsed = function () {
        return this.$el.hasClass('AknPanel--collapsed') && this.$el.addClass('AknPanel--no-overflow');
    };
    return PanelView;
}(react_2.ReactView));
module.exports = PanelView;


/***/ }),

/***/ 90312:
/*!*********************************************************************************!*\
  !*** ./public/bundles/akeneocommunicationchannel/menu/communication-channel.ts ***!
  \*********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var Backbone = __importStar(__webpack_require__(/*! backbone */ 2918));
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var __ = __webpack_require__(/*! oro/translator */ 16393);
var CommunicationChannelTemplate = __webpack_require__(/*! akeneo/template/menu/communication-channel */ 37513);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var CommunicationChannel = (function (_super) {
    __extends(CommunicationChannel, _super);
    function CommunicationChannel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CommunicationChannel.prototype.events = function () {
        return {
            click: this.onClickButton,
        };
    };
    CommunicationChannel.prototype.initialize = function () {
        this.listenTo(mediator, 'communication-channel:menu:add_coloured_dot', this.addColouredDot);
        this.listenTo(mediator, 'communication-channel:menu:remove_coloured_dot', this.removeColouredDot);
        return _super.prototype.initialize.call(this);
    };
    CommunicationChannel.prototype.render = function () {
        var template = _.template(CommunicationChannelTemplate);
        this.$el.empty().append(template({
            title: __('akeneo_communication_channel.link.title'),
        }));
        if (this.hasNewAnnouncements()) {
            this.addColouredDot();
        }
        return Backbone.View.prototype.render.apply(this, arguments);
    };
    CommunicationChannel.prototype.hasNewAnnouncements = function () {
        if (null === sessionStorage.getItem('communication_channel_has_new_announcements')) {
            return false;
        }
        return JSON.parse(sessionStorage.getItem('communication_channel_has_new_announcements')) === true;
    };
    CommunicationChannel.prototype.onClickButton = function () {
        mediator.trigger('communication-channel:panel:open');
    };
    CommunicationChannel.prototype.addColouredDot = function () {
        var span = document.createElement('span');
        span.setAttribute('class', 'AknCommunicationChannelMenu-colouredDot');
        this.$el.find('.AknCommunicationChannelMenu-link').append(span);
    };
    CommunicationChannel.prototype.removeColouredDot = function () {
        var colouredDot = this.$el.find('.AknCommunicationChannelMenu-colouredDot');
        if (colouredDot.length > 0) {
            colouredDot.remove();
        }
    };
    return CommunicationChannel;
}(Backbone.View));
module.exports = CommunicationChannel;


/***/ }),

/***/ 9570:
/*!****************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/controller/apps.tsx ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var connectivity_connection_1 = __webpack_require__(/*! @akeneo-pim-community/connectivity-connection */ 89143);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 73617);
var react_controller_1 = __importDefault(__webpack_require__(/*! ../react/react-controller */ 36789));
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var AppsController = (function (_super) {
    __extends(AppsController, _super);
    function AppsController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppsController.prototype.reactElementToMount = function () {
        return react_1.default.createElement(connectivity_connection_1.Apps, { dependencies: dependencies_1.dependencies });
    };
    AppsController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_connectivity_connection_connect_apps/;
    };
    AppsController.prototype.initialize = function () {
        this.$el.addClass('AknConnectivityConnection-view');
        return _super.prototype.initialize.call(this);
    };
    AppsController.prototype.renderRoute = function (route) {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-connect' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-connect-marketplace' });
        return _super.prototype.renderRoute.call(this, route);
    };
    return AppsController;
}(react_controller_1.default));
module.exports = AppsController;


/***/ }),

/***/ 90514:
/*!*****************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/controller/audit.tsx ***!
  \*****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var connectivity_connection_1 = __webpack_require__(/*! @akeneo-pim-community/connectivity-connection */ 89143);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 73617);
var react_controller_1 = __importDefault(__webpack_require__(/*! ../react/react-controller */ 36789));
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var AuditController = (function (_super) {
    __extends(AuditController, _super);
    function AuditController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AuditController.prototype.reactElementToMount = function () {
        return react_1.default.createElement(connectivity_connection_1.Audit, { dependencies: dependencies_1.dependencies });
    };
    AuditController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_connectivity_connection_audit_/;
    };
    AuditController.prototype.initialize = function () {
        this.$el.addClass('AknConnectivityConnection-view');
        return _super.prototype.initialize.call(this);
    };
    AuditController.prototype.renderRoute = function (route) {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-connect' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-connect-connection-audit' });
        return _super.prototype.renderRoute.call(this, route);
    };
    return AuditController;
}(react_controller_1.default));
module.exports = AuditController;


/***/ }),

/***/ 13720:
/*!**************************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/controller/connected-apps.tsx ***!
  \**************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var connectivity_connection_1 = __webpack_require__(/*! @akeneo-pim-community/connectivity-connection */ 89143);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 73617);
var react_controller_1 = __importDefault(__webpack_require__(/*! ../react/react-controller */ 36789));
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var ConnectedAppsController = (function (_super) {
    __extends(ConnectedAppsController, _super);
    function ConnectedAppsController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConnectedAppsController.prototype.reactElementToMount = function () {
        return react_1.default.createElement(connectivity_connection_1.ConnectedApps, { dependencies: dependencies_1.dependencies });
    };
    ConnectedAppsController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_connectivity_connection_connect_connected_apps/;
    };
    ConnectedAppsController.prototype.initialize = function () {
        this.$el.addClass('AknConnectivityConnection-view');
        return _super.prototype.initialize.call(this);
    };
    ConnectedAppsController.prototype.renderRoute = function (route) {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-connect' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-connect-connected-apps' });
        return _super.prototype.renderRoute.call(this, route);
    };
    return ConnectedAppsController;
}(react_controller_1.default));
module.exports = ConnectedAppsController;


/***/ }),

/***/ 8990:
/*!****************************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/controller/error-management.tsx ***!
  \****************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var connectivity_connection_1 = __webpack_require__(/*! @akeneo-pim-community/connectivity-connection */ 89143);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 73617);
var highlight_menu_1 = __importDefault(__webpack_require__(/*! ../menu/highlight-menu */ 86210));
var react_controller_1 = __importDefault(__webpack_require__(/*! ../react/react-controller */ 36789));
var ErrorManagementController = (function (_super) {
    __extends(ErrorManagementController, _super);
    function ErrorManagementController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ErrorManagementController.prototype.reactElementToMount = function () {
        return react_1.default.createElement(connectivity_connection_1.ErrorManagement, { dependencies: dependencies_1.dependencies });
    };
    ErrorManagementController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_connectivity_connection_error_management_/;
    };
    ErrorManagementController.prototype.initialize = function () {
        this.$el.addClass('AknConnectivityConnection-view');
        return _super.prototype.initialize.call(this);
    };
    ErrorManagementController.prototype.renderRoute = function (route) {
        (0, highlight_menu_1.default)(route.name);
        return _super.prototype.renderRoute.call(this, route);
    };
    return ErrorManagementController;
}(react_controller_1.default));
module.exports = ErrorManagementController;


/***/ }),

/***/ 20802:
/*!***********************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/controller/marketplace.tsx ***!
  \***********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var connectivity_connection_1 = __webpack_require__(/*! @akeneo-pim-community/connectivity-connection */ 89143);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 73617);
var react_controller_1 = __importDefault(__webpack_require__(/*! ../react/react-controller */ 36789));
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var MarketplaceController = (function (_super) {
    __extends(MarketplaceController, _super);
    function MarketplaceController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MarketplaceController.prototype.reactElementToMount = function () {
        return react_1.default.createElement(connectivity_connection_1.Marketplace, { dependencies: dependencies_1.dependencies });
    };
    MarketplaceController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_connectivity_connection_connect_marketplace/;
    };
    MarketplaceController.prototype.initialize = function () {
        this.$el.addClass('AknConnectivityConnection-view');
        return _super.prototype.initialize.call(this);
    };
    MarketplaceController.prototype.renderRoute = function (route) {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-connect' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-connect-marketplace' });
        return _super.prototype.renderRoute.call(this, route);
    };
    return MarketplaceController;
}(react_controller_1.default));
module.exports = MarketplaceController;


/***/ }),

/***/ 54291:
/*!********************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/controller/settings.tsx ***!
  \********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var connectivity_connection_1 = __webpack_require__(/*! @akeneo-pim-community/connectivity-connection */ 89143);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 73617);
var highlight_menu_1 = __importDefault(__webpack_require__(/*! ../menu/highlight-menu */ 86210));
var react_controller_1 = __importDefault(__webpack_require__(/*! ../react/react-controller */ 36789));
var SettingsController = (function (_super) {
    __extends(SettingsController, _super);
    function SettingsController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SettingsController.prototype.reactElementToMount = function () {
        return react_1.default.createElement(connectivity_connection_1.Settings, { dependencies: dependencies_1.dependencies });
    };
    SettingsController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_connectivity_connection_settings_/;
    };
    SettingsController.prototype.initialize = function () {
        this.$el.addClass('AknConnectivityConnection-view');
        return _super.prototype.initialize.call(this);
    };
    SettingsController.prototype.renderRoute = function (route) {
        (0, highlight_menu_1.default)(route.name);
        return _super.prototype.renderRoute.call(this, route);
    };
    return SettingsController;
}(react_controller_1.default));
module.exports = SettingsController;


/***/ }),

/***/ 55326:
/*!*******************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/controller/webhook.tsx ***!
  \*******************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var connectivity_connection_1 = __webpack_require__(/*! @akeneo-pim-community/connectivity-connection */ 89143);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 73617);
var highlight_menu_1 = __importDefault(__webpack_require__(/*! ../menu/highlight-menu */ 86210));
var react_controller_1 = __importDefault(__webpack_require__(/*! ../react/react-controller */ 36789));
var WebhookController = (function (_super) {
    __extends(WebhookController, _super);
    function WebhookController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebhookController.prototype.reactElementToMount = function () {
        return react_1.default.createElement(connectivity_connection_1.WebhookSettings, { dependencies: dependencies_1.dependencies });
    };
    WebhookController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_connectivity_connection_webhook/;
    };
    WebhookController.prototype.initialize = function () {
        this.$el.addClass('AknConnectivityConnection-view');
        return _super.prototype.initialize.call(this);
    };
    WebhookController.prototype.renderRoute = function (route) {
        (0, highlight_menu_1.default)(route.name);
        return _super.prototype.renderRoute.call(this, route);
    };
    return WebhookController;
}(react_controller_1.default));
module.exports = WebhookController;


/***/ }),

/***/ 73617:
/*!************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/dependencies.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dependencies = void 0;
var router = __webpack_require__(/*! pim/router */ 41774);
var translate = __webpack_require__(/*! oro/translator */ 16393);
var viewBuilder = __webpack_require__(/*! pim/form-builder */ 16371);
var messenger = __webpack_require__(/*! oro/messenger */ 80581);
var userContext = __webpack_require__(/*! pim/user-context */ 46862);
var securityContext = __webpack_require__(/*! pim/security-context */ 34770);
var featureFlags = __webpack_require__(/*! pim/feature-flags */ 5857);
var permissionFormRegistry = (__webpack_require__(/*! pim/permission-form-registry */ 98329)["default"]);
exports.dependencies = {
    router: router,
    translate: translate,
    viewBuilder: viewBuilder,
    notify: messenger.notify,
    user: userContext,
    security: {
        isGranted: securityContext.isGranted.bind(securityContext),
    },
    featureFlags: featureFlags,
    permissionFormRegistry: permissionFormRegistry,
};


/***/ }),

/***/ 28974:
/*!*******************************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/menu/connection-params-provider.ts ***!
  \*******************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var View = __webpack_require__(/*! pim/form */ 59904);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var ConnectionParamsProvider = (function (_super) {
    __extends(ConnectionParamsProvider, _super);
    function ConnectionParamsProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConnectionParamsProvider.prototype.initialize = function () {
        var _this = this;
        mediator.on('route_start', function (route, params) {
            switch (route) {
                case 'akeneo_connectivity_connection_settings_edit':
                case 'akeneo_connectivity_connection_error_management_connection_monitoring':
                case 'akeneo_connectivity_connection_webhook_edit':
                case 'akeneo_connectivity_connection_webhook_event_logs':
                    _this.getRoot().trigger('pim_menu:item:update_route_params', {
                        route: 'akeneo_connectivity_connection_settings_edit',
                        routeParams: { code: params.code },
                    });
                    _this.getRoot().trigger('pim_menu:item:update_route_params', {
                        route: 'akeneo_connectivity_connection_error_management_connection_monitoring',
                        routeParams: { code: params.code },
                    });
                    _this.getRoot().trigger('pim_menu:item:update_route_params', {
                        route: 'akeneo_connectivity_connection_webhook_edit',
                        routeParams: { code: params.code },
                    });
                    _this.getRoot().trigger('pim_menu:item:update_route_params', {
                        route: 'akeneo_connectivity_connection_webhook_event_logs',
                        routeParams: { code: params.code },
                    });
            }
        });
        _super.prototype.initialize.call(this);
    };
    return ConnectionParamsProvider;
}(View));
module.exports = ConnectionParamsProvider;


/***/ }),

/***/ 86210:
/*!*******************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/menu/highlight-menu.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var highlightSystemNavigationConnectionsMenuItem = function () {
    mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-connect' });
    mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-connect-connection-settings' });
};
var highlightConnectionNavigationMenuItems = function (routeName) {
    mediator.trigger('pim_menu:highlight:tab', {
        extension: 'pim-menu-connect',
        columnExtension: 'pim-menu-connection-column',
    });
    switch (routeName) {
        case 'akeneo_connectivity_connection_error_management_connection_monitoring':
            mediator.trigger('pim_menu:highlight:item', {
                extension: 'pim-menu-connection-monitoring',
            });
            break;
        case 'akeneo_connectivity_connection_settings_edit':
            mediator.trigger('pim_menu:highlight:item', {
                extension: 'pim-menu-connection-settings-edit',
            });
            break;
        case 'akeneo_connectivity_connection_webhook_edit':
            mediator.trigger('pim_menu:highlight:item', {
                extension: 'pim-menu-connection-event-subscriptions',
            });
            break;
        case 'akeneo_connectivity_connection_webhook_event_logs':
            mediator.trigger('pim_menu:highlight:item', {
                extension: 'pim-menu-connection-event-logs',
            });
            break;
    }
};
exports["default"] = (function (routeName) {
    if (routeName === 'akeneo_connectivity_connection_settings_index') {
        highlightSystemNavigationConnectionsMenuItem();
        return;
    }
    highlightConnectionNavigationMenuItems(routeName);
});


/***/ }),

/***/ 36789:
/*!**********************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/react/react-controller.ts ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var jquery_1 = __webpack_require__(/*! jquery */ 49845);
var react_element_helper_1 = __webpack_require__(/*! ./react-element-helper */ 83583);
var BaseController = __webpack_require__(/*! pim/controller/base */ 88191);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var ReactController = (function (_super) {
    __extends(ReactController, _super);
    function ReactController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReactController.prototype.initialize = function () {
        mediator.on('route_start', this.handleRouteChange, this);
        return _super.prototype.initialize.call(this);
    };
    ReactController.prototype.renderRoute = function (_route) {
        this.$el.append((0, react_element_helper_1.mountReactElementRef)(this.reactElementToMount()));
        return (0, jquery_1.Deferred)().resolve();
    };
    ReactController.prototype.remove = function () {
        mediator.off('route_start', this.handleRouteChange, this);
        this.$el.remove();
        return _super.prototype.remove.call(this);
    };
    ReactController.prototype.handleRouteChange = function (routeName) {
        if (true === this.routeGuardToUnmount().test(routeName)) {
            return;
        }
        (0, react_element_helper_1.unmoundReactElementRef)();
    };
    return ReactController;
}(BaseController));
module.exports = ReactController;


/***/ }),

/***/ 83583:
/*!**************************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/react/react-element-helper.ts ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unmoundReactElementRef = exports.mountReactElementRef = void 0;
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var container = null;
var mountReactElementRef = function (component) {
    if (null === container) {
        container = document.createElement('div');
        react_dom_1.default.render(component, container);
    }
    return container;
};
exports.mountReactElementRef = mountReactElementRef;
var unmoundReactElementRef = function () {
    if (null !== container) {
        react_dom_1.default.unmountComponentAtNode(container);
        container = null;
    }
};
exports.unmoundReactElementRef = unmoundReactElementRef;


/***/ }),

/***/ 98329:
/*!*********************************************************************************************!*\
  !*** ./public/bundles/akeneoconnectivityconnection/js/registry/permission-form-registry.ts ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
var __moduleConfig = {};
var permission_form_1 = __webpack_require__(/*! @akeneo-pim-community/permission-form */ 38294);
permission_form_1.PermissionFormRegistry.setModuleConfig(__moduleConfig);
exports["default"] = permission_form_1.PermissionFormRegistry;


/***/ }),

/***/ 8906:
/*!*********************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/controller/dqi-dashboard.ts ***!
  \*********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseController = __webpack_require__(/*! pim/controller/front */ 834);
var FormBuilder = __webpack_require__(/*! pim/form-builder */ 16371);
var DqiDashboardController = (function (_super) {
    __extends(DqiDashboardController, _super);
    function DqiDashboardController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DqiDashboardController.prototype.renderForm = function () {
        var _this = this;
        return $.when(FormBuilder.build('akeneo-data-quality-insights-dqi-dashboard-index')).then(function (form, _) {
            if (_ === void 0) { _ = []; }
            form.setElement(_this.$el).render();
            return form;
        });
    };
    return DqiDashboardController;
}(BaseController));
module.exports = DqiDashboardController;


/***/ }),

/***/ 86176:
/*!*******************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/attribute-group/dqi-activation.tsx ***!
  \*******************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var src_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src */ 4576);
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var DQIActivation = (function (_super) {
    __extends(DQIActivation, _super);
    function DQIActivation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DQIActivation.prototype.render = function () {
        react_dom_1.default.render(react_1.default.createElement(src_1.AttributeGroupDQIActivation, { groupCode: this.getFormData()['code'] }), this.el);
        return this;
    };
    return DQIActivation;
}(BaseView));
module.exports = DQIActivation;


/***/ }),

/***/ 17029:
/*!***************************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/datagrid/cell/quality-score-badge-cell.tsx ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var QualityScore_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src/application/component/QualityScore */ 66051);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var QualityScorePending_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src/application/component/QualityScorePending */ 24133);
var StringCell = __webpack_require__(/*! oro/datagrid/string-cell */ 10991);
var QualityScoreBadgeCell = (function (_super) {
    __extends(QualityScoreBadgeCell, _super);
    function QualityScoreBadgeCell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    QualityScoreBadgeCell.prototype.render = function () {
        var score = this.formatter.fromRaw(this.model.get(this.column.get('name')));
        function isPending(score) {
            return null === score || 'N/A' == score;
        }
        react_dom_1.default.render(react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme }, isPending(score) ? (react_1.default.createElement(QualityScorePending_1.QualityScorePending, null)) : (react_1.default.createElement(QualityScore_1.QualityScore, { score: score, stacked: this.model.attributes.document_type === 'product_model' })))), this.el);
        return this;
    };
    return QualityScoreBadgeCell;
}(StringCell));
module.exports = QualityScoreBadgeCell;


/***/ }),

/***/ 16586:
/*!****************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/dqi-dashboard/base-dashboard.ts ***!
  \****************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var src_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src */ 4576);
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var BaseDashboard = (function (_super) {
    __extends(BaseDashboard, _super);
    function BaseDashboard(options) {
        var _this = _super.call(this, options) || this;
        _this.config = {
            align: 'left',
        };
        _this.timePeriod = 'weekly';
        _this.familyCode = null;
        _this.categoryCode = null;
        _this.categoryId = null;
        _this.rootCategoryId = null;
        _this.axes = [];
        _this.axes = options.config.axes;
        return _this;
    }
    BaseDashboard.prototype.configure = function () {
        var _this = this;
        window.addEventListener(src_1.DATA_QUALITY_INSIGHTS_DASHBOARD_CHANGE_TIME_PERIOD, (function (event) {
            _this.timePeriod = event.detail.timePeriod;
            _this.render();
        }));
        window.addEventListener(src_1.DATA_QUALITY_INSIGHTS_DASHBOARD_FILTER_FAMILY, (function (event) {
            _this.familyCode = event.detail.familyCode;
            _this.categoryCode = null;
            _this.categoryId = null;
            _this.rootCategoryId = null;
            _this.render();
        }));
        window.addEventListener(src_1.DATA_QUALITY_INSIGHTS_DASHBOARD_FILTER_CATEGORY, (function (event) {
            _this.categoryCode = event.detail.categoryCode;
            _this.categoryId = event.detail.categoryId;
            _this.rootCategoryId = event.detail.rootCategoryId;
            _this.familyCode = null;
            _this.render();
        }));
        this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', function (_) {
            _this.render();
        });
        this.listenTo(this.getRoot(), 'pim_enrich:form:scope_switcher:change', function (_) {
            _this.render();
        });
        return BaseView.prototype.configure.apply(this, arguments);
    };
    BaseDashboard.prototype.remove = function () {
        react_dom_1.default.unmountComponentAtNode(this.el);
        return _super.prototype.remove.call(this);
    };
    return BaseDashboard;
}(BaseView));
module.exports = BaseDashboard;


/***/ }),

/***/ 52419:
/*!******************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/dqi-dashboard/channel-switcher.ts ***!
  \******************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var $ = __webpack_require__(/*! jquery */ 49845);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var BaseForm = __webpack_require__(/*! pim/form */ 59904);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var i18n = __webpack_require__(/*! pim/i18n */ 86705);
var template = __webpack_require__(/*! pim/template/product/scope-switcher */ 21521);
var ChannelSwitcher = (function (_super) {
    __extends(ChannelSwitcher, _super);
    function ChannelSwitcher(options) {
        var _this = _super.call(this, __assign(__assign({}, options), { className: 'AknDropdown AknButtonList-item scope-switcher' })) || this;
        _this.template = _.template(template);
        _this.channels = [];
        return _this;
    }
    ChannelSwitcher.prototype.events = function () {
        return {
            'click [data-scope]': 'changeChannel',
        };
    };
    ChannelSwitcher.prototype.configure = function () {
        var _this = this;
        this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', function (_) {
            _this.render();
        });
        return $.when(BaseForm.prototype.configure.apply(this, arguments), this.fetchChannels().then(function (channels) {
            _this.channels = channels;
            var currentChannelCode = UserContext.get('catalogScope');
            var currentChannel = _this.channels.find(function (channel) { return channel.code === currentChannelCode; });
            if (undefined === currentChannel) {
                currentChannel = _this.channels[0];
                UserContext.set('catalogScope', currentChannel.code);
            }
        }));
    };
    ChannelSwitcher.prototype.render = function () {
        var currentChannelCode = UserContext.get('catalogScope');
        var currentChannel = this.channels.find(function (channel) { return channel.code === currentChannelCode; });
        this.$el.html(this.template({
            channels: this.channels,
            currentScope: i18n.getLabel(currentChannel.labels, UserContext.get('catalogLocale'), currentChannel.code),
            catalogLocale: UserContext.get('catalogLocale'),
            i18n: i18n,
            displayInline: false,
            displayLabel: true,
            label: __('pim_enrich.entity.channel.uppercase_label'),
        }));
        return this;
    };
    ChannelSwitcher.prototype.changeChannel = function (event) {
        UserContext.set('catalogScope', event.currentTarget.dataset.scope);
        this.getRoot().trigger('pim_enrich:form:scope_switcher:change', {
            scopeCode: event.currentTarget.dataset.scope,
            context: 'base_product',
        });
        this.render();
    };
    ChannelSwitcher.prototype.fetchChannels = function () {
        return FetcherRegistry.getFetcher('channel').fetchAll();
    };
    return ChannelSwitcher;
}(BaseForm));
module.exports = ChannelSwitcher;


/***/ }),

/***/ 18800:
/*!********************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/dqi-dashboard/dashboard-filters.tsx ***!
  \********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var Filters_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src/application/component/Dashboard/Filters */ 59714);
var DashboardContext_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src/application/context/DashboardContext */ 74515);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var BaseDashboard = __webpack_require__(/*! akeneo/data-quality-insights/view/dqi-dashboard/base-dashboard */ 16586);
var Wrapper = function (_a) {
    var categoryCode = _a.categoryCode, categoryId = _a.categoryId, rootCategoryId = _a.rootCategoryId, familyCode = _a.familyCode;
    var isGranted = (0, shared_1.useSecurity)().isGranted;
    var category = categoryCode === null || categoryId === null || rootCategoryId === null
        ? null
        : {
            id: categoryId,
            code: categoryCode,
            rootCategoryId: rootCategoryId,
        };
    return (react_1.default.createElement(DashboardContext_1.DashboardContextProvider, { familyCode: familyCode, category: category },
        isGranted('pim_enrich_product_category_list') && react_1.default.createElement(Filters_1.CategoryFilter, { categoryCode: categoryCode }),
        react_1.default.createElement(Filters_1.FamilyFilter, { familyCode: familyCode })));
};
var DashboardFilters = (function (_super) {
    __extends(DashboardFilters, _super);
    function DashboardFilters(options) {
        return _super.call(this, __assign(__assign({}, options), { className: 'AknButtonList' })) || this;
    }
    DashboardFilters.prototype.render = function () {
        this.renderReact(Wrapper, {
            familyCode: this.familyCode,
            categoryCode: this.categoryCode,
            categoryId: this.categoryId,
            rootCategoryId: this.rootCategoryId,
        }, this.el);
        return this;
    };
    return DashboardFilters;
}(BaseDashboard));
module.exports = DashboardFilters;


/***/ }),

/***/ 38381:
/*!*****************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/dqi-dashboard/locale-switcher.ts ***!
  \*****************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var $ = __webpack_require__(/*! jquery */ 49845);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var BaseForm = __webpack_require__(/*! pim/form */ 59904);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var i18n = __webpack_require__(/*! pim/i18n */ 86705);
var template = __webpack_require__(/*! pim/template/product/locale-switcher */ 32965);
var LocaleSwitcher = (function (_super) {
    __extends(LocaleSwitcher, _super);
    function LocaleSwitcher(options) {
        var _this = _super.call(this, __assign(__assign({}, options), { className: 'AknDropdown AknButtonList-item locale-switcher' })) || this;
        _this.template = _.template(template);
        _this.locales = [];
        return _this;
    }
    LocaleSwitcher.prototype.events = function () {
        return {
            'click [data-locale]': 'changeLocale',
        };
    };
    LocaleSwitcher.prototype.configure = function () {
        var _this = this;
        return $.when(BaseForm.prototype.configure.apply(this, arguments), this.fetchLocales().then(function (locales) {
            _this.locales = locales;
            var currentLocaleCode = UserContext.get('catalogLocale');
            var currentLocale = _this.locales.find(function (locale) { return locale.code === currentLocaleCode; });
            if (undefined === currentLocale) {
                currentLocale = _this.locales[0];
                UserContext.set('catalogLocale', currentLocale.code);
            }
        }));
    };
    LocaleSwitcher.prototype.render = function () {
        var currentLocaleCode = UserContext.get('catalogLocale');
        var currentLocale = this.locales.find(function (locale) { return locale.code === currentLocaleCode; });
        this.$el.html(this.template({
            locales: this.locales,
            currentLocale: currentLocale,
            i18n: i18n,
            displayInline: false,
            displayLabel: true,
            label: __('pim_enrich.entity.locale.uppercase_label'),
        }));
        return this;
    };
    LocaleSwitcher.prototype.changeLocale = function (event) {
        UserContext.set('catalogLocale', event.currentTarget.dataset.locale);
        this.getRoot().trigger('pim_enrich:form:locale_switcher:change', {
            localeCode: event.currentTarget.dataset.locale,
            context: 'base_product',
        });
        this.render();
    };
    LocaleSwitcher.prototype.fetchLocales = function () {
        return FetcherRegistry.getFetcher('locale').fetchActivated();
    };
    return LocaleSwitcher;
}(BaseForm));
module.exports = LocaleSwitcher;


/***/ }),

/***/ 77755:
/*!**********************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/dqi-dashboard/section.tsx ***!
  \**********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var index_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src/index */ 4576);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var BaseDashboard = __webpack_require__(/*! akeneo/data-quality-insights/view/dqi-dashboard/base-dashboard */ 16586);
var SectionView = (function (_super) {
    __extends(SectionView, _super);
    function SectionView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SectionView.prototype.render = function () {
        var catalogLocale = UserContext.get('catalogLocale');
        var catalogChannel = UserContext.get('catalogScope');
        react_dom_1.default.render(react_1.default.createElement("div", null,
            react_1.default.createElement(index_1.DashboardHelper, null),
            react_1.default.createElement(index_1.Dashboard, { timePeriod: this.timePeriod, catalogLocale: catalogLocale, catalogChannel: catalogChannel, familyCode: this.familyCode, categoryCode: this.categoryCode, categoryId: this.categoryId, rootCategoryId: this.rootCategoryId, axes: this.axes })), this.el);
    };
    return SectionView;
}(BaseDashboard));
module.exports = SectionView;


/***/ }),

/***/ 22537:
/*!*******************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/pim-view/back-link.tsx ***!
  \*******************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var data_quality_insights_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights */ 4576);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var BackLink = (function (_super) {
    __extends(BackLink, _super);
    function BackLink() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackLink.prototype.configure = function () {
        var backLink = sessionStorage.getItem(data_quality_insights_1.BACK_LINK_SESSION_STORAGE_KEY);
        if (backLink) {
            mediator.on('route_start', function (route) {
                var backLinkParams = JSON.parse(backLink);
                if (backLinkParams.hasOwnProperty('displayLinkRoutes') && !backLinkParams.displayLinkRoutes.includes(route)) {
                    sessionStorage.removeItem(data_quality_insights_1.BACK_LINK_SESSION_STORAGE_KEY);
                }
            });
        }
        return BaseView.prototype.configure.apply(this, arguments);
    };
    BackLink.prototype.render = function () {
        var backLink = sessionStorage.getItem(data_quality_insights_1.BACK_LINK_SESSION_STORAGE_KEY);
        if (!backLink) {
            return this;
        }
        var backLinkParams = JSON.parse(backLink);
        react_dom_1.default.render(react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
            react_1.default.createElement(data_quality_insights_1.BackLinkButton, { label: backLinkParams.label, route: backLinkParams.route, routeParams: backLinkParams.routeParams })), this.el);
        return this;
    };
    BackLink.prototype.remove = function () {
        react_dom_1.default.unmountComponentAtNode(this.el);
        return _super.prototype.remove.call(this);
    };
    return BackLink;
}(BaseView));
module.exports = BackLink;


/***/ }),

/***/ 679:
/*!*********************************************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/product-edit-form/attribute-filter-all-missing-attributes.ts ***!
  \*********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var index_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src/index */ 4576);
var lodash_1 = __webpack_require__(/*! lodash */ 96486);
var $ = __webpack_require__(/*! jquery */ 49845);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var BaseForm = __webpack_require__(/*! pim/form */ 59904);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var AttributeFilterAllMissingAttributes = (function (_super) {
    __extends(AttributeFilterAllMissingAttributes, _super);
    function AttributeFilterAllMissingAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AttributeFilterAllMissingAttributes.prototype.filterValues = function (values) {
        return __awaiter(this, void 0, void 0, function () {
            var product, missing_attributes, valuesToFill;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        product = this.getFormData();
                        return [4, this.fetchProductEvaluation(product)];
                    case 1:
                        missing_attributes = _a.sent();
                        valuesToFill = (0, lodash_1.pick)(values, missing_attributes);
                        return [2, $.Deferred().resolve(valuesToFill).promise()];
                }
            });
        });
    };
    AttributeFilterAllMissingAttributes.prototype.fetchProductEvaluation = function (product) {
        return __awaiter(this, void 0, void 0, function () {
            var scope, locale, fetcher, data, attributes, axisCriteriaPath, enrichmentCriteria, criteria;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        scope = UserContext.get('catalogScope');
                        locale = UserContext.get('catalogLocale');
                        fetcher = product.meta.model_type === 'product_model' ? index_1.fetchProductModelEvaluation : index_1.fetchProductDataQualityEvaluation;
                        return [4, fetcher(product.meta.id)];
                    case 1:
                        data = _a.sent();
                        attributes = [];
                        axisCriteriaPath = [scope, locale];
                        enrichmentCriteria = [
                            'completeness_of_required_attributes',
                            'completeness_of_non_required_attributes',
                            'enrichment_image',
                        ];
                        if ((0, lodash_1.has)(data, axisCriteriaPath)) {
                            criteria = (0, lodash_1.get)(data, axisCriteriaPath)
                                .filter(function (criterionEvaluation) {
                                return enrichmentCriteria.includes(criterionEvaluation.code);
                            });
                            criteria.map(function (criterion) {
                                attributes.push.apply(attributes, criterion.improvable_attributes);
                            });
                        }
                        return [2, (0, lodash_1.uniq)(attributes)];
                }
            });
        });
    };
    AttributeFilterAllMissingAttributes.prototype.getCode = function () {
        return 'all_missing_attributes';
    };
    AttributeFilterAllMissingAttributes.prototype.getLabel = function () {
        return __('akeneo_data_quality_insights.product_edit_form.attribute_filter.all_missing_attributes');
    };
    AttributeFilterAllMissingAttributes.prototype.isVisible = function () {
        return true;
    };
    return AttributeFilterAllMissingAttributes;
}(BaseForm));
module.exports = AttributeFilterAllMissingAttributes;


/***/ }),

/***/ 47949:
/*!*****************************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/product-edit-form/attributes-tab-content.tsx ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var constant_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src/application/constant */ 84576);
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var AttributesTabContent = (function (_super) {
    __extends(AttributesTabContent, _super);
    function AttributesTabContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AttributesTabContent.prototype.render = function () {
        this.el.insertAdjacentHTML('beforeend', "\n      <div id=\"" + constant_1.ATTRIBUTES_TAB_CONTENT_CONTAINER_ELEMENT_ID + "\"></div>\n    ");
        return this;
    };
    return AttributesTabContent;
}(BaseView));
module.exports = AttributesTabContent;


/***/ }),

/***/ 26627:
/*!********************************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/product-edit-form/data-quality-insights-app.tsx ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var src_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src */ 4576);
var productReducer_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src/infrastructure/reducer/ProductEditForm/productReducer */ 2219);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var DataQualityInsightsApp = (function (_super) {
    __extends(DataQualityInsightsApp, _super);
    function DataQualityInsightsApp() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataQualityInsightsApp.prototype.configure = function () {
        var _this = this;
        this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', function (event) {
            window.dispatchEvent(new CustomEvent(src_1.CATALOG_CONTEXT_LOCALE_CHANGED, {
                detail: {
                    locale: event.localeCode,
                    context: event.context,
                },
            }));
        });
        this.listenTo(this.getRoot(), 'pim_enrich:form:scope_switcher:change', function (event) {
            window.dispatchEvent(new CustomEvent(src_1.CATALOG_CONTEXT_CHANNEL_CHANGED, {
                detail: {
                    channel: event.scopeCode,
                    context: event.context,
                },
            }));
        });
        window.addEventListener(src_1.DATA_QUALITY_INSIGHTS_SHOW_ATTRIBUTE, (function () {
            _this.getRoot().trigger('pim_enrich:form:switch_values_filter', 'all');
            _this.redirectToAttributesTab();
        }));
        window.addEventListener(src_1.DATA_QUALITY_INSIGHTS_FILTER_ALL_MISSING_ATTRIBUTES, function (_) {
            _this.getRoot().trigger('pim_enrich:form:switch_values_filter', 'all_missing_attributes');
            _this.redirectToAttributesTab();
        });
        window.addEventListener(src_1.DATA_QUALITY_INSIGHTS_FILTER_ALL_IMPROVABLE_ATTRIBUTES, function (_) {
            _this.getRoot().trigger('pim_enrich:form:switch_values_filter', 'all_improvable_attributes');
            _this.redirectToAttributesTab();
        });
        window.addEventListener(src_1.DATA_QUALITY_INSIGHTS_REDIRECT_TO_DQI_TAB, function () {
            _this.redirectToDQITab();
        });
        this.listenTo(this.getRoot(), 'column-tab:select-tab', function (_a) {
            var target = _a.target;
            window.dispatchEvent(new CustomEvent(src_1.PRODUCT_TAB_CHANGED, {
                detail: {
                    currentTab: target.dataset.tab,
                },
            }));
        });
        this.listenTo(this.getRoot(), 'pim_enrich:form:attributes:render:before', function () {
            window.dispatchEvent(new Event(src_1.PRODUCT_ATTRIBUTES_TAB_LOADING));
        });
        this.listenTo(this.getRoot(), 'pim_enrich:form:attributes:render:after', function () {
            window.dispatchEvent(new Event(src_1.PRODUCT_ATTRIBUTES_TAB_LOADED));
        });
        this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_save', function () {
            window.dispatchEvent(new Event(src_1.DATA_QUALITY_INSIGHTS_PRODUCT_SAVING));
        });
        this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_save', function () {
            window.dispatchEvent(new Event(src_1.DATA_QUALITY_INSIGHTS_PRODUCT_SAVED));
        });
        this.listenTo(this.getRoot(), 'pim:product:variant-navigation:navigate-to-level:before', function (event) {
            window.dispatchEvent(new CustomEvent(src_1.PRODUCT_MODEL_LEVEL_CHANGED, {
                detail: {
                    id: event.id,
                    model_type: event.model_type,
                },
            }));
        });
        window.dispatchEvent(new Event(src_1.DATA_QUALITY_INSIGHTS_PRODUCT_SAVED));
        return _super.prototype.configure.call(this);
    };
    DataQualityInsightsApp.prototype.redirectToAttributesTab = function () {
        var productData = this.getFormData();
        var tab = productData.meta.model_type === 'product_model' ? src_1.PRODUCT_MODEL_ATTRIBUTES_TAB_NAME : src_1.PRODUCT_ATTRIBUTES_TAB_NAME;
        this.redirectToTab(tab);
    };
    DataQualityInsightsApp.prototype.redirectToDQITab = function () {
        var productData = this.getFormData();
        var tab = productData.meta.model_type === 'product_model'
            ? src_1.PRODUCT_MODEL_DATA_QUALITY_INSIGHTS_TAB_NAME
            : src_1.PRODUCT_DATA_QUALITY_INSIGHTS_TAB_NAME;
        this.redirectToTab(tab);
    };
    DataQualityInsightsApp.prototype.redirectToTab = function (tab) {
        this.getRoot().trigger('column-tab:change-tab', {
            currentTarget: {
                dataset: {
                    tab: tab,
                },
            },
            target: {
                dataset: {
                    tab: tab,
                },
            },
        });
    };
    DataQualityInsightsApp.prototype.render = function () {
        var catalogLocale = UserContext.get('catalogLocale');
        var catalogChannel = UserContext.get('catalogScope');
        var product = this.getFormData();
        var FormApp = product.meta.model_type === 'product_model' ? src_1.ProductModelEditFormApp : src_1.ProductEditFormApp;
        var formAppProps = {
            catalogLocale: catalogLocale,
            catalogChannel: catalogChannel,
            product: product,
        };
        react_dom_1.default.render(react_1.default.createElement(FormApp, __assign({}, formAppProps)), this.el);
        return this;
    };
    DataQualityInsightsApp.prototype.remove = function () {
        react_dom_1.default.unmountComponentAtNode(this.el);
        src_1.productEditFormStore.dispatch((0, productReducer_1.unsetProductAction)());
        return _super.prototype.remove.call(this);
    };
    return DataQualityInsightsApp;
}(BaseView));
module.exports = DataQualityInsightsApp;


/***/ }),

/***/ 77064:
/*!****************************************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/product-edit-form/data-quality-insights-tab-content.tsx ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var src_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src */ 4576);
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var DataQualityInsightsTabContent = (function (_super) {
    __extends(DataQualityInsightsTabContent, _super);
    function DataQualityInsightsTabContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataQualityInsightsTabContent.prototype.configure = function () {
        this.trigger('tab:register', {
            code: this.code,
            label: __('akeneo_data_quality_insights.title'),
        });
        return _super.prototype.configure.call(this);
    };
    DataQualityInsightsTabContent.prototype.render = function () {
        this.el.insertAdjacentHTML('beforeend', "\n      <div id=\"" + src_1.DATA_QUALITY_INSIGHTS_TAB_CONTENT_CONTAINER_ELEMENT_ID + "\"></div>\n    ");
        this.showTabContent();
        return this;
    };
    DataQualityInsightsTabContent.prototype.showTabContent = function () {
        var productData = this.getFormData();
        var tab = productData.meta.model_type === 'product_model'
            ? src_1.PRODUCT_MODEL_DATA_QUALITY_INSIGHTS_TAB_NAME
            : src_1.PRODUCT_DATA_QUALITY_INSIGHTS_TAB_NAME;
        window.dispatchEvent(new CustomEvent(src_1.PRODUCT_TAB_CHANGED, {
            detail: {
                currentTab: tab,
            },
        }));
    };
    return DataQualityInsightsTabContent;
}(BaseView));
module.exports = DataQualityInsightsTabContent;


/***/ }),

/***/ 45744:
/*!****************************************************************************************************************!*\
  !*** ./public/bundles/akeneodataqualityinsights/js/infrastructure/product-edit-form/product-quality-score.tsx ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var src_1 = __webpack_require__(/*! @akeneo-pim-community/data-quality-insights/src */ 4576);
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var ProductQualityScore = (function (_super) {
    __extends(ProductQualityScore, _super);
    function ProductQualityScore() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProductQualityScore.prototype.render = function () {
        this.el.insertAdjacentHTML('beforeend', "\n      <div id=\"" + src_1.DATA_QUALITY_INSIGHTS_PRODUCT_QUALITY_SCORE_CONTAINER_ELEMENT_ID + "\"></div>\n    ");
        return this;
    };
    ProductQualityScore.prototype.remove = function () {
        return _super.prototype.remove.call(this);
    };
    return ProductQualityScore;
}(BaseView));
module.exports = ProductQualityScore;


/***/ }),

/***/ 10606:
/*!*****************************************************************************************!*\
  !*** ./public/bundles/akeneoidentifiergenerator/js/controller/identifier-generator.tsx ***!
  \*****************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var identifier_generator_1 = __webpack_require__(/*! @akeneo-pim-community/identifier-generator */ 93863);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 52273);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var IdentifierGeneratorController = (function (_super) {
    __extends(IdentifierGeneratorController, _super);
    function IdentifierGeneratorController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IdentifierGeneratorController.prototype.reactElementToMount = function () {
        return (react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
            react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
                react_1.default.createElement(identifier_generator_1.IdentifierGeneratorContext.Provider, { value: dependencies_1.identifierGeneratorDependencies },
                    react_1.default.createElement(identifier_generator_1.IdentifierGeneratorApp, null)))));
    };
    IdentifierGeneratorController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_identifier_generator_index$/;
    };
    IdentifierGeneratorController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-settings' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-settings-product-category' });
        return _super.prototype.renderRoute.call(this);
    };
    IdentifierGeneratorController.prototype.getContainerRef = function () {
        return IdentifierGeneratorController.container;
    };
    IdentifierGeneratorController.prototype.canLeave = function () {
        return !dependencies_1.identifierGeneratorDependencies.unsavedChanges.hasUnsavedChanges || confirm(__('pim_ui.flash.unsaved_changes'));
    };
    IdentifierGeneratorController.container = document.createElement('div');
    return IdentifierGeneratorController;
}(react_2.ReactController));
module.exports = IdentifierGeneratorController;


/***/ }),

/***/ 52273:
/*!*********************************************************************!*\
  !*** ./public/bundles/akeneoidentifiergenerator/js/dependencies.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.identifierGeneratorDependencies = void 0;
var identifierGeneratorDependencies = {
    unsavedChanges: {
        hasUnsavedChanges: false,
        setHasUnsavedChanges: function (newValue) {
            identifierGeneratorDependencies.unsavedChanges.hasUnsavedChanges = newValue;
        },
    },
};
exports.identifierGeneratorDependencies = identifierGeneratorDependencies;


/***/ }),

/***/ 49980:
/*!************************************************************************!*\
  !*** ./public/bundles/akeneojob/js/bridge/controller/job-instance.tsx ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var process_tracker_1 = __webpack_require__(/*! @akeneo-pim-community/process-tracker */ 11871);
var JobInstance = (function (_super) {
    __extends(JobInstance, _super);
    function JobInstance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    JobInstance.prototype.render = function () {
        var _a = this.getFormData(), code = _a.code, type = _a.type;
        this.renderReact(process_tracker_1.JobInstanceDetail, { code: code, type: type }, this.el);
        return this;
    };
    return JobInstance;
}(BaseView));
module.exports = JobInstance;


/***/ }),

/***/ 37459:
/*!***************************************************************************!*\
  !*** ./public/bundles/akeneojob/js/bridge/controller/process-tracker.tsx ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var process_tracker_1 = __webpack_require__(/*! @akeneo-pim-community/process-tracker */ 11871);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var ProcessTrackerController = (function (_super) {
    __extends(ProcessTrackerController, _super);
    function ProcessTrackerController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProcessTrackerController.prototype.reactElementToMount = function () {
        return (react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
            react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
                react_1.default.createElement(process_tracker_1.ProcessTrackerApp, null))));
    };
    ProcessTrackerController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_job_process_tracker_/;
    };
    ProcessTrackerController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-activity' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-activity-process-tracker' });
        return _super.prototype.renderRoute.call(this);
    };
    ProcessTrackerController.prototype.getContainerRef = function () {
        return ProcessTrackerController.container;
    };
    ProcessTrackerController.container = document.createElement('div');
    return ProcessTrackerController;
}(react_2.ReactController));
module.exports = ProcessTrackerController;


/***/ }),

/***/ 58098:
/*!*********************************************************************!*\
  !*** ./public/bundles/akeneomeasure/bridge/controller/settings.tsx ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var measurement_1 = __webpack_require__(/*! @akeneo-pim-community/measurement */ 18293);
var dependencies_1 = __webpack_require__(/*! ../dependencies */ 5267);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var SettingsController = (function (_super) {
    __extends(SettingsController, _super);
    function SettingsController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SettingsController.prototype.reactElementToMount = function () {
        return (react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
            react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
                react_1.default.createElement(measurement_1.ConfigContext.Provider, { value: dependencies_1.measurementsDependencies.config },
                    react_1.default.createElement(measurement_1.UnsavedChangesContext.Provider, { value: dependencies_1.measurementsDependencies.unsavedChanges },
                        react_1.default.createElement(measurement_1.MeasurementApp, null))))));
    };
    SettingsController.prototype.routeGuardToUnmount = function () {
        return /^akeneo_measurements_settings_/;
    };
    SettingsController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-settings' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-measurements-settings' });
        return _super.prototype.renderRoute.call(this);
    };
    SettingsController.prototype.getContainerRef = function () {
        return SettingsController.container;
    };
    SettingsController.prototype.canLeave = function () {
        return !dependencies_1.measurementsDependencies.unsavedChanges.hasUnsavedChanges || confirm(__('pim_ui.flash.unsaved_changes'));
    };
    SettingsController.container = document.createElement('div');
    return SettingsController;
}(react_2.ReactController));
module.exports = SettingsController;


/***/ }),

/***/ 5267:
/*!*************************************************************!*\
  !*** ./public/bundles/akeneomeasure/bridge/dependencies.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.measurementsDependencies = void 0;
var __moduleConfig = { "operations_max": 5, "units_max": 50, "families_max": 300 };
var measurementsDependencies = {
    config: __moduleConfig,
    unsavedChanges: {
        hasUnsavedChanges: false,
        setHasUnsavedChanges: function (newValue) {
            measurementsDependencies.unsavedChanges.hasUnsavedChanges = newValue;
        },
    },
};
exports.measurementsDependencies = measurementsDependencies;


/***/ }),

/***/ 51806:
/*!***************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/AttributeOptionsApp.tsx ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var contexts_1 = __webpack_require__(/*! ./contexts */ 37564);
var AttributeOptions_1 = __importDefault(__webpack_require__(/*! ./components/AttributeOptions */ 72658));
var OverridePimStyles_1 = __importDefault(__webpack_require__(/*! ./components/OverridePimStyles */ 55010));
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var AttributeOptionsApp = function (_a) {
    var attributeId = _a.attributeId, autoSortOptions = _a.autoSortOptions;
    return (react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
        react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
            react_1.default.createElement(contexts_1.AttributeContextProvider, { attributeId: attributeId, autoSortOptions: autoSortOptions },
                react_1.default.createElement(contexts_1.LocalesContextProvider, null,
                    react_1.default.createElement(contexts_1.AttributeOptionsContextProvider, null,
                        react_1.default.createElement(OverridePimStyles_1.default, null),
                        react_1.default.createElement(AttributeOptions_1.default, null)))))));
};
exports["default"] = AttributeOptionsApp;


/***/ }),

/***/ 13776:
/*!**************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/AttributeOptionForm.tsx ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var AttributeOptionForm = function (_a) {
    var _b;
    var option = _a.option, locale = _a.locale, onUpdateOptionLabel = _a.onUpdateOptionLabel;
    var inputRef = (0, react_1.useRef)(null);
    var _c = (0, contexts_1.useEditingOptionContext)(), addRef = _c.addRef, removeRef = _c.removeRef;
    var handleOnChange = (0, react_1.useCallback)(function (newLabel) { return onUpdateOptionLabel(newLabel, locale.code); }, []);
    (0, react_1.useEffect)(function () {
        addRef(locale.code, inputRef);
        var handleChangeRef = function (event) {
            if (!event.target || event.target.value === undefined) {
                return;
            }
            handleOnChange(event.target.value);
        };
        if (inputRef.current !== null) {
            inputRef.current.addEventListener('change', handleChangeRef);
        }
        return function () {
            removeRef(locale.code, inputRef);
            if (inputRef.current !== null) {
                inputRef.current.removeEventListener('change', handleChangeRef);
            }
        };
    }, [locale, addRef, removeRef]);
    return (react_1.default.createElement(Container, null,
        react_1.default.createElement(akeneo_design_system_1.Field, { label: locale.label, locale: locale.code },
            react_1.default.createElement(TextInputStyled, { ref: inputRef, value: (_b = option.optionValues[locale.code].value) !== null && _b !== void 0 ? _b : '', onChange: handleOnChange, "data-locale": locale.code, "data-testid": "attribute-option-label" }))));
};
var Container = styled_components_1.default.div.withConfig({ displayName: "Container", componentId: "sc-b6x3k1" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  margin-bottom: 20px;\n"], ["\n  margin-bottom: 20px;\n"])));
var TextInputStyled = (0, styled_components_1.default)(akeneo_design_system_1.TextInput).withConfig({ displayName: "TextInputStyled", componentId: "sc-v79ow9" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  padding: 0 9px;\n"], ["\n  padding: 0 9px;\n"])));
exports["default"] = AttributeOptionForm;
var templateObject_1, templateObject_2;


/***/ }),

/***/ 63596:
/*!**********************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/AttributeOptionQualityBadge.tsx ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var QualityBadge_1 = __importDefault(__webpack_require__(/*! ./QualityBadge */ 62501));
var goodBadge = react_1.default.createElement(QualityBadge_1.default, { label: 'good' });
var toImproveBadge = react_1.default.createElement(QualityBadge_1.default, { label: 'to_improve' });
var naBadge = react_1.default.createElement(QualityBadge_1.default, { label: 'n_a' });
var AttributeOptionQualityBadge = function (_a) {
    var toImprove = _a.toImprove;
    if (toImprove === undefined) {
        return null;
    }
    if (toImprove === 'n/a') {
        return naBadge;
    }
    return react_1.default.createElement(react_1.default.Fragment, null, toImprove ? toImproveBadge : goodBadge);
};
exports["default"] = AttributeOptionQualityBadge;


/***/ }),

/***/ 65481:
/*!*************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/AttributeOptionRow.tsx ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AttributeOptionRow = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var AttributeOptionQualityBadge_1 = __importDefault(__webpack_require__(/*! ./AttributeOptionQualityBadge */ 63596));
var AttributeOptionRow = (0, react_1.memo)(function (_a) {
    var isDraggable = _a.isDraggable, attributeOption = _a.attributeOption, onSelectItem = _a.onSelectItem, isSelected = _a.isSelected, onDelete = _a.onDelete, rest = __rest(_a, ["isDraggable", "attributeOption", "onSelectItem", "isSelected", "onDelete"]);
    var locale = (0, shared_1.useUserContext)().get('catalogLocale');
    var translate = (0, shared_1.useTranslate)();
    var handleDelete = (0, react_1.useCallback)(function () {
        onDelete(attributeOption);
    }, [onDelete, attributeOption]);
    var handleSelectRow = (0, react_1.useCallback)(function () { return onSelectItem(attributeOption.id); }, [onSelectItem, attributeOption]);
    return (react_1.default.createElement(TableRow, __assign({ "data-testid": "attribute-option-item", "data-attribute-option-role": "item", isDraggable: isDraggable, isSelected: isSelected, onClick: handleSelectRow, "data-is-selected": isSelected }, rest),
        !isDraggable && (react_1.default.createElement(TableCellNoDraggable, null,
            react_1.default.createElement(HandleContainer, null,
                react_1.default.createElement(akeneo_design_system_1.RowIcon, { size: 16 })))),
        react_1.default.createElement(TableCellLabel, { "data-testid": "attribute-option-item-label", rowTitle: true }, attributeOption.optionValues[locale] && attributeOption.optionValues[locale].value
            ? attributeOption.optionValues[locale].value
            : "[" + attributeOption.code + "]"),
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, { "data-testid": "attribute-option-item-code", "data-attribute-option-role": "item-code" }, attributeOption.code),
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, null,
            react_1.default.createElement(AttributeOptionQualityBadge_1.default, { toImprove: attributeOption.toImprove })),
        react_1.default.createElement(akeneo_design_system_1.Table.ActionCell, null,
            react_1.default.createElement(akeneo_design_system_1.IconButton, { icon: react_1.default.createElement(akeneo_design_system_1.CloseIcon, null), onClick: handleDelete, title: translate('pim_common.delete'), ghost: "borderless", level: "tertiary", "data-testid": "attribute-option-delete-button" }))));
});
exports.AttributeOptionRow = AttributeOptionRow;
var TableCellLabel = (0, styled_components_1.default)(akeneo_design_system_1.Table.Cell).withConfig({ displayName: "TableCellLabel", componentId: "sc-1jhdqz8" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  width: 35%;\n"], ["\n  width: 35%;\n"])));
var TableCellNoDraggable = (0, styled_components_1.default)(akeneo_design_system_1.Table.Cell).withConfig({ displayName: "TableCellNoDraggable", componentId: "sc-hhtz6i" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  width: 40px;\n"], ["\n  width: 40px;\n"])));
var HandleContainer = styled_components_1.default.div.withConfig({ displayName: "HandleContainer", componentId: "sc-u44egy" })(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"], ["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"])));
var TableRow = (0, styled_components_1.default)(akeneo_design_system_1.Table.Row).withConfig({ displayName: "TableRow", componentId: "sc-1lvijap" })(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  td:first-child {\n    color: ", ";\n  }\n"], ["\n  td:first-child {\n    color: ", ";\n  }\n"])), function (_a) {
    var isDraggable = _a.isDraggable;
    return (isDraggable ? (0, akeneo_design_system_1.getColor)('grey', 100) : (0, akeneo_design_system_1.getColor)('grey', 40));
});
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;


/***/ }),

/***/ 89847:
/*!***************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/AttributeOptionTable.tsx ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var hooks_1 = __webpack_require__(/*! ../hooks */ 66528);
var AutoOptionSorting_1 = __importDefault(__webpack_require__(/*! ./AutoOptionSorting */ 24960));
var NewOptionPlaceholder_1 = __importDefault(__webpack_require__(/*! ./NewOptionPlaceholder */ 51781));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var DeleteConfirmationModal_1 = __importDefault(__webpack_require__(/*! ./DeleteConfirmationModal */ 60768));
var NoResultOnSearch_1 = __importDefault(__webpack_require__(/*! ./NoResultOnSearch */ 5254));
var AttributeOptionRow_1 = __webpack_require__(/*! ./AttributeOptionRow */ 65481);
var AttributeOptionTable = function (_a) {
    var selectAttributeOption = _a.selectAttributeOption, selectedOptionId = _a.selectedOptionId, isNewOptionFormDisplayed = _a.isNewOptionFormDisplayed, showNewOptionForm = _a.showNewOptionForm, deleteAttributeOption = _a.deleteAttributeOption, manuallySortAttributeOptions = _a.manuallySortAttributeOptions;
    var translate = (0, shared_1.useTranslate)();
    var locale = (0, shared_1.useUserContext)().get('catalogLocale');
    var attributeContext = (0, contexts_1.useAttributeContext)();
    var attributeOptions = (0, react_1.useContext)(contexts_1.AttributeOptionsContext).attributeOptions;
    var _b = (0, hooks_1.useSortedAttributeOptions)(attributeOptions, attributeContext.autoSortOptions), sortedAttributeOptions = _b.sortedAttributeOptions, setSortedAttributeOptions = _b.setSortedAttributeOptions;
    var _c = (0, react_1.useState)(sortedAttributeOptions), filteredAttributeOptions = _c[0], setFilteredAttributeOptions = _c[1];
    var _d = (0, react_1.useState)(isNewOptionFormDisplayed), showNewOptionPlaceholder = _d[0], setShowNewOptionPlaceholder = _d[1];
    var _e = (0, react_1.useState)(attributeContext.autoSortOptions), isDraggable = _e[0], setIsDraggable = _e[1];
    var _f = (0, react_1.useState)(''), searchString = _f[0], setSearchString = _f[1];
    var _g = (0, react_1.useState)(false), autoSortingReadOnly = _g[0], setAutoSortingReadOnly = _g[1];
    var _h = (0, react_1.useState)(null), attributeOptionToDelete = _h[0], setAttributeOptionToDelete = _h[1];
    var inputRef = (0, react_1.useRef)(null);
    (0, akeneo_design_system_1.useAutoFocus)(inputRef);
    var onSelectItem = (0, react_1.useCallback)(function (optionId) {
        setShowNewOptionPlaceholder(false);
        selectAttributeOption(optionId);
        showNewOptionForm(false);
    }, [selectAttributeOption, showNewOptionForm]);
    var displayNewOptionPlaceholder = function () {
        setShowNewOptionPlaceholder(true);
        selectAttributeOption(null);
        showNewOptionForm(true);
    };
    var cancelNewOption = function () {
        showNewOptionForm(false);
        setShowNewOptionPlaceholder(false);
        if (attributeOptions !== null && attributeOptions.length > 0) {
            selectAttributeOption(attributeOptions[0].id);
        }
    };
    var reorderAttributeOptions = (0, react_1.useCallback)(function (newIndices) {
        setSortedAttributeOptions(function (rows) {
            var newSortedAttributeOptions = newIndices.map(function (index) { return rows[index]; }).filter(function (index) { return index !== undefined; });
            manuallySortAttributeOptions(newSortedAttributeOptions);
            return newSortedAttributeOptions;
        });
    }, [manuallySortAttributeOptions]);
    var filterOnLabelOrCode = (0, react_1.useCallback)(function (searchString) {
        if (sortedAttributeOptions) {
            setFilteredAttributeOptions(sortedAttributeOptions.filter(function (attributeOption) {
                var _a, _b;
                var search = searchString.toLowerCase().trim();
                return (((_a = attributeOption.code) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase().includes(search)) ||
                    ((_b = attributeOption.optionValues[locale].value) === null || _b === void 0 ? void 0 : _b.toLocaleLowerCase().includes(search)));
            }));
        }
    }, [sortedAttributeOptions, locale]);
    var search = (0, react_1.useCallback)(function (searchValue) {
        filterOnLabelOrCode(searchValue);
        if (searchValue) {
            setIsDraggable(false);
            setAutoSortingReadOnly(true);
        }
        else {
            if (!attributeContext.autoSortOptions) {
                setIsDraggable(true);
            }
            setAutoSortingReadOnly(false);
        }
    }, [filterOnLabelOrCode]);
    var debouncedSearch = (0, shared_1.useDebounceCallback)(search, 300);
    var onSearch = function (searchValue) {
        setSearchString(searchValue);
        debouncedSearch(searchValue);
    };
    var attributeOptionsCount = null === attributeOptions ? 0 : attributeOptions.length;
    var filteredAttributeOptionsCount = null === filteredAttributeOptions ? 0 : filteredAttributeOptions.length;
    (0, react_1.useEffect)(function () {
        if (selectedOptionId !== null) {
            setShowNewOptionPlaceholder(false);
        }
    }, [selectedOptionId]);
    (0, react_1.useEffect)(function () {
        attributeContext.autoSortOptions ? setIsDraggable(false) : setIsDraggable(true);
    }, [attributeContext.autoSortOptions]);
    (0, react_1.useEffect)(function () {
        setFilteredAttributeOptions(sortedAttributeOptions);
        setSearchString('');
    }, [sortedAttributeOptions]);
    var handleReorder = (0, react_1.useCallback)(function (newIndices) { return reorderAttributeOptions(newIndices); }, [reorderAttributeOptions]);
    return (react_1.default.createElement("div", { className: "AknSubsection AknAttributeOption-list" },
        react_1.default.createElement(SectionTitleStyled, null,
            react_1.default.createElement(akeneo_design_system_1.SectionTitle.Title, null, translate('pim_enrich.entity.attribute_option.module.edit.options_codes')),
            react_1.default.createElement(akeneo_design_system_1.SectionTitle.Spacer, null),
            react_1.default.createElement(akeneo_design_system_1.Button, { size: 'small', ghost: true, level: "tertiary", onClick: function () { return displayNewOptionPlaceholder(); }, "data-testid": "add-new-attribute-option-button" }, translate('pim_enrich.entity.product.module.attribute.add_option'))),
        filteredAttributeOptionsCount > 500 && (react_1.default.createElement(HelperStyled, { level: "warning" }, translate('pim_enrich.entity.attribute_option.module.edit.display_options_limit'))),
        react_1.default.createElement(akeneo_design_system_1.Search, { title: translate('pim_common.search'), placeholder: translate('pim_enrich.entity.attribute_option.module.edit.search.placeholder'), searchValue: searchString, onSearchChange: onSearch, inputRef: inputRef, sticky: 0 },
            react_1.default.createElement(akeneo_design_system_1.Search.ResultCount, null, translate('pim_common.result_count', { itemsCount: filteredAttributeOptionsCount }, filteredAttributeOptionsCount))),
        react_1.default.createElement("div", { "data-testid": "attribute-options-list", "data-attribute-option-role": "list" },
            filteredAttributeOptionsCount === 0 && attributeOptionsCount > 0 && react_1.default.createElement(NoResultOnSearch_1.default, null),
            filteredAttributeOptionsCount > 0 && filteredAttributeOptions !== null && (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(AutoOptionSorting_1.default, { readOnly: autoSortingReadOnly }),
                react_1.default.createElement(TableContainer, null,
                    react_1.default.createElement(SpacedTable, { isDragAndDroppable: isDraggable, onReorder: handleReorder },
                        react_1.default.createElement(akeneo_design_system_1.Table.Header, { sticky: 44 },
                            !isDraggable && react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, "\u00A0"),
                            react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_common.label')),
                            react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_common.code')),
                            react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, "\u00A0"),
                            react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, "\u00A0")),
                        react_1.default.createElement(akeneo_design_system_1.Table.Body, null,
                            filteredAttributeOptions.slice(0, 500).map(function (attributeOption) {
                                return (react_1.default.createElement(AttributeOptionRow_1.AttributeOptionRow, { isDraggable: isDraggable, attributeOption: attributeOption, onSelectItem: onSelectItem, isSelected: selectedOptionId === attributeOption.id, onDelete: setAttributeOptionToDelete, key: attributeContext.attributeId + "-" + attributeOption.code }));
                            }),
                            showNewOptionPlaceholder && (react_1.default.createElement(NewOptionPlaceholder_1.default, { cancelNewOption: cancelNewOption, isDraggable: isDraggable }))))),
                attributeOptionToDelete && (react_1.default.createElement(DeleteConfirmationModal_1.default, { attributeOptionCode: attributeOptionToDelete.code, confirmDelete: function () {
                        deleteAttributeOption(attributeOptionToDelete.id);
                        setAttributeOptionToDelete(null);
                    }, cancelDelete: function () { return setAttributeOptionToDelete(null); } })))))));
};
var SectionTitleStyled = (0, styled_components_1.default)(akeneo_design_system_1.SectionTitle).withConfig({ displayName: "SectionTitleStyled", componentId: "sc-1k5gh0a" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  margin-top: 20px;\n"], ["\n  margin-top: 20px;\n"])));
var HelperStyled = (0, styled_components_1.default)(akeneo_design_system_1.Helper).withConfig({ displayName: "HelperStyled", componentId: "sc-8phslo" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  margin-bottom: 10px;\n"], ["\n  margin-bottom: 10px;\n"])));
var SpacedTable = (0, styled_components_1.default)(akeneo_design_system_1.Table).withConfig({ displayName: "SpacedTable", componentId: "sc-835t14" })(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  th {\n    padding-top: 15px;\n  }\n"], ["\n  th {\n    padding-top: 15px;\n  }\n"])));
var TableContainer = styled_components_1.default.div.withConfig({ displayName: "TableContainer", componentId: "sc-oycbb8" })(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  height: calc(100vh - 394px);\n"], ["\n  height: calc(100vh - 394px);\n"])));
exports["default"] = AttributeOptionTable;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;


/***/ }),

/***/ 72658:
/*!***********************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/AttributeOptions.tsx ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var Edit_1 = __importDefault(__webpack_require__(/*! ./Edit */ 83218));
var New_1 = __importDefault(__webpack_require__(/*! ./New */ 20630));
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var EmptyAttributeOptionsList_1 = __importDefault(__webpack_require__(/*! ./EmptyAttributeOptionsList */ 9583));
var AttributeOptionTable_1 = __importDefault(__webpack_require__(/*! ./AttributeOptionTable */ 89847));
var AttributeOptions = function () {
    var _a = (0, react_1.useContext)(contexts_1.AttributeOptionsContext), attributeOptions = _a.attributeOptions, saveAttributeOption = _a.saveAttributeOption, createAttributeOption = _a.createAttributeOption, deleteAttributeOption = _a.deleteAttributeOption, reorderAttributeOptions = _a.reorderAttributeOptions, isSaving = _a.isSaving;
    var _b = (0, react_1.useState)(null), selectedOption = _b[0], setSelectedOption = _b[1];
    var _c = (0, react_1.useState)(false), showNewOptionForm = _c[0], setShowNewOptionForm = _c[1];
    var attributeContext = (0, contexts_1.useAttributeContext)();
    var notify = (0, shared_1.useNotify)();
    var translate = (0, shared_1.useTranslate)();
    (0, react_1.useEffect)(function () {
        if (attributeOptions !== null &&
            attributeOptions.length > 0 &&
            (selectedOption === null || !selectedOptionExists())) {
            setSelectedOption(attributeOptions[0]);
        }
        else if (attributeOptions === null || attributeOptions.length === 0) {
            setSelectedOption(null);
        }
    }, [attributeOptions]);
    (0, react_1.useEffect)(function () {
        setSelectedOption(null);
    }, [attributeContext.attributeId]);
    var selectedOptionExists = function () {
        return (attributeOptions &&
            selectedOption &&
            attributeOptions.filter(function (option) { return option.id === selectedOption.id; }).length === 1);
    };
    var selectAttributeOption = (0, react_1.useCallback)(function (optionId) { return __awaiter(void 0, void 0, void 0, function () {
        var option;
        return __generator(this, function (_a) {
            if (attributeOptions !== null) {
                option = attributeOptions.find(function (option) { return option.id === optionId; });
                if (option !== undefined) {
                    setSelectedOption(option);
                    setShowNewOptionForm(false);
                    return [2];
                }
            }
            setShowNewOptionForm(false);
            setSelectedOption(null);
            return [2];
        });
    }); }, [attributeOptions, setSelectedOption, setShowNewOptionForm]);
    var saveAttributeOptionCallback = function (attributeOption) { return __awaiter(void 0, void 0, void 0, function () {
        var error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4, saveAttributeOption(attributeOption)];
                case 1:
                    _a.sent();
                    return [3, 3];
                case 2:
                    error_1 = _a.sent();
                    notify(shared_1.NotificationLevel.ERROR, error_1);
                    return [3, 3];
                case 3: return [2];
            }
        });
    }); };
    var createAttributeOptionCallback = function (optionCode) { return __awaiter(void 0, void 0, void 0, function () {
        var attributeOption, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4, createAttributeOption(optionCode)];
                case 1:
                    attributeOption = _a.sent();
                    setShowNewOptionForm(false);
                    setSelectedOption(attributeOption);
                    return [3, 3];
                case 2:
                    error_2 = _a.sent();
                    notify(shared_1.NotificationLevel.ERROR, error_2);
                    return [3, 3];
                case 3: return [2];
            }
        });
    }); };
    var deleteAttributeOptionCallback = function (attributeOptionId) { return __awaiter(void 0, void 0, void 0, function () {
        var error_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4, deleteAttributeOption(attributeOptionId)];
                case 1:
                    _a.sent();
                    if (attributeOptions && selectedOption && selectedOption.id === attributeOptionId) {
                        setSelectedOption(attributeOptions[0]);
                    }
                    return [3, 3];
                case 2:
                    error_3 = _a.sent();
                    notify(shared_1.NotificationLevel.ERROR, translate(error_3));
                    return [3, 3];
                case 3: return [2];
            }
        });
    }); };
    var manuallySortAttributeOptions = (0, react_1.useCallback)(function (sortedAttributeOptions) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, reorderAttributeOptions(sortedAttributeOptions)];
                case 1:
                    _a.sent();
                    return [2];
            }
        });
    }); }, [reorderAttributeOptions]);
    return (react_1.default.createElement("div", { className: "AknAttributeOption" },
        (attributeOptions === null || isSaving) && react_1.default.createElement("div", { className: "AknLoadingMask" }),
        attributeOptions !== null && attributeOptions.length === 0 && !showNewOptionForm && (react_1.default.createElement(EmptyAttributeOptionsList_1.default, { showNewOptionForm: setShowNewOptionForm })),
        (attributeOptions !== null && attributeOptions.length === 0 && !showNewOptionForm) || (react_1.default.createElement(AttributeOptionTable_1.default, { selectAttributeOption: selectAttributeOption, selectedOptionId: selectedOption ? selectedOption.id : null, isNewOptionFormDisplayed: showNewOptionForm, showNewOptionForm: setShowNewOptionForm, deleteAttributeOption: deleteAttributeOptionCallback, manuallySortAttributeOptions: manuallySortAttributeOptions })),
        selectedOption !== null && !showNewOptionForm && (react_1.default.createElement(Edit_1.default, { option: selectedOption, saveAttributeOption: saveAttributeOptionCallback })),
        selectedOption === null && showNewOptionForm && react_1.default.createElement(New_1.default, { createAttributeOption: createAttributeOptionCallback })));
};
exports["default"] = AttributeOptions;


/***/ }),

/***/ 24960:
/*!************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/AutoOptionSorting.tsx ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var AutoOptionSorting = function (_a) {
    var _b;
    var readOnly = _a.readOnly;
    var translate = (0, shared_1.useTranslate)();
    var attributeContext = (0, contexts_1.useAttributeContext)();
    return (react_1.default.createElement(FieldContainer, { role: "toggle-sort-attribute-option" },
        react_1.default.createElement(akeneo_design_system_1.Field, { label: translate('pim_enrich.entity.attribute.property.auto_option_sorting') },
            react_1.default.createElement(akeneo_design_system_1.BooleanInput, { value: (_b = attributeContext.autoSortOptions) !== null && _b !== void 0 ? _b : false, readOnly: readOnly, yesLabel: translate('pim_common.yes'), noLabel: translate('pim_common.no'), onChange: function () { return attributeContext.toggleAutoSortOptions(); } }))));
};
var FieldContainer = styled_components_1.default.div.withConfig({ displayName: "FieldContainer", componentId: "sc-f55fem" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  margin-top: 20px;\n"], ["\n  margin-top: 20px;\n"])));
exports["default"] = AutoOptionSorting;
var templateObject_1;


/***/ }),

/***/ 60768:
/*!******************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/DeleteConfirmationModal.tsx ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var DeleteConfirmationModal = function (_a) {
    var attributeOptionCode = _a.attributeOptionCode, confirmDelete = _a.confirmDelete, cancelDelete = _a.cancelDelete;
    var translate = (0, shared_1.useTranslate)();
    return (react_1.default.createElement("div", { className: "modal modal--fullPage in", "data-testid": "attribute-option-delete-confirmation-modal" },
        react_1.default.createElement("div", { className: "AknFullPage" },
            react_1.default.createElement("div", { className: "AknFullPage-content AknFullPage-content--withIllustration" },
                react_1.default.createElement("div", null,
                    react_1.default.createElement("div", { className: "AknFullPage-image AknFullPage-illustration AknFullPage-illustration--delete" })),
                react_1.default.createElement("div", null,
                    react_1.default.createElement("div", { className: "AknFullPage-titleContainer" },
                        react_1.default.createElement("div", { className: "AknFullPage-subTitle" }, translate('pim_enrich.entity.attribute.plural_label')),
                        react_1.default.createElement("div", { className: "AknFullPage-title" }, translate('pim_enrich.entity.attribute_option.module.edit.delete_confirmation_title_msg', {
                            optionCode: attributeOptionCode,
                        })),
                        react_1.default.createElement("div", { className: "AknFullPage-description" }, translate('pim_enrich.entity.attribute_option.module.edit.delete_confirmation_subtitle_msg'))),
                    react_1.default.createElement("div", { className: "modal-body" }),
                    react_1.default.createElement("div", { className: "AknButtonList" },
                        react_1.default.createElement("div", { title: "Delete", className: "AknButton AknButtonList-item AknButton--apply AknButton--important ok", onClick: confirmDelete, "data-testid": "attribute-option-confirm-delete-button" }, translate('pim_common.delete')),
                        react_1.default.createElement("div", { className: "AknButton AknButton--grey AknButtonList-item cancel", onClick: cancelDelete, "data-testid": "attribute-option-confirm-cancel-button" }, translate('pim_common.cancel')))))),
        react_1.default.createElement("div", { className: "AknFullPage-cancel cancel", onClick: cancelDelete, "data-testid": "attribute-option-confirm-cancel-button" })));
};
exports["default"] = DeleteConfirmationModal;


/***/ }),

/***/ 83218:
/*!***********************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/Edit.tsx ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var AttributeOptionForm_1 = __importDefault(__webpack_require__(/*! ./AttributeOptionForm */ 13776));
var Edit = function (_a) {
    var option = _a.option, saveAttributeOption = _a.saveAttributeOption;
    var translate = (0, shared_1.useTranslate)();
    var locales = (0, contexts_1.useLocalesContext)();
    var _b = (0, react_1.useState)(option), updatedOption = _b[0], setUpdatedOption = _b[1];
    (0, react_1.useEffect)(function () {
        setUpdatedOption(option);
    }, [option]);
    var onUpdateOptionLabel = (0, react_1.useCallback)(function (newLabel, localeCode) {
        setUpdatedOption(function (updatedOption) {
            var newOption = __assign({}, updatedOption);
            newOption.optionValues[localeCode].value = newLabel;
            return newOption;
        });
    }, [setUpdatedOption]);
    var onSubmit = (0, react_1.useCallback)(function (event) {
        event.preventDefault();
        saveAttributeOption(updatedOption);
    }, [saveAttributeOption, updatedOption]);
    return (react_1.default.createElement(contexts_1.EditingOptionContextProvider, { option: option },
        react_1.default.createElement("form", { className: "AknSubsection AknAttributeOption-edit", onSubmit: onSubmit },
            react_1.default.createElement("div", { className: "AknSubsection-title AknSubsection-title--glued tabsection-title" },
                react_1.default.createElement("span", null, translate('pim_enrich.entity.attribute_option.module.edit.options_labels'))),
            react_1.default.createElement("div", { className: "AknAttributeOption-edit-translations" }, locales.map(function (locale) { return (react_1.default.createElement(AttributeOptionForm_1.default, { key: "option-form-" + option.code + "-" + locale.code, option: option, locale: locale, onUpdateOptionLabel: onUpdateOptionLabel })); })),
            react_1.default.createElement("div", { className: "AknAttributeOption-edit-saveTranslations" },
                react_1.default.createElement("button", { className: "AknButton AknButton--apply save", role: "save-options-translations", type: "submit" }, translate('pim_common.done'))))));
};
exports["default"] = Edit;


/***/ }),

/***/ 9583:
/*!********************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/EmptyAttributeOptionsList.tsx ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var EmptyAttributeOptionsList = function (_a) {
    var showNewOptionForm = _a.showNewOptionForm;
    var translate = (0, shared_1.useTranslate)();
    return (react_1.default.createElement("div", { className: "AknAttributeOption-emptyList" },
        react_1.default.createElement("img", { src: "/bundles/pimui/images/illustrations/Attribute.svg" }),
        react_1.default.createElement("div", { className: "AknAttributeOption-emptyList-message" }, translate('pim_enrich.entity.attribute_option.module.edit.no_options_msg')),
        react_1.default.createElement("div", { className: "AknAttributeOption-emptyList-addLink", onClick: function () { return showNewOptionForm(true); }, "data-testid": "add-new-attribute-option-button" }, translate('pim_enrich.entity.attribute_option.module.edit.add_option'))));
};
exports["default"] = EmptyAttributeOptionsList;


/***/ }),

/***/ 20630:
/*!**********************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/New.tsx ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var New = function (_a) {
    var createAttributeOption = _a.createAttributeOption;
    var translate = (0, shared_1.useTranslate)();
    var newOptionCodeRef = (0, react_1.useRef)(null);
    (0, react_1.useEffect)(function () {
        if (newOptionCodeRef !== null && newOptionCodeRef.current) {
            newOptionCodeRef.current.focus();
        }
    }, []);
    var createNewOptionFromCode = function (event) {
        event.preventDefault();
        if (newOptionCodeRef.current !== null && newOptionCodeRef.current.value) {
            createAttributeOption(newOptionCodeRef.current.value.trim());
        }
    };
    return (react_1.default.createElement("div", { className: "AknSubsection AknAttributeOption-edit" },
        react_1.default.createElement("div", { className: "AknSubsection-title AknSubsection-title--glued tabsection-title" },
            react_1.default.createElement("span", null, translate('pim_enrich.entity.attribute_option.module.edit.options_settings'))),
        react_1.default.createElement("form", { onSubmit: function (event) { return createNewOptionFromCode(event); } },
            react_1.default.createElement(Container, null,
                react_1.default.createElement(akeneo_design_system_1.Field, { label: translate('pim_enrich.entity.attribute_option.module.edit.option_code') },
                    react_1.default.createElement(TextInputStyled, { ref: newOptionCodeRef, "data-testid": "attribute-option-label" }))),
            react_1.default.createElement("button", { className: "AknButton AknButton--apply save", role: "create-option-button", type: "submit" }, translate('pim_common.done')))));
};
var Container = styled_components_1.default.div.withConfig({ displayName: "Container", componentId: "sc-18mhnwa" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  margin-bottom: 20px;\n"], ["\n  margin-bottom: 20px;\n"])));
var TextInputStyled = (0, styled_components_1.default)(akeneo_design_system_1.TextInput).withConfig({ displayName: "TextInputStyled", componentId: "sc-p502h4" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  padding: 0 9px;\n"], ["\n  padding: 0 9px;\n"])));
exports["default"] = New;
var templateObject_1, templateObject_2;


/***/ }),

/***/ 51781:
/*!***************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/NewOptionPlaceholder.tsx ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var useScrollIntoView_1 = __webpack_require__(/*! ../hooks/useScrollIntoView */ 56157);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var NewOptionPlaceholder = function (_a) {
    var cancelNewOption = _a.cancelNewOption, isDraggable = _a.isDraggable;
    var translate = (0, shared_1.useTranslate)();
    var placeholderRef = (0, react_1.useRef)(null);
    (0, useScrollIntoView_1.useScrollIntoView)(placeholderRef);
    return (react_1.default.createElement(TableRow, { isSelected: true, ref: placeholderRef, "data-testid": "new-option-placeholder" },
        !isDraggable && (react_1.default.createElement(TableCellNoDraggable, null,
            react_1.default.createElement(HandleContainer, null,
                react_1.default.createElement(akeneo_design_system_1.RowIcon, { size: 16 })))),
        react_1.default.createElement(TableCellLabel, { rowTitle: true }, "\u00A0"),
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, null, translate('pim_enrich.entity.attribute_option.module.edit.new_option_code')),
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, null, "\u00A0"),
        react_1.default.createElement(akeneo_design_system_1.Table.ActionCell, null,
            react_1.default.createElement(akeneo_design_system_1.IconButton, { icon: react_1.default.createElement(akeneo_design_system_1.CloseIcon, null), onClick: function () { return cancelNewOption(); }, title: translate('pim_common.delete'), ghost: "borderless", level: "tertiary", "data-testid": "new-option-cancel" }))));
};
var TableRow = (0, styled_components_1.default)(akeneo_design_system_1.Table.Row).withConfig({ displayName: "TableRow", componentId: "sc-11aayey" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  td:first-child {\n    color: ", ";\n  }\n"], ["\n  td:first-child {\n    color: ", ";\n  }\n"])), (0, akeneo_design_system_1.getColor)('grey', 40));
var TableCellLabel = (0, styled_components_1.default)(akeneo_design_system_1.Table.Cell).withConfig({ displayName: "TableCellLabel", componentId: "sc-1npmf19" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  width: 35%;\n"], ["\n  width: 35%;\n"])));
var TableCellNoDraggable = (0, styled_components_1.default)(akeneo_design_system_1.Table.Cell).withConfig({ displayName: "TableCellNoDraggable", componentId: "sc-z6muks" })(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  width: 40px;\n"], ["\n  width: 40px;\n"])));
var HandleContainer = styled_components_1.default.div.withConfig({ displayName: "HandleContainer", componentId: "sc-1jcrzr8" })(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"], ["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"])));
exports["default"] = NewOptionPlaceholder;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;


/***/ }),

/***/ 5254:
/*!***********************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/NoResultOnSearch.tsx ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var NoResultOnSearch = function () {
    var translate = (0, shared_1.useTranslate)();
    return (react_1.default.createElement(NoResultSection, null,
        react_1.default.createElement(akeneo_design_system_1.NoResultsIllustration, { size: 128 }),
        react_1.default.createElement(NoResultTitle, null, translate('pim_enrich.entity.attribute_option.module.edit.search.no_result.title'))));
};
var NoResultSection = styled_components_1.default.div.withConfig({ displayName: "NoResultSection", componentId: "sc-iflnnx" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  text-align: center;\n  margin-top: 42px;\n"], ["\n  text-align: center;\n  margin-top: 42px;\n"])));
var NoResultTitle = styled_components_1.default.div.withConfig({ displayName: "NoResultTitle", componentId: "sc-ejdk4n" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  color: ", ";\n  text-align: center;\n"], ["\n  color: ", ";\n  text-align: center;\n"])), (0, akeneo_design_system_1.getColor)('grey', 120));
exports["default"] = NoResultOnSearch;
var templateObject_1, templateObject_2;


/***/ }),

/***/ 55010:
/*!************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/OverridePimStyles.tsx ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var OverridePimStyle = function () {
    var style = "\n        .AknDefault-mainContent {\n            padding-bottom: 0px;\n        ";
    return react_1.default.createElement("style", null, style);
};
exports["default"] = OverridePimStyle;


/***/ }),

/***/ 62501:
/*!*******************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/components/QualityBadge.tsx ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var getQualityBadgeLevel_1 = __webpack_require__(/*! ../helper/getQualityBadgeLevel */ 11762);
var translate = __webpack_require__(/*! oro/translator */ 16393);
var QualityBadge = function (_a) {
    var label = _a.label;
    return (react_1.default.createElement(akeneo_design_system_1.Badge, { level: (0, getQualityBadgeLevel_1.getQualityBadgeLevel)(label) }, translate("akeneo_data_quality_insights.attribute_grid.quality." + label)));
};
exports["default"] = QualityBadge;


/***/ }),

/***/ 10502:
/*!*********************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/contexts/AttributeContext.tsx ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AttributeContextProvider = exports.useAttributeContext = exports.AttributeContext = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var useAttributeContextState_1 = __importDefault(__webpack_require__(/*! ../hooks/useAttributeContextState */ 42911));
exports.AttributeContext = (0, react_1.createContext)(undefined);
exports.AttributeContext.displayName = 'AttributeContext';
var useAttributeContext = function () {
    var attributeContext = (0, react_1.useContext)(exports.AttributeContext);
    if (!attributeContext) {
        throw new Error('[AttributeContext]: attribute context has not been properly initiated');
    }
    return attributeContext;
};
exports.useAttributeContext = useAttributeContext;
var AttributeContextProvider = function (_a) {
    var children = _a.children, attributeId = _a.attributeId, autoSortOptions = _a.autoSortOptions;
    var state = (0, useAttributeContextState_1.default)(attributeId, autoSortOptions);
    return react_1.default.createElement(exports.AttributeContext.Provider, { value: state }, children);
};
exports.AttributeContextProvider = AttributeContextProvider;


/***/ }),

/***/ 65882:
/*!************************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/contexts/AttributeOptionsContextProvider.tsx ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AttributeOptionsContext = exports.AttributeOptionsContextProvider = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var hooks_1 = __webpack_require__(/*! ../hooks */ 66528);
var AttributeContext_1 = __webpack_require__(/*! ./AttributeContext */ 10502);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var baseFetcher_1 = __importDefault(__webpack_require__(/*! ../fetchers/baseFetcher */ 51195));
var Events_1 = __webpack_require__(/*! ../model/Events */ 36278);
var AttributeOptionsContext = (0, react_1.createContext)({
    attributeOptions: null,
    saveAttributeOption: function () { },
    createAttributeOption: function (optionCode) {
        return Promise.resolve({
            code: optionCode,
            id: 0,
            optionValues: {},
            toImprove: undefined,
        });
    },
    deleteAttributeOption: function () { },
    reorderAttributeOptions: function () { },
    isSaving: false,
});
exports.AttributeOptionsContext = AttributeOptionsContext;
var mergeAttributeOptionsEvaluation = function (attributeOptions, evaluation) {
    if (!evaluation) {
        return attributeOptions;
    }
    Object.entries(evaluation.options).forEach(function (_a) {
        var _b;
        var optionCode = _a[0], optionEvaluation = _a[1];
        var optionIndex = attributeOptions.findIndex(function (attributeOption) { return attributeOption.code.toLowerCase() === optionCode.toLowerCase(); });
        var attributeOptionToUpdate = (_b = attributeOptions[optionIndex]) !== null && _b !== void 0 ? _b : null;
        if (attributeOptionToUpdate) {
            attributeOptionToUpdate.toImprove = optionEvaluation.toImprove > 0;
            attributeOptions[optionIndex] = attributeOptionToUpdate;
        }
    });
    return attributeOptions;
};
var AttributeOptionsContextProvider = function (_a) {
    var children = _a.children, attributeOptionsQualityFetcher = _a.attributeOptionsQualityFetcher;
    var attribute = (0, AttributeContext_1.useAttributeContext)();
    var _b = (0, react_1.useState)(null), attributeOptions = _b[0], setAttributeOptions = _b[1];
    var attributeOptionSaver = (0, hooks_1.useSaveAttributeOption)();
    var attributeOptionCreate = (0, hooks_1.useCreateAttributeOption)();
    var attributeOptionDelete = (0, hooks_1.useDeleteAttributeOption)();
    var attributeOptionManualSort = (0, hooks_1.useManualSortAttributeOptions)();
    var _c = (0, react_1.useState)(false), isSaving = _c[0], setIsSaving = _c[1];
    var route = (0, shared_1.useRoute)('pim_enrich_attributeoption_index', { attributeId: attribute.attributeId.toString() });
    var saveAttributeOption = (0, react_1.useCallback)(function (updatedAttributeOption) { return __awaiter(void 0, void 0, void 0, function () {
        var newAttributeOptions, attributeOptionsEvaluation;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!attributeOptions) {
                        return [2];
                    }
                    setIsSaving(true);
                    return [4, attributeOptionSaver(updatedAttributeOption)];
                case 1:
                    _a.sent();
                    newAttributeOptions = attributeOptions.map(function (attributeOption) {
                        return attributeOption.id === updatedAttributeOption.id ? updatedAttributeOption : attributeOption;
                    });
                    if (!attributeOptionsQualityFetcher) return [3, 3];
                    return [4, attributeOptionsQualityFetcher()];
                case 2:
                    attributeOptionsEvaluation = _a.sent();
                    newAttributeOptions = mergeAttributeOptionsEvaluation(newAttributeOptions, attributeOptionsEvaluation);
                    _a.label = 3;
                case 3:
                    setAttributeOptions(newAttributeOptions);
                    setIsSaving(false);
                    window.dispatchEvent(new CustomEvent(Events_1.ATTRIBUTE_OPTION_UPDATED));
                    return [2];
            }
        });
    }); }, [attributeOptions, attributeOptionSaver]);
    var createAttributeOption = (0, react_1.useCallback)(function (optionCode) { return __awaiter(void 0, void 0, void 0, function () {
        var attributeOption, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setIsSaving(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4, attributeOptionCreate(optionCode)];
                case 2:
                    attributeOption = _a.sent();
                    if (attributeOptions === null) {
                        setAttributeOptions([attributeOption]);
                    }
                    else {
                        setAttributeOptions(__spreadArray(__spreadArray([], attributeOptions, true), [attributeOption], false));
                    }
                    return [2, attributeOption];
                case 3:
                    error_1 = _a.sent();
                    throw error_1;
                case 4:
                    setIsSaving(false);
                    return [7];
                case 5: return [2];
            }
        });
    }); }, [attributeOptions, attributeOptionCreate]);
    var deleteAttributeOption = (0, react_1.useCallback)(function (attributeOptionId) { return __awaiter(void 0, void 0, void 0, function () {
        var index, newAttributeOptions;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!attributeOptions) {
                        return [2];
                    }
                    setIsSaving(true);
                    return [4, attributeOptionDelete(attributeOptionId)];
                case 1:
                    _a.sent();
                    index = attributeOptions.findIndex(function (attributeOption) { return attributeOption.id === attributeOptionId; });
                    newAttributeOptions = __spreadArray([], attributeOptions, true);
                    newAttributeOptions.splice(index, 1);
                    setAttributeOptions(newAttributeOptions);
                    setIsSaving(false);
                    window.dispatchEvent(new CustomEvent(Events_1.ATTRIBUTE_OPTION_DELETED));
                    return [2];
            }
        });
    }); }, [attributeOptions, attributeOptionDelete]);
    var reorderAttributeOptions = (0, react_1.useCallback)(function (sortedAttributeOptions) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setIsSaving(true);
                    return [4, attributeOptionManualSort(sortedAttributeOptions)];
                case 1:
                    _a.sent();
                    setIsSaving(false);
                    return [2];
            }
        });
    }); }, []);
    var handleRefreshEvaluation = (0, react_1.useCallback)(function () { return __awaiter(void 0, void 0, void 0, function () {
        var attributeOptionsEvaluation, newAttributeOptions;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(attributeOptionsQualityFetcher && attributeOptions !== null)) return [3, 2];
                    return [4, attributeOptionsQualityFetcher()];
                case 1:
                    attributeOptionsEvaluation = _a.sent();
                    newAttributeOptions = __spreadArray([], attributeOptions, true);
                    newAttributeOptions = mergeAttributeOptionsEvaluation(newAttributeOptions, attributeOptionsEvaluation);
                    setAttributeOptions(newAttributeOptions);
                    _a.label = 2;
                case 2: return [2];
            }
        });
    }); }, [attributeOptions, attributeOptionsQualityFetcher]);
    (0, react_1.useEffect)(function () {
        (function () { return __awaiter(void 0, void 0, void 0, function () {
            var attributeOptions_1, attributeOptionsEvaluation;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(attributeOptions === null)) return [3, 4];
                        return [4, (0, baseFetcher_1.default)(route)];
                    case 1:
                        attributeOptions_1 = _a.sent();
                        if (!attributeOptionsQualityFetcher) return [3, 3];
                        return [4, attributeOptionsQualityFetcher()];
                    case 2:
                        attributeOptionsEvaluation = _a.sent();
                        attributeOptions_1 = mergeAttributeOptionsEvaluation(attributeOptions_1, attributeOptionsEvaluation);
                        _a.label = 3;
                    case 3:
                        setAttributeOptions(attributeOptions_1);
                        _a.label = 4;
                    case 4: return [2];
                }
            });
        }); })();
    }, []);
    (0, react_1.useEffect)(function () {
        window.addEventListener('refreshEvaluation', handleRefreshEvaluation);
        return function () {
            window.removeEventListener('refreshEvaluation', handleRefreshEvaluation);
        };
    }, [handleRefreshEvaluation]);
    return (react_1.default.createElement(AttributeOptionsContext.Provider, { value: {
            attributeOptions: attributeOptions,
            saveAttributeOption: saveAttributeOption,
            createAttributeOption: createAttributeOption,
            deleteAttributeOption: deleteAttributeOption,
            reorderAttributeOptions: reorderAttributeOptions,
            isSaving: isSaving,
        } }, children));
};
exports.AttributeOptionsContextProvider = AttributeOptionsContextProvider;


/***/ }),

/***/ 67723:
/*!*************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/contexts/EditingOptionContext.tsx ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EditingOptionContextProvider = exports.useEditingOptionContext = exports.EditingOptionContext = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var useEditingOptionContextState_1 = __webpack_require__(/*! ../hooks/useEditingOptionContextState */ 20769);
exports.EditingOptionContext = (0, react_1.createContext)({
    option: null,
    addRef: function () { },
    removeRef: function () { },
});
exports.EditingOptionContext.displayName = 'EditingOptionContext';
var useEditingOptionContext = function () {
    return (0, react_1.useContext)(exports.EditingOptionContext);
};
exports.useEditingOptionContext = useEditingOptionContext;
var EditingOptionContextProvider = function (_a) {
    var children = _a.children, option = _a.option;
    var initialState = (0, useEditingOptionContextState_1.useEditingOptionContextState)(option);
    return react_1.default.createElement(exports.EditingOptionContext.Provider, { value: initialState }, children);
};
exports.EditingOptionContextProvider = EditingOptionContextProvider;


/***/ }),

/***/ 42003:
/*!*******************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/contexts/LocalesContext.tsx ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LocalesContextProvider = exports.useLocalesContext = exports.LocalesContext = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var useLocales_1 = __importDefault(__webpack_require__(/*! ../hooks/useLocales */ 67775));
exports.LocalesContext = (0, react_1.createContext)([]);
exports.LocalesContext.displayName = 'LocalesContext';
var useLocalesContext = function () {
    var localesContext = (0, react_1.useContext)(exports.LocalesContext);
    if (!localesContext) {
        throw new Error('[LocaleContext]: locales context has not been properly initiated');
    }
    return localesContext;
};
exports.useLocalesContext = useLocalesContext;
var LocalesContextProvider = function (_a) {
    var children = _a.children;
    var locales = (0, useLocales_1.default)();
    return react_1.default.createElement(exports.LocalesContext.Provider, { value: locales }, children);
};
exports.LocalesContextProvider = LocalesContextProvider;


/***/ }),

/***/ 37564:
/*!*********************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/contexts/index.ts ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AttributeOptionsContext = exports.AttributeOptionsContextProvider = exports.useLocalesContext = exports.LocalesContextProvider = exports.LocalesContext = exports.useAttributeContext = exports.AttributeContextState = exports.AttributeContextProvider = exports.AttributeContext = void 0;
var AttributeContext_1 = __webpack_require__(/*! ./AttributeContext */ 10502);
Object.defineProperty(exports, "AttributeContext", ({ enumerable: true, get: function () { return AttributeContext_1.AttributeContext; } }));
Object.defineProperty(exports, "AttributeContextProvider", ({ enumerable: true, get: function () { return AttributeContext_1.AttributeContextProvider; } }));
Object.defineProperty(exports, "AttributeContextState", ({ enumerable: true, get: function () { return AttributeContext_1.AttributeContextState; } }));
Object.defineProperty(exports, "useAttributeContext", ({ enumerable: true, get: function () { return AttributeContext_1.useAttributeContext; } }));
var LocalesContext_1 = __webpack_require__(/*! ./LocalesContext */ 42003);
Object.defineProperty(exports, "LocalesContext", ({ enumerable: true, get: function () { return LocalesContext_1.LocalesContext; } }));
Object.defineProperty(exports, "LocalesContextProvider", ({ enumerable: true, get: function () { return LocalesContext_1.LocalesContextProvider; } }));
Object.defineProperty(exports, "useLocalesContext", ({ enumerable: true, get: function () { return LocalesContext_1.useLocalesContext; } }));
var AttributeOptionsContextProvider_1 = __webpack_require__(/*! ./AttributeOptionsContextProvider */ 65882);
Object.defineProperty(exports, "AttributeOptionsContextProvider", ({ enumerable: true, get: function () { return AttributeOptionsContextProvider_1.AttributeOptionsContextProvider; } }));
Object.defineProperty(exports, "AttributeOptionsContext", ({ enumerable: true, get: function () { return AttributeOptionsContextProvider_1.AttributeOptionsContext; } }));
__exportStar(__webpack_require__(/*! ./EditingOptionContext */ 67723), exports);


/***/ }),

/***/ 51195:
/*!***************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/fetchers/baseFetcher.ts ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var baseFetcher = function (route) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4, fetch(route, {
                    method: 'GET',
                    headers: [
                        ['Content-type', 'application/json'],
                        ['X-Requested-With', 'XMLHttpRequest'],
                    ],
                })];
            case 1:
                response = _a.sent();
                return [4, response.json()];
            case 2: return [2, _a.sent()];
        }
    });
}); };
exports["default"] = baseFetcher;


/***/ }),

/***/ 11762:
/*!**********************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/helper/getQualityBadgeLevel.ts ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getQualityBadgeLevel = void 0;
var getQualityBadgeLevel = function (label) {
    if (label === 'good') {
        return 'primary';
    }
    if (label === 'to_improve') {
        return 'danger';
    }
    if (label === 'in_progress') {
        return 'warning';
    }
    return 'tertiary';
};
exports.getQualityBadgeLevel = getQualityBadgeLevel;


/***/ }),

/***/ 66528:
/*!******************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/index.ts ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useLocales = exports.useManualSortAttributeOptions = exports.useDeleteAttributeOption = exports.useCreateAttributeOption = exports.useSaveAttributeOption = void 0;
var useLocales_1 = __importDefault(__webpack_require__(/*! ./useLocales */ 67775));
exports.useLocales = useLocales_1.default;
var useSaveAttributeOption_1 = __webpack_require__(/*! ./useSaveAttributeOption */ 520);
Object.defineProperty(exports, "useSaveAttributeOption", ({ enumerable: true, get: function () { return useSaveAttributeOption_1.useSaveAttributeOption; } }));
var useCreateAttributeOption_1 = __webpack_require__(/*! ./useCreateAttributeOption */ 78823);
Object.defineProperty(exports, "useCreateAttributeOption", ({ enumerable: true, get: function () { return useCreateAttributeOption_1.useCreateAttributeOption; } }));
var useDeleteAttributeOption_1 = __webpack_require__(/*! ./useDeleteAttributeOption */ 36648);
Object.defineProperty(exports, "useDeleteAttributeOption", ({ enumerable: true, get: function () { return useDeleteAttributeOption_1.useDeleteAttributeOption; } }));
var useManualSortAttributeOptions_1 = __webpack_require__(/*! ./useManualSortAttributeOptions */ 46663);
Object.defineProperty(exports, "useManualSortAttributeOptions", ({ enumerable: true, get: function () { return useManualSortAttributeOptions_1.useManualSortAttributeOptions; } }));
__exportStar(__webpack_require__(/*! ./useEditingOptionContextState */ 20769), exports);
__exportStar(__webpack_require__(/*! ./useSortedAttributeOptions */ 29225), exports);


/***/ }),

/***/ 42911:
/*!*************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useAttributeContextState.ts ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __webpack_require__(/*! react */ 67294);
var model_1 = __webpack_require__(/*! ../model */ 85044);
var useAttributeContextState = function (attributeId, initialAutoSortOptions) {
    var _a = (0, react_1.useState)(initialAutoSortOptions), autoSortOptions = _a[0], setAutoSortOptions = _a[1];
    var toggleAutoSortOptions = (0, react_1.useCallback)(function () {
        var newValue = !autoSortOptions;
        setAutoSortOptions(newValue);
        window.dispatchEvent(new CustomEvent(model_1.ATTRIBUTE_OPTIONS_AUTO_SORT, {
            detail: {
                autoSortOptions: newValue,
            },
        }));
    }, [setAutoSortOptions, autoSortOptions]);
    return {
        attributeId: attributeId,
        autoSortOptions: autoSortOptions,
        toggleAutoSortOptions: toggleAutoSortOptions,
    };
};
exports["default"] = useAttributeContextState;


/***/ }),

/***/ 78823:
/*!*************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useCreateAttributeOption.ts ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useCreateAttributeOption = void 0;
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var useCreateAttributeOption = function () {
    var attribute = (0, contexts_1.useAttributeContext)();
    var route = (0, shared_1.useRoute)('pim_enrich_attributeoption_create', {
        attributeId: attribute.attributeId.toString(),
    });
    return function (attributeOptionCode) { return __awaiter(void 0, void 0, void 0, function () {
        var response, _a, responseContent;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4, fetch(route, {
                        method: 'POST',
                        headers: [
                            ['Content-type', 'application/json'],
                            ['X-Requested-With', 'XMLHttpRequest'],
                        ],
                        body: JSON.stringify({
                            code: attributeOptionCode,
                        }),
                    })];
                case 1:
                    response = _b.sent();
                    _a = response.status;
                    switch (_a) {
                        case 400: return [3, 2];
                    }
                    return [3, 4];
                case 2: return [4, response.json()];
                case 3:
                    responseContent = _b.sent();
                    throw responseContent.code;
                case 4: return [4, response.json()];
                case 5: return [2, _b.sent()];
            }
        });
    }); };
};
exports.useCreateAttributeOption = useCreateAttributeOption;


/***/ }),

/***/ 36648:
/*!*************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useDeleteAttributeOption.ts ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useDeleteAttributeOption = void 0;
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var useDeleteAttributeOption = function () {
    var router = (0, shared_1.useRouter)();
    var attribute = (0, contexts_1.useAttributeContext)();
    return function (attributeOptionId) { return __awaiter(void 0, void 0, void 0, function () {
        var response, _a, responseContent;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4, fetch(router.generate('pim_enrich_attributeoption_delete', {
                        attributeId: attribute.attributeId,
                        attributeOptionId: attributeOptionId,
                    }), {
                        method: 'DELETE',
                        headers: [
                            ['Content-type', 'application/json'],
                            ['X-Requested-With', 'XMLHttpRequest'],
                        ],
                    })];
                case 1:
                    response = _b.sent();
                    _a = response.status;
                    switch (_a) {
                        case 400: return [3, 2];
                    }
                    return [3, 4];
                case 2: return [4, response.json()];
                case 3:
                    responseContent = _b.sent();
                    throw responseContent.message;
                case 4: return [2];
            }
        });
    }); };
};
exports.useDeleteAttributeOption = useDeleteAttributeOption;


/***/ }),

/***/ 20769:
/*!*****************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useEditingOptionContextState.ts ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useEditingOptionContextState = exports.PIM_ATTRIBUTE_OPTION_EDITING = exports.PIM_ATTRIBUTE_OPTION_LABEL_FORM_REMOVED = exports.PIM_ATTRIBUTE_OPTION_LABEL_FORM_ADDED = void 0;
var react_1 = __webpack_require__(/*! react */ 67294);
exports.PIM_ATTRIBUTE_OPTION_LABEL_FORM_ADDED = 'option-form-added';
exports.PIM_ATTRIBUTE_OPTION_LABEL_FORM_REMOVED = 'option-form-removed';
exports.PIM_ATTRIBUTE_OPTION_EDITING = 'option-editing';
var useEditingOptionContextState = function (option) {
    var handleAddRef = (0, react_1.useCallback)(function (locale, ref) {
        window.dispatchEvent(new CustomEvent(exports.PIM_ATTRIBUTE_OPTION_LABEL_FORM_ADDED, {
            detail: {
                locale: locale,
                code: option.code,
                ref: ref,
            },
        }));
    }, [option]);
    var handleRemoveRef = (0, react_1.useCallback)(function (locale, ref) {
        window.dispatchEvent(new CustomEvent(exports.PIM_ATTRIBUTE_OPTION_LABEL_FORM_REMOVED, {
            detail: {
                locale: locale,
                code: option.code,
                ref: ref,
            },
        }));
    }, [option]);
    (0, react_1.useEffect)(function () {
        window.dispatchEvent(new CustomEvent(exports.PIM_ATTRIBUTE_OPTION_EDITING, {
            detail: {
                option: option,
            },
        }));
    }, [option]);
    return {
        option: option,
        addRef: handleAddRef,
        removeRef: handleRemoveRef,
    };
};
exports.useEditingOptionContextState = useEditingOptionContextState;


/***/ }),

/***/ 67775:
/*!***********************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useLocales.ts ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __webpack_require__(/*! react */ 67294);
var baseFetcher_1 = __importDefault(__webpack_require__(/*! ../fetchers/baseFetcher */ 51195));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var useLocales = function () {
    var _a = (0, react_1.useState)([]), locales = _a[0], setLocales = _a[1];
    var route = (0, shared_1.useRoute)('pim_enrich_locale_rest_index', { activated: 'true' });
    (0, react_1.useEffect)(function () {
        (function () { return __awaiter(void 0, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = setLocales;
                        return [4, (0, baseFetcher_1.default)(route)];
                    case 1:
                        _a.apply(void 0, [_b.sent()]);
                        return [2];
                }
            });
        }); })();
    }, []);
    return locales;
};
exports["default"] = useLocales;


/***/ }),

/***/ 46663:
/*!******************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useManualSortAttributeOptions.ts ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useManualSortAttributeOptions = void 0;
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var useManualSortAttributeOptions = function () {
    var attribute = (0, contexts_1.useAttributeContext)();
    var route = (0, shared_1.useRoute)('pim_enrich_attributeoption_update_sorting', {
        attributeId: attribute.attributeId.toString(),
    });
    return function (attributeOptions) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, fetch(route, {
                        method: 'PUT',
                        headers: [
                            ['Content-type', 'application/json'],
                            ['X-Requested-With', 'XMLHttpRequest'],
                        ],
                        body: JSON.stringify(attributeOptions.map(function (option) { return option.id; })),
                    })];
                case 1:
                    _a.sent();
                    return [2];
            }
        });
    }); };
};
exports.useManualSortAttributeOptions = useManualSortAttributeOptions;


/***/ }),

/***/ 520:
/*!***********************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useSaveAttributeOption.ts ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useSaveAttributeOption = void 0;
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var contexts_1 = __webpack_require__(/*! ../contexts */ 37564);
var useSaveAttributeOption = function () {
    var router = (0, shared_1.useRouter)();
    var attribute = (0, contexts_1.useAttributeContext)();
    return function (attributeOption) { return __awaiter(void 0, void 0, void 0, function () {
        var body, response, _a, responseContent;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    body = __assign({}, attributeOption);
                    delete body.toImprove;
                    return [4, fetch(router.generate('pim_enrich_attributeoption_update', {
                            attributeId: attribute.attributeId,
                            attributeOptionId: attributeOption.id,
                        }), {
                            method: 'PUT',
                            headers: [
                                ['Content-type', 'application/json'],
                                ['X-Requested-With', 'XMLHttpRequest'],
                            ],
                            body: JSON.stringify(body),
                        })];
                case 1:
                    response = _b.sent();
                    _a = response.status;
                    switch (_a) {
                        case 400: return [3, 2];
                    }
                    return [3, 4];
                case 2: return [4, response.json()];
                case 3:
                    responseContent = _b.sent();
                    if (responseContent.hasOwnProperty('code')) {
                        throw responseContent.code;
                    }
                    if (responseContent.hasOwnProperty('optionValues')) {
                        throw responseContent.optionValues;
                    }
                    _b.label = 4;
                case 4: return [2];
            }
        });
    }); };
};
exports.useSaveAttributeOption = useSaveAttributeOption;


/***/ }),

/***/ 56157:
/*!******************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useScrollIntoView.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useScrollIntoView = void 0;
var react_1 = __webpack_require__(/*! react */ 67294);
var useScrollIntoView = function (ref) {
    (0, react_1.useLayoutEffect)(function () {
        if (ref.current) {
            ref.current.scrollIntoView();
        }
    }, []);
};
exports.useScrollIntoView = useScrollIntoView;


/***/ }),

/***/ 29225:
/*!**************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/hooks/useSortedAttributeOptions.ts ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useSortedAttributeOptions = void 0;
var react_1 = __webpack_require__(/*! react */ 67294);
var useSortedAttributeOptions = function (attributeOptions, autoSortOptions) {
    var _a = (0, react_1.useState)(attributeOptions), sortedAttributeOptions = _a[0], setSortedAttributeOptions = _a[1];
    (0, react_1.useEffect)(function () {
        if (attributeOptions !== null) {
            var sortedOptions = __spreadArray([], attributeOptions, true);
            if (autoSortOptions) {
                sortedOptions.sort(function (option1, option2) {
                    return option1.code.localeCompare(option2.code, undefined, { sensitivity: 'base' });
                });
            }
            setSortedAttributeOptions(sortedOptions);
        }
    }, [attributeOptions, autoSortOptions]);
    return {
        sortedAttributeOptions: sortedAttributeOptions,
        setSortedAttributeOptions: setSortedAttributeOptions,
    };
};
exports.useSortedAttributeOptions = useSortedAttributeOptions;


/***/ }),

/***/ 5701:
/*!************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/index.ts ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ATTRIBUTE_OPTIONS_AUTO_SORT = exports.AttributeOptionsApp = void 0;
var AttributeOptionsApp_1 = __importDefault(__webpack_require__(/*! ./AttributeOptionsApp */ 51806));
exports.AttributeOptionsApp = AttributeOptionsApp_1.default;
var model_1 = __webpack_require__(/*! ./model */ 85044);
Object.defineProperty(exports, "ATTRIBUTE_OPTIONS_AUTO_SORT", ({ enumerable: true, get: function () { return model_1.ATTRIBUTE_OPTIONS_AUTO_SORT; } }));


/***/ }),

/***/ 94956:
/*!**************************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/model/AttributeOption.interface.ts ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 36278:
/*!*******************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/model/Events.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ATTRIBUTE_OPTION_DELETED = exports.ATTRIBUTE_OPTION_UPDATED = exports.ATTRIBUTE_OPTIONS_AUTO_SORT = void 0;
exports.ATTRIBUTE_OPTIONS_AUTO_SORT = 'attribute-options:auto-sort';
exports.ATTRIBUTE_OPTION_UPDATED = 'attribute-options:updated';
exports.ATTRIBUTE_OPTION_DELETED = 'attribute-options:deleted';


/***/ }),

/***/ 49989:
/*!*****************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/model/Locale.interface.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 26636:
/*!*********************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/model/SpellcheckEvaluation.ts ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 85044:
/*!******************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute-option/model/index.ts ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ATTRIBUTE_OPTIONS_AUTO_SORT = exports.Locale = exports.OptionValue = exports.AttributeOption = void 0;
var Locale_interface_1 = __webpack_require__(/*! ./Locale.interface */ 49989);
Object.defineProperty(exports, "Locale", ({ enumerable: true, get: function () { return Locale_interface_1.Locale; } }));
var AttributeOption_interface_1 = __webpack_require__(/*! ./AttributeOption.interface */ 94956);
Object.defineProperty(exports, "AttributeOption", ({ enumerable: true, get: function () { return AttributeOption_interface_1.AttributeOption; } }));
Object.defineProperty(exports, "OptionValue", ({ enumerable: true, get: function () { return AttributeOption_interface_1.OptionValue; } }));
var Events_1 = __webpack_require__(/*! ./Events */ 36278);
Object.defineProperty(exports, "ATTRIBUTE_OPTIONS_AUTO_SORT", ({ enumerable: true, get: function () { return Events_1.ATTRIBUTE_OPTIONS_AUTO_SORT; } }));
__exportStar(__webpack_require__(/*! ./SpellcheckEvaluation */ 26636), exports);


/***/ }),

/***/ 38867:
/*!**************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/controller/AssociationTypesSettings.tsx ***!
  \**************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var settings_ui_1 = __webpack_require__(/*! @akeneo-pim-community/settings-ui */ 43762);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var AssociationTypesSettings = (function (_super) {
    __extends(AssociationTypesSettings, _super);
    function AssociationTypesSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AssociationTypesSettings.prototype.reactElementToMount = function () {
        return react_1.default.createElement(settings_ui_1.AssociationTypesApp, null);
    };
    AssociationTypesSettings.prototype.routeGuardToUnmount = function () {
        return /pim_enrich_associationtype_index/;
    };
    AssociationTypesSettings.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-settings' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-settings-association-type' });
        return _super.prototype.renderRoute.call(this);
    };
    return AssociationTypesSettings;
}(react_2.ReactController));
module.exports = AssociationTypesSettings;


/***/ }),

/***/ 45110:
/*!*************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/controller/AttributeGroupsSettings.tsx ***!
  \*************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var settings_ui_1 = __webpack_require__(/*! @akeneo-pim-community/settings-ui */ 43762);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var AttributeGroupsSettings = (function (_super) {
    __extends(AttributeGroupsSettings, _super);
    function AttributeGroupsSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AttributeGroupsSettings.prototype.reactElementToMount = function () {
        return react_1.default.createElement(settings_ui_1.AttributeGroupsApp, null);
    };
    AttributeGroupsSettings.prototype.routeGuardToUnmount = function () {
        return /pim_enrich_attributegroup_index/;
    };
    AttributeGroupsSettings.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-settings' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-settings-attribute-group' });
        return _super.prototype.renderRoute.call(this);
    };
    return AttributeGroupsSettings;
}(react_2.ReactController));
module.exports = AttributeGroupsSettings;


/***/ }),

/***/ 70058:
/*!*****************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/controller/LocalesSettings.tsx ***!
  \*****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var settings_ui_1 = __webpack_require__(/*! @akeneo-pim-community/settings-ui */ 43762);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var LocalesSettings = (function (_super) {
    __extends(LocalesSettings, _super);
    function LocalesSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LocalesSettings.prototype.reactElementToMount = function () {
        return react_1.default.createElement(settings_ui_1.LocalesApp, null);
    };
    LocalesSettings.prototype.routeGuardToUnmount = function () {
        return /pim_enrich_locale_index/;
    };
    LocalesSettings.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-settings' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-settings-locale' });
        return _super.prototype.renderRoute.call(this);
    };
    return LocalesSettings;
}(react_2.ReactController));
module.exports = LocalesSettings;


/***/ }),

/***/ 13013:
/*!*******************************************************!*\
  !*** ./public/bundles/pimanalytics/js/SystemInfo.tsx ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SystemInfo = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var SystemInfoHook_1 = __webpack_require__(/*! ./SystemInfoHook */ 70998);
var TableCell = (0, styled_components_1.default)(akeneo_design_system_1.Table.Cell).withConfig({ displayName: "TableCell", componentId: "sc-zy9prm" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  white-space: normal;\n"], ["\n  white-space: normal;\n"])));
var TableCellList = (0, styled_components_1.default)(akeneo_design_system_1.Table.Cell).withConfig({ displayName: "TableCellList", componentId: "sc-1tbkgf8" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  white-space: normal;\n  overflow-wrap: break-word;\n  div {\n    display: block;\n  }\n"], ["\n  white-space: normal;\n  overflow-wrap: break-word;\n  div {\n    display: block;\n  }\n"])));
var SystemInfo = function () {
    var translate = (0, shared_1.useTranslate)();
    var systemHomeRoute = (0, shared_1.useRoute)('pim_system_index');
    var downloadTxtRoute = (0, shared_1.useRoute)('pim_analytics_system_info_download');
    var systemInfoData = (0, SystemInfoHook_1.useSystemInfo)();
    var renderArraySystemInfo = function (infoValue) {
        return infoValue.map(function (subInfoValue, subInfoKey) {
            return react_1.default.createElement("div", { key: "" + subInfoKey }, renderSystemInfoValue(subInfoValue));
        });
    };
    var renderNestedObjectSystemInfo = function (infoValue, keyPrefix) {
        if (keyPrefix === void 0) { keyPrefix = ''; }
        return Object.entries(infoValue).map(function (_a) {
            var subInfoKey = _a[0], subInfoValue = _a[1];
            var infoKey = keyPrefix !== '' ? keyPrefix + '.' + subInfoKey : subInfoKey;
            return typeof subInfoValue === 'object' ? (renderSystemInfoValue(subInfoValue, subInfoKey)) : (react_1.default.createElement("div", { key: "" + infoKey },
                translate('pim_analytics.info_type.' + infoKey),
                ": ",
                subInfoValue));
        });
    };
    var renderSystemInfoValue = function (infoValue, keyPrefix) {
        if (keyPrefix === void 0) { keyPrefix = ''; }
        if (typeof infoValue === 'boolean') {
            return infoValue ? '1' : '0';
        }
        if (Array.isArray(infoValue)) {
            return renderArraySystemInfo(infoValue);
        }
        if (typeof infoValue === 'object') {
            return renderNestedObjectSystemInfo(infoValue, keyPrefix);
        }
        return infoValue;
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(shared_1.PageHeader, null,
            react_1.default.createElement(shared_1.PageHeader.Breadcrumb, null,
                react_1.default.createElement(akeneo_design_system_1.Breadcrumb, null,
                    react_1.default.createElement(akeneo_design_system_1.Breadcrumb.Step, { href: "#" + systemHomeRoute }, translate('pim_menu.tab.system')),
                    react_1.default.createElement(akeneo_design_system_1.Breadcrumb.Step, null, translate('pim_analytics.system_info.title')))),
            react_1.default.createElement(shared_1.PageHeader.UserActions, null,
                react_1.default.createElement(shared_1.PimView, { viewName: "pim-menu-user-navigation", className: "AknTitleContainer-userMenuContainer AknTitleContainer-userMenu" })),
            react_1.default.createElement(shared_1.PageHeader.Actions, null,
                react_1.default.createElement(akeneo_design_system_1.Button, { href: downloadTxtRoute, level: "tertiary", ghost: true }, translate('pim_analytics.system_info.download'))),
            react_1.default.createElement(shared_1.PageHeader.Title, null, translate('pim_analytics.system_info.title'))),
        react_1.default.createElement(shared_1.PageContent, null,
            react_1.default.createElement(akeneo_design_system_1.Table, null,
                react_1.default.createElement(akeneo_design_system_1.Table.Header, null,
                    react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, { width: "35%" }, translate('pim_analytics.info_header.property')),
                    react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_analytics.info_header.information'))),
                react_1.default.createElement(akeneo_design_system_1.Table.Body, null, Object.entries(systemInfoData).map(function (_a) {
                    var systemInfoType = _a[0], systemInfoValue = _a[1];
                    return (react_1.default.createElement(akeneo_design_system_1.Table.Row, { key: systemInfoType },
                        react_1.default.createElement(TableCell, null, translate('pim_analytics.info_type.' + systemInfoType)),
                        react_1.default.createElement(TableCellList, null, renderSystemInfoValue(systemInfoValue))));
                }))))));
};
exports.SystemInfo = SystemInfo;
var templateObject_1, templateObject_2;


/***/ }),

/***/ 26446:
/*!**********************************************************!*\
  !*** ./public/bundles/pimanalytics/js/SystemInfoApp.tsx ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SystemInfoApp = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var SystemInfo_1 = __webpack_require__(/*! ./SystemInfo */ 13013);
var SystemInfoApp = function () {
    return (react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
        react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
            react_1.default.createElement(SystemInfo_1.SystemInfo, null))));
};
exports.SystemInfoApp = SystemInfoApp;


/***/ }),

/***/ 9655:
/*!*************************************************************!*\
  !*** ./public/bundles/pimanalytics/js/SystemInfoFetcher.ts ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fetchSystemInfo = void 0;
var Routing = __webpack_require__(/*! routing */ 60847);
var ROUTE_NAME = 'pim_analytics_system_info_rest_index';
var fetchSystemInfo = function () { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4, fetch(Routing.generate(ROUTE_NAME))];
            case 1:
                response = _a.sent();
                return [4, response.json()];
            case 2: return [2, _a.sent()];
        }
    });
}); };
exports.fetchSystemInfo = fetchSystemInfo;


/***/ }),

/***/ 70998:
/*!**********************************************************!*\
  !*** ./public/bundles/pimanalytics/js/SystemInfoHook.ts ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useSystemInfo = void 0;
var react_1 = __webpack_require__(/*! react */ 67294);
var SystemInfoFetcher_1 = __webpack_require__(/*! ./SystemInfoFetcher */ 9655);
var useSystemInfo = function () {
    var _a = (0, react_1.useState)({}), systemInfoData = _a[0], setSystemInfoData = _a[1];
    (0, react_1.useEffect)(function () {
        (function () { return __awaiter(void 0, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, (0, SystemInfoFetcher_1.fetchSystemInfo)()];
                    case 1:
                        response = _a.sent();
                        setSystemInfoData(response);
                        return [2];
                }
            });
        }); })();
    }, []);
    return systemInfoData;
};
exports.useSystemInfo = useSystemInfo;


/***/ }),

/***/ 76149:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimanalytics/js/controller/system-info-controller.tsx ***!
  \******************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var SystemInfoApp_1 = __webpack_require__(/*! ../SystemInfoApp */ 26446);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var SystemInfoController = (function (_super) {
    __extends(SystemInfoController, _super);
    function SystemInfoController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SystemInfoController.prototype.reactElementToMount = function () {
        return react_1.default.createElement(SystemInfoApp_1.SystemInfoApp, null);
    };
    SystemInfoController.prototype.routeGuardToUnmount = function () {
        return /pim_analytics_system_info_index/;
    };
    SystemInfoController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-system' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-system-info' });
        return _super.prototype.renderRoute.call(this);
    };
    return SystemInfoController;
}(react_2.ReactController));
module.exports = SystemInfoController;


/***/ }),

/***/ 16501:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filters-column.ts ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var __ = __webpack_require__(/*! oro/translator */ 16393);
var filterColumnTemplate = __webpack_require__(/*! pim/template/datagrid/filter-column */ 35368);
var filterGroupTemplate = __webpack_require__(/*! pim/template/datagrid/filter-group */ 74340);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var Routing = __webpack_require__(/*! routing */ 60847);
var FiltersColumn = (function (_super) {
    __extends(FiltersColumn, _super);
    function FiltersColumn(options) {
        var _this = _super.call(this, options) || this;
        _this.defaultFilters = [];
        _this.loadedFilters = [];
        _this.opened = false;
        _this.page = 1;
        _this.filterColumnTemplate = _.template(filterColumnTemplate);
        _this.filterGroupTemplate = _.template(filterGroupTemplate);
        _this.config = __assign(__assign({}, _this.config), options.config);
        _this.defaultFilters = [];
        _this.gridCollection = {};
        _this.ignoredFilters = ['scope'];
        _this.loadedFilters = [];
        _this.searchSelector = 'input[type="search"]';
        return _this;
    }
    FiltersColumn.prototype.events = function () {
        return {
            'click [data-toggle]': 'togglePanel',
        };
    };
    FiltersColumn.prototype.togglePanel = function () {
        var _this = this;
        this.opened = !this.opened;
        var timer = null;
        if (this.opened) {
            $(this.filterList).show();
            timer = setTimeout(function () {
                $(_this.filterList).addClass('AknFilterBox-column--expanded');
                $(_this.searchSelector, _this.filterList).focus();
                clearTimeout(timer);
            }, 100);
        }
        else {
            $(this.filterList).removeClass('AknFilterBox-column--expanded');
            timer = setTimeout(function () {
                $(_this.filterList).hide();
                clearTimeout(timer);
            }, 200);
        }
    };
    FiltersColumn.prototype.toggleFilter = function (event) {
        var filterElement = $(event.currentTarget);
        var name = filterElement.attr('id');
        var checked = filterElement.is(':checked');
        var filter = this.loadedFilters.find(function (filter) { return filter.name === name; });
        if (filter) {
            filter.enabled = checked;
        }
        this.triggerFiltersUpdated();
    };
    FiltersColumn.prototype.getLocale = function () {
        var url = this.gridCollection.url.split('?')[1];
        var urlParams = this.gridCollection.decodeStateData(url);
        var datagridParams = urlParams[this.gridCollection.inputName] || {};
        return urlParams['dataLocale'] || datagridParams['dataLocale'];
    };
    FiltersColumn.prototype.fetchFilters = function (search, page) {
        if (page === void 0) { page = this.page; }
        if (undefined === this.config.attributeFiltersRoute) {
            return $.Deferred().resolve([]).promise();
        }
        var locale = this.getLocale();
        var url = Routing.generate(this.config.attributeFiltersRoute);
        return $.get(search ? url + "?search=" + search + "&locale=" + locale : url + "?page=" + page + "&locale=" + locale);
    };
    FiltersColumn.prototype.mergeAddedFilters = function (originalFilters, addedFilters) {
        var enabledFilters = Object.keys(this.gridCollection.state.filters);
        var filters = __spreadArray(__spreadArray([], originalFilters, true), addedFilters, true);
        var uniqueFilters = [];
        filters.forEach(function (mergedFilter) {
            if (enabledFilters.includes(mergedFilter.name)) {
                mergedFilter.enabled = true;
            }
            if (undefined === uniqueFilters.find(function (searchedFilter) { return searchedFilter.name === mergedFilter.name; })) {
                uniqueFilters.push(mergedFilter);
            }
        });
        return uniqueFilters;
    };
    FiltersColumn.prototype.fetchNextFilters = function (event) {
        var _this = this;
        var list = event.currentTarget;
        var scrollPosition = Math.max(0, list.scrollTop);
        var bottomPosition = list.scrollHeight - list.offsetHeight;
        var isBottom = bottomPosition === scrollPosition;
        if (isBottom) {
            this.page = this.page + 1;
            this.fetchFilters(null, this.page).then(function (loadedFilters) {
                if (loadedFilters.length === 0) {
                    return _this.stopListeningToListScroll();
                }
                _this.loadedFilters = _this.mergeAddedFilters(_this.loadedFilters, loadedFilters);
                _this.renderFilters();
                _this.hideLoading();
            });
        }
    };
    FiltersColumn.prototype.searchFilters = function (event) {
        if (null !== this.timer) {
            clearTimeout(this.timer);
        }
        if (27 === event.keyCode) {
            $(this.filterList).find(this.searchSelector).val('').trigger('keyup');
            return this.togglePanel();
        }
        if (13 === event.keyCode) {
            this.doSearch();
        }
        else {
            this.timer = setTimeout(this.doSearch.bind(this), 200);
        }
    };
    FiltersColumn.prototype.doSearch = function () {
        var _this = this;
        this.showLoading();
        var searchValue = $(this.filterList).find(this.searchSelector).val();
        if (searchValue.length === 0) {
            this.searchedFilters = undefined;
            return this.renderFilters();
        }
        return this.fetchFilters(searchValue, 1).then(function (loadedFilters) {
            var defaultFilters = _this.mergeAddedFilters(_this.defaultFilters, loadedFilters);
            _this.loadedFilters = _this.mergeAddedFilters(_this.loadedFilters, defaultFilters);
            _this.searchedFilters = _this.filterBySearchTerm(defaultFilters, searchValue);
            return _this.renderFilters();
        });
    };
    FiltersColumn.prototype.filterBySearchTerm = function (filters, searchValue) {
        return filters.filter(function (filter) {
            var label = filter.label.toLowerCase();
            var name = filter.name.toLowerCase();
            var search = searchValue.toLowerCase();
            return label.includes(search) || name.includes(search);
        });
    };
    FiltersColumn.prototype.listenToListScroll = function () {
        $(this.filterList).off('scroll').on('scroll', this.fetchNextFilters.bind(this));
    };
    FiltersColumn.prototype.stopListeningToListScroll = function () {
        $(this.filterList).off('scroll');
    };
    FiltersColumn.prototype.renderFilters = function (filters) {
        if (filters === void 0) { filters = this.searchedFilters || this.loadedFilters; }
        var groupedFilters = this.groupFilters(filters);
        var list = document.createDocumentFragment();
        var filterColumn = $(this.filterList).find('.filters-column');
        filterColumn.empty();
        for (var groupName in groupedFilters) {
            var group = groupedFilters[groupName];
            var groupElement = this.renderFilterGroup(group, groupName);
            list.appendChild($(groupElement).get(0));
        }
        filterColumn.append(list);
        var checkbox = $('input[type="checkbox"]', filterColumn);
        checkbox.off('change');
        checkbox.on('change', this.toggleFilter.bind(this));
        this.hideLoading();
    };
    FiltersColumn.prototype.loadFilterList = function (gridCollection, gridElement) {
        var _this = this;
        var metadata = gridElement.data('metadata') || {};
        this.defaultFilters = 'filters' in metadata ? Object.values(metadata.filters) : [];
        this.gridCollection = gridCollection;
        this.showLoading();
        this.fetchFilters().then(function (loadedFilters) {
            _this.loadedFilters = _this.mergeAddedFilters(_this.defaultFilters, loadedFilters);
            _this.renderFilters();
            _this.listenToListScroll();
            _this.triggerFiltersUpdated();
        });
    };
    FiltersColumn.prototype.disableFilter = function (filterToDisable) {
        this.loadedFilters.forEach(function (filter) {
            if (filter.name === filterToDisable.name) {
                filter.enabled = false;
            }
        });
        this.renderFilters();
    };
    FiltersColumn.prototype.triggerFiltersUpdated = function () {
        mediator.trigger('filters-column:update-filters', this.loadedFilters, this.gridCollection);
    };
    FiltersColumn.prototype.renderFilterGroup = function (filters, groupName) {
        return this.filterGroupTemplate({
            filters: filters,
            groupName: groupName,
            ignoredFilters: this.ignoredFilters,
        });
    };
    FiltersColumn.prototype.groupFilters = function (filters) {
        return _.groupBy(filters, function (filter) { return filter.group || 'System'; });
    };
    FiltersColumn.prototype.configure = function () {
        this.listenTo(mediator, 'datagrid_collection_set_after', this.loadFilterList);
        this.listenTo(mediator, 'filters-selector:disable-filter', this.disableFilter);
        return BaseView.prototype.configure.apply(this, arguments);
    };
    FiltersColumn.prototype.render = function () {
        $('.filter-list').remove();
        this.$el.html(this.filterColumnTemplate({
            filtersLabel: __('pim_datagrid.filters.label'),
            doneLabel: __('pim_common.done'),
        }));
        this.filterList = this.$el.find('.filter-list').appendTo($('body'));
        $(this.searchSelector, this.filterList).on('keyup search', this.searchFilters.bind(this));
        $('.filter-list', this.filterList).on('scroll', this.searchFilters.bind(this));
        $('.close', this.filterList).on('click', this.togglePanel.bind(this));
        this.hideLoading();
        return this;
    };
    FiltersColumn.prototype.shutdown = function () {
        $(this.filterList).off().remove();
        BaseView.prototype.shutdown.apply(this, arguments);
    };
    FiltersColumn.prototype.showLoading = function () {
        $('.filter-loading').show();
    };
    FiltersColumn.prototype.hideLoading = function () {
        $('.filter-loading').hide();
    };
    return FiltersColumn;
}(BaseView));
module.exports = FiltersColumn;


/***/ }),

/***/ 91729:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filters-selector.ts ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var requireContext = __webpack_require__(/*! require-context */ 76925);
var FiltersSelector = (function (_super) {
    __extends(FiltersSelector, _super);
    function FiltersSelector(options) {
        var _this = _super.call(this, __assign(__assign({}, options), { className: 'filter-box' })) || this;
        _this.config = {
            filterTypes: {
                string: 'choice',
                choice: 'select',
                selectrow: 'select-row',
                multichoice: 'multiselect',
                boolean: 'select',
            },
        };
        _this.config = __assign(__assign({}, _this.config), options.config);
        _this.modules = {};
        _this.datagridCollection = null;
        _this.silent = false;
        _this.categoryFilter = {};
        return _this;
    }
    FiltersSelector.prototype.configure = function () {
        var _this = this;
        this.listenTo(mediator, 'filters-column:update-filters', this.renderFilters);
        this.listenTo(mediator, 'filters-column:update-filter', function (categoryFilter, silent) {
            if (silent === void 0) { silent = false; }
            _this.categoryFilter = categoryFilter;
            if (false === silent) {
                _this.updateGridState();
            }
        });
        return BaseView.prototype.configure.apply(this, arguments);
    };
    FiltersSelector.prototype.getFilterModule = function (filter) {
        var types = this.config.filterTypes;
        var filterType = types[filter.type] || filter.type;
        var cachedFilter = this.modules[filter.name];
        if (!cachedFilter) {
            var filterModule = requireContext("oro/datafilter/" + filterType + "-filter");
            if (!filterModule) {
                throw Error("No module found for the " + filter.name + " filter");
            }
            return (this.modules[filter.name] = new (filterModule.extend(filter))(filter));
        }
        return cachedFilter;
    };
    FiltersSelector.prototype.disableFilter = function (filter) {
        mediator.trigger('filters-selector:disable-filter', filter);
        this.updateGridState();
    };
    FiltersSelector.prototype.renderFilters = function (filters, datagridCollection) {
        var _this = this;
        this.datagridCollection = datagridCollection;
        var list = document.createDocumentFragment();
        var state = datagridCollection.state.filters;
        filters.forEach(function (filter) {
            var filterModule = _this.getFilterModule(filter);
            if (true === filter.enabled || state[filter.name]) {
                if (typeof filterModule.setDatagrid === 'function') {
                    filterModule.setDatagrid(_this.datagridCollection.inputName);
                }
                filterModule.render();
                filterModule.off();
                _this.stopListening(filterModule, 'update');
                _this.stopListening(filterModule, 'disable');
                _this.listenTo(filterModule, 'update', _this.updateGridState.bind(_this));
                _this.listenTo(filterModule, 'disable', _this.disableFilter.bind(_this, filter));
                list.appendChild(filterModule.el);
            }
            if (undefined !== filterModule.moveFilter) {
                filterModule.moveFilter(datagridCollection, _this.getRoot());
            }
        });
        this.el.appendChild(list);
        this.restoreFilterState(state, filters);
        mediator.trigger('filters-column:init', this.updateGridState.bind(this));
        mediator.trigger('datagrid_filters:rendered', datagridCollection);
    };
    FiltersSelector.prototype.restoreFilterState = function (state, filters) {
        var _this = this;
        this.silent = true;
        filters.forEach(function (filter) {
            var filterName = filter.name;
            var filterModule = _this.modules[filterName];
            var filterValue = state[filterName];
            if (false === filter.enabled) {
                filterModule.disable();
            }
            else {
                filterModule.enabled = false;
                filterModule.enable();
            }
            if (filterValue) {
                try {
                    filterModule.reset();
                    filterModule.setValue(filterValue);
                    filterModule.enabled = true;
                }
                catch (e) {
                    console.error('cant restore filter state for', filterName);
                }
            }
        });
        this.silent = false;
    };
    FiltersSelector.prototype.getState = function () {
        var filterState = {};
        for (var filterName in this.modules) {
            var filter = this.modules[filterName];
            var shortName = "__" + filterName;
            if (filter.enabled) {
                if (!filter.isEmpty()) {
                    filterState[filterName] = filter.getValue();
                }
                else if (!filter.defaultEnabled) {
                    filterState[shortName] = 1;
                }
            }
            else if (filter.defaultEnabled) {
                filterState[shortName] = 0;
            }
        }
        return filterState;
    };
    FiltersSelector.prototype.updateGridState = function () {
        var categoryFilter = __assign({}, this.categoryFilter);
        var currentState = this.datagridCollection.state.filters;
        var updatedState = Object.assign(this.getState(), categoryFilter);
        var stateHasChanged = !_.isEqual(currentState, updatedState);
        var currentStateIsEmpty = _.isEmpty(currentState);
        var shouldReloadState = (stateHasChanged || currentStateIsEmpty) && false === this.silent;
        if (shouldReloadState) {
            this.datagridCollection.state.filters = updatedState;
            this.datagridCollection.state.currentPage = 1;
            this.datagridCollection.fetch();
        }
    };
    return FiltersSelector;
}(BaseView));
module.exports = FiltersSelector;


/***/ }),

/***/ 85474:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/ProductGalleryRow.tsx ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var BaseRow = __webpack_require__(/*! oro/datagrid/row */ 72803);
var MediaUrlGenerator = __webpack_require__(/*! pim/media-url-generator */ 72689);
var Router = __webpack_require__(/*! pim/router */ 41774);
var ProductGalleryRow = (function (_super) {
    __extends(ProductGalleryRow, _super);
    function ProductGalleryRow(options) {
        var _this = _super.call(this, __assign(__assign({}, options), { tagName: 'tr', className: '' })) || this;
        _this.selected = false;
        _this.reactRef = null;
        return _this;
    }
    ProductGalleryRow.prototype.initialize = function (options) {
        var _this = this;
        _super.prototype.initialize.call(this, options);
        this.stopListening(this.model, 'backgrid:selected');
        this.listenTo(this.model, 'backgrid:select', function (_, isSelected) {
            _this.model.trigger('backgrid:selected', _this.model, isSelected);
        });
        this.listenTo(this.model, 'backgrid:selected', function (_, isSelected) {
            _this.updateSelection(isSelected);
        });
    };
    ProductGalleryRow.prototype.render = function () {
        var _this = this;
        var label = this.model.get('label');
        var imagePath = this.getImagePath();
        var badgeText = this.getBadgeText();
        var badgeLevel = this.getBadgeLevel();
        var followProduct = function () {
            var technicalId = _this.model.get('technical_id');
            var route = _this.isProductModel() ? 'pim_enrich_product_model_edit' : 'pim_enrich_product_edit';
            var params = _this.isProductModel() ? { id: technicalId } : { uuid: technicalId };
            Router.redirectToRoute(route, params);
        };
        var notifySelection = function (isSelected) {
            _this.model.trigger('backgrid:selected', _this.model, isSelected);
        };
        var productCard = (react_1.default.createElement(akeneo_design_system_1.Card, { fit: "cover", src: imagePath, onClick: followProduct, isSelected: this.selected, onSelect: notifySelection, stacked: this.isProductModel(), as: "td" },
            react_1.default.createElement(akeneo_design_system_1.Card.BadgeContainer, null,
                react_1.default.createElement(akeneo_design_system_1.Badge, { level: badgeLevel }, badgeText)),
            label));
        this.renderReactElement(productCard, this.el);
        return this;
    };
    ProductGalleryRow.prototype.remove = function () {
        this.unmountReact();
        _super.prototype.remove.call(this);
        return this;
    };
    ProductGalleryRow.prototype.onClick = function (event) {
        event.preventDefault();
    };
    ProductGalleryRow.prototype.renderReactElement = function (component, container) {
        this.reactRef = container;
        react_dom_1.default.render(react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme }, react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null, component)), this.reactRef);
    };
    ProductGalleryRow.prototype.unmountReact = function () {
        if (null !== this.reactRef) {
            react_dom_1.default.unmountComponentAtNode(this.reactRef);
            this.reactRef = null;
        }
    };
    ProductGalleryRow.prototype.updateSelection = function (isSelected) {
        this.selected = isSelected;
        this.render();
    };
    ProductGalleryRow.prototype.isProductModel = function () {
        return this.model.get('document_type') === 'product_model';
    };
    ProductGalleryRow.prototype.getImagePath = function () {
        var image = this.model.get('image');
        if (undefined === image || null === image) {
            return '/media/show/undefined/preview';
        }
        return MediaUrlGenerator.getMediaShowUrl(image.filePath, 'thumbnail');
    };
    ProductGalleryRow.prototype.getBadgeText = function () {
        if (this.isProductModel()) {
            var complete = this.model.get('complete_variant_products').complete;
            var total = this.model.get('complete_variant_products').total;
            return complete + " / " + total;
        }
        var completeness = this.model.get('completeness');
        if (null !== completeness) {
            return completeness + "%";
        }
        return null;
    };
    ProductGalleryRow.prototype.getBadgeLevel = function () {
        if (this.isProductModel()) {
            var complete = this.model.get('complete_variant_products').complete;
            var total = this.model.get('complete_variant_products').total;
            if (complete === total) {
                return 'primary';
            }
            if (complete === 0) {
                return 'danger';
            }
            return 'warning';
        }
        var completeness = this.model.get('completeness');
        if (null !== completeness) {
            if (completeness <= 0) {
                return 'danger';
            }
            if (completeness >= 100) {
                return 'primary';
            }
            return 'warning';
        }
        return undefined;
    };
    return ProductGalleryRow;
}(BaseRow));
module.exports = ProductGalleryRow;


/***/ }),

/***/ 25567:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/delete-confirm.ts ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var __ = __webpack_require__(/*! oro/translator */ 16393);
var Dialog = __webpack_require__(/*! pim/dialog */ 42905);
var DeleteConfirm = (function () {
    function DeleteConfirm() {
    }
    DeleteConfirm.getConfirmDialog = function (entityCode, callback, entityHint) {
        return Dialog.confirmDelete(__("pim_enrich.entity." + entityCode + ".module.delete.confirm"), __('pim_common.confirm_deletion'), callback, entityHint, 'pim_common.delete');
    };
    return DeleteConfirm;
}());
module.exports = DeleteConfirm;


/***/ }),

/***/ 8813:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/column-selector.ts ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var Backbone = __importStar(__webpack_require__(/*! backbone */ 2918));
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var Routing = __webpack_require__(/*! routing */ 60847);
var DatagridState = __webpack_require__(/*! pim/datagrid/state */ 30138);
var buttonTemplate = __webpack_require__(/*! pim/template/datagrid/column-selector/button */ 58285);
var columnsTemplate = __webpack_require__(/*! pim/template/datagrid/column-selector/columns */ 76961);
var innerModalTemplate = __webpack_require__(/*! pim/template/datagrid/column-selector/modal */ 28927);
var selectedTemplate = __webpack_require__(/*! pim/template/datagrid/column-selector/selected */ 85935);
var modalTemplate = __webpack_require__(/*! pim/template/common/modal-centered */ 94596);
var analytics = __webpack_require__(/*! pim/analytics */ 22499);
var ColumnSelector = (function (_super) {
    __extends(ColumnSelector, _super);
    function ColumnSelector(options) {
        var _this = _super.call(this, __assign(__assign({}, options), { className: 'AknGridToolbar-right' })) || this;
        _this.page = 1;
        _this.buttonTemplate = _.template(buttonTemplate);
        _this.innerModalTemplate = _.template(innerModalTemplate);
        _this.columnsTemplate = _.template(columnsTemplate);
        _this.selectedTemplate = _.template(selectedTemplate);
        _this.modalTemplate = _.template(modalTemplate);
        _this.loadedAttributeGroups = [];
        _this.loadedColumns = {};
        _this.searchInputSelector = 'input[type="search"]';
        _this.attributeGroupSelector = '[data-attributes] [data-group]';
        _this.config = __assign(__assign({}, _this.config), options.config);
        return _this;
    }
    ColumnSelector.prototype.events = function () {
        return {
            'click [data-open]': 'openModal',
        };
    };
    ColumnSelector.prototype.configure = function () {
        var _this = this;
        mediator.once('datagrid_collection_set_after', function (datagridCollection, datagridElement) {
            _this.datagridCollection = datagridCollection;
            _this.datagridElement = datagridElement;
            _this.hideButton = false === _this.datagridElement.data('metadata').options.manageColumns;
            _this.locale = _this.getLocale();
            _this.renderColumnSelector();
        });
        return BaseView.prototype.configure.apply(this, arguments);
    };
    ColumnSelector.prototype.getLocale = function () {
        var url = this.datagridCollection.url.split('?')[1];
        var urlParams = this.datagridCollection.decodeStateData(url);
        var datagridParams = urlParams[this.config.gridName] || {};
        return urlParams['dataLocale'] || datagridParams['dataLocale'];
    };
    ColumnSelector.prototype.renderColumnSelector = function () {
        if (true === this.hideButton)
            return this;
        this.$el.html(this.buttonTemplate({ label: __('pim_datagrid.column_configurator.label') }));
        return this;
    };
    ColumnSelector.prototype.fetchAttributeGroups = function () {
        var _this = this;
        var url = Routing.generate('pim_datagrid_productgrid_available_columns_groups', { locale: this.locale });
        if (_.isEmpty(this.loadedAttributeGroups)) {
            return $.get(url).then(function (groups) {
                _this.loadedAttributeGroups = groups;
                return groups;
            });
        }
        return new Promise(function (resolve) { return resolve(_this.loadedAttributeGroups); });
    };
    ColumnSelector.prototype.fetchColumns = function (reset) {
        var search = this.modal.$el.find(this.searchInputSelector).val().trim();
        var group = this.modal.$el.find('.active[data-group]').data('value');
        var url = Routing.generate('pim_datagrid_productgrid_available_columns');
        if (true === reset) {
            this.page = 1;
        }
        var params = $.param(_.omit({
            search: search,
            attribute_group: group,
            page: this.page,
            locale: this.locale,
        }, function (param) { return !param; }));
        return $.get(url + "?" + params);
    };
    ColumnSelector.prototype.normalizeColumn = function (column) {
        var storedColumn = this.loadedColumns[column.code];
        column.selected = false;
        if (storedColumn) {
            column.selected = storedColumn.selected;
            column.sortOrder = storedColumn.sortOrder;
        }
        column.removable = true;
        return column;
    };
    ColumnSelector.prototype.fetchColumnsWithSelected = function () {
        var _this = this;
        this.fetchColumns(true).then(function (columns) {
            _this.loadedColumns = Object.assign(_.mapObject(columns, _this.normalizeColumn.bind(_this)), _this.getColumnsBySelected());
            _this.renderColumns();
        });
    };
    ColumnSelector.prototype.filterByAttributeGroup = function (event) {
        this.modal.$el.find(this.attributeGroupSelector).removeClass('active');
        $(event.currentTarget).addClass('active');
        this.fetchColumnsWithSelected();
    };
    ColumnSelector.prototype.clearSearch = function () {
        this.modal.$el.find(this.searchInputSelector).val('').trigger('keyup');
    };
    ColumnSelector.prototype.debounceSearch = function (event) {
        if (null !== this.debounceSearchTimer) {
            clearTimeout(this.debounceSearchTimer);
        }
        if (27 === event.keyCode) {
            return this.clearSearch();
        }
        if (13 === event.keyCode) {
            this.fetchColumnsWithSelected();
        }
        else {
            this.debounceSearchTimer = setTimeout(this.fetchColumnsWithSelected.bind(this), 300);
        }
    };
    ColumnSelector.prototype.setColumnsSelectedByDefault = function (columns) {
        var metadataColumns = this.datagridElement.data('metadata').columns;
        var datagridColumns = {};
        _.each(Object.assign(columns, metadataColumns), function (column) {
            var columnNames = metadataColumns.map(function (column) { return String(column.name); });
            var label = String(column.name || column.code);
            var data = {
                code: label,
                selected: columnNames.includes(label),
                sortOrder: columnNames.indexOf(label),
                removable: true,
            };
            datagridColumns[label] = Object.assign(column, data);
        });
        return datagridColumns;
    };
    ColumnSelector.prototype.renderColumns = function () {
        var unSelectedColumns = this.getColumnsBySelected(false);
        var selectedColumns = this.getColumnsBySelected();
        this.modal.$el
            .find('[data-columns]')
            .empty()
            .append(this.columnsTemplate({ columns: unSelectedColumns }));
        var sortedColumns = _.map(selectedColumns, function (column) { return column; }).sort(function (a, b) {
            return a.sortOrder - b.sortOrder;
        });
        this.modal.$el
            .find('[data-columns-selected]')
            .empty()
            .append(this.selectedTemplate({ columns: sortedColumns }));
        this.modal.$el.on('click', '#column-selection .action', this.unselectColumn.bind(this));
        this.setSortable();
        this.setValidation();
        this.listenToListScroll();
        var scrollColumn = this.modal.$el.find('[data-columns]');
        var scrollHeight = scrollColumn.get(0).scrollHeight;
        var columnHeight = scrollColumn.outerHeight();
        if (scrollHeight === columnHeight) {
            this.fetchNextColumns(true);
        }
    };
    ColumnSelector.prototype.listenToListScroll = function () {
        this.modal.$el.find('[data-columns]').off('scroll').on('scroll', this.fetchNextColumns.bind(this));
    };
    ColumnSelector.prototype.stopListeningToListScroll = function () {
        this.modal.$el.find('[data-columns]').removeClass('more').off();
    };
    ColumnSelector.prototype.fetchNextColumns = function (loadNextPage) {
        var _this = this;
        if (loadNextPage === void 0) { loadNextPage = false; }
        var list = this.modal.$el.find('[data-columns]').get(0);
        var scrollPosition = Math.max(0, list.scrollTop);
        var bottomPosition = list.scrollHeight - list.offsetHeight;
        var isBottom = bottomPosition === scrollPosition;
        if (isBottom || true === loadNextPage) {
            this.page = this.page + 1;
            this.fetchColumns().then(function (columns) {
                if (_.isEmpty(columns)) {
                    return _this.stopListeningToListScroll();
                }
                var mergedColumns = _.mapObject(columns, _this.normalizeColumn.bind(_this));
                _this.loadedColumns = Object.assign(_this.loadedColumns, mergedColumns);
                _this.renderColumns();
            });
        }
    };
    ColumnSelector.prototype.setColumnStatus = function (code, selected) {
        if (selected === void 0) { selected = true; }
        this.loadedColumns = _.mapObject(this.loadedColumns, function (column) {
            if (column.code === String(code)) {
                column.selected = selected;
            }
            return column;
        });
    };
    ColumnSelector.prototype.unselectColumn = function (event) {
        var column = $(event.currentTarget).parent();
        var code = $(event.currentTarget).parents('[data-value]').data('value');
        column.appendTo(this.modal.$el.find('#column-list'));
        this.setColumnStatus(code, false);
        this.setValidation();
    };
    ColumnSelector.prototype.setValidation = function () {
        var selectedColumns = this.getColumnsBySelected();
        var showValidationError = _.isEmpty(selectedColumns);
        var error = this.modal.$el.find('#column-selection .alert-error');
        if (showValidationError) {
            return error.show();
        }
        return error.hide();
    };
    ColumnSelector.prototype.clearAllColumns = function () {
        this.loadedColumns = _.mapObject(this.loadedColumns, function (column) {
            column.selected = false;
            return column;
        });
        this.renderColumns();
    };
    ColumnSelector.prototype.openModal = function () {
        var _this = this;
        this.page = 1;
        if (this.modal) {
            this.modal.$el.off();
            this.modal.close();
            this.modal.remove();
        }
        this.fetchAttributeGroups().then(function (groups) {
            var modal = new Backbone.BootstrapModal({
                okCloses: false,
                title: __('pim_datagrid.column_configurator.title'),
                innerDescription: __('pim_datagrid.column_configurator.description'),
                okText: __('pim_common.apply'),
                template: _this.modalTemplate,
                innerClassName: 'AknFullPage--full',
                content: _this.innerModalTemplate({
                    groups: groups,
                    attributeGroupsLabel: __('pim_enrich.entity.attribute_group.plural_label'),
                }),
            });
            modal.open();
            modal.on('ok', _this.saveColumnsToDatagridState.bind(_this));
            _this.modal = modal;
            _this.modal.$el.on('keyup search', _this.searchInputSelector, _this.debounceSearch.bind(_this));
            _this.modal.$el.on('click', _this.attributeGroupSelector, _this.filterByAttributeGroup.bind(_this));
            _this.modal.$el.on('click', '.reset', _this.clearAllColumns.bind(_this));
            _this.fetchColumns().then(function (columns) {
                _this.loadedColumns = _this.setColumnsSelectedByDefault(columns);
                _this.renderColumns();
            });
        });
    };
    ColumnSelector.prototype.setSortable = function () {
        var _this = this;
        this.modal.$el
            .find('#column-list, #column-selection')
            .sortable({
            connectWith: '.connected-sortable',
            containment: this.modal.$el,
            tolerance: 'pointer',
            cursor: 'move',
            cancel: 'div.alert',
            receive: function (_, ui) {
                var code = ui.item.data('value');
                var senderIsColumn = ui.sender.is('#column-list');
                _this.setColumnStatus(code, senderIsColumn);
                _this.setColumnSortOrder();
                _this.setValidation();
            },
        })
            .disableSelection();
        this.setColumnSortOrder();
    };
    ColumnSelector.prototype.setColumnSortOrder = function () {
        var _this = this;
        this.loadedColumns = _.mapObject(this.loadedColumns, function (column) {
            var sortOrder = _this.modal.$el.find("#column-selection [data-value=\"" + column.code + "\"]").index();
            if (sortOrder > -1) {
                column.sortOrder = sortOrder;
            }
            return column;
        });
    };
    ColumnSelector.prototype.getColumnsBySelected = function (selected) {
        if (selected === void 0) { selected = true; }
        return _.pick(this.loadedColumns, function (column) { return column.selected === selected; });
    };
    ColumnSelector.prototype.saveColumnsToDatagridState = function () {
        this.setColumnSortOrder();
        var columns = this.getColumnsBySelected();
        var selected = Object.keys(columns)
            .sort(function (a, b) {
            return columns[a].sortOrder - columns[b].sortOrder;
        })
            .join()
            .trim();
        if (!selected.length) {
            return;
        }
        analytics.track('product-grid:column:selected', {
            gridName: this.config.gridName,
            column: selected,
        });
        DatagridState.set(this.config.gridName, 'columns', selected);
        this.modal.close();
        var url = window.location.hash;
        Backbone.history.fragment = new Date().getTime();
        Backbone.history.navigate(url, true);
    };
    return ColumnSelector;
}(BaseView));
module.exports = ColumnSelector;


/***/ }),

/***/ 27519:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/header-cell/attribute-header-cell.ts ***!
  \*************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var HeaderCell = __webpack_require__(/*! oro/datagrid/header-cell */ 58183);
var AttributeHeaderCell = (function (_super) {
    __extends(AttributeHeaderCell, _super);
    function AttributeHeaderCell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AttributeHeaderCell.prototype.initialize = function (options) {
        if (!options.column.has('extraOptions') || undefined === options.column.get('extraOptions').attributeCode) {
            throw new Error('The option "attributeCode" must be set for a header cell of type "attribute".');
        }
        this.attributeCode = options.column.get('extraOptions').attributeCode;
        HeaderCell.prototype.initialize.apply(this, arguments);
    };
    AttributeHeaderCell.prototype.render = function () {
        var _this = this;
        FetcherRegistry.getFetcher('attribute')
            .fetch(this.attributeCode)
            .then(function (attribute) {
            _this.$el.html($(_this.template({
                label: attribute.labels[UserContext.get('catalogLocale')],
                sortable: _this.column.get('sortable'),
            })));
            if (_this.column.has('width')) {
                _this.$el.width(_this.column.get('width'));
            }
        });
        return this;
    };
    return AttributeHeaderCell;
}(HeaderCell));
module.exports = AttributeHeaderCell;


/***/ }),

/***/ 70593:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/quickexport/component/Form.tsx ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Form = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var Select_1 = __webpack_require__(/*! ./Select */ 84114);
var Form = function (_a) {
    var value = _a.value, onChange = _a.onChange, children = _a.children;
    return (react_1.default.createElement(react_1.default.Fragment, null, react_1.Children.map(children, function (child, index) {
        if (!(0, react_1.isValidElement)(child) || child.type !== Select_1.Select) {
            return child;
        }
        var selects = react_1.Children.toArray(children).filter(function (child) { return (0, react_1.isValidElement)(child) && child.type === Select_1.Select; });
        var previousSelect = selects[index - 1];
        return (0, react_1.cloneElement)(child, {
            onChange: function (newValue) {
                var _a;
                return onChange(__assign(__assign({}, value), (_a = {}, _a[child.props.name] = newValue, _a)));
            },
            isVisible: !(0 < index && undefined !== previousSelect && undefined === value[previousSelect.props.name]),
            value: undefined !== value[child.props.name] ? value[child.props.name] : null,
        });
    })));
};
exports.Form = Form;


/***/ }),

/***/ 85999:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/quickexport/component/Option.tsx ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Option = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var OptionContainer = styled_components_1.default.button.withConfig({ displayName: "OptionContainer", componentId: "sc-jhl2d9" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  width: 128px;\n  padding: ", "px 0;\n  height: ", ";\n  justify-content: space-around;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid;\n  border-color: ", ";\n  background-color: ", ";\n  color: ", ";\n  cursor: ", ";\n\n  :not(:first-child) {\n    margin-left: 20px;\n  }\n"], ["\n  width: 128px;\n  padding: ", "px 0;\n  height: ", ";\n  justify-content: space-around;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid;\n  border-color: ", ";\n  background-color: ", ";\n  color: ", ";\n  cursor: ", ";\n\n  :not(:first-child) {\n    margin-left: 20px;\n  }\n"])), function (_a) {
    var withIcon = _a.withIcon;
    return (withIcon ? 24 : 12);
}, function (_a) {
    var withIcon = _a.withIcon;
    return (withIcon ? '128px' : 'auto');
}, function (_a) {
    var theme = _a.theme, isSelected = _a.isSelected;
    return isSelected ? theme.color.blue100 : theme.color.grey80;
}, function (_a) {
    var theme = _a.theme, isSelected = _a.isSelected;
    return isSelected ? theme.color.blue20 : theme.color.white;
}, function (_a) {
    var theme = _a.theme, isSelected = _a.isSelected;
    return isSelected ? theme.color.blue100 : 'inherit';
}, function (_a) {
    var onClick = _a.onClick;
    return (onClick ? 'pointer' : 'default');
});
var Option = function (_a) {
    var isSelected = _a.isSelected, children = _a.children, onSelect = _a.onSelect, isDisabled = _a.isDisabled, title = _a.title;
    var theme = (0, akeneo_design_system_1.useTheme)();
    var withIcon = react_1.Children.toArray(children).some(function (child) { return (0, react_1.isValidElement)(child); });
    return (react_1.default.createElement(OptionContainer, { withIcon: withIcon, "data-selected": !!isSelected, isSelected: !!isSelected, onClick: isDisabled ? undefined : onSelect, title: title }, react_1.Children.map(children, function (child) {
        if (!(0, react_1.isValidElement)(child)) {
            return child;
        }
        return (0, react_1.cloneElement)(child, {
            color: isSelected ? theme.color.blue100 : child.props.color,
        });
    })));
};
exports.Option = Option;
var templateObject_1;


/***/ }),

/***/ 28247:
/*!**************************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/quickexport/component/QuickExportConfigurator.tsx ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.QuickExportConfigurator = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var Form_1 = __webpack_require__(/*! ./Form */ 70593);
var Select_1 = __webpack_require__(/*! ./Select */ 84114);
var Option_1 = __webpack_require__(/*! ./Option */ 85999);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var QuickExportConfigurator = function (_a) {
    var showWithLabelsSelect = _a.showWithLabelsSelect, showWithMediaSelect = _a.showWithMediaSelect, showWithUuidSelect = _a.showWithUuidSelect, onActionLaunch = _a.onActionLaunch, getProductCount = _a.getProductCount;
    var _b = (0, akeneo_design_system_1.useBooleanState)(false), isModalOpen = _b[0], openModal = _b[1], closeModal = _b[2];
    var translate = (0, shared_1.useTranslate)();
    var _c = (0, shared_1.useStorageState)({}, 'quick_export_configuration'), formValue = _c[0], setFormValue = _c[1];
    var productCount = getProductCount();
    var readyToSubmit = undefined !== formValue.type &&
        undefined !== formValue.context &&
        (undefined !== formValue.with_media || !showWithMediaSelect) &&
        (undefined !== formValue['with-labels'] || !showWithLabelsSelect) &&
        (undefined !== formValue.with_uuid || !showWithUuidSelect);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(akeneo_design_system_1.Button, { level: "secondary", title: translate('pim_datagrid.mass_action_group.quick_export.label'), onClick: openModal }, translate('pim_datagrid.mass_action_group.quick_export.label')),
        isModalOpen && (react_1.default.createElement(akeneo_design_system_1.Modal, { closeTitle: translate('pim_common.close'), onClose: closeModal },
            react_1.default.createElement(akeneo_design_system_1.Modal.TopRightButtons, null,
                react_1.default.createElement(akeneo_design_system_1.Button, { title: translate('pim_common.export'), onClick: function () {
                        onActionLaunch(formValue);
                        closeModal();
                    }, disabled: !readyToSubmit }, translate('pim_common.export'))),
            react_1.default.createElement(akeneo_design_system_1.Modal.SectionTitle, { color: "brand" },
                translate('pim_datagrid.mass_action.quick_export.configurator.subtitle'),
                "\u00A0|\u00A0",
                translate('pim_common.result_count', { itemsCount: productCount.toString() }, productCount)),
            react_1.default.createElement(akeneo_design_system_1.Modal.Title, null, translate('pim_datagrid.mass_action.quick_export.configurator.title')),
            react_1.default.createElement(Form_1.Form, { value: formValue, onChange: setFormValue },
                react_1.default.createElement(Select_1.Select, { name: "type" },
                    react_1.default.createElement(Option_1.Option, { value: "csv", title: translate('pim_datagrid.mass_action.quick_export.configurator.csv') },
                        react_1.default.createElement(akeneo_design_system_1.FileCsvIcon, { size: 48 }),
                        translate('pim_datagrid.mass_action.quick_export.configurator.csv')),
                    react_1.default.createElement(Option_1.Option, { value: "xlsx", title: translate('pim_datagrid.mass_action.quick_export.configurator.xlsx') },
                        react_1.default.createElement(akeneo_design_system_1.FileXlsxIcon, { size: 48 }),
                        translate('pim_datagrid.mass_action.quick_export.configurator.xlsx'))),
                react_1.default.createElement(Select_1.Select, { name: "context" },
                    react_1.default.createElement(Option_1.Option, { value: "grid-context", title: translate('pim_datagrid.mass_action.quick_export.configurator.grid_context') }, translate('pim_datagrid.mass_action.quick_export.configurator.grid_context')),
                    react_1.default.createElement(Option_1.Option, { value: "all-attributes", title: translate('pim_datagrid.mass_action.quick_export.configurator.all_attributes') }, translate('pim_datagrid.mass_action.quick_export.configurator.all_attributes'))),
                showWithLabelsSelect && (react_1.default.createElement(Select_1.Select, { name: "with-labels" },
                    react_1.default.createElement(Option_1.Option, { value: "with-codes", title: translate('pim_datagrid.mass_action.quick_export.configurator.with_codes') }, translate('pim_datagrid.mass_action.quick_export.configurator.with_codes')),
                    react_1.default.createElement(Option_1.Option, { value: "with-labels", title: translate('pim_datagrid.mass_action.quick_export.configurator.with_labels') }, translate('pim_datagrid.mass_action.quick_export.configurator.with_labels')))),
                showWithMediaSelect && (react_1.default.createElement(Select_1.Select, { name: "with_media" },
                    react_1.default.createElement(Option_1.Option, { value: "false", title: translate('pim_datagrid.mass_action.quick_export.configurator.without_media') }, translate('pim_datagrid.mass_action.quick_export.configurator.without_media')),
                    react_1.default.createElement(Option_1.Option, { value: "true", title: translate('pim_datagrid.mass_action.quick_export.configurator.with_media') }, translate('pim_datagrid.mass_action.quick_export.configurator.with_media')))),
                showWithMediaSelect && (react_1.default.createElement(Select_1.Select, { name: "with_uuid" },
                    react_1.default.createElement(Option_1.Option, { value: "false", title: translate('pim_datagrid.mass_action.quick_export.configurator.without_uuid') }, translate('pim_datagrid.mass_action.quick_export.configurator.without_uuid')),
                    react_1.default.createElement(Option_1.Option, { value: "true", title: translate('pim_datagrid.mass_action.quick_export.configurator.with_uuid') }, translate('pim_datagrid.mass_action.quick_export.configurator.with_uuid')))))))));
};
exports.QuickExportConfigurator = QuickExportConfigurator;


/***/ }),

/***/ 84114:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/quickexport/component/Select.tsx ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Select = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var Option_1 = __webpack_require__(/*! ./Option */ 85999);
var SelectContainer = styled_components_1.default.div.withConfig({ displayName: "SelectContainer", componentId: "sc-1919pon" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  opacity: ", ";\n\n  :not(:first-child) {\n    margin-top: 40px;\n  }\n"], ["\n  display: flex;\n  opacity: ", ";\n\n  :not(:first-child) {\n    margin-top: 40px;\n  }\n"])), function (_a) {
    var isVisible = _a.isVisible;
    return (isVisible ? 1 : 0);
});
var Select = function (_a) {
    var name = _a.name, value = _a.value, onChange = _a.onChange, isVisible = _a.isVisible, children = _a.children;
    return (react_1.default.createElement(SelectContainer, { role: name + "-select", isVisible: !!isVisible, "data-visible": !!isVisible }, react_1.Children.map(children, function (child) {
        if (!(0, react_1.isValidElement)(child) || child.type !== Option_1.Option) {
            return child;
        }
        return (0, react_1.cloneElement)(child, {
            isSelected: child.props.value === value,
            isDisabled: !isVisible,
            onSelect: function () { return undefined !== onChange && onChange(child.props.value); },
        });
    })));
};
exports.Select = Select;
var templateObject_1;


/***/ }),

/***/ 89833:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimimportexport/js/job/common/edit/storage-form.ts ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var import_export_1 = __webpack_require__(/*! @akeneo-pim-community/import-export */ 44450);
var StorageFormController = (function (_super) {
    __extends(StorageFormController, _super);
    function StorageFormController(options) {
        var _this = _super.call(this, options) || this;
        _this.validationErrors = [];
        _this.config = __assign(__assign({}, _this.config), options.config);
        return _this;
    }
    StorageFormController.prototype.configure = function () {
        var _this = this;
        this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_save', function () {
            _this.getRoot().trigger('pim_enrich:form:form-tabs:remove-errors');
            _this.setValidationErrors([]);
        });
        this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', function (event) {
            var errors = (0, shared_1.formatParameters)((0, shared_1.filterErrors)(event.response.normalized_errors, '[storage]'));
            _this.setValidationErrors(errors);
            if (errors.length > 0) {
                _this.getRoot().trigger('pim_enrich:form:form-tabs:add-errors', {
                    tabCode: _this.getTabCode(),
                    errors: errors,
                });
            }
        });
        return BaseView.prototype.configure.apply(this, arguments);
    };
    StorageFormController.prototype.setValidationErrors = function (validationErrors) {
        this.validationErrors = validationErrors;
        this.render();
    };
    StorageFormController.prototype.getTabCode = function () {
        return this.config.tabCode ? this.config.tabCode : this.code;
    };
    StorageFormController.prototype.setStorage = function (storage) {
        var formData = this.getFormData();
        this.setData(__assign(__assign({}, formData), { configuration: __assign(__assign({}, formData.configuration), { storage: storage }) }));
        this.render();
    };
    StorageFormController.prototype.getDefaultStorage = function () {
        return {
            type: 'none',
            file_path: '',
        };
    };
    StorageFormController.prototype.render = function () {
        var _a;
        var formData = this.getFormData();
        var props = {
            jobInstanceCode: formData.code,
            storage: (_a = formData.configuration.storage) !== null && _a !== void 0 ? _a : this.getDefaultStorage(),
            jobType: this.config.jobType,
            fileExtension: this.config.fileExtension,
            validationErrors: this.validationErrors,
            onStorageChange: this.setStorage.bind(this),
        };
        this.renderReact(import_export_1.StorageForm, props, this.el);
        return this;
    };
    return StorageFormController;
}(BaseView));
module.exports = StorageFormController;


/***/ }),

/***/ 40397:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/CategoryTreeFetcher.ts ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseResponse = void 0;
var parseResponse = function (json, options) {
    var _a = __assign({ readOnly: false, lockedCategoryIds: [], isRoot: false, selectable: false }, options), readOnly = _a.readOnly, lockedCategoryIds = _a.lockedCategoryIds, isRoot = _a.isRoot, selectable = _a.selectable;
    var getChildren = function () {
        if (json.state.includes('closed')) {
            return undefined;
        }
        if (json.state.includes('leaf')) {
            return [];
        }
        if (json.children) {
            return json.children.map(function (child) { return parseResponse(child, { readOnly: readOnly, lockedCategoryIds: lockedCategoryIds, isRoot: false, selectable: selectable }); });
        }
        return undefined;
    };
    var categoryId = Number(json.attr.id.replace(/^node_(\d+)$/, '$1'));
    return {
        id: categoryId,
        code: json.attr['data-code'],
        label: json.data,
        children: getChildren(),
        selected: json.state.includes('jstree-checked'),
        readOnly: readOnly || lockedCategoryIds.indexOf(categoryId) >= 0,
        selectable: !isRoot && selectable,
    };
};
exports.parseResponse = parseResponse;


/***/ }),

/***/ 41314:
/*!***************************************************!*\
  !*** ./public/bundles/pimui/js/TreeAssociate.tsx ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var CategoryTreeFetcher_1 = __webpack_require__(/*! ./CategoryTreeFetcher */ 40397);
var Router = __webpack_require__(/*! pim/router */ 41774);
var TreeAssociate = (function () {
    function TreeAssociate(routes, readOnly, lockedCategoryIds) {
        var _this = this;
        if (readOnly === void 0) { readOnly = false; }
        if (lockedCategoryIds === void 0) { lockedCategoryIds = []; }
        this.initTree = function (treeId) {
            var init = function () { return __awaiter(_this, void 0, void 0, function () {
                var params, url, response, json, url, response, json;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!(JSON.parse(this.selectedCategoryCodesByTreeIdInput.value)[treeId] &&
                                JSON.parse(this.selectedCategoryCodesByTreeIdInput.value)[treeId].length)) return [3, 3];
                            params = {
                                uuid: this.productUuid,
                                categoryId: treeId,
                                _format: 'json',
                                context: 'associate',
                                dataLocale: this.dataLocale,
                                selected: JSON.parse(this.selectedCategoryCodesByTreeIdInput.value)[treeId],
                            };
                            if (typeof this.productUuid !== 'undefined') {
                                params.uuid = this.productUuid;
                            }
                            if (typeof this.productId !== 'undefined') {
                                params.id = this.productId;
                            }
                            url = Router.generate(this.listCategoriesRoute, params);
                            return [4, fetch(url)];
                        case 1:
                            response = _a.sent();
                            return [4, response.json()];
                        case 2:
                            json = _a.sent();
                            return [2, (0, CategoryTreeFetcher_1.parseResponse)(json[0], {
                                    readOnly: this.readOnly,
                                    lockedCategoryIds: this.lockedCategoryIds,
                                    isRoot: true,
                                    selectable: true,
                                })];
                        case 3:
                            url = Router.generate(this.childrenRoute, {
                                _format: 'json',
                                context: 'associate',
                                dataLocale: this.dataLocale,
                                id: treeId,
                                include_parent: true,
                            });
                            return [4, fetch(url)];
                        case 4:
                            response = _a.sent();
                            return [4, response.json()];
                        case 5:
                            json = _a.sent();
                            return [2, (0, CategoryTreeFetcher_1.parseResponse)(json, {
                                    readOnly: this.readOnly,
                                    lockedCategoryIds: this.lockedCategoryIds,
                                    isRoot: true,
                                    selectable: true,
                                })];
                    }
                });
            }); };
            var childrenCallback = function (id) { return __awaiter(_this, void 0, void 0, function () {
                var response, json;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, fetch(this.getChildrenUrl(id))];
                        case 1:
                            response = _a.sent();
                            return [4, response.json()];
                        case 2:
                            json = _a.sent();
                            return [2, (json.children || []).map(function (child) {
                                    return (0, CategoryTreeFetcher_1.parseResponse)(child, {
                                        readOnly: _this.readOnly,
                                        lockedCategoryIds: _this.lockedCategoryIds,
                                        isRoot: false,
                                        selectable: true,
                                    });
                                })];
                    }
                });
            }); };
            var tree = document.getElementById("tree-" + treeId);
            var handleChange = function (value, checked) {
                var selectedCategoryCodesByTreeId = JSON.parse(_this.selectedCategoryCodesByTreeIdInput.value);
                if (!selectedCategoryCodesByTreeId[treeId]) {
                    selectedCategoryCodesByTreeId[treeId] = [];
                }
                var index = selectedCategoryCodesByTreeId[treeId].indexOf(value, 0);
                if (checked) {
                    if (index <= -1) {
                        selectedCategoryCodesByTreeId[treeId].push(value);
                        _this.selectedCategoryCodesByTreeIdInput.value = JSON.stringify(selectedCategoryCodesByTreeId);
                        _this.selectedCategoryCodesByTreeIdInput.dispatchEvent(new Event('change', { bubbles: true }));
                    }
                }
                else {
                    if (index > -1) {
                        selectedCategoryCodesByTreeId[treeId].splice(index, 1);
                        _this.selectedCategoryCodesByTreeIdInput.value = JSON.stringify(selectedCategoryCodesByTreeId);
                        _this.selectedCategoryCodesByTreeIdInput.dispatchEvent(new Event('change', { bubbles: true }));
                    }
                }
            };
            react_dom_1.default.render(react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
                react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                    react_1.default.createElement(shared_1.CategoryTree, { onChange: handleChange, childrenCallback: childrenCallback, init: init }))), tree);
        };
        this.getChildrenUrl = function (id) {
            return Router.generate(_this.childrenRoute, {
                _format: 'json',
                context: 'associate',
                dataLocale: _this.dataLocale,
                id: id,
                include_parent: false,
            });
        };
        this.container = document.getElementById('trees');
        if (!this.container) {
            return;
        }
        this.selectedCategoryCodesByTreeIdInput = document.getElementById('hidden-tree-input');
        this.productId = this.container.dataset.id !== '' ? Number(this.container.dataset.id) : undefined;
        this.productUuid = this.container.dataset.uuid !== '' ? this.container.dataset.uuid : undefined;
        this.listCategoriesRoute = routes.list_categories;
        this.childrenRoute = routes.children;
        if (!this.container.dataset.datalocale) {
            throw new Error('The container must have dataLocale data');
        }
        this.dataLocale = this.container.dataset.datalocale;
        this.readOnly = readOnly;
        this.lockedCategoryIds = lockedCategoryIds;
        var selectedTreeId = Number(this.container.dataset.selectedTree);
        this.initTree(selectedTreeId);
    }
    TreeAssociate.prototype.switchTree = function (treeIdStr) {
        var treeId = Number(treeIdStr);
        var subs = this.container.children;
        Array.from(subs).forEach(function (sub) {
            if (Number(sub.dataset.treeId) === treeId) {
                sub.hidden = false;
            }
            else {
                sub.hidden = true;
            }
        });
        var tree = document.getElementById("tree-" + treeId);
        if (!tree.hasChildNodes()) {
            this.initTree(treeId);
        }
    };
    return TreeAssociate;
}());
module.exports = TreeAssociate;


/***/ }),

/***/ 32906:
/*!**********************************************!*\
  !*** ./public/bundles/pimui/js/TreeView.tsx ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var CategoryTreeFetcher_1 = __webpack_require__(/*! ./CategoryTreeFetcher */ 40397);
var Router = __webpack_require__(/*! pim/router */ 41774);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var TreeView = (function () {
    function TreeView(domElement, initialState, routes, onChange) {
        var _this = this;
        this.initTreeView = function () {
            var init = function () { return __awaiter(_this, void 0, void 0, function () {
                var url, response, json;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            url = Router.generate(this.listTreeRoute, {
                                _format: 'json',
                                dataLocale: undefined,
                                select_node_id: this.state.selectedNode,
                                select_tree_id: this.state.selectedTree,
                                include_sub: this.state.includeSub ? 1 : 0,
                                context: 'view',
                            });
                            return [4, fetch(url)];
                        case 1:
                            response = _a.sent();
                            return [4, response.json()];
                        case 2:
                            json = _a.sent();
                            return [2, json.map(function (tree) {
                                    return __assign(__assign({}, tree), { selected: tree.selected === 'true' });
                                })];
                    }
                });
            }); };
            var childrenCallback = function (categoryId) { return __awaiter(_this, void 0, void 0, function () {
                var url, response, json;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            url = Router.generate(this.childrenRoute, {
                                _format: 'json',
                                dataLocale: undefined,
                                context: 'view',
                                id: categoryId,
                                select_node_id: this.state.selectedNode,
                                with_items_count: 1,
                                include_sub: this.state.includeSub ? 1 : 0,
                            });
                            return [4, fetch(url)];
                        case 1:
                            response = _a.sent();
                            return [4, response.json()];
                        case 2:
                            json = _a.sent();
                            return [2, json.map(function (json) { return (0, CategoryTreeFetcher_1.parseResponse)(json, {}); })];
                    }
                });
            }); };
            var initTree = function (treeId, treeLabel, treeCode, includeSub) { return __awaiter(_this, void 0, void 0, function () {
                var url, response, json;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            url = Router.generate(this.childrenRoute, {
                                _format: 'json',
                                dataLocale: undefined,
                                context: 'view',
                                id: treeId,
                                select_node_id: this.state.selectedNode,
                                with_items_count: 1,
                                include_sub: includeSub ? 1 : 0,
                            });
                            return [4, fetch(url)];
                        case 1:
                            response = _a.sent();
                            return [4, response.json()];
                        case 2:
                            json = _a.sent();
                            return [2, {
                                    id: treeId,
                                    label: treeLabel,
                                    code: treeCode,
                                    children: json
                                        .map(function (tree) { return (0, CategoryTreeFetcher_1.parseResponse)(tree, {}); })
                                        .concat({
                                        id: -1,
                                        code: 'unclassified',
                                        label: __('jstree.unclassified'),
                                        selectable: false,
                                        children: [],
                                    }),
                                    selectable: false,
                                }];
                    }
                });
            }); };
            var handleCategoryClick = function (categoryId, treeId, categoryLabel, treeLabel) {
                _this.state.selectedNode = categoryId;
                _this.state.selectedTree = treeId;
                _this.domElement.dispatchEvent(new Event('tree.updated', { bubbles: true }));
                _this.onChange(treeLabel, categoryLabel);
            };
            var handleTreeChange = function (treeId, treeLabel, selectedCategoryId) {
                _this.state.selectedTree = treeId;
                if (selectedCategoryId >= 0) {
                    _this.state.selectedNode = treeId;
                }
                else {
                    _this.state.selectedNode = selectedCategoryId;
                }
                _this.domElement.dispatchEvent(new Event('tree.updated', { bubbles: true }));
                _this.onChange(treeLabel);
            };
            var handleIncludeSubCategoriesChange = function (includeSubCategories) {
                _this.state.includeSub = includeSubCategories;
                _this.domElement.dispatchEvent(new Event('tree.updated', { bubbles: true }));
            };
            var initCallback = function (treeLabel, categoryLabel) {
                _this.onChange(treeLabel, categoryLabel);
            };
            react_dom_1.default.render(react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
                react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                    react_1.default.createElement(shared_1.CategoryTrees, { childrenCallback: childrenCallback, init: init, initTree: initTree, initCallback: initCallback, initialIncludeSubCategories: _this.state.includeSub, initialSelectedNodeId: _this.state.selectedNode, onCategoryClick: handleCategoryClick, onTreeChange: handleTreeChange, onIncludeSubCategoriesChange: handleIncludeSubCategoriesChange }))), _this.domElement);
        };
        this.refresh = function () {
            react_dom_1.default.unmountComponentAtNode(_this.domElement);
            _this.initTreeView();
        };
        this.getState = function () {
            return _this.state;
        };
        this.domElement = domElement;
        this.state = initialState;
        this.onChange = onChange;
        this.listTreeRoute = routes.listTree;
        this.childrenRoute = routes.children;
        this.initTreeView();
    }
    return TreeView;
}());
module.exports = TreeView;


/***/ }),

/***/ 87044:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/CreateAttributeButtonApp.tsx ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateAttributeButtonApp = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var SelectAttributeType_1 = __importDefault(__webpack_require__(/*! ./SelectAttributeType */ 6794));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var akeneo_design_system_2 = __webpack_require__(/*! akeneo-design-system */ 96541);
var CreateAttributeButtonApp = function (_a) {
    var buttonTitle = _a.buttonTitle, steps = _a.steps, iconsMap = _a.iconsMap, _b = _a.isModalOpen, isModalOpen = _b === void 0 ? false : _b, onClick = _a.onClick, _c = _a.initialData, initialData = _c === void 0 ? {} : _c;
    var _d = (0, akeneo_design_system_1.useBooleanState)(isModalOpen), isOpen = _d[0], open = _d[1], close = _d[2];
    var _e = react_1.default.useState(initialData), attributeData = _e[0], setAttributeData = _e[1];
    var _f = react_1.default.useState(-1), currentStepIndex = _f[0], setCurrentStepIndex = _f[1];
    var stepsForAttributeType = steps['default'];
    if (attributeData.attribute_type) {
        if (attributeData.attribute_type in steps) {
            stepsForAttributeType = steps[attributeData.attribute_type];
        }
    }
    var handleStepConfirm = function (data) {
        var newData = __assign(__assign({}, attributeData), data);
        setAttributeData(newData);
        if (currentStepIndex + 1 === Object.keys(stepsForAttributeType).length) {
            close();
            onClick(newData);
            return;
        }
        setCurrentStepIndex(currentStepIndex + 1);
    };
    var handleClose = function () {
        setCurrentStepIndex(-1);
        setAttributeData(initialData);
        close();
    };
    var handleBack = function () {
        setCurrentStepIndex(currentStepIndex - 1);
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        isOpen && (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(akeneo_design_system_2.Modal, { closeTitle: '', onClose: function () { } }),
            currentStepIndex === -1 && (react_1.default.createElement(SelectAttributeType_1.default, { onClose: handleClose, iconsMap: iconsMap, onStepConfirm: handleStepConfirm })),
            stepsForAttributeType.map(function (step, stepIndex) {
                var Component = step.view;
                return (stepIndex === currentStepIndex && (react_1.default.createElement(Component, { key: stepIndex, onClose: handleClose, onBack: handleBack, onStepConfirm: handleStepConfirm, initialData: attributeData })));
            }))),
        react_1.default.createElement(akeneo_design_system_1.Button, { id: "attribute-create-button", onClick: open }, buttonTitle)));
};
exports.CreateAttributeButtonApp = CreateAttributeButtonApp;


/***/ }),

/***/ 21607:
/*!********************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/CreateAttributeCodeAndLabel.tsx ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.view = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var settings_ui_1 = __webpack_require__(/*! @akeneo-pim-community/settings-ui */ 43762);
var CreateAttributeCodeAndLabel = function (props) {
    return react_1.default.createElement(settings_ui_1.CreateAttributeModal, __assign({}, props));
};
exports.view = CreateAttributeCodeAndLabel;


/***/ }),

/***/ 6794:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/SelectAttributeType.tsx ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var icons = __importStar(__webpack_require__(/*! akeneo-design-system/lib/icons */ 96878));
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var ModalContent = styled_components_1.default.div.withConfig({ displayName: "ModalContent", componentId: "sc-uo3uab" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  margin-top: 30px;\n  width: 745px;\n  max-height: calc(100vh - 120px);\n  overflow-x: hidden;\n  overflow-y: auto;\n"], ["\n  margin-top: 30px;\n  width: 745px;\n  max-height: calc(100vh - 120px);\n  overflow-x: hidden;\n  overflow-y: auto;\n"])));
var isReferenceDataAttributeType = function (attributeType) {
    return ['pim_reference_data_simpleselect', 'pim_reference_data_multiselect'].includes(attributeType);
};
var SelectAttributeType = function (_a) {
    var iconsMap = _a.iconsMap, onStepConfirm = _a.onStepConfirm, onClose = _a.onClose;
    var translate = (0, shared_1.useTranslate)();
    var Router = (0, shared_1.useRouter)();
    var featureFlags = (0, shared_1.useFeatureFlags)();
    var _b = react_1.default.useState(), attributeTypes = _b[0], setAttributeTypes = _b[1];
    var castIcons = icons;
    react_1.default.useEffect(function () {
        fetch(Router.generate('pim_enrich_attribute_type_index')).then(function (response) {
            response.json().then(function (attributeTypes) {
                var newAttributeTypes = Object.keys(attributeTypes);
                if (!featureFlags.isEnabled('reference_data')) {
                    newAttributeTypes = newAttributeTypes.filter(function (attributeType) { return !isReferenceDataAttributeType(attributeType); });
                }
                var sortedAttributeTypes = newAttributeTypes.sort(function (a, b) {
                    return translate("pim_enrich.entity.attribute.property.type." + a).localeCompare(translate("pim_enrich.entity.attribute.property.type." + b));
                });
                setAttributeTypes(sortedAttributeTypes);
            });
        });
    }, []);
    return (react_1.default.createElement(akeneo_design_system_1.Modal, { closeTitle: translate('pim_common.close'), onClose: onClose },
        react_1.default.createElement(akeneo_design_system_1.Modal.SectionTitle, { color: "brand" }, translate('pim_enrich.entity.attribute.module.create.button')),
        react_1.default.createElement(akeneo_design_system_1.Modal.Title, null, translate('pim_enrich.entity.attribute.property.type.choose')),
        react_1.default.createElement(ModalContent, null,
            react_1.default.createElement(akeneo_design_system_1.Tiles, null, (attributeTypes || []).map(function (attributeType) {
                var component = iconsMap[attributeType] || 'AddAttributeIcon';
                var Icon = castIcons[component] || akeneo_design_system_1.AddAttributeIcon;
                return (react_1.default.createElement(akeneo_design_system_1.Tile, { onClick: function () { return onStepConfirm({ attribute_type: attributeType }); }, key: attributeType, icon: react_1.default.createElement(Icon, null), title: translate("pim_enrich.entity.attribute.property.type." + attributeType) }, translate("pim_enrich.entity.attribute.property.type." + attributeType)));
            })))));
};
exports["default"] = SelectAttributeType;
var templateObject_1;


/***/ }),

/***/ 95102:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/choices.tsx ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var attribute_option_1 = __webpack_require__(/*! akeneopimstructure/js/attribute-option */ 5701);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var propertyAccessor = __webpack_require__(/*! pim/common/property */ 64070);
var Choices = (function (_super) {
    __extends(Choices, _super);
    function Choices() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Choices.prototype.initialize = function (config) {
        this.config = config.config;
        BaseView.prototype.initialize.apply(this, arguments);
    };
    Choices.prototype.configure = function () {
        var _this = this;
        if (this.isActive()) {
            this.trigger('tab:register', {
                code: this.code,
                label: __(this.config.label),
            });
        }
        window.addEventListener(attribute_option_1.ATTRIBUTE_OPTIONS_AUTO_SORT, (function (event) {
            var data = _this.getFormData();
            propertyAccessor.updateProperty(data, 'auto_option_sorting', event.detail.autoSortOptions);
            _this.setData(data);
        }));
        return _super.prototype.configure.call(this);
    };
    Choices.prototype.render = function () {
        if (!this.isActive()) {
            return;
        }
        react_dom_1.default.render(react_1.default.createElement(attribute_option_1.AttributeOptionsApp, { attributeId: this.getFormData().meta.id, autoSortOptions: this.getFormData().auto_option_sorting }), this.el);
        return this;
    };
    Choices.prototype.remove = function () {
        react_dom_1.default.unmountComponentAtNode(this.el);
        return _super.prototype.remove.call(this);
    };
    Choices.prototype.isActive = function () {
        return this.config.activeForTypes.includes(this.getRoot().getType());
    };
    return Choices;
}(BaseView));
module.exports = Choices;


/***/ }),

/***/ 888:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/delete.tsx ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var DeleteAction_1 = __webpack_require__(/*! ./delete/DeleteAction */ 69386);
var Delete = (function (_super) {
    __extends(Delete, _super);
    function Delete() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Delete.prototype.reactElementToMount = function () {
        var data = this.getRoot().getFormData();
        return (react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(DeleteAction_1.DeleteAction, { attributeCode: data.code }))));
    };
    return Delete;
}(react_2.ReactView));
module.exports = Delete;


/***/ }),

/***/ 69386:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/delete/DeleteAction.tsx ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteAction = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var DeleteModal_1 = __webpack_require__(/*! ./DeleteModal */ 97638);
var DeleteAction = function (_a) {
    var attributeCode = _a.attributeCode;
    var translate = (0, shared_1.useTranslate)();
    var router = (0, shared_1.useRouter)();
    var _b = (0, akeneo_design_system_1.useBooleanState)(false), isModalOpen = _b[0], openModal = _b[1], closeModal = _b[2];
    var handleDeleted = function () {
        router.redirect(router.generate('pim_enrich_attribute_index'));
        closeModal();
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("button", { className: "AknDropdown-menuLink delete", onClick: openModal }, translate('pim_common.delete')),
        isModalOpen && react_1.default.createElement(DeleteModal_1.DeleteModal, { onCancel: closeModal, onSuccess: handleDeleted, attributeCode: attributeCode })));
};
exports.DeleteAction = DeleteAction;


/***/ }),

/***/ 97638:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/delete/DeleteModal.tsx ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteModal = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var SpacedHelper = (0, styled_components_1.default)(akeneo_design_system_1.Helper).withConfig({ displayName: "SpacedHelper", componentId: "sc-1mhz81f" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  margin: 10px 0 20px;\n"], ["\n  margin: 10px 0 20px;\n"])));
var Highlight = styled_components_1.default.span.withConfig({ displayName: "Highlight", componentId: "sc-1tfyc55" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  color: ", ";\n  font-weight: bold;\n"], ["\n  color: ", ";\n  font-weight: bold;\n"])), (0, akeneo_design_system_1.getColor)('brand', 100));
var useImpactedItemCount = function (attributeCode) {
    var _a = (0, react_1.useState)(0), productCount = _a[0], setProductCount = _a[1];
    var _b = (0, react_1.useState)(0), productModelCount = _b[0], setProductModelCount = _b[1];
    var route = (0, shared_1.useRoute)('pim_enrich_count_items_with_attribute_value', { attribute_code: attributeCode });
    var isMounted = (0, shared_1.useIsMounted)();
    var fetchImpactedItemCount = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, json;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, fetch(route)];
                case 1:
                    response = _a.sent();
                    return [4, response.json()];
                case 2:
                    json = _a.sent();
                    if (isMounted()) {
                        setProductCount(json.products);
                        setProductModelCount(json.product_models);
                    }
                    return [2];
            }
        });
    }); };
    (0, react_1.useEffect)(function () {
        fetchImpactedItemCount();
    }, [route, attributeCode]);
    return [productCount, productModelCount];
};
var DeleteModal = function (_a) {
    var onCancel = _a.onCancel, onSuccess = _a.onSuccess, attributeCode = _a.attributeCode;
    var translate = (0, shared_1.useTranslate)();
    var notify = (0, shared_1.useNotify)();
    var removeRoute = (0, shared_1.useRoute)('pim_enrich_attribute_rest_remove', { code: attributeCode });
    var _b = useImpactedItemCount(attributeCode), productCount = _b[0], productModelCount = _b[1];
    var _c = (0, react_1.useState)(''), attributeCodeConfirm = _c[0], setAttributeCodeConfirm = _c[1];
    var _d = (0, react_1.useState)(false), isLoading = _d[0], setLoading = _d[1];
    var isValid = attributeCodeConfirm === attributeCode;
    var handleConfirm = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, message, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!isValid || isLoading)
                        return [2];
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 6, , 7]);
                    setLoading(true);
                    return [4, fetch(removeRoute, {
                            method: 'DELETE',
                            headers: new Headers({
                                'X-Requested-With': 'XMLHttpRequest',
                            }),
                        })];
                case 2:
                    response = _a.sent();
                    setLoading(false);
                    if (!response.ok) return [3, 3];
                    notify(shared_1.NotificationLevel.SUCCESS, translate('pim_enrich.entity.attribute.flash.delete.success'));
                    onSuccess();
                    return [3, 5];
                case 3: return [4, response.json()];
                case 4:
                    message = (_a.sent()).message;
                    notify(shared_1.NotificationLevel.ERROR, message ? translate(message) : translate('pim_enrich.entity.attribute.flash.delete.fail'));
                    _a.label = 5;
                case 5: return [3, 7];
                case 6:
                    error_1 = _a.sent();
                    setLoading(false);
                    notify(shared_1.NotificationLevel.ERROR, translate('pim_enrich.entity.attribute.flash.delete.fail'));
                    return [3, 7];
                case 7: return [2];
            }
        });
    }); };
    var productText = 0 < productCount
        ? translate('pim_enrich.entity.attribute.module.delete.product_count', { count: productCount }, productCount)
        : '';
    var productModelText = 0 < productModelCount
        ? translate('pim_enrich.entity.attribute.module.delete.product_model_count', { count: productModelCount }, productModelCount)
        : '';
    var impactedItemsText = "" + productText + (0 < productCount && 0 < productModelCount ? " " + translate('pim_common.and') + " " : '') + productModelText;
    return (react_1.default.createElement(shared_1.DeleteModal, { title: translate('pim_enrich.entity.attribute.plural_label'), onConfirm: handleConfirm, onCancel: onCancel, canConfirmDelete: isValid },
        translate('pim_enrich.entity.attribute.module.delete.confirm'),
        (0 < productCount || 0 < productModelCount) && (react_1.default.createElement("p", null,
            react_1.default.createElement(Highlight, null, impactedItemsText),
            ' ',
            translate('pim_enrich.entity.attribute.module.delete.used', {}, productCount + productModelCount))),
        react_1.default.createElement(SpacedHelper, null,
            translate('pim_enrich.entity.attribute.module.delete.helper.content'),
            ' ',
            react_1.default.createElement(akeneo_design_system_1.Link, { href: "https://help.akeneo.com/pim/serenity/articles/manage-your-attributes.html#delete-an-attribute-and-keep-the-related-data" }, translate('pim_enrich.entity.attribute.module.delete.helper.link'))),
        react_1.default.createElement(akeneo_design_system_1.Field, { label: translate('pim_enrich.entity.attribute.module.delete.type', { attributeCode: attributeCode }) },
            react_1.default.createElement(akeneo_design_system_1.TextInput, { readOnly: isLoading, value: attributeCodeConfirm, onChange: setAttributeCodeConfirm, onSubmit: handleConfirm }))));
};
exports.DeleteModal = DeleteModal;
var templateObject_1, templateObject_2;


/***/ }),

/***/ 12612:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/default-bool-value.ts ***!
  \*********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var DefaultBoolValue = (function (_super) {
    __extends(DefaultBoolValue, _super);
    function DefaultBoolValue() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultBoolValue.prototype.initialize = function (meta) {
        meta.config.choices = {
            false: 'pim_common.no',
            true: 'pim_common.yes',
        };
        _super.prototype.initialize.call(this, meta);
    };
    DefaultBoolValue.prototype.getFieldValue = function (field) {
        var value = _super.prototype.getFieldValue.call(this, field);
        return 'false' === value ? false : 'true' === value ? true : null;
    };
    DefaultBoolValue.prototype.getModelValue = function () {
        var modelValue = _super.prototype.getModelValue.call(this);
        return true === modelValue ? 'true' : false === modelValue ? 'false' : '';
    };
    return DefaultBoolValue;
}(BaseSelect));
module.exports = DefaultBoolValue;


/***/ }),

/***/ 76625:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/guidelines.tsx ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var settings_ui_1 = __webpack_require__(/*! @akeneo-pim-community/settings-ui */ 43762);
var propertyAccessor = __webpack_require__(/*! pim/common/property */ 64070);
var Guidelines = (function (_super) {
    __extends(Guidelines, _super);
    function Guidelines() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Guidelines.prototype.initialize = function () {
        BaseView.prototype.initialize.apply(this, arguments);
    };
    Guidelines.prototype.render = function () {
        var _this = this;
        var onChange = function (newGuidelines) {
            var data = _this.getFormData();
            propertyAccessor.updateProperty(data, 'guidelines', newGuidelines);
            _this.setData(data);
        };
        react_dom_1.default.render(react_1.default.createElement(settings_ui_1.AttributeGuidelinesApp, { defaultValue: this.getFormData().guidelines || {}, onChange: onChange }), this.el);
        return this;
    };
    Guidelines.prototype.remove = function () {
        react_dom_1.default.unmountComponentAtNode(this.el);
        return _super.prototype.remove.call(this);
    };
    return Guidelines;
}(BaseView));
module.exports = Guidelines;


/***/ }),

/***/ 63124:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/config-registry.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getConfig = void 0;
var __moduleConfig = { "pim/controller-registry": { "controllers": { "akeneo_measurements_settings_index": { "module": "pim/controller/measurements/settings", "aclResourceId": "akeneo_measurements_manage_settings" }, "akeneo_measurements_settings_any": { "module": "pim/controller/measurements/settings", "aclResourceId": "akeneo_measurements_manage_settings" }, "pim_user_index": { "module": "pim/controller/common/index", "config": { "entity": "user" } }, "pim_user_edit": { "module": "pim/controller/user" }, "pim_user_role_index": { "module": "pim/controller/common/index", "config": { "entity": "user-role" } }, "pim_user_role_create": { "module": "pim/controller/form" }, "pim_user_role_update": { "module": "pim/controller/role" }, "pim_user_group_create": { "module": "pim/controller/form" }, "pim_user_group_index": { "module": "pim/controller/common/index", "config": { "entity": "user-group" } }, "pim_user_group_update": { "module": "pim/controller/form" }, "pim_user_profile_update": { "module": "pim/controller/form" }, "pim_analytics_system_info_index": { "module": "pim-analytics-system-info-controller" }, "pim_settings_index": { "module": "pim/controller/settings" }, "pim_system_index": { "module": "pim/controller/system-index" }, "pim_dashboard_index": { "module": "pim/controller/dashboard" }, "pim_enrich_associationtype_edit": { "module": "pim/controller/association-type/edit", "aclResourceId": "pim_enrich_associationtype_edit" }, "pim_enrich_associationtype_index": { "module": "pim/controller/association-type/index", "aclResourceId": "pim_enrich_associationtype_index" }, "pim_enrich_attribute_create": { "module": "pim/controller/attribute/create", "aclResourceId": "pim_enrich_attribute_create" }, "pim_enrich_attribute_edit": { "module": "pim/controller/attribute/edit", "aclResourceId": "pim_enrich_attribute_edit" }, "pim_enrich_attributegroup_create": { "module": "pim/controller/attribute-group/create", "aclResourceId": "pim_enrich_attributegroup_create" }, "pim_enrich_attributegroup_index": { "module": "pim/controller/attribute-group/index", "aclResourceId": "pim_enrich_attributegroup_index", "config": { "entity": "attribute-group" } }, "pim_enrich_attributegroup_edit": { "module": "pim/controller/attribute-group/edit", "aclResourceId": "pim_enrich_attributegroup_edit" }, "pim_enrich_categorytree_create": { "module": "pim/controller/form", "aclResourceId": "pim_enrich_product_category_create" }, "pim_enrich_categorytree_edit": { "module": "pim/controller/categories/index", "aclResourceId": "pim_enrich_product_category_edit" }, "pim_enrich_categorytree_index": { "module": "pim/controller/categories/index", "aclResourceId": "pim_enrich_product_category_list" }, "pim_enrich_categorytree_tree": { "module": "pim/controller/categories/index", "aclResourceId": "pim_enrich_product_category_list" }, "pim_category_template_edit": { "module": "pim/controller/categories/index", "aclResourceId": "pim_enrich_product_category_template" }, "pim_enrich_channel_edit": { "module": "pim/controller/channel/edit", "aclResourceId": "pim_enrich_channel_edit" }, "pim_enrich_channel_create": { "module": "pim/controller/channel/edit", "aclResourceId": "pim_enrich_channel_create" }, "pim_enrich_grouptype_edit": { "module": "pim/controller/group-type", "aclResourceId": "pim_enrich_grouptype_edit" }, "pim_enrich_product_edit": { "module": "pim/controller/entity-with-family-variant", "config": { "entity": "product" } }, "pim_enrich_product_model_edit": { "module": "pim/controller/entity-with-family-variant", "config": { "entity": "product-model" } }, "pim_enrich_product_edit_categories": { "module": "pim/controller/entity-categories-with-family-variant", "config": { "entity": "product", "redirectRouteName": "pim_enrich_product_edit", "redirectTabName": "pim-product-edit-form-categories" } }, "pim_enrich_product_model_edit_categories": { "module": "pim/controller/entity-categories-with-family-variant", "config": { "entity": "product-model", "redirectRouteName": "pim_enrich_product_model_edit", "redirectTabName": "pim-product-edit-form-categories" } }, "pim_enrich_group_edit": { "module": "pim/controller/group", "aclResourceId": "pim_enrich_group_edit" }, "pim_enrich_channel_index": { "module": "pim/controller/common/index", "aclResourceId": "pim_enrich_channel_index", "config": { "entity": "channel" } }, "pim_importexport_export_profile_index": { "module": "pim/controller/common/index", "aclResourceId": "pim_importexport_export_profile_index", "config": { "entity": "export-profile" } }, "pim_importexport_import_profile_index": { "module": "pim/controller/common/index", "aclResourceId": "pim_importexport_import_profile_index", "config": { "entity": "import-profile" } }, "pim_importexport_export_profile_edit": { "module": "pim/controller/job-instance", "aclResourceId": "pim_importexport_export_profile_edit" }, "pim_importexport_import_profile_edit": { "module": "pim/controller/job-instance", "aclResourceId": "pim_importexport_import_profile_edit" }, "pim_importexport_import_profile_show": { "module": "pim/controller/job-instance", "aclResourceId": "pim_importexport_import_profile_show" }, "pim_importexport_export_profile_show": { "module": "pim/controller/job-instance", "aclResourceId": "pim_importexport_export_profile_show" }, "pim_enrich_currency_index": { "module": "pim/controller/common/index", "aclResourceId": "pim_enrich_currency_index", "config": { "entity": "currency" } }, "pim_enrich_currency_toggle": { "module": "pim/controller/redirect", "aclResourceId": "pim_enrich_currency_toggle" }, "pim_enrich_mass_edit_action_sequential_edit": { "module": "pim/controller/redirect" }, "pim_enrich_mass_edit_action": { "module": "pim/controller/mass-edit", "config": { "route": "pim_enrich_mass_edit_rest_get_filter" }, "aclResourceId": "pim_enrich_mass_edit" }, "pim_enrich_family_index": { "module": "pim/controller/common/index", "aclResourceId": "pim_enrich_family_index", "config": { "entity": "family" } }, "pim_enrich_family_edit": { "module": "pim/controller/family", "aclResourceId": "pim_enrich_family_index" }, "pim_importexport_import_profile_launch_upload": { "module": "pim/controller/redirect", "aclResourceId": "pim_importexport_import_profile_launch_upload" }, "pim_importexport_import_profile_launch": { "module": "pim/controller/redirect", "aclResourceId": "pim_importexport_import_profile_launch" }, "pim_importexport_import_profile_remove": { "module": "pim/controller/redirect", "aclResourceId": "pim_importexport_import_profile_remove" }, "pim_importexport_export_profile_launch": { "module": "pim/controller/redirect", "aclResourceId": "pim_importexport_export_profile_launch" }, "pim_importexport_export_profile_remove": { "module": "pim/controller/redirect", "aclResourceId": "pim_importexport_export_profile_remove" }, "pim_enrich_locale_index": { "module": "pim/controller/locales/index", "aclResourceId": "pim_enrich_locale_index" }, "pim_enrich_attribute_index": { "module": "pim/controller/common/index", "aclResourceId": "pim_enrich_attribute_index", "config": { "entity": "attribute" } }, "pim_enrich_attribute_sort": { "module": "pim/controller/template", "aclResourceId": "pim_enrich_attribute_sort" }, "pim_enrich_attribute_remove": { "module": "pim/controller/template", "aclResourceId": "pim_enrich_attribute_remove" }, "pim_enrich_product_index": { "module": "pim/controller/product/index", "aclResourceId": "pim_enrich_product_index" }, "pim_enrich_product_create": { "module": "pim/controller/template", "aclResourceId": "pim_enrich_product_create" }, "pim_enrich_group_index": { "module": "pim/controller/common/index", "aclResourceId": "pim_enrich_group_index", "config": { "entity": "group" } }, "pim_enrich_group_create": { "module": "pim/controller/template", "aclResourceId": "pim_enrich_group_create" }, "pim_enrich_group_history": { "module": "pim/controller/template", "aclResourceId": "pim_enrich_group_history" }, "pim_enrich_associationtype_create": { "module": "pim/controller/template", "aclResourceId": "pim_enrich_associationtype_create" }, "pim_enrich_grouptype_index": { "module": "pim/controller/common/index", "aclResourceId": "pim_enrich_grouptype_index", "config": { "entity": "group-type" } }, "pim_enrich_grouptype_create": { "module": "pim/controller/template", "aclResourceId": "pim_enrich_grouptype_create" }, "pim_enrich_grouptype_remove": { "module": "pim/controller/template", "aclResourceId": "pim_enrich_grouptype_remove" }, "oro_config_configuration_system": { "module": "pim/controller/config" }, "pim_enrich_catalog_volume_index": { "module": "pim/controller/catalog-volume" }, "pim_user_security_logout": { "module": "pim/controller/logout" }, "akeneo_connectivity_connection_connect_marketplace": { "module": "pim/controller/connectivity/connection/connect/marketplace" }, "akeneo_connectivity_connection_connect_marketplace_profile": { "module": "pim/controller/connectivity/connection/connect/marketplace" }, "akeneo_connectivity_connection_connect_marketplace_test_app_create": { "module": "pim/controller/connectivity/connection/connect/marketplace" }, "akeneo_connectivity_connection_connect_marketplace_test_app_delete": { "module": "pim/controller/connectivity/connection/connect/marketplace" }, "akeneo_connectivity_connection_connect_apps_activate": { "module": "pim/controller/connectivity/connection/connect/apps" }, "akeneo_connectivity_connection_connect_apps_authorize": { "module": "pim/controller/connectivity/connection/connect/apps" }, "akeneo_connectivity_connection_connect_apps_authenticate": { "module": "pim/controller/connectivity/connection/connect/apps" }, "akeneo_connectivity_connection_error_management_dashboard": { "module": "pim/controller/connectivity/connection/error-management" }, "akeneo_connectivity_connection_error_management_connection_monitoring": { "module": "pim/controller/connectivity/connection/error-management", "aclResourceId": "akeneo_connectivity_connection_manage_settings" }, "akeneo_connectivity_connection_webhook_edit": { "module": "pim/controller/connectivity/connection/webhook", "aclResourceId": "akeneo_connectivity_connection_manage_settings" }, "akeneo_connectivity_connection_webhook_regenerate_secret": { "module": "pim/controller/connectivity/connection/webhook", "aclResourceId": "akeneo_connectivity_connection_manage_settings" }, "akeneo_connectivity_connection_webhook_event_logs": { "module": "pim/controller/connectivity/connection/webhook", "aclResourceId": "akeneo_connectivity_connection_manage_settings" }, "akeneo_connectivity_connection_settings_index": { "module": "pim/controller/connectivity/connection/settings", "aclResourceId": "akeneo_connectivity_connection_manage_settings" }, "akeneo_connectivity_connection_settings_edit": { "module": "pim/controller/connectivity/connection/settings", "aclResourceId": "akeneo_connectivity_connection_manage_settings" }, "akeneo_connectivity_connection_settings_any": { "module": "pim/controller/connectivity/connection/settings", "aclResourceId": "akeneo_connectivity_connection_manage_settings" }, "akeneo_connectivity_connection_audit_index": { "module": "pim/controller/connectivity/connection/audit" }, "akeneo_connectivity_connection_audit_any": { "module": "pim/controller/connectivity/connection/audit" }, "akeneo_connectivity_connection_connect_connected_apps": { "module": "pim/controller/connectivity/connection/connect/connected-apps" }, "akeneo_connectivity_connection_connect_connected_apps_edit": { "module": "pim/controller/connectivity/connection/connect/connected-apps" }, "akeneo_connectivity_connection_connect_connected_apps_delete": { "module": "pim/controller/connectivity/connection/connect/connected-apps" }, "akeneo_connectivity_connection_connect_connected_apps_open": { "module": "pim/controller/connectivity/connection/connect/connected-apps" }, "akeneo_connectivity_connection_connect_connected_apps_catalogs_edit": { "module": "pim/controller/connectivity/connection/connect/connected-apps" }, "akeneo_data_quality_insights_dashboard": { "module": "akeneo-data-quality-insights-dqi-dashboard-index" }, "akeneo_job_process_tracker_index": { "module": "akeneojob/controller/process-tracker", "aclResourceId": "pim_enrich_job_tracker_index" }, "akeneo_job_process_tracker_details": { "module": "akeneojob/controller/process-tracker", "aclResourceId": "pim_enrich_job_tracker_index" }, "akeneo_identifier_generator_index": { "module": "akeneoidentifiergenerator/js/controller/identifier-generator", "feature": "identifier_generator" }, "akeneo_identifier_generator_edit": { "module": "akeneoidentifiergenerator/js/controller/identifier-generator", "feature": "identifier_generator" } }, "defaultController": { "module": "pim/controller/template" } }, "akeneomeasure/bridge/dependencies": { "operations_max": 5, "units_max": 50, "families_max": 300 }, "pim/fetcher-registry": { "fetchers": { "user": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_user_user_rest_get" } } }, "user-group": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_user_user_group_rest_index" } } }, "user-role": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_user_user_role_rest_index" } } }, "user-profiles": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_user_rest_find_all_profiles" } } }, "reference-data-configuration": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_reference_data_configuration_rest_get" } } }, "datagrid-view": { "module": "pim/datagrid-view-fetcher", "options": { "urls": { "list": "pim_datagrid_view_rest_index", "get": "pim_datagrid_view_rest_get", "columns": "pim_datagrid_view_rest_default_columns", "userDefaultView": "pim_datagrid_view_rest_default_user_view" } } }, "default": "pim/base-fetcher", "association-type": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_enrich_associationtype_rest_index", "get": "pim_enrich_associationtype_rest_get" } } }, "group-type": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_enrich_grouptype_rest_index", "get": "pim_enrich_grouptype_rest_get" } } }, "attribute-group": { "module": "pim/attribute-group-fetcher", "options": { "urls": { "search": "pim_enrich_attributegroup_rest_search", "list": "pim_enrich_attributegroup_rest_index", "get": "pim_enrich_attributegroup_rest_get" } } }, "attribute": { "module": "pim/attribute-fetcher", "options": { "identifier_type": "pim_catalog_identifier", "urls": { "list": "pim_enrich_attribute_rest_index", "get": "pim_enrich_attribute_rest_get" } } }, "attribute-type": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_enrich_attribute_type_index" } } }, "family": { "module": "pim/family-fetcher", "options": { "urls": { "list": "pim_enrich_family_rest_index", "get": "pim_enrich_family_rest_get", "available_axes": "pim_enrich_family_rest_get_available_axes" } } }, "family-variant": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_enrich_family_variant_rest_get" } } }, "channel": { "module": "pim/channel-fetcher", "options": { "urls": { "list": "pim_enrich_channel_rest_index", "get": "pim_enrich_channel_rest_get", "list_channel_category_tree": "pim_enrich_channel_category_trees_get" } } }, "locale": { "module": "pim/locale-fetcher", "options": { "urls": { "list": "pim_enrich_locale_rest_index" } } }, "measure": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_enrich_measures_rest_index" } } }, "currency": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_enrich_currency_rest_index" } } }, "group": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_enrich_group_rest_get" } } }, "sequential-edit": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_enrich_mass_edit_action_sequential_edit_get" } } }, "product-model-history": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_enrich_product_model_history_rest_get" } } }, "product-history": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_enrich_product_history_rest_get" } } }, "product": { "module": "pim/product-fetcher", "options": { "urls": { "get": "pim_enrich_product_rest_get", "list": "pim_enrich_product_rest_index" } } }, "product-model": { "module": "pim/product-model-fetcher", "options": { "urls": { "get": "pim_enrich_product_model_rest_get", "children": "pim_enrich_product_model_rest_children_list", "list": "pim_enrich_product_model_rest_index" } } }, "product-model-by-code": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_enrich_product_model_rest_get_by_code" } } }, "category": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_enrich_category_rest_list", "get": "pim_enrich_category_rest_get" } } }, "job-instance-export": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_enrich_job_instance_rest_export_get" } } }, "job-instance-import": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_enrich_job_instance_rest_import_get" } } }, "formats": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_localization_format_index" } } }, "job-execution": { "module": "pim/base-fetcher", "options": { "urls": { "get": "pim_enrich_job_execution_rest_get" } } }, "ui-locale": { "module": "pim/base-fetcher", "options": { "urls": { "list": "pim_localization_locale_index" } } } } }, "pim/remover/user": { "url": "pim_user_user_rest_delete" }, "pim/attribute-edit-form/type-specific-form-registry": { "formNames": { "pim_reference_data_multiselect": { "create": "pim-attribute-form-ref-data-multi", "edit": "pim-attribute-form-ref-data-multi" }, "pim_reference_data_simpleselect": { "create": "pim-attribute-form-ref-data-simple", "edit": "pim-attribute-form-ref-data-simple" }, "pim_catalog_date": { "create": "pim-attribute-form-date", "edit": "pim-attribute-form-date" }, "pim_catalog_file": { "create": "pim-attribute-form-file", "edit": "pim-attribute-form-file" }, "pim_catalog_identifier": { "create": "pim-attribute-form-identifier", "edit": "pim-attribute-form-identifier" }, "pim_catalog_image": { "create": "pim-attribute-form-image", "edit": "pim-attribute-form-image" }, "pim_catalog_metric": { "create": "pim-attribute-form-metric-create", "edit": "pim-attribute-form-metric-edit" }, "pim_catalog_multiselect": { "create": "pim-attribute-form-select", "edit": "pim-attribute-form-select" }, "pim_catalog_number": { "create": "pim-attribute-form-number", "edit": "pim-attribute-form-number" }, "pim_catalog_price_collection": { "create": "pim-attribute-form-price", "edit": "pim-attribute-form-price" }, "pim_catalog_simpleselect": { "create": "pim-attribute-form-select", "edit": "pim-attribute-form-select" }, "pim_catalog_text": { "create": "pim-attribute-form-text", "edit": "pim-attribute-form-text" }, "pim_catalog_textarea": { "create": "pim-attribute-form-textarea", "edit": "pim-attribute-form-textarea" }, "pim_catalog_boolean": { "create": "pim-attribute-form-boolean", "edit": "pim-attribute-form-boolean" } } }, "oro/datagrid/mass_delete-action": { "jobInstanceCode": "delete_products_and_product_models", "route": "pim_enrich_mass_edit_rest_launch", "backRoute": "pim_enrich_product_index", "launchErrorLabel": "pim_enrich.mass_edit.product.step.launch_error.label", "launchedLabel": "pim_enrich.mass_edit.product.step.launched.label", "confirmLabel": "pim_enrich.entity.product_model.module.delete.confirm_for_products_and_product_models", "buttonText": "pim_common.delete" }, "pim/saver/datagrid-view": { "url": "pim_datagrid_view_rest_save" }, "pim/remover/datagrid-view": { "url": "pim_datagrid_view_rest_remove" }, "pim/router": { "indexRoute": "pim_dashboard_index" }, "pim/form/common/edit-form": { "forwarded-events": { "pim_enrich:form:field:extension:add": "pim_enrich:form:field:extension:add", "pim_enrich:form:filter:extension:add": "pim_enrich:form:filter:extension:add", "pim_enrich:form:entity:pre_save": "pim_enrich:form:entity:pre_save", "pim_enrich:form:entity:update_state": "pim_enrich:form:entity:update_state", "pim_enrich:form:entity:post_fetch": "pim_enrich:form:entity:post_fetch" } }, "pim/cache-invalidator": { "events": ["pim_enrich:form:entity:post_fetch"] }, "pim/job/product/edit/content": { "forwarded-events": { "pim_enrich:form:filter:extension:add": "pim_enrich:form:filter:extension:add" } }, "pim/grid/view-selector/selector": { "forwarded-events": { "grid:product-grid:state_changed": "grid:product-grid:state_changed" } }, "pim/controller/group": { "fetcher": "group" }, "pim/remover/association-type": { "url": "pim_enrich_associationtype_rest_remove" }, "pim/remover/attribute-group": { "url": "pim_enrich_attributegroup_rest_remove" }, "pim/remover/group-type": { "url": "pim_enrich_grouptype_rest_remove" }, "pim/remover/channel": { "url": "pim_enrich_channel_rest_remove" }, "pim/remover/family": { "url": "pim_enrich_family_rest_remove" }, "pim/remover/family-variant": { "url": "pim_enrich_family_variant_rest_remove" }, "pim/remover/group": { "url": "pim_enrich_group_rest_remove" }, "pim/remover/product": { "url": "pim_enrich_product_rest_remove" }, "pim/remover/product-model": { "url": "pim_enrich_product_model_rest_remove" }, "pim/remover/job-instance-import": { "url": "pim_enrich_job_instance_rest_import_delete" }, "pim/remover/job-instance-export": { "url": "pim_enrich_job_instance_rest_export_delete" }, "pim/remover/attribute": { "url": "pim_enrich_attribute_rest_remove" }, "pim/saver/channel": { "postUrl": "pim_enrich_channel_rest_post", "putUrl": "pim_enrich_channel_rest_put" }, "pim/saver/family": { "putUrl": "pim_enrich_family_rest_put" }, "pim/saver/family-variant": { "putUrl": "pim_enrich_family_variant_rest_put" }, "pim/saver/product": { "url": "pim_enrich_product_rest_post" }, "pim/saver/product-model": { "url": "pim_enrich_product_model_rest_post" }, "pim/saver/group": { "url": "pim_enrich_group_rest_post" }, "pim/saver/job-instance-import": { "url": "pim_enrich_job_instance_rest_import_put" }, "pim/saver/job-instance-export": { "url": "pim_enrich_job_instance_rest_export_put" }, "pim/form/common/attributes/create-button": { "attribute_icons": { "pim_catalog_identifier": "IdIcon", "pim_catalog_text": "AttributeTextIcon", "pim_catalog_textarea": "AttributeTextareaIcon", "pim_catalog_number": "AttributeNumberIcon", "pim_catalog_price_collection": "AttributePriceIcon", "pim_catalog_multiselect": "AttributeMultiSelectIcon", "pim_catalog_simpleselect": "AttributeSelectIcon", "pim_catalog_file": "AttributeFileIcon", "pim_catalog_image": "AssetsIcon", "pim_catalog_boolean": "AttributeBoolean", "pim_catalog_date": "DateIcon", "pim_catalog_metric": "MetricIcon", "pim_reference_data_multiselect": "AttributeMultiSelectIcon", "pim_reference_data_simpleselect": "AttributeSelectIcon" }, "steps": { "default": [__webpack_require__(/*! pimui/js/attribute/form/CreateAttributeCodeAndLabel.tsx */ 21607)] } } };
var getConfig = function (configPath) {
    var _a;
    return (_a = __moduleConfig[configPath]) !== null && _a !== void 0 ? _a : null;
};
exports.getConfig = getConfig;


/***/ }),

/***/ 12623:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/catalog-volume.tsx ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var react_2 = __importDefault(__webpack_require__(/*! react */ 67294));
var catalog_volume_monitoring_1 = __webpack_require__(/*! @akeneo-pim-community/catalog-volume-monitoring */ 49264);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var CatalogVolumeController = (function (_super) {
    __extends(CatalogVolumeController, _super);
    function CatalogVolumeController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CatalogVolumeController.prototype.reactElementToMount = function () {
        return (react_2.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_2.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_2.default.createElement(catalog_volume_monitoring_1.CatalogVolumeMonitoringApp, { getCatalogVolumes: catalog_volume_monitoring_1.getCatalogVolume }))));
    };
    CatalogVolumeController.prototype.routeGuardToUnmount = function () {
        return /pim_enrich_catalog_volume_index/;
    };
    CatalogVolumeController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-system' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-system-catalog-volume' });
        return _super.prototype.renderRoute.call(this);
    };
    return CatalogVolumeController;
}(react_1.ReactController));
module.exports = CatalogVolumeController;


/***/ }),

/***/ 39877:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/controller/config.tsx ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var config_1 = __webpack_require__(/*! @akeneo-pim-community/config */ 49995);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var ConfigController = (function (_super) {
    __extends(ConfigController, _super);
    function ConfigController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConfigController.prototype.reactElementToMount = function () {
        return (react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(config_1.ConfigForm, null))));
    };
    ConfigController.prototype.routeGuardToUnmount = function () {
        return /oro_config_configuration_system/;
    };
    ConfigController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-system' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-system-configuration' });
        return _super.prototype.renderRoute.call(this);
    };
    return ConfigController;
}(react_2.ReactController));
module.exports = ConfigController;


/***/ }),

/***/ 10178:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/controller/dashboard.tsx ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var activity_1 = __webpack_require__(/*! @akeneo-pim-community/activity */ 31296);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var DashboardController = (function (_super) {
    __extends(DashboardController, _super);
    function DashboardController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DashboardController.prototype.reactElementToMount = function () {
        return (react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(activity_1.DashboardIndex, null))));
    };
    DashboardController.prototype.routeGuardToUnmount = function () {
        return /pim_dashboard_index/;
    };
    DashboardController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-activity' });
        mediator.trigger('pim_menu:highlight:item', { extension: 'pim-menu-activity-dashboard' });
        return _super.prototype.renderRoute.call(this);
    };
    return DashboardController;
}(react_2.ReactController));
module.exports = DashboardController;


/***/ }),

/***/ 6001:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/entity-categories-with-family-variant.ts ***!
  \*************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var BaseController = __webpack_require__(/*! pim/controller/base */ 88191);
var Router = __webpack_require__(/*! pim/router */ 41774);
var EntityCategoriesWithFamilyVariant = (function (_super) {
    __extends(EntityCategoriesWithFamilyVariant, _super);
    function EntityCategoriesWithFamilyVariant() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EntityCategoriesWithFamilyVariant.prototype.renderRoute = function (route) {
        sessionStorage.setItem('redirectTab', '#' + this.options.config.redirectTabName);
        sessionStorage.setItem('current_column_tab', this.options.config.redirectTabName);
        Router.redirectToRoute(this.options.config.redirectRouteName, route.params);
        return $.Deferred().resolve();
    };
    return EntityCategoriesWithFamilyVariant;
}(BaseController));
module.exports = EntityCategoriesWithFamilyVariant;


/***/ }),

/***/ 59158:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/controller/settings.tsx ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var settings_ui_1 = __webpack_require__(/*! @akeneo-pim-community/settings-ui */ 43762);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var DashboardController = (function (_super) {
    __extends(DashboardController, _super);
    function DashboardController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DashboardController.prototype.reactElementToMount = function () {
        return (react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(settings_ui_1.SettingsIndex, null))));
    };
    DashboardController.prototype.routeGuardToUnmount = function () {
        return /pim_settings_index/;
    };
    DashboardController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-settings' });
        mediator.trigger('pim_menu:hide', 'pim-menu-settings-column');
        return _super.prototype.renderRoute.call(this);
    };
    return DashboardController;
}(react_2.ReactController));
module.exports = DashboardController;


/***/ }),

/***/ 49562:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/system-index.tsx ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var system_1 = __webpack_require__(/*! @akeneo-pim-community/system */ 99266);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var SystemIndexController = (function (_super) {
    __extends(SystemIndexController, _super);
    function SystemIndexController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SystemIndexController.prototype.reactElementToMount = function () {
        return (react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(system_1.SystemIndex, null))));
    };
    SystemIndexController.prototype.routeGuardToUnmount = function () {
        return /pim_system_index/;
    };
    SystemIndexController.prototype.renderRoute = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: 'pim-menu-system' });
        mediator.trigger('pim_menu:hide', 'pim-menu-system-column');
        return _super.prototype.renderRoute.call(this);
    };
    return SystemIndexController;
}(react_2.ReactController));
module.exports = SystemIndexController;


/***/ }),

/***/ 29595:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/js/datagrid/action/delete-attribute-action.tsx ***!
  \*****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var DeleteModal_1 = __webpack_require__(/*! pimui/js/attribute/form/delete/DeleteModal */ 97638);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var DeleteAction = __webpack_require__(/*! oro/datagrid/delete-action */ 44878);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var DeleteAttributeAction = (function (_super) {
    __extends(DeleteAttributeAction, _super);
    function DeleteAttributeAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeleteAttributeAction.prototype.execute = function () {
        var _this = this;
        var container = document.createElement('div');
        document.body.appendChild(container);
        var handleClose = function () {
            react_dom_1.default.unmountComponentAtNode(container);
            document.body.removeChild(container);
        };
        var handleSuccess = function () {
            mediator.trigger('datagrid:doRefresh:' + _this.datagrid.name);
            handleClose();
        };
        react_dom_1.default.render(react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(DeleteModal_1.DeleteModal, { onCancel: handleClose, onSuccess: handleSuccess, attributeCode: this.model.attributes.code }))), container);
    };
    return DeleteAttributeAction;
}(DeleteAction));
module.exports = DeleteAttributeAction;


/***/ }),

/***/ 35920:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/datagrid/reactCell.tsx ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var StringCell = __webpack_require__(/*! oro/datagrid/string-cell */ 10991);
var requireContext = __webpack_require__(/*! require-context */ 76925);
var convertToType = function (type, value) {
    switch (type) {
        case 'boolean':
            return Boolean(value);
        case 'number':
            return Number(value);
        default:
            return value;
    }
};
var ReactCell = (function (_super) {
    __extends(ReactCell, _super);
    function ReactCell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReactCell.prototype.render = function () {
        var _this = this;
        var _a = this.options.column.attributes.extraOptions, optionsProps = _a.props, component = _a.component;
        var Component = requireContext(component).default;
        if (undefined === Component) {
            throw new Error("Module " + component + " has no default export");
        }
        var props = Object.keys(optionsProps).reduce(function (props, key) {
            props[key] = convertToType(optionsProps[key], _this.model.get(key));
            return props;
        }, {});
        props.refreshCollection = function () { return _this.model.collection.fetch(); };
        react_dom_1.default.render(react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
            react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
                react_1.default.createElement(Component, __assign({}, props)))), this.el);
        return this;
    };
    return ReactCell;
}(StringCell));
module.exports = ReactCell;


/***/ }),

/***/ 47496:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/family/grid/mass-actions.ts ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseForm = __webpack_require__(/*! pim/grid/mass-actions */ 28137);
var MassActions = (function (_super) {
    __extends(MassActions, _super);
    function MassActions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MassActions.prototype.countEntities = function () {
        var count = this.count;
        if (this.datagrid) {
            var selectionState = this.datagrid.getSelectionState();
            count = Object.keys(this.datagrid.getSelectionState().selectedModels).length;
            if (!selectionState.inset) {
                count = this.collection.state.totalRecords - Object.keys(selectionState.selectedModels).length;
            }
        }
        return count;
    };
    return MassActions;
}(BaseForm));
module.exports = MassActions;


/***/ }),

/***/ 5857:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/feature-flags.ts ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var jquery_1 = __importDefault(__webpack_require__(/*! jquery */ 49845));
var routing = __webpack_require__(/*! routing */ 60847);
var FeatureFlags = (function () {
    function FeatureFlags() {
    }
    FeatureFlags.initialize = function () {
        return __awaiter(this, void 0, Promise, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (undefined !== FeatureFlags.features) {
                            throw new Error('FeatureFlags is already initialized.');
                        }
                        _a = FeatureFlags;
                        return [4, jquery_1.default.getJSON(routing.generate('feature_flag'))];
                    case 1:
                        _a.features = _b.sent();
                        return [2];
                }
            });
        });
    };
    FeatureFlags.isEnabled = function (feature) {
        if (undefined === FeatureFlags.features) {
            throw new Error('FeatureFlags is not initialized.');
        }
        return Boolean(FeatureFlags.features[feature]);
    };
    return FeatureFlags;
}());
module.exports = FeatureFlags;


/***/ }),

/***/ 73344:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/product/category/Selector.tsx ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var styled_components_1 = __importStar(__webpack_require__(/*! styled-components */ 71893));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var lib_1 = __webpack_require__(/*! akeneo-design-system/lib */ 96541);
var CategoryTreeFetcher_1 = __webpack_require__(/*! ../../../CategoryTreeFetcher */ 40397);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var Router = __webpack_require__(/*! pim/router */ 41774);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var CategoryTreeContainer = styled_components_1.default.div.withConfig({ displayName: "CategoryTreeContainer", componentId: "sc-1biikb2" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  max-height: calc(100vh - 240px);\n  overflow: hidden auto;\n"], ["\n  max-height: calc(100vh - 240px);\n  overflow: hidden auto;\n"])));
var CategorySelectorWithAllProducts = function (_a) {
    var channelCode = _a.channelCode, onChange = _a.onChange, initialCategoryCodes = _a.initialCategoryCodes;
    var _b = react_1.default.useState(initialCategoryCodes), categoryCodes = _b[0], setCategoryCodes = _b[1];
    var isCategorySelected = function (category) {
        return categoryCodes.includes(category.code);
    };
    var handleChange = function (value, checked) {
        var index = categoryCodes.indexOf(value, 0);
        if (checked) {
            if (index <= -1) {
                categoryCodes.push(value);
                setCategoryCodes(__spreadArray([], categoryCodes, true));
                onChange(categoryCodes);
            }
        }
        else {
            if (index > -1) {
                categoryCodes.splice(index, 1);
                setCategoryCodes(__spreadArray([], categoryCodes, true));
                onChange(categoryCodes);
            }
        }
    };
    var getChildrenUrl = function (id) {
        return Router.generate('pim_enrich_categorytree_children', {
            _format: 'json',
            id: id,
        });
    };
    var childrenCallback = function (id) { return __awaiter(void 0, void 0, void 0, function () {
        var response, json;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, fetch(getChildrenUrl(id))];
                case 1:
                    response = _a.sent();
                    return [4, response.json()];
                case 2:
                    json = _a.sent();
                    return [2, json.map(function (child) {
                            return (0, CategoryTreeFetcher_1.parseResponse)(child, {
                                selectable: true,
                            });
                        })];
            }
        });
    }); };
    var init = function () { return __awaiter(void 0, void 0, void 0, function () {
        var channel, category, response, json;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, FetcherRegistry.initialize()];
                case 1:
                    _a.sent();
                    return [4, FetcherRegistry.getFetcher('channel').fetch(channelCode)];
                case 2:
                    channel = _a.sent();
                    return [4, FetcherRegistry.getFetcher('category').fetch(channel.category_tree)];
                case 3:
                    category = _a.sent();
                    return [4, fetch(getChildrenUrl(category.id))];
                case 4:
                    response = _a.sent();
                    return [4, response.json()];
                case 5:
                    json = _a.sent();
                    return [2, {
                            id: category.id,
                            code: category.code,
                            label: category.labels[UserContext.get('catalogLocale')] || "[" + category.code + "]",
                            selectable: false,
                            children: json.map(function (child) {
                                return (0, CategoryTreeFetcher_1.parseResponse)(child, {
                                    selectable: true,
                                });
                            }),
                        }];
            }
        });
    }); };
    return (react_1.default.createElement(CategoryTreeContainer, null,
        react_1.default.createElement(shared_1.CategoryTree, { onChange: handleChange, childrenCallback: childrenCallback, init: init, isCategorySelected: isCategorySelected }),
        react_1.default.createElement(lib_1.Tree, { value: 'all', label: __('jstree.all'), isLeaf: true, selectable: true, selected: categoryCodes.length === 0, onChange: function (_value, checked) {
                if (checked) {
                    setCategoryCodes([]);
                    onChange([]);
                }
            } })));
};
var Selector = (function (_super) {
    __extends(Selector, _super);
    function Selector(options) {
        var _this = _super.call(this, options) || this;
        _this.getCategoryCodes = function () {
            return _this.categoryCodes;
        };
        _this.channelCode = options.attributes.channel;
        _this.categoryCodes = options.attributes.categories || [];
        return _this;
    }
    Selector.prototype.render = function () {
        var _this = this;
        var handleChange = function (categoryCodes) {
            _this.categoryCodes = categoryCodes;
        };
        react_dom_1.default.render(react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(CategorySelectorWithAllProducts, { channelCode: this.channelCode, initialCategoryCodes: this.categoryCodes, onChange: handleChange }))), this.$el[0]);
        return this;
    };
    return Selector;
}(BaseView));
var templateObject_1;
module.exports = Selector;


/***/ }),

/***/ 30730:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/attributes/create-button.tsx ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __moduleConfig = { "attribute_icons": { "pim_catalog_identifier": "IdIcon", "pim_catalog_text": "AttributeTextIcon", "pim_catalog_textarea": "AttributeTextareaIcon", "pim_catalog_number": "AttributeNumberIcon", "pim_catalog_price_collection": "AttributePriceIcon", "pim_catalog_multiselect": "AttributeMultiSelectIcon", "pim_catalog_simpleselect": "AttributeSelectIcon", "pim_catalog_file": "AttributeFileIcon", "pim_catalog_image": "AssetsIcon", "pim_catalog_boolean": "AttributeBoolean", "pim_catalog_date": "DateIcon", "pim_catalog_metric": "MetricIcon", "pim_reference_data_multiselect": "AttributeMultiSelectIcon", "pim_reference_data_simpleselect": "AttributeSelectIcon" }, "steps": { "default": [__webpack_require__(/*! pimui/js/attribute/form/CreateAttributeCodeAndLabel.tsx */ 21607)] } };
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var CreateAttributeButtonApp_1 = __webpack_require__(/*! ../../../attribute/form/CreateAttributeButtonApp */ 87044);
var translate = __webpack_require__(/*! oro/translator */ 16393);
var router = __webpack_require__(/*! pim/router */ 41774);
var analytics = __webpack_require__(/*! pim/analytics */ 22499);
var CreateButton = (function (_super) {
    __extends(CreateButton, _super);
    function CreateButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CreateButton.prototype.initialize = function (config) {
        this.config = config.config;
        BaseView.prototype.initialize.apply(this, arguments);
    };
    CreateButton.prototype.getQueryParam = function (paramName) {
        var urlString = window.location.href;
        var index = urlString.indexOf('?');
        if (index < 0) {
            return null;
        }
        var params = new URLSearchParams(urlString.substring(index + 1));
        return params.get(paramName);
    };
    CreateButton.prototype.onClick = function (data) {
        analytics.track('attribute:create:type-selected', { type: data.attribute_type });
        router.redirectToRoute('pim_enrich_attribute_create', data);
    };
    CreateButton.prototype.getAttributeIcons = function () {
        var moduleConfig = __moduleConfig;
        return moduleConfig.attribute_icons;
    };
    CreateButton.prototype.getSteps = function () {
        var moduleConfig = __moduleConfig;
        return moduleConfig.steps;
    };
    CreateButton.prototype.render = function () {
        react_dom_1.default.render(react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
                react_1.default.createElement(CreateAttributeButtonApp_1.CreateAttributeButtonApp, { steps: this.getSteps(), iconsMap: this.getAttributeIcons(), isModalOpen: !!this.getQueryParam('open_create_attribute_modal'), buttonTitle: translate(this.config.buttonTitle), onClick: this.onClick.bind(this), initialData: { code: this.getQueryParam('code') } }))), this.el);
        return this;
    };
    CreateButton.prototype.remove = function () {
        react_dom_1.default.unmountComponentAtNode(this.el);
        return _super.prototype.remove.call(this);
    };
    return CreateButton;
}(BaseView));
module.exports = CreateButton;


/***/ }),

/***/ 3994:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/available-locales.ts ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var AvailableLocales = (function (_super) {
    __extends(AvailableLocales, _super);
    function AvailableLocales() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AvailableLocales.prototype.configure = function () {
        var _this = this;
        return $.when(BaseSelect.prototype.configure.apply(this, arguments), FetcherRegistry.getFetcher('locale')
            .fetchActivated()
            .then(function (availableLocales) {
            _this.config.choices = availableLocales;
        }));
    };
    AvailableLocales.prototype.formatChoices = function (locales) {
        return locales.reduce(function (result, locale) {
            result[locale.code] = locale.label;
            return result;
        }, {});
    };
    return AvailableLocales;
}(BaseSelect));
module.exports = AvailableLocales;


/***/ }),

/***/ 66681:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/copiable-text.ts ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var _ = __webpack_require__(/*! underscore */ 13469);
var BaseText = __webpack_require__(/*! pim/form/common/fields/text */ 53228);
var template = __webpack_require__(/*! pim/template/form/common/fields/copiable-text */ 21421);
var CopiableTextField = (function (_super) {
    __extends(CopiableTextField, _super);
    function CopiableTextField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.template = _.template(template);
        return _this;
    }
    CopiableTextField.prototype.events = function () {
        return {
            'click .copy': function (e) {
                var target = e.currentTarget;
                var container = target.parentElement;
                if (null !== container) {
                    var input = container.getElementsByTagName('input')[0];
                    input.select();
                    document.execCommand('copy');
                }
            },
        };
    };
    return CopiableTextField;
}(BaseText));
module.exports = CopiableTextField;


/***/ }),

/***/ 2609:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/media.ts ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var _ = __webpack_require__(/*! underscore */ 13469);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var BaseField = __webpack_require__(/*! pim/form/common/fields/field */ 74695);
var Routing = __webpack_require__(/*! routing */ 60847);
var Mediator = __webpack_require__(/*! oro/mediator */ 27615);
var Messenger = __webpack_require__(/*! oro/messenger */ 80581);
var MediaUrlGenerator = __webpack_require__(/*! pim/media-url-generator */ 72689);
var template = __webpack_require__(/*! pim/template/form/common/fields/media */ 66306);
__webpack_require__(/*! jquery.slimbox */ 22574);
var MediaField = (function (_super) {
    __extends(MediaField, _super);
    function MediaField(config) {
        var _this = _super.call(this, config) || this;
        _this.template = _.template(template);
        _this.events = {
            'change input[type="file"]': _this.uploadMedia,
            'click .clear-field': _this.clearField,
            'click .open-media': _this.openMedia,
        };
        return _this;
    }
    MediaField.prototype.getTemplateContext = function () {
        return BaseField.prototype.getTemplateContext.apply(this, arguments).then(function (templateContext) {
            templateContext.mediaUrlGenerator = MediaUrlGenerator;
            return templateContext;
        });
    };
    MediaField.prototype.renderInput = function (templateContext) {
        return this.template(Object.assign(templateContext, {
            media: this.getFormData()[this.fieldName],
            readOnly: this.readOnly,
            uploadLabel: __('pim_common.media_upload'),
        }));
    };
    MediaField.prototype.handleProcess = function (e) {
        this.$('> .akeneo-media-uploader-field .progress').css({ opacity: 1 });
        this.$('> .akeneo-media-uploader-field .progress .bar').css({
            width: (e.loaded / e.total) * 100 + '%',
        });
    };
    MediaField.prototype.setUploadContextValue = function (value) {
        this.updateModel(value);
        Mediator.trigger('pim_enrich:form:entity:update_state');
    };
    MediaField.prototype.uploadMedia = function () {
        var _this = this;
        var input = this.$('input[type="file"]')[0];
        if (!input || 0 === input.files.length) {
            return;
        }
        var formData = new FormData();
        formData.append('file', input.files[0]);
        $.ajax({
            url: Routing.generate('pim_enrich_media_rest_post'),
            type: 'POST',
            data: formData,
            contentType: false,
            cache: false,
            processData: false,
            xhr: function () {
                var myXhr = $.ajaxSettings.xhr();
                if (myXhr.upload) {
                    myXhr.upload.addEventListener('progress', _this.handleProcess.bind(_this), false);
                }
                return myXhr;
            },
        })
            .done(function (data) {
            _this.setUploadContextValue(data);
            _this.render();
        })
            .fail(function (xhr) {
            var message = xhr.responseJSON && xhr.responseJSON.message
                ? xhr.responseJSON.message
                : __('pim_enrich.entity.product.error.upload');
            Messenger.enqueueMessage('error', message);
        })
            .always(function () {
            _this.$('> .akeneo-media-uploader-field .progress').css({ opacity: 0 });
        });
    };
    MediaField.prototype.clearField = function () {
        this.updateModel({
            filePath: null,
            originalFilename: null,
        });
        this.render();
    };
    MediaField.prototype.openMedia = function () {
        var mediaUrl = MediaUrlGenerator.getMediaShowUrl(this.getFormData()[this.fieldName].filePath, 'preview');
        if (mediaUrl) {
            $.slimbox(mediaUrl, '', { overlayOpacity: 0.3 });
        }
    };
    return MediaField;
}(BaseField));
module.exports = MediaField;


/***/ }),

/***/ 13832:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/number.ts ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var _ = __webpack_require__(/*! underscore */ 13469);
var BaseText = __webpack_require__(/*! pim/form/common/fields/text */ 53228);
var template = __webpack_require__(/*! pim/template/form/common/fields/number */ 77239);
var NumberField = (function (_super) {
    __extends(NumberField, _super);
    function NumberField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.template = _.template(template);
        return _this;
    }
    return NumberField;
}(BaseText));
module.exports = NumberField;


/***/ }),

/***/ 18827:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/password.ts ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var _ = __webpack_require__(/*! underscore */ 13469);
var BaseText = __webpack_require__(/*! pim/form/common/fields/text */ 53228);
var template = __webpack_require__(/*! pim/template/form/common/fields/password */ 3785);
var PasswordField = (function (_super) {
    __extends(PasswordField, _super);
    function PasswordField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.template = _.template(template);
        return _this;
    }
    PasswordField.prototype.renderInput = function (templateContext) {
        return this.template(Object.assign(templateContext, { value: '' }));
    };
    return PasswordField;
}(BaseText));
module.exports = PasswordField;


/***/ }),

/***/ 64376:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/product/product-grid-title.ts ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseGridTitle = __webpack_require__(/*! pim/common/grid-title */ 50314);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var ProductGridTitle = (function (_super) {
    __extends(ProductGridTitle, _super);
    function ProductGridTitle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.totalProducts = null;
        _this.totalProductModels = null;
        return _this;
    }
    ProductGridTitle.prototype.setupCount = function (collection) {
        this.totalProducts = collection.state.totalProducts;
        this.totalProductModels = collection.state.totalProductModels;
        return BaseGridTitle.prototype.setupCount.apply(this, arguments);
    };
    ProductGridTitle.prototype.inLoadingStatus = function () {
        return null === this.count && null === this.totalProducts && null === this.totalProductModels;
    };
    ProductGridTitle.prototype.hasTotalProductCountOrProductModelCount = function () {
        return !!this.totalProducts || !!this.totalProductModels;
    };
    ProductGridTitle.prototype.renderProductAndProductModelCounts = function () {
        var productCount = __('pim_enrich.entity.product.page_title.product', { count: this.totalProducts }, this.totalProducts);
        var productModelCount = __('pim_enrich.entity.product.page_title.product_model', { count: this.totalProductModels }, this.totalProductModels);
        if (this.totalProducts && !this.totalProductModels) {
            this.$el.html(productCount);
        }
        else if (!this.totalProducts && this.totalProductModels) {
            this.$el.html(productModelCount);
        }
        else {
            this.$el.html(__('pim_enrich.entity.product.page_title.product_and_product_model', { productCount: productCount, productModelCount: productModelCount }));
        }
        return this;
    };
    ProductGridTitle.prototype.render = function () {
        if (this.inLoadingStatus()) {
            return this;
        }
        if (this.hasTotalProductCountOrProductModelCount()) {
            return this.renderProductAndProductModelCounts();
        }
        this.$el.html(__(this.config.title, { count: this.count }, this.count));
        return this;
    };
    return ProductGridTitle;
}(BaseGridTitle));
module.exports = ProductGridTitle;


/***/ }),

/***/ 6442:
/*!****************************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/product/product-grid-view-title-context.ts ***!
  \****************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var ProductGridViewTitle_1 = __webpack_require__(/*! ../../../grid/ProductGridViewTitle */ 71843);
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var ProductGridViewTitleContext = (function (_super) {
    __extends(ProductGridViewTitleContext, _super);
    function ProductGridViewTitleContext() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProductGridViewTitleContext.prototype.configure = function () {
        mediator.on('grid:view:selected', this.onGridViewSelected.bind(this));
        mediator.on('grid:project:selected', this.onGridViewSelected.bind(this));
        return _super.prototype.configure.call(this);
    };
    ProductGridViewTitleContext.prototype.onGridViewSelected = function (view, projectDetails) {
        if (projectDetails === void 0) { projectDetails = null; }
        this.currentView = view;
        this.projectDetails = projectDetails;
        this.render();
    };
    ProductGridViewTitleContext.prototype.render = function () {
        if (!this.currentView || (this.currentView.type === 'project' && !this.projectDetails)) {
            return this;
        }
        this.renderReact(ProductGridViewTitle_1.ProductGridViewTitle, { type: this.currentView.type, projectDetails: this.projectDetails, children: this.currentView.text }, this.el);
        return this;
    };
    return ProductGridViewTitleContext;
}(BaseView));
module.exports = ProductGridViewTitleContext;


/***/ }),

/***/ 35907:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/product/product-main-image.ts ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var MainImage = __webpack_require__(/*! pim/form/common/main-image */ 25163);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var ProductMainImage = (function (_super) {
    __extends(ProductMainImage, _super);
    function ProductMainImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProductMainImage.prototype.configure = function () {
        this.listenTo(UserContext, 'change:catalogScope change:catalogLocale', this.updateImagePath.bind(this));
        return _super.prototype.configure.call(this);
    };
    ProductMainImage.prototype.updateImagePath = function () {
        var _a, _b, _c;
        return __awaiter(this, void 0, void 0, function () {
            var meta, catalogLocale, catalogScope, product;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        meta = this.getFormData().meta;
                        catalogLocale = UserContext.get('catalogLocale');
                        catalogScope = UserContext.get('catalogScope');
                        return [4, FetcherRegistry.getFetcher(meta.model_type).fetch(meta.id, {
                                silent: true,
                                catalogLocale: catalogLocale,
                                catalogScope: catalogScope,
                            })];
                    case 1:
                        product = _d.sent();
                        this.imagePath = (_c = (_b = (_a = product === null || product === void 0 ? void 0 : product.meta) === null || _a === void 0 ? void 0 : _a.image) === null || _b === void 0 ? void 0 : _b.filePath) !== null && _c !== void 0 ? _c : null;
                        this.render();
                        return [2];
                }
            });
        });
    };
    return ProductMainImage;
}(MainImage));
module.exports = ProductMainImage;


/***/ }),

/***/ 15492:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/section.ts ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var template = __webpack_require__(/*! pim/template/common/section */ 43536);
var SectionView = (function (_super) {
    __extends(SectionView, _super);
    function SectionView(options) {
        var _this = _super.call(this, options) || this;
        _this.template = _.template(template);
        _this.hideHint = false;
        _this.config = {
            hint: {
                code: '',
                title: '',
                link: '',
            },
            title: '',
        };
        _this.config = __assign(__assign({}, _this.config), options.config);
        _this.hideHint = false;
        return _this;
    }
    SectionView.prototype.events = function () {
        return {
            'click .toggle-hint.active-hint': 'closeHint',
            'click .toggle-hint:not(.active-hint)': 'openHint',
        };
    };
    SectionView.prototype.hintIsHidden = function () {
        if (localStorage.getItem(this.config.hint.code) !== null) {
            return localStorage.getItem(this.config.hint.code) === SectionView.HIDDEN;
        }
        return this.hideHint;
    };
    SectionView.prototype.render = function () {
        this.$el.empty().html(this.template({
            title: __(this.config.title),
            hintTitle: __(this.config.hint.title).replace('{{link}}', this.config.hint.link),
            hintIsHidden: this.hintIsHidden(),
        }));
        this.renderExtensions();
        if (this.$el.find('[data-drop-zone="content"]').html().length === 0) {
            this.$el.empty();
        }
        return this;
    };
    SectionView.prototype.closeHint = function () {
        localStorage.setItem(this.config.hint.code, SectionView.HIDDEN);
        this.hideHint = true;
        this.render();
    };
    SectionView.prototype.openHint = function () {
        localStorage.removeItem(this.config.hint.code);
        this.hideHint = false;
        this.render();
    };
    SectionView.HIDDEN = 'hidden';
    return SectionView;
}(BaseView));
module.exports = SectionView;


/***/ }),

/***/ 29805:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/user-main-image.ts ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var MainImage = __webpack_require__(/*! pim/form/common/main-image */ 25163);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var MediaUrlGenerator = __webpack_require__(/*! pim/media-url-generator */ 72689);
var UserMainImage = (function (_super) {
    __extends(UserMainImage, _super);
    function UserMainImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UserMainImage.prototype.getPath = function () {
        var filePath = UserContext.get('avatar').filePath;
        if (null === filePath || undefined === filePath) {
            return 'bundles/pimui/images/info-user.png';
        }
        return MediaUrlGenerator.getMediaShowUrl(UserContext.get('avatar').filePath, 'thumbnail_small');
    };
    return UserMainImage;
}(MainImage));
module.exports = UserMainImage;


/***/ }),

/***/ 15751:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/grid/ProductGridProjectDetails.tsx ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductGridProjectDetails = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var getLevel = function (completionRatio) {
    if (completionRatio === 0) {
        return 'danger';
    }
    else if (completionRatio === 100) {
        return 'primary';
    }
    else {
        return 'warning';
    }
};
var ProductGridProjectDetails = function (_a) {
    var projectDetails = _a.projectDetails;
    return (react_1.default.createElement(BadgeContainer, null,
        "\u00A0-\u00A0",
        react_1.default.createElement(akeneo_design_system_1.Badge, { level: getLevel(projectDetails.completionRatio) },
            projectDetails.completionRatio,
            " %"),
        "\u00A0-\u00A0",
        projectDetails.dueDateLabel,
        ": ",
        projectDetails.dueDate));
};
exports.ProductGridProjectDetails = ProductGridProjectDetails;
var BadgeContainer = styled_components_1.default.div.withConfig({ displayName: "BadgeContainer", componentId: "sc-sj0r3c" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  align-items: center;\n"], ["\n  display: flex;\n  align-items: center;\n"])));
var templateObject_1;


/***/ }),

/***/ 71843:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/grid/ProductGridViewTitle.tsx ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProductGridViewTitle = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var ProductGridProjectDetails_1 = __webpack_require__(/*! ./ProductGridProjectDetails */ 15751);
var ProductGridViewTitle = function (_a) {
    var type = _a.type, projectDetails = _a.projectDetails, children = _a.children;
    var translate = (0, shared_1.useTranslate)();
    return (react_1.default.createElement(ContextContainer, null,
        react_1.default.createElement(ViewNameContainer, null, children),
        type === 'public' || type === 'view' ? " (" + translate('pim_common.public_view') + ")" : null,
        projectDetails && react_1.default.createElement(ProductGridProjectDetails_1.ProductGridProjectDetails, { projectDetails: projectDetails })));
};
exports.ProductGridViewTitle = ProductGridViewTitle;
var ContextContainer = styled_components_1.default.div.withConfig({ displayName: "ContextContainer", componentId: "sc-1rrkgmk" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  font-size: 17px;\n  font-weight: normal;\n  height: 21px;\n"], ["\n  display: flex;\n  font-size: 17px;\n  font-weight: normal;\n  height: 21px;\n"])));
var ViewNameContainer = styled_components_1.default.span.withConfig({ displayName: "ViewNameContainer", componentId: "sc-yf0g5a" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  color: rgb(17, 50, 77);\n  max-width: 650px;\n  padding-right: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"], ["\n  color: rgb(17, 50, 77);\n  max-width: 650px;\n  padding-right: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"])));
var templateObject_1, templateObject_2;


/***/ }),

/***/ 32150:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/grid/view-selector-secondary-actions.ts ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseView = __webpack_require__(/*! pim/form/common/secondary-actions */ 70987);
var ViewSelectorSecondaryActions = (function (_super) {
    __extends(ViewSelectorSecondaryActions, _super);
    function ViewSelectorSecondaryActions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ViewSelectorSecondaryActions.prototype.events = function () {
        var _this = this;
        return {
            'click .dropdown-button': function () {
                _this.$el.find('.AknDropdown-menu').css({
                    position: 'fixed',
                    left: _this.$el.offset().left,
                    minWidth: 'auto',
                    right: 'auto',
                    top: _this.$el.offset().top,
                });
            },
        };
    };
    return ViewSelectorSecondaryActions;
}(BaseView));
module.exports = ViewSelectorSecondaryActions;


/***/ }),

/***/ 86705:
/*!*****************************************!*\
  !*** ./public/bundles/pimui/js/i18n.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLabel = exports.getFlag = void 0;
var flagTemplate = function (country, language, displayLanguage) {
    return "\n<span class=\"flag-language\">\n  <i class=\"flag flag-" + country + "\"></i>" + (displayLanguage
        ? "\n  <span class=\"language\">" + language + "</span>"
        : '') + "\n</span>";
};
var getFlag = function (locale, displayLanguage) {
    if (displayLanguage === void 0) { displayLanguage = true; }
    if (!locale) {
        return '';
    }
    var country = '';
    var language = locale;
    if (locale.includes('_')) {
        var info = locale.split('_');
        language = info[0];
        country = info[1];
        if (3 === info.length) {
            country = info[2];
        }
    }
    return flagTemplate(country.toLowerCase(), language, displayLanguage);
};
exports.getFlag = getFlag;
var getLabel = function (labels, locale, fallback) {
    return labels && labels[locale] ? labels[locale] : "[" + fallback + "]";
};
exports.getLabel = getLabel;


/***/ }),

/***/ 72462:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/intl-duration.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatSecondsIntl = void 0;
var translateDuration = function (translate) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    var values = args.filter(function (duration) { return duration.value > 0; });
    if (values.length === 0 && args.length > 0) {
        values = [args[args.length - 1]];
    }
    return values
        .map(function (duration) {
        return translate(duration.translationKey, { count: duration.value.toString() }, duration.value);
    })
        .join(' ');
};
var formatSecondsIntl = function (translate, duration) {
    var days = Math.floor(duration / 86400);
    duration = duration - days * 86400;
    var hours = Math.floor(duration / 3600);
    duration = duration - hours * 3600;
    var minutes = Math.floor(duration / 60);
    var seconds = duration - minutes * 60;
    if (days > 0) {
        return translateDuration(translate, { translationKey: 'duration.days', value: days }, { translationKey: 'duration.hours', value: hours });
    }
    if (hours > 0) {
        return translateDuration(translate, { translationKey: 'duration.hours', value: hours }, { translationKey: 'duration.minutes', value: minutes });
    }
    if (minutes > 0) {
        return translateDuration(translate, { translationKey: 'duration.minutes', value: minutes }, { translationKey: 'duration.seconds', value: seconds });
    }
    return translateDuration(translate, { translationKey: 'duration.seconds', value: seconds });
};
exports.formatSecondsIntl = formatSecondsIntl;


/***/ }),

/***/ 83870:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/breadcrumb/JobBreadcrumb.tsx ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JobBreadcrumb = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var JobBreadcrumb = function (_a) {
    var isEdit = _a.isEdit, jobCode = _a.jobCode, jobLabel = _a.jobLabel, jobType = _a.jobType;
    var translate = (0, shared_1.useTranslate)();
    var jobIndexUrl = (0, shared_1.useRoute)("pim_importexport_" + jobType + "_profile_index");
    var jobShowUrl = (0, shared_1.useRoute)("pim_importexport_" + jobType + "_profile_show", { code: jobCode });
    return (react_1.default.createElement(akeneo_design_system_1.Breadcrumb, null,
        react_1.default.createElement(akeneo_design_system_1.Breadcrumb.Step, { href: "#" + jobIndexUrl }, translate("pim_menu.tab." + jobType + "s")),
        react_1.default.createElement(akeneo_design_system_1.Breadcrumb.Step, { href: "#" + jobShowUrl }, jobLabel),
        isEdit && react_1.default.createElement(akeneo_design_system_1.Breadcrumb.Step, null, translate('pim_common.edit'))));
};
exports.JobBreadcrumb = JobBreadcrumb;


/***/ }),

/***/ 42712:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/breadcrumb/breadcrumb.ts ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var JobBreadcrumb_1 = __webpack_require__(/*! ./JobBreadcrumb */ 83870);
var BaseForm = __webpack_require__(/*! ../../../view/base */ 59904);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var Breadcrumb = (function (_super) {
    __extends(Breadcrumb, _super);
    function Breadcrumb(options) {
        var _this = _super.call(this, __assign({}, options)) || this;
        _this.config = options.config;
        return _this;
    }
    Breadcrumb.prototype.configure = function () {
        mediator.trigger('pim_menu:highlight:tab', { extension: "pim-menu-" + this.getFormData().type + "s" });
        return BaseForm.prototype.configure.apply(this, arguments);
    };
    Breadcrumb.prototype.render = function () {
        var _a;
        var _b = this.getFormData(), code = _b.code, label = _b.label, type = _b.type;
        this.renderReact(JobBreadcrumb_1.JobBreadcrumb, {
            isEdit: (_a = this.config.isEdit) !== null && _a !== void 0 ? _a : false,
            jobLabel: label,
            jobType: type,
            jobCode: code,
        }, this.el);
        return this;
    };
    return Breadcrumb;
}(BaseForm));
module.exports = Breadcrumb;


/***/ }),

/***/ 2674:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/duplicate/DuplicateJob.tsx ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DuplicateJob = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var DuplicateJob = function (_a) {
    var subTitle = _a.subTitle, successRedirectRoute = _a.successRedirectRoute, jobCodeToDuplicate = _a.jobCodeToDuplicate;
    var translate = (0, shared_1.useTranslate)();
    var notify = (0, shared_1.useNotify)();
    var router = (0, shared_1.useRouter)();
    var _b = (0, react_1.useState)(''), label = _b[0], setLabel = _b[1];
    var _c = (0, react_1.useState)(''), code = _c[0], setCode = _c[1];
    var labelInputRef = (0, react_1.useRef)(null);
    var _d = (0, akeneo_design_system_1.useBooleanState)(false), isModalOpen = _d[0], openModal = _d[1], closeModal = _d[2];
    var _e = (0, react_1.useState)([]), validationErrors = _e[0], setValidationErrors = _e[1];
    var canDuplicate = '' !== label && '' !== code;
    (0, akeneo_design_system_1.useAutoFocus)(labelInputRef);
    var onCancel = function () {
        setCode('');
        setLabel('');
        closeModal();
    };
    var onConfirm = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, json, json, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, fetch(router.generate('pim_enrich_job_instance_rest_duplicate', { code: jobCodeToDuplicate }), {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest',
                        },
                        body: JSON.stringify({
                            code: code,
                            label: label,
                        }),
                    })];
                case 1:
                    response = _a.sent();
                    setValidationErrors([]);
                    if (!response.ok) return [3, 3];
                    closeModal();
                    return [4, response.json()];
                case 2:
                    json = _a.sent();
                    notify(shared_1.NotificationLevel.SUCCESS, translate('pim_import_export.entity.job_instance.duplicate.success'));
                    router.redirect(router.generate(successRedirectRoute, { code: json.code }));
                    return [3, 7];
                case 3:
                    _a.trys.push([3, 5, , 6]);
                    return [4, response.json()];
                case 4:
                    json = _a.sent();
                    setValidationErrors(json.values);
                    return [3, 6];
                case 5:
                    error_1 = _a.sent();
                    return [3, 6];
                case 6:
                    notify(shared_1.NotificationLevel.ERROR, translate('pim_import_export.entity.job_instance.duplicate.fail'));
                    _a.label = 7;
                case 7: return [2];
            }
        });
    }); };
    var handleLabelChange = function (newLabel) {
        var expectedSanitizedCode = (0, shared_1.sanitize)(label);
        var newCode = expectedSanitizedCode === code ? (0, shared_1.sanitize)(newLabel) : code;
        setCode(newCode);
        setLabel(newLabel);
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { onClick: openModal }, translate('pim_common.duplicate')),
        isModalOpen && (react_1.default.createElement(akeneo_design_system_1.Modal, { closeTitle: translate('pim_common.close'), onClose: onCancel, illustration: react_1.default.createElement(akeneo_design_system_1.ProductsIllustration, null) },
            react_1.default.createElement(akeneo_design_system_1.Modal.SectionTitle, { color: "brand" }, translate(subTitle)),
            react_1.default.createElement(akeneo_design_system_1.Modal.Title, null, translate('pim_import_export.entity.job_instance.duplicate.title', { job_code: jobCodeToDuplicate })),
            react_1.default.createElement(shared_1.Section, null,
                react_1.default.createElement(shared_1.TextField, { label: translate('pim_common.label'), value: label, errors: (0, shared_1.filterErrors)(validationErrors, 'label'), required: true, ref: labelInputRef, onChange: handleLabelChange }),
                react_1.default.createElement(shared_1.TextField, { label: translate('pim_common.code'), value: code, errors: (0, shared_1.filterErrors)(validationErrors, 'code'), required: true, onChange: setCode })),
            react_1.default.createElement(akeneo_design_system_1.Modal.BottomButtons, null,
                react_1.default.createElement(akeneo_design_system_1.Button, { level: "tertiary", onClick: onCancel }, translate('pim_common.cancel')),
                react_1.default.createElement(akeneo_design_system_1.Button, { level: "primary", disabled: !canDuplicate, onClick: onConfirm }, translate('pim_common.save')))))));
};
exports.DuplicateJob = DuplicateJob;


/***/ }),

/***/ 93728:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/duplicate/duplicate.ts ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var DuplicateJob_1 = __webpack_require__(/*! ./DuplicateJob */ 2674);
var BaseForm = __webpack_require__(/*! ../../../view/base */ 59904);
var Duplicate = (function (_super) {
    __extends(Duplicate, _super);
    function Duplicate(options) {
        var _this = _super.call(this, __assign(__assign({}, options), { className: 'AknDropdown-menuLink', tagName: 'button' })) || this;
        _this.config = options.config;
        return _this;
    }
    Duplicate.prototype.render = function () {
        this.renderReact(DuplicateJob_1.DuplicateJob, {
            jobCodeToDuplicate: this.getFormData().code,
            subTitle: this.config.subTitle,
            successRedirectRoute: this.config.editRoute,
        }, this.el);
        return this;
    };
    return Duplicate;
}(BaseForm));
module.exports = Duplicate;


/***/ }),

/***/ 7782:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/field/allow-file-upload.ts ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseField = __webpack_require__(/*! pimui/js/job/common/edit/field/switch */ 50698);
var editionProvider = __webpack_require__(/*! pim/edition */ 18747);
var AllowFileUpload = (function (_super) {
    __extends(AllowFileUpload, _super);
    function AllowFileUpload() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AllowFileUpload.prototype.render = function () {
        if (editionProvider.isCloudEdition() === false) {
            _super.prototype.render.call(this);
        }
        return this;
    };
    return AllowFileUpload;
}(BaseField));
module.exports = AllowFileUpload;


/***/ }),

/***/ 5245:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/field/file-path.ts ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseField = __webpack_require__(/*! pimui/js/job/common/edit/field/text */ 90147);
var editionProvider = __webpack_require__(/*! pim/edition */ 18747);
var FilePath = (function (_super) {
    __extends(FilePath, _super);
    function FilePath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilePath.prototype.render = function () {
        if (false === editionProvider.isCloudEdition()) {
            _super.prototype.render.call(this);
        }
        return this;
    };
    return FilePath;
}(BaseField));
module.exports = FilePath;


/***/ }),

/***/ 36553:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/job/execution/StopJobAction.tsx ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StopJobAction = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var StopJobAction = function (_a) {
    var id = _a.id, jobLabel = _a.jobLabel, isStoppable = _a.isStoppable, onStop = _a.onStop, children = _a.children, rest = __rest(_a, ["id", "jobLabel", "isStoppable", "onStop", "children"]);
    var translate = (0, shared_1.useTranslate)();
    var isGranted = (0, shared_1.useSecurity)().isGranted;
    var stopRoute = (0, shared_1.useRoute)('pim_enrich_job_tracker_rest_stop', { id: id });
    var _b = (0, akeneo_design_system_1.useBooleanState)(false), isConfirmOpen = _b[0], openConfirm = _b[1], closeConfirm = _b[2];
    var handleStop = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    closeConfirm();
                    return [4, fetch(stopRoute)];
                case 1:
                    _a.sent();
                    onStop();
                    return [2];
            }
        });
    }); };
    var handleOpenConfirm = function (e) {
        e.stopPropagation();
        e.preventDefault();
        openConfirm();
    };
    if (!isStoppable || !isGranted('pim_importexport_stop_job'))
        return null;
    return (react_1.default.createElement(react_1.default.Fragment, null,
        isConfirmOpen && (react_1.default.createElement(akeneo_design_system_1.Modal, { closeTitle: translate('pim_common.close'), onClose: closeConfirm, illustration: react_1.default.createElement(akeneo_design_system_1.ExportIllustration, null) },
            react_1.default.createElement(akeneo_design_system_1.Modal.SectionTitle, { color: "brand" },
                translate('pim_title.pim_enrich_job_tracker_index'),
                " /"),
            react_1.default.createElement(akeneo_design_system_1.Modal.Title, null, translate('pim_datagrid.action.stop.confirmation.title', { jobLabel: jobLabel })),
            react_1.default.createElement(akeneo_design_system_1.Helper, { level: "info" },
                translate('pim_datagrid.action.stop.confirmation.content'),
                react_1.default.createElement(akeneo_design_system_1.Link, { href: "https://help.akeneo.com/pim/serenity/articles/monitor-jobs.html#how-to-stop-your-jobs", target: "_blank" }, translate('pim_datagrid.action.stop.confirmation.link'))),
            react_1.default.createElement(akeneo_design_system_1.Modal.BottomButtons, null,
                react_1.default.createElement(akeneo_design_system_1.Button, { level: "tertiary", onClick: closeConfirm }, translate('pim_common.cancel')),
                react_1.default.createElement(akeneo_design_system_1.Button, { level: "danger", onClick: handleStop }, translate('pim_datagrid.action.stop.confirmation.ok'))))),
        react_1.default.createElement(akeneo_design_system_1.Button, __assign({ onClick: handleOpenConfirm, level: "danger" }, rest), translate('pim_datagrid.action.stop.title'))));
};
exports.StopJobAction = StopJobAction;


/***/ }),

/***/ 61952:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/convert-to-simple-product.ts ***!
  \*************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseOperation = __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714);
var ConvertToSimpleProduct = (function (_super) {
    __extends(ConvertToSimpleProduct, _super);
    function ConvertToSimpleProduct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConvertToSimpleProduct.prototype.render = function () {
        this.$el.empty();
        return this;
    };
    return ConvertToSimpleProduct;
}(BaseOperation));
module.exports = ConvertToSimpleProduct;


/***/ }),

/***/ 49674:
/*!**********************************************!*\
  !*** ./public/bundles/pimui/js/menu/help.ts ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var DataCollector = __webpack_require__(/*! pim/data-collector */ 60063);
var template = __webpack_require__(/*! pim/template/menu/help */ 56268);
var Help = (function (_super) {
    __extends(Help, _super);
    function Help() {
        var _this = _super.call(this, { className: 'AknHeader-menuItemContainer' }) || this;
        _this.analyticsUrl = 'pim_analytics_data_collect';
        _this.template = _.template(template);
        return _this;
    }
    Help.prototype.render = function () {
        var _this = this;
        this.getUrl().then(function (url) {
            _this.$el.empty().append(_this.template({
                id: 'pim-menu-help',
                helper: __('pim_menu.tab.help.helper'),
                title: __('pim_menu.tab.help.title'),
                url: url,
            }));
        });
        return BaseView.prototype.render.apply(this, arguments);
    };
    Help.prototype.getUrl = function () {
        return DataCollector.collect(this.analyticsUrl).then(function (data) {
            var pim_version = data.pim_version, pim_edition = data.pim_edition;
            var version = "v" + pim_version.split('.')[0];
            var campaign = "" + pim_edition + pim_version;
            if (pim_version.split('.').length === 1) {
                version = 'serenity';
                campaign = 'serenity';
            }
            var url = new URL("https://help.akeneo.com/pim/" + version + "/index.html");
            url.searchParams.append('utm_source', 'akeneo-app');
            url.searchParams.append('utm_medium', 'interrogation-icon');
            url.searchParams.append('utm_campaign', campaign);
            return url.href;
        });
    };
    return Help;
}(BaseView));
module.exports = Help;


/***/ }),

/***/ 74743:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/menu/navigation-back.ts ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var View = __webpack_require__(/*! pim/form */ 59904);
var Router = __webpack_require__(/*! pim/router */ 41774);
var translate = __webpack_require__(/*! oro/translator */ 16393);
var NavigationBack = (function (_super) {
    __extends(NavigationBack, _super);
    function NavigationBack() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavigationBack.prototype.initialize = function (_a) {
        var config = _a.config;
        this.config = config;
    };
    NavigationBack.prototype.render = function () {
        this.$el.html("\n        <div class=\"AknColumn-block\">\n            <span class=\"AknColumn-navigationLink navigation-back\" tabindex=\"0\" role=\"button\">\n                " + translate(this.config.linkText) + "\n            </span>\n        </div>\n    ");
        this.delegateEvents({
            'click .navigation-back': this.redirect.bind(this),
        });
        _super.prototype.render.call(this);
    };
    NavigationBack.prototype.redirect = function () {
        Router.redirectToRoute(this.config.redirectRoute);
    };
    return NavigationBack;
}(View));
module.exports = NavigationBack;


/***/ }),

/***/ 80581:
/*!***********************************************!*\
  !*** ./public/bundles/pimui/js/messenger.tsx ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var notifications = [];
var render = function () {
    return react_dom_1.default.render(react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
        react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null,
            react_1.default.createElement(shared_1.Notifications, { notifications: notifications, onNotificationClosed: function (identifier) {
                    notifications = notifications.filter(function (notification) { return notification.identifier !== identifier; });
                    render();
                } }))), document.getElementById('flash-messages'));
};
var isValidLevel = function (level) {
    return ['info', 'error', 'warning', 'success', undefined].includes(level);
};
var isLegacyNotify = function (optionsOrChildren) {
    return typeof optionsOrChildren === 'object' &&
        null !== optionsOrChildren &&
        ('titleMessage' in optionsOrChildren || 'flash' in optionsOrChildren);
};
var notify = function (level, messageOrTitle, optionsOrChildren, icon) {
    if (!isValidLevel(level)) {
        throw new Error("Level must be one of the following: 'info', 'error', 'warning' or 'success'");
    }
    var flashMessage = isLegacyNotify(optionsOrChildren)
        ? convertLegacyFlashMessage(level, messageOrTitle, optionsOrChildren)
        : {
            level: level,
            title: messageOrTitle,
            children: optionsOrChildren,
            icon: icon,
        };
    notifications.push(__assign({ identifier: (0, akeneo_design_system_1.uuid)() }, flashMessage));
    render();
};
var convertLegacyFlashMessage = function (level, message, options) {
    var _a;
    if (undefined === message) {
        throw new Error('message property is required in the notify method');
    }
    return {
        level: level,
        title: (_a = options === null || options === void 0 ? void 0 : options.titleMessage) !== null && _a !== void 0 ? _a : message,
        children: (options === null || options === void 0 ? void 0 : options.titleMessage) ? message : null,
    };
};
module.exports = { notify: notify };


/***/ }),

/***/ 79569:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/model/attribute-group.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 11497:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/model/attribute.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 14739:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/navigation-menu/column.ts ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseColumn = __webpack_require__(/*! pim/form/common/column */ 61752);
var Column = (function (_super) {
    __extends(Column, _super);
    function Column(options) {
        var _this = _super.call(this, options) || this;
        _this.sections = [];
        return _this;
    }
    Column.prototype.configure = function () {
        this.onExtensions('pim_menu:column:register_navigation_section', this.registerNavigationSection);
        return _super.prototype.configure.call(this);
    };
    Column.prototype.getTab = function () {
        return this.config.tab;
    };
    Column.prototype.registerNavigationItem = function (navigationItem) {
        _super.prototype.registerNavigationItem.call(this, navigationItem);
        this.getRoot().trigger('pim_menu:register_item', {
            code: navigationItem.code,
            target: this.getTab(),
            title: navigationItem.label,
            sectionCode: navigationItem.section,
            route: navigationItem.route,
            position: navigationItem.position,
            routeParams: navigationItem.routeParams,
        });
    };
    Column.prototype.registerNavigationSection = function (navigationSection) {
        this.sections.push({
            code: navigationSection.code,
            title: navigationSection.title,
            position: navigationSection.position,
        });
    };
    return Column;
}(BaseColumn));
module.exports = Column;


/***/ }),

/***/ 86399:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/navigation-menu/item.ts ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __ = __webpack_require__(/*! oro/translator */ 16393);
var BaseForm = __webpack_require__(/*! pim/form */ 59904);
var Item = (function (_super) {
    __extends(Item, _super);
    function Item() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Item.prototype.initialize = function (config) {
        this.config = config.config;
        _super.prototype.initialize.call(this, config);
    };
    Item.prototype.configure = function () {
        this.getRoot().on('pim_menu:item:update_route_params', this.updateRouteParams, this);
        this.trigger('pim_menu:column:register_navigation_item', {
            code: this.code,
            route: this.getRoute(),
            title: this.getLabel(),
            position: this.position,
            routeParams: this.getRouteParams(),
            disabled: this.config.disabled,
            new: this.config.new,
        });
        return _super.prototype.configure.call(this);
    };
    Item.prototype.getRoute = function () {
        return this.config.to;
    };
    Item.prototype.getRouteParams = function () {
        return this.config.routeParams !== 'undefined' ? this.config.routeParams : {};
    };
    Item.prototype.getLabel = function () {
        return __(this.config.title);
    };
    Item.prototype.updateRouteParams = function (payload) {
        if (this.config.to !== payload.route) {
            return;
        }
        this.config.routeParams = payload.routeParams;
    };
    return Item;
}(BaseForm));
module.exports = Item;


/***/ }),

/***/ 20493:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/navigation-menu/menu.ts ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var DSM = __importStar(__webpack_require__(/*! akeneo-design-system */ 96541));
var BaseForm = __webpack_require__(/*! pim/form */ 59904);
var _ = __webpack_require__(/*! underscore */ 13469);
var template = __webpack_require__(/*! pim/template/menu/menu */ 22339);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var featureFlags = __webpack_require__(/*! pim/feature-flags */ 5857);
var Menu = (function (_super) {
    __extends(Menu, _super);
    function Menu(options) {
        var _this = _super.call(this, __assign(__assign({}, options), { className: 'AknHeader' })) || this;
        _this.template = _.template(template);
        _this.activeEntryCode = null;
        _this.activeSubEntryCode = null;
        return _this;
    }
    Menu.prototype.configure = function () {
        mediator.on('pim_menu:highlight:tab', this.highlightTab, this);
        mediator.on('pim_menu:highlight:item', this.highlightItem, this);
        mediator.on('pim_menu:hide', this.hideSubNavigation, this);
        return _super.prototype.configure.call(this);
    };
    Menu.prototype.render = function () {
        if (!this.configured) {
            return this;
        }
        this.renderReact(shared_1.PimNavigation, {
            entries: this.findMainEntries(),
            activeEntryCode: this.activeEntryCode,
            activeSubEntryCode: this.activeSubEntryCode,
            freeTrialEnabled: featureFlags.isEnabled('free_trial'),
        }, this.el);
        return this;
    };
    Menu.prototype.findMainEntries = function () {
        var navigationEntriesExtensions = Object.values(this.extensions).filter(function (extension) {
            if (extension.targetZone !== 'mainMenu') {
                return false;
            }
            return extension.code !== 'pim-menu-logo';
        });
        navigationEntriesExtensions.sort(function (entryA, entryB) {
            return entryA.position - entryB.position;
        });
        return this.buildMainMenuEntries(navigationEntriesExtensions);
    };
    Menu.prototype.buildMainMenuEntries = function (navigationEntriesExtensions) {
        var _this = this;
        return navigationEntriesExtensions
            .filter(function (extension) {
            return (extension.config.disabled ||
                !(typeof extension.config === 'object' &&
                    (!extension.config.to || extension.config.isLandingSectionPage) &&
                    typeof extension.hasChildren === 'function' &&
                    !extension.hasChildren()));
        })
            .map(function (extension) {
            var _a = extension.config, title = _a.title, isLandingSectionPage = _a.isLandingSectionPage, icon = _a.icon, align = _a.align;
            return {
                code: extension.code,
                title: title,
                disabled: extension.config.disabled || false,
                route: _this.findEntryRoute(extension),
                icon: react_1.default.createElement(DSM[icon] ? DSM[icon] : 'span', {
                    shapeRendering: icon === 'CardIcon' ? 'crispEdges' : undefined,
                }),
                subNavigations: _this.findMainEntrySubNavigations(extension.code),
                isLandingSectionPage: isLandingSectionPage !== null && isLandingSectionPage !== void 0 ? isLandingSectionPage : false,
                align: align,
            };
        });
    };
    Menu.prototype.findMainEntrySubNavigations = function (entryCode) {
        var columns = Object.values(this.extensions).filter(function (extension) {
            return extension.targetZone === 'column' && extension.config.tab === entryCode;
        });
        return columns.map(function (column) {
            column.sections.sort(function (sectionA, sectionB) {
                return sectionA.position - sectionB.position;
            });
            var sections = column.sections.map(function (section) {
                return {
                    code: section.code,
                    title: section.title,
                };
            });
            var backLink;
            if (column.config.backLink) {
                backLink = {
                    title: column.config.backLink.title,
                    route: column.config.backLink.route,
                };
            }
            return {
                title: column.config.navigationTitle,
                sections: sections,
                entries: column.navigationItems,
                backLink: backLink,
                stateCode: column.config.stateCode,
            };
        });
    };
    Menu.prototype.findEntryRoute = function (entry) {
        if (entry.config.to !== undefined) {
            return entry.config.to;
        }
        if (entry.items.length > 0) {
            entry.items.sort(function (itemA, itemB) {
                return itemA.position - itemB.position;
            });
            return entry.items[0].route;
        }
        return 'pim_settings_index';
    };
    Menu.prototype.highlightTab = function (event) {
        this.activeEntryCode = event.extension;
        this.render();
    };
    Menu.prototype.highlightItem = function (event) {
        this.activeSubEntryCode = event.extension || '';
        this.render();
    };
    Menu.prototype.hideSubNavigation = function () {
        this.activeSubEntryCode = '';
        this.render();
    };
    return Menu;
}(BaseForm));
module.exports = Menu;


/***/ }),

/***/ 3876:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/navigation-menu/navigation-block.ts ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var BaseForm = __webpack_require__(/*! pim/form */ 59904);
var NavigationBlock = (function (_super) {
    __extends(NavigationBlock, _super);
    function NavigationBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavigationBlock.prototype.initialize = function (config) {
        this.config = config.config;
        _super.prototype.initialize.call(this, config);
    };
    NavigationBlock.prototype.configure = function () {
        var _this = this;
        this.trigger('pim_menu:column:register_navigation_section', {
            code: this.code,
            title: this.config.title,
            position: this.position,
        });
        this.onExtensions('pim_menu:column:register_navigation_item', function (event) {
            _this.trigger('pim_menu:column:register_navigation_item', __assign(__assign({}, event), { sectionCode: _this.code }));
        });
        return _super.prototype.configure.call(this);
    };
    return NavigationBlock;
}(BaseForm));
module.exports = NavigationBlock;


/***/ }),

/***/ 22676:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/navigation-menu/tab.ts ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var _ = __webpack_require__(/*! underscore */ 13469);
var BaseForm = __webpack_require__(/*! pim/form */ 59904);
var router = __webpack_require__(/*! pim/router */ 41774);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var Tab = (function (_super) {
    __extends(Tab, _super);
    function Tab(options) {
        var _this = _super.call(this, __assign({}, options)) || this;
        _this.items = [];
        return _this;
    }
    Tab.prototype.initialize = function (config) {
        this.config = __assign({}, config.config);
        this.items = [];
        mediator.on('pim_menu:redirect:tab', this.redirect, this);
        _super.prototype.initialize.call(this, config);
    };
    Tab.prototype.configure = function () {
        this.listenTo(this.getRoot(), 'pim_menu:register_item', this.registerItem);
        return _super.prototype.configure.call(this);
    };
    Tab.prototype.redirect = function (event) {
        if (!_.has(event, 'extension')) {
            event.stopPropagation();
            event.preventDefault();
        }
        if (!(event.metaKey || event.ctrlKey) &&
            (!_.has(event, 'extension') || event.extension === this.code) &&
            undefined !== this.getRoute()) {
            router.redirectToRoute(this.getRoute(), this.getRouteParams());
        }
    };
    Tab.prototype.getRoute = function () {
        if (undefined !== this.config.to) {
            return this.config.to;
        }
        else {
            return _.first(_.sortBy(this.items, 'position')).route;
        }
    };
    Tab.prototype.getRouteParams = function () {
        if (undefined !== this.config.to) {
            return this.config.routeParams !== 'undefined' ? this.config.routeParams : {};
        }
        else {
            return _.first(_.sortBy(this.items, 'position')).routeParams;
        }
    };
    Tab.prototype.registerItem = function (event) {
        if (event.target === this.code) {
            this.items.push(event);
        }
    };
    Tab.prototype.hasChildren = function () {
        return 0 < this.items.length;
    };
    return Tab;
}(BaseForm));
module.exports = Tab;


/***/ }),

/***/ 22499:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/pim-analytics.ts ***!
  \**************************************************/
/***/ ((module) => {

"use strict";

var PimAnalytics = {
    track: function (_event, _properties) {
    },
};
module.exports = PimAnalytics;


/***/ }),

/***/ 74913:
/*!********************************************!*\
  !*** ./public/bundles/pimui/js/pim-app.ts ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var underscore_1 = __importDefault(__webpack_require__(/*! underscore */ 13469));
var backbone_1 = __importDefault(__webpack_require__(/*! backbone */ 2918));
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var init = __webpack_require__(/*! pim/init */ 82358);
var initTranslator = __webpack_require__(/*! pim/init-translator */ 80318);
var initLayout = __webpack_require__(/*! oro/init-layout */ 47534);
var initSignin = __webpack_require__(/*! pimuser/js/init-signin */ 11184);
var pageTitle = __webpack_require__(/*! pim/page-title */ 12764);
var DateContext = __webpack_require__(/*! pim/date-context */ 24846);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var template = __webpack_require__(/*! pim/template/app */ 72233);
var PimApp = (function (_super) {
    __extends(PimApp, _super);
    function PimApp() {
        var _this = _super.call(this, { tagName: 'div', className: 'app' }) || this;
        _this.template = underscore_1.default.template(template);
        return _this;
    }
    PimApp.prototype.events = function () {
        return {
            'click #overlay': 'onClickToCollapsePanel',
        };
    };
    PimApp.prototype.initialize = function () {
        initLayout();
        initSignin();
    };
    PimApp.prototype.configure = function () {
        var _this = this;
        this.listenTo(mediator, 'pim-app:overlay:show', this.showOverlay);
        this.listenTo(mediator, 'pim-app:overlay:hide', this.hideOverlay);
        return $.when(FetcherRegistry.initialize(), DateContext.initialize(), UserContext.initialize())
            .then(initTranslator.fetch)
            .then(function () {
            init();
            pageTitle.set('Akeneo PIM');
            return _super.prototype.configure.call(_this);
        });
    };
    PimApp.prototype.render = function () {
        this.$el.html(this.template({}));
        if (!backbone_1.default.History.started) {
            backbone_1.default.history.start();
        }
        return BaseView.prototype.render.apply(this, arguments);
    };
    PimApp.prototype.onClickToCollapsePanel = function () {
        mediator.trigger('pim-app:panel:close');
    };
    PimApp.prototype.showOverlay = function () {
        this.$('#overlay').addClass('AknOverlay--show');
    };
    PimApp.prototype.hideOverlay = function () {
        this.$('#overlay').removeClass('AknOverlay--show');
    };
    return PimApp;
}(BaseView));
module.exports = PimApp;


/***/ }),

/***/ 18747:
/*!************************************************!*\
  !*** ./public/bundles/pimui/js/pim-edition.ts ***!
  \************************************************/
/***/ ((module) => {

"use strict";

var pimEdition = {
    isCloudEdition: function () {
        return 'cloud' === undefined;
    },
};
module.exports = pimEdition;


/***/ }),

/***/ 96472:
/*!**********************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/completeness-follow-missing-attribute.tsx ***!
  \**********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var enrichment_1 = __webpack_require__(/*! @akeneo-pim-community/enrichment */ 63430);
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var FollowMissingAttribute = function (_a) {
    var product = _a.product;
    (0, enrichment_1.useScrollToAttribute)(product);
    return react_1.default.createElement(react_1.default.Fragment, null);
};
var CompletenessFollowMissingAttribute = (function (_super) {
    __extends(CompletenessFollowMissingAttribute, _super);
    function CompletenessFollowMissingAttribute() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CompletenessFollowMissingAttribute.prototype.configure = function () {
        this.listenTo(this.getRoot(), 'pim_enrich:form:attributes:render:before', function () {
            mediator.trigger('ATTRIBUTES_LOADING');
        });
        this.listenTo(this.getRoot(), 'pim_enrich:form:attributes:render:after', function () {
            mediator.trigger('ATTRIBUTES_LOADED');
        });
        return _super.prototype.configure.call(this);
    };
    CompletenessFollowMissingAttribute.prototype.render = function () {
        var product = this.getFormData();
        this.renderReact(FollowMissingAttribute, { product: product }, this.el);
        return this;
    };
    return CompletenessFollowMissingAttribute;
}(BaseView));
module.exports = CompletenessFollowMissingAttribute;


/***/ }),

/***/ 2461:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/boolean-field.tsx ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var Field = __webpack_require__(/*! pim/field */ 62494);
var translate = __webpack_require__(/*! oro/translator */ 16393);
var BooleanField = (function (_super) {
    __extends(BooleanField, _super);
    function BooleanField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BooleanField.prototype.renderInput = function (templateContext) {
        var _this = this;
        var container = document.createElement('div');
        react_dom_1.default.render(react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme },
            react_1.default.createElement(akeneo_design_system_1.BooleanInput, { clearable: true, value: templateContext.value.data, onChange: function (value) {
                    _this.setCurrentValue(value);
                    _this.render();
                }, clearLabel: translate('pim_common.clear_value'), yesLabel: translate('pim_common.yes'), noLabel: translate('pim_common.no'), readOnly: templateContext.editMode === 'view' })), container);
        return container;
    };
    return BooleanField;
}(Field));
module.exports = BooleanField;


/***/ }),

/***/ 92422:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/convert-to-simple-product.ts ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var Dialog = __webpack_require__(/*! pim/dialog */ 42905);
var __ = __webpack_require__(/*! oro/translator */ 16393);
var messenger = __webpack_require__(/*! oro/messenger */ 80581);
var Routing = __webpack_require__(/*! routing */ 60847);
var router = __webpack_require__(/*! pim/router */ 41774);
var ConvertToSimpleProduct = (function (_super) {
    __extends(ConvertToSimpleProduct, _super);
    function ConvertToSimpleProduct(options) {
        var _this = _super.call(this, __assign(__assign({}, options), { className: 'AknDropdown-menuLink', tagName: 'button' })) || this;
        _this.config = __assign(__assign({}, _this.config), options.config);
        return _this;
    }
    ConvertToSimpleProduct.prototype.events = function () {
        return {
            click: this.convert,
        };
    };
    ConvertToSimpleProduct.prototype.render = function () {
        var formData = this.getFormData();
        if ('product' === formData.meta.model_type && null !== formData.parent && this.isAuthorized()) {
            this.$el.html(__('pim_enrich.entity.product.module.convert_variant_to_simple.label'));
        }
        return BaseView.prototype.render.apply(this, arguments);
    };
    ConvertToSimpleProduct.prototype.isAuthorized = function () {
        return true;
    };
    ConvertToSimpleProduct.prototype.convert = function () {
        var _this = this;
        return Dialog.confirm('pim_enrich.entity.product.module.convert_variant_to_simple.dialog.content', 'pim_enrich.entity.product.module.convert_variant_to_simple.dialog.title', function () {
            router.showLoadingMask();
            fetch(Routing.generate(_this.config.url, {
                uuid: _this.getFormData().meta.id,
            }), {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                },
                method: 'POST',
            })
                .then(function (response) {
                if (response.ok) {
                    messenger.notify('success', __('pim_enrich.entity.product.flash.update.success'));
                }
                else {
                    messenger.notify('error', __('pim_enrich.entity.product.flash.update.fail'));
                }
            })
                .catch(function (e) {
                console.error(e);
                messenger.notify('error', __('pim_enrich.entity.product.flash.update.fail'));
            })
                .finally(function () {
                router.hideLoadingMask();
                router.reloadPage();
            });
        }, null, null, 'pim_common.confirm', 'products');
    };
    return ConvertToSimpleProduct;
}(BaseView));
module.exports = ConvertToSimpleProduct;


/***/ }),

/***/ 9007:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/free-trial-start-copy.ts ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var product_1 = __webpack_require__(/*! @akeneo-pim-community/product */ 78094);
var StartCopy = __webpack_require__(/*! pim/product-edit-form/start-copy */ 92733);
var FreeTrialStartCopy = (function (_super) {
    __extends(FreeTrialStartCopy, _super);
    function FreeTrialStartCopy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buttonDisabled = false;
        return _this;
    }
    FreeTrialStartCopy.prototype.configure = function () {
        this.getRoot().on('pim_enrich:form:stop_copy', this.onStopCompareTranslate, this);
    };
    FreeTrialStartCopy.prototype.render = function () {
        var _this = this;
        this.renderReact(product_1.CompareTranslateButton, {
            onClick: function () {
                _this.startCopy();
                _this.buttonDisabled = true;
                _this.render();
            },
            disabled: this.buttonDisabled,
        }, this.el);
    };
    FreeTrialStartCopy.prototype.onStopCompareTranslate = function () {
        this.buttonDisabled = false;
        this.render();
    };
    return FreeTrialStartCopy;
}(StartCopy));
module.exports = FreeTrialStartCopy;


/***/ }),

/***/ 8962:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/main-image.ts ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseMainImage = __webpack_require__(/*! pim/form/common/main-image */ 25163);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var Routing = __webpack_require__(/*! routing */ 60847);
var MainImage = (function (_super) {
    __extends(MainImage, _super);
    function MainImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MainImage.prototype.configure = function () {
        this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', this.render.bind(this));
        this.listenTo(this.getRoot(), 'pim_enrich:form:scope_switcher:change', this.render.bind(this));
        this.listenTo(this.getRoot(), 'pim_enrich:form:entity:update_state', this.render.bind(this));
        return BaseMainImage.prototype.configure.apply(this, arguments);
    };
    MainImage.prototype.render = function () {
        var _this = this;
        var fallbackUrl = '/bundles/pimui/img/image_default.png';
        FetcherRegistry.getFetcher('family')
            .fetch(this.getRoot().getFormData().family)
            .then(function (family) {
            var attributeCode = family.attribute_as_image;
            if (!attributeCode) {
                _this.el.src = fallbackUrl;
                return;
            }
            var imageValues = _this.getRoot().getFormData().values[attributeCode];
            if (imageValues.length === 0) {
                _this.el.src = fallbackUrl;
                return;
            }
            var imageValue = imageValues[0];
            var imageData = imageValue.data;
            if (imageData.hasOwnProperty('filePath') && imageData.hasOwnProperty('originalFilename')) {
                _this.el.src = Routing.generate('pim_enrich_media_show', {
                    filename: encodeURIComponent(imageData.filePath),
                    filter: 'thumbnail',
                });
                return;
            }
            _this.el.src = fallbackUrl;
        });
    };
    return MainImage;
}(BaseMainImage));
module.exports = MainImage;


/***/ }),

/***/ 76734:
/*!**************************************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/components/QuantifiedAssociationRow.tsx ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.QuantifiedAssociationRow = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var styled_components_1 = __importDefault(__webpack_require__(/*! styled-components */ 71893));
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var models_1 = __webpack_require__(/*! ../models */ 14178);
var hooks_1 = __webpack_require__(/*! ../hooks */ 11824);
var CellPlaceholder = styled_components_1.default.div.withConfig({ displayName: "CellPlaceholder", componentId: "sc-1nppa55" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  height: 40px;\n  width: 100%;\n"], ["\n  height: 40px;\n  width: 100%;\n"])));
var QuantifiedAssociationRow = function (_a) {
    var _b, _c, _d, _e;
    var row = _a.row, parentQuantifiedLink = _a.parentQuantifiedLink, _f = _a.isCompact, isCompact = _f === void 0 ? false : _f, _g = _a.isUserOwner, isUserOwner = _g === void 0 ? true : _g, onChange = _a.onChange, onRemove = _a.onRemove;
    var translate = (0, shared_1.useTranslate)();
    var isGranted = (0, shared_1.useSecurity)().isGranted;
    var isProductModel = models_1.ProductType.ProductModel === row.productType;
    var router = (0, shared_1.useRouter)();
    var productEditUrl = isProductModel
        ? router.generate('pim_enrich_product_model_edit', { id: ((_b = row.product) === null || _b === void 0 ? void 0 : _b.id.toString()) || '' })
        : router.generate('pim_enrich_product_edit', { uuid: ((_c = row.product) === null || _c === void 0 ? void 0 : _c.id.toString()) || '' });
    var thumbnailUrl = (0, hooks_1.useProductThumbnail)(row.product);
    var blueColor = (0, akeneo_design_system_1.useTheme)().color.blue100;
    var canRemoveAssociation = isGranted('pim_enrich_associations_remove') && undefined === parentQuantifiedLink && isUserOwner;
    var canUpdateQuantity = isGranted('pim_enrich_associations_edit') && isGranted('pim_enrich_associations_remove') && isUserOwner;
    var handleQuantityChange = function (value) {
        if (!canUpdateQuantity)
            return;
        var numberValue = Number(value) || 1;
        var limitedValue = numberValue > models_1.MAX_QUANTITY ? row.quantifiedLink.quantity : numberValue;
        onChange(__assign(__assign({}, row), { quantifiedLink: __assign(__assign({}, row.quantifiedLink), { quantity: limitedValue }) }));
    };
    return (react_1.default.createElement(akeneo_design_system_1.Table.Row, null,
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, null, null === row.product ? (react_1.default.createElement(CellPlaceholder, { className: "AknLoadingPlaceHolder" })) : (react_1.default.createElement(akeneo_design_system_1.Image, { fit: "contain", isStacked: isProductModel, width: 44, height: 44, src: thumbnailUrl, alt: row.product.label }))),
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, { rowTitle: !isProductModel }, null === row.product ? react_1.default.createElement(CellPlaceholder, { className: "AknLoadingPlaceHolder" }) : row.product.label),
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, null, null === row.product ? (react_1.default.createElement(CellPlaceholder, { className: "AknLoadingPlaceHolder" })) : ((_e = (_d = row.product) === null || _d === void 0 ? void 0 : _d.identifier) !== null && _e !== void 0 ? _e : "[" + row.product.id + "]")),
        !isCompact && (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(akeneo_design_system_1.Table.Cell, null, null === row.product ? (react_1.default.createElement(CellPlaceholder, { className: "AknLoadingPlaceHolder" })) : null === row.product.completeness ? (translate('pim_common.not_available')) : (react_1.default.createElement(akeneo_design_system_1.Badge, null,
                row.product.completeness,
                "%"))),
            react_1.default.createElement(akeneo_design_system_1.Table.Cell, null, null === row.product ? (react_1.default.createElement(CellPlaceholder, { className: "AknLoadingPlaceHolder" })) : null === row.product.variant_product_completenesses ? (translate('pim_common.not_available')) : (react_1.default.createElement(akeneo_design_system_1.Badge, null,
                row.product.variant_product_completenesses.completeChildren,
                " /",
                ' ',
                row.product.variant_product_completenesses.totalChildren))))),
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, { width: 150 },
            react_1.default.createElement(akeneo_design_system_1.NumberInput, { title: translate('pim_enrich.entity.product.module.associations.quantified.quantity'), type: "number", min: 1, max: models_1.MAX_QUANTITY, value: row.quantifiedLink.quantity.toString(), invalid: 0 < (0, shared_1.filterErrors)(row.errors, 'quantity').length, disabled: !canUpdateQuantity, onChange: handleQuantityChange }),
            (0, shared_1.formatParameters)(row.errors).map(function (error, key) { return (react_1.default.createElement(akeneo_design_system_1.Helper, { key: key, level: "error", inline: true }, translate(error.messageTemplate, error.parameters, error.plural))); })),
        react_1.default.createElement(akeneo_design_system_1.Table.Cell, null,
            !isCompact && (react_1.default.createElement(react_1.default.Fragment, null,
                undefined !== parentQuantifiedLink && parentQuantifiedLink.quantity !== row.quantifiedLink.quantity && (react_1.default.createElement(akeneo_design_system_1.BrokenLinkIcon, { color: blueColor, title: translate('pim_enrich.entity.product.module.associations.quantified.unlinked') })),
                null !== row.product && (react_1.default.createElement(akeneo_design_system_1.IconButton, { level: "tertiary", ghost: "borderless", icon: react_1.default.createElement(akeneo_design_system_1.EditIcon, null), title: translate('pim_enrich.entity.product.module.associations.edit'), href: "#" + productEditUrl, target: "_blank" })))),
            canRemoveAssociation && (react_1.default.createElement(akeneo_design_system_1.IconButton, { level: "tertiary", ghost: "borderless", icon: react_1.default.createElement(akeneo_design_system_1.CloseIcon, null), title: translate('pim_enrich.entity.product.module.associations.remove'), onClick: function () { return onRemove(row); } })))));
};
exports.QuantifiedAssociationRow = QuantifiedAssociationRow;
var templateObject_1;


/***/ }),

/***/ 73460:
/*!************************************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/components/QuantifiedAssociations.tsx ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.QuantifiedAssociations = void 0;
var react_1 = __importStar(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var models_1 = __webpack_require__(/*! ../models */ 14178);
var components_1 = __webpack_require__(/*! ../components */ 22182);
var hooks_1 = __webpack_require__(/*! ../hooks */ 11824);
var MAX_LIMIT = 100;
var QuantifiedAssociations = function (_a) {
    var quantifiedAssociations = _a.quantifiedAssociations, parentQuantifiedAssociations = _a.parentQuantifiedAssociations, errors = _a.errors, _b = _a.isCompact, isCompact = _b === void 0 ? false : _b, _c = _a.isUserOwner, isUserOwner = _c === void 0 ? true : _c, onOpenPicker = _a.onOpenPicker, onAssociationsChange = _a.onAssociationsChange;
    var translate = (0, shared_1.useTranslate)();
    var isGranted = (0, shared_1.useSecurity)().isGranted;
    var notify = (0, shared_1.useNotify)();
    var _d = (0, react_1.useState)((0, models_1.quantifiedAssociationToRowCollection)(quantifiedAssociations, errors)), rowCollection = _d[0], setRowCollection = _d[1];
    var _e = (0, react_1.useState)(''), searchValue = _e[0], setSearchValue = _e[1];
    var products = (0, hooks_1.useProducts)((0, models_1.getAssociationIdentifiers)(rowCollection));
    var collectionWithProducts = (0, models_1.addProductToRows)(rowCollection, products);
    var newAndUpdatedCount = (0, models_1.newAndUpdatedQuantifiedAssociationsCount)(parentQuantifiedAssociations, (0, models_1.rowCollectionToQuantifiedAssociation)(rowCollection));
    var hasUpdatedVariant = (0, models_1.hasUpdatedQuantifiedAssociations)(parentQuantifiedAssociations, (0, models_1.rowCollectionToQuantifiedAssociation)(rowCollection));
    var filteredCollectionWithProducts = collectionWithProducts.filter((0, models_1.filterOnLabelOrIdentifier)(searchValue));
    var inputRef = (0, react_1.useRef)(null);
    var canAddAssociation = isGranted('pim_enrich_associations_edit') && isUserOwner;
    (0, akeneo_design_system_1.useAutoFocus)(inputRef);
    (0, react_1.useEffect)(function () {
        (0, shared_1.formatParameters)((0, shared_1.getErrorsForPath)(errors, '')).forEach(function (error) {
            return notify(shared_1.NotificationLevel.ERROR, translate(error.messageTemplate, error.parameters, error.plural));
        });
        (0, shared_1.formatParameters)((0, shared_1.getErrorsForPath)(errors, "." + models_1.ProductsType.Products)).forEach(function (error) {
            return notify(shared_1.NotificationLevel.ERROR, translate(error.messageTemplate, error.parameters, error.plural));
        });
        (0, shared_1.formatParameters)((0, shared_1.getErrorsForPath)(errors, "." + models_1.ProductsType.ProductModels)).forEach(function (error) {
            return notify(shared_1.NotificationLevel.ERROR, translate(error.messageTemplate, error.parameters, error.plural));
        });
    }, [JSON.stringify(errors)]);
    (0, react_1.useEffect)(function () {
        setRowCollection((0, models_1.quantifiedAssociationToRowCollection)(quantifiedAssociations, errors));
    }, [quantifiedAssociations, JSON.stringify(errors)]);
    (0, react_1.useEffect)(function () {
        var updatedValue = (0, models_1.rowCollectionToQuantifiedAssociation)(rowCollection);
        if ((0, models_1.isQuantifiedAssociationEmpty)(quantifiedAssociations) && (0, models_1.isQuantifiedAssociationEmpty)(updatedValue))
            return;
        onAssociationsChange(updatedValue);
    }, [JSON.stringify(rowCollection)]);
    var handleAdd = (0, react_1.useCallback)(function () { return __awaiter(void 0, void 0, void 0, function () {
        var addedRows_1, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _b.trys.push([0, 2, , 3]);
                    return [4, onOpenPicker()];
                case 1:
                    addedRows_1 = _b.sent();
                    setRowCollection(function (rowCollection) { return (0, models_1.addRowsToCollection)(rowCollection, addedRows_1); });
                    return [3, 3];
                case 2:
                    _a = _b.sent();
                    return [3, 3];
                case 3: return [2];
            }
        });
    }); }, []);
    var handleRemove = (0, react_1.useCallback)(function (row) { return setRowCollection(function (rowCollection) { return (0, models_1.removeRowFromCollection)(rowCollection, row); }); }, []);
    var handleChange = (0, react_1.useCallback)(function (row) { return setRowCollection(function (rowCollection) { return (0, models_1.updateRowInCollection)(rowCollection, row); }); }, []);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        MAX_LIMIT <= newAndUpdatedCount && (react_1.default.createElement(akeneo_design_system_1.Helper, { level: "info" }, translate('pim_enrich.entity.product.module.associations.limit_reached', { maxLimit: MAX_LIMIT.toString() }))),
        hasUpdatedVariant && (react_1.default.createElement(akeneo_design_system_1.Helper, { level: "info", icon: react_1.default.createElement(akeneo_design_system_1.BrokenLinkIcon, null) }, translate('pim_enrich.entity.product.module.associations.variant_updated'))),
        react_1.default.createElement(akeneo_design_system_1.Search, { placeholder: translate('pim_enrich.entity.product.module.associations.search.placeholder'), searchValue: searchValue, onSearchChange: setSearchValue, inputRef: inputRef },
            react_1.default.createElement(akeneo_design_system_1.Search.ResultCount, null, translate('pim_common.result_count', { itemsCount: filteredCollectionWithProducts.length || 0 }, filteredCollectionWithProducts.length || 0)),
            canAddAssociation && (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(akeneo_design_system_1.Search.Separator, null),
                react_1.default.createElement(akeneo_design_system_1.Button, { level: "secondary", onClick: handleAdd }, translate('pim_enrich.entity.product.module.associations.add_associations'))))),
        null === products ? null : 0 === filteredCollectionWithProducts.length ? (react_1.default.createElement(akeneo_design_system_1.Placeholder, { illustration: react_1.default.createElement(akeneo_design_system_1.AssociationTypesIllustration, null), size: "large", title: translate('' === searchValue ? 'pim_enrich.entity.product.module.associations.no_data' : 'pim_common.no_search_result') })) : (react_1.default.createElement(akeneo_design_system_1.Table, null,
            react_1.default.createElement(akeneo_design_system_1.Table.Header, null,
                react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_common.image')),
                react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_common.label')),
                react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_common.identifier')),
                !isCompact && react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_common.completeness')),
                !isCompact && (react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_enrich.entity.product.module.associations.variant_products'))),
                react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_enrich.entity.product.module.associations.quantified.quantity')),
                react_1.default.createElement(akeneo_design_system_1.Table.HeaderCell, null, translate('pim_common.actions'))),
            react_1.default.createElement(akeneo_design_system_1.Table.Body, null, filteredCollectionWithProducts.map(function (row, index) { return (react_1.default.createElement(components_1.QuantifiedAssociationRow, { key: index, row: row, isUserOwner: isUserOwner, isCompact: isCompact, parentQuantifiedLink: (0, models_1.getProductsType)(row.productType) === models_1.ProductsType.Products
                    ? parentQuantifiedAssociations.products.find(function (quantifiedLink) {
                        return (0, models_1.getQuantifiedLinkIdentifier)(quantifiedLink) ===
                            (0, models_1.getQuantifiedLinkIdentifier)(row.quantifiedLink);
                    })
                    : parentQuantifiedAssociations.product_models.find(function (quantifiedLink) {
                        return (0, models_1.getQuantifiedLinkIdentifier)(quantifiedLink) ===
                            (0, models_1.getQuantifiedLinkIdentifier)(row.quantifiedLink);
                    }), onRemove: handleRemove, onChange: handleChange })); }))))));
};
exports.QuantifiedAssociations = QuantifiedAssociations;


/***/ }),

/***/ 22182:
/*!******************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/components/index.ts ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./QuantifiedAssociationRow */ 76734), exports);
__exportStar(__webpack_require__(/*! ./QuantifiedAssociations */ 73460), exports);


/***/ }),

/***/ 11824:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/hooks/index.ts ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./useProducts */ 6925), exports);
__exportStar(__webpack_require__(/*! ./useProductThumbnail */ 89454), exports);


/***/ }),

/***/ 89454:
/*!***************************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/hooks/useProductThumbnail.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useProductThumbnail = void 0;
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var PLACEHOLDER_PATH = '/bundles/pimui/img/image_default.png';
var isAssetManagerImagePath = function (path) { return path.includes('rest/asset_manager/image_preview'); };
var useProductThumbnail = function (product) {
    var thumbnailUrl = (0, shared_1.useRoute)('pim_enrich_media_show', (product === null || product === void 0 ? void 0 : product.image)
        ? {
            filename: encodeURIComponent(product.image.filePath),
            filter: 'thumbnail',
        }
        : undefined);
    if (!(product === null || product === void 0 ? void 0 : product.image)) {
        return PLACEHOLDER_PATH;
    }
    if (isAssetManagerImagePath(product.image.filePath)) {
        return product.image.filePath;
    }
    return thumbnailUrl;
};
exports.useProductThumbnail = useProductThumbnail;


/***/ }),

/***/ 6925:
/*!*******************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/hooks/useProducts.ts ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.useProducts = void 0;
var react_1 = __webpack_require__(/*! react */ 67294);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var models_1 = __webpack_require__(/*! ../models */ 14178);
var productFetcher = function (route, identifiers) { return __awaiter(void 0, void 0, Promise, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4, fetch(route, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'fetch',
                    },
                    body: JSON.stringify(identifiers),
                })];
            case 1:
                response = _a.sent();
                return [4, response.json()];
            case 2: return [2, (_a.sent()).items];
        }
    });
}); };
var useProducts = function (identifiers) {
    var _a = (0, react_1.useState)([]), products = _a[0], setProducts = _a[1];
    var userContext = (0, shared_1.useUserContext)();
    var url = (0, shared_1.useRoute)('pim_enrich_product_and_product_model_by_identifiers_rest_list', {
        channel: userContext.get('catalogScope'),
        locale: userContext.get('catalogLocale'),
    });
    var identifiersToFetch = null === products
        ? identifiers
        : {
            products: identifiers.products.filter(function (identifier) {
                return !products.some(function (product) { return product.identifier === identifier && product.document_type === models_1.ProductType.Product; });
            }),
            product_models: identifiers.product_models.filter(function (identifier) {
                return !products.some(function (product) { return product.identifier === identifier && product.document_type === models_1.ProductType.ProductModel; });
            }),
        };
    (0, react_1.useEffect)(function () {
        var isSubscribed = true;
        (function () { return __awaiter(void 0, void 0, void 0, function () {
            var newProducts;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (0 === identifiersToFetch.product_models.length && 0 === identifiersToFetch.products.length) {
                            return [2];
                        }
                        return [4, productFetcher(url, identifiersToFetch)];
                    case 1:
                        newProducts = _a.sent();
                        if (isSubscribed)
                            setProducts(function (currentProducts) { return __spreadArray(__spreadArray([], newProducts, true), currentProducts, true); });
                        return [2];
                }
            });
        }); })();
        return function () {
            isSubscribed = false;
        };
    }, [JSON.stringify(identifiersToFetch), url]);
    return products;
};
exports.useProducts = useProducts;


/***/ }),

/***/ 73485:
/*!*******************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/models/identifier.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 14178:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/models/index.ts ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./identifier */ 73485), exports);
__exportStar(__webpack_require__(/*! ./product */ 81341), exports);
__exportStar(__webpack_require__(/*! ./quantified-association */ 6829), exports);
__exportStar(__webpack_require__(/*! ./row */ 7009), exports);


/***/ }),

/***/ 81341:
/*!****************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/models/product.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getProductType = exports.getProductsType = exports.ProductsType = exports.ProductType = void 0;
var ProductType;
(function (ProductType) {
    ProductType["Product"] = "product";
    ProductType["ProductModel"] = "product_model";
})(ProductType || (ProductType = {}));
exports.ProductType = ProductType;
var ProductsType;
(function (ProductsType) {
    ProductsType["Products"] = "products";
    ProductsType["ProductModels"] = "product_models";
})(ProductsType || (ProductsType = {}));
exports.ProductsType = ProductsType;
var getProductsType = function (productType) {
    return ProductType.Product === productType ? ProductsType.Products : ProductsType.ProductModels;
};
exports.getProductsType = getProductsType;
var getProductType = function (productsType) {
    return ProductsType.Products === productsType ? ProductType.Product : ProductType.ProductModel;
};
exports.getProductType = getProductType;


/***/ }),

/***/ 6829:
/*!*******************************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/models/quantified-association.ts ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MAX_QUANTITY = exports.isQuantifiedAssociationEmpty = exports.hasUpdatedQuantifiedAssociations = exports.newAndUpdatedQuantifiedAssociationsCount = exports.rowCollectionToQuantifiedAssociation = exports.quantifiedAssociationToRowCollection = exports.getQuantifiedLinkIdentifier = void 0;
var models_1 = __webpack_require__(/*! ../models */ 14178);
var shared_1 = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387);
var MAX_QUANTITY = 2147483647;
exports.MAX_QUANTITY = MAX_QUANTITY;
var getQuantifiedLinkIdentifier = function (quantifiedLink) {
    if (isProductQuantifiedLink(quantifiedLink)) {
        return quantifiedLink.uuid;
    }
    return quantifiedLink.identifier;
};
exports.getQuantifiedLinkIdentifier = getQuantifiedLinkIdentifier;
var isQuantifiedAssociationEmpty = function (quantifiedAssociation) {
    return 0 === quantifiedAssociation.products.length && 0 === quantifiedAssociation.product_models.length;
};
exports.isQuantifiedAssociationEmpty = isQuantifiedAssociationEmpty;
var isProductQuantifiedLink = function (quantifiedLink) {
    return 'object' === typeof quantifiedLink && 'uuid' in quantifiedLink && 'quantity' in quantifiedLink;
};
var quantifiedAssociationToRowCollection = function (collection, errors) { return __spreadArray(__spreadArray([], collection.products.map(function (quantifiedLink, index) { return ({
    quantifiedLink: quantifiedLink,
    productType: models_1.ProductType.Product,
    product: null,
    errors: (0, shared_1.filterErrors)(errors, "." + models_1.ProductsType.Products + "[" + index + "]."),
}); }), true), collection.product_models.map(function (quantifiedLink, index) { return ({
    quantifiedLink: quantifiedLink,
    productType: models_1.ProductType.ProductModel,
    product: null,
    errors: (0, shared_1.filterErrors)(errors, "." + models_1.ProductsType.ProductModels + "[" + index + "]."),
}); }), true); };
exports.quantifiedAssociationToRowCollection = quantifiedAssociationToRowCollection;
var rowCollectionToQuantifiedAssociation = function (rows) {
    var result = {
        products: [],
        product_models: [],
    };
    rows.forEach(function (_a) {
        var quantifiedLink = _a.quantifiedLink;
        if (isProductQuantifiedLink(quantifiedLink)) {
            result.products.push({ uuid: quantifiedLink.uuid, quantity: quantifiedLink.quantity });
        }
        else {
            result.product_models.push({ identifier: quantifiedLink.identifier, quantity: quantifiedLink.quantity });
        }
    });
    return result;
};
exports.rowCollectionToQuantifiedAssociation = rowCollectionToQuantifiedAssociation;
var newAndUpdatedQuantifiedAssociationsCount = function (parentQuantifiedAssociations, quantifiedAssociations) {
    var newAndUpdatedProductQuantifiedLinks = quantifiedAssociations.products.filter(function (quantifiedLink) {
        var parentQuantifiedLink = parentQuantifiedAssociations.products.find(function (parentQuantifiedLink) { return quantifiedLink.uuid === parentQuantifiedLink.uuid; });
        return undefined === parentQuantifiedLink || parentQuantifiedLink.quantity !== quantifiedLink.quantity;
    });
    var newAndUpdatedProductModelQuantifiedLinks = quantifiedAssociations.product_models.filter(function (quantifiedLink) {
        var parentQuantifiedLink = parentQuantifiedAssociations.product_models.find(function (parentQuantifiedLink) { return quantifiedLink.identifier === parentQuantifiedLink.identifier; });
        return undefined === parentQuantifiedLink || parentQuantifiedLink.quantity !== quantifiedLink.quantity;
    });
    return newAndUpdatedProductQuantifiedLinks.length + newAndUpdatedProductModelQuantifiedLinks.length;
};
exports.newAndUpdatedQuantifiedAssociationsCount = newAndUpdatedQuantifiedAssociationsCount;
var hasUpdatedQuantifiedAssociations = function (parentQuantifiedAssociations, quantifiedAssociations) {
    return quantifiedAssociations.products.some(function (quantifiedLink) {
        var parentQuantifiedLink = parentQuantifiedAssociations.products.find(function (parentQuantifiedLink) { return quantifiedLink.uuid === parentQuantifiedLink.uuid; });
        return undefined !== parentQuantifiedLink && parentQuantifiedLink.quantity !== quantifiedLink.quantity;
    }) ||
        quantifiedAssociations.product_models.some(function (quantifiedLink) {
            var parentQuantifiedLink = parentQuantifiedAssociations.product_models.find(function (parentQuantifiedLink) { return quantifiedLink.identifier === parentQuantifiedLink.identifier; });
            return undefined !== parentQuantifiedLink && parentQuantifiedLink.quantity !== quantifiedLink.quantity;
        });
};
exports.hasUpdatedQuantifiedAssociations = hasUpdatedQuantifiedAssociations;


/***/ }),

/***/ 7009:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/quantified-associations/models/row.ts ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeRowFromCollection = exports.addRowsToCollection = exports.updateRowInCollection = exports.addProductToRows = exports.getAssociationIdentifiers = exports.filterOnLabelOrIdentifier = void 0;
var models_1 = __webpack_require__(/*! ../models */ 14178);
var addProductToRows = function (rows, products) {
    return rows.map(function (row) {
        if (null === products)
            return __assign(__assign({}, row), { product: null });
        var product = products.find(function (product) {
            var quantifiedLinkIdentifier = product.document_type === 'product' ? product.id : product.identifier;
            return quantifiedLinkIdentifier === (0, models_1.getQuantifiedLinkIdentifier)(row.quantifiedLink);
        });
        if (undefined === product)
            return __assign(__assign({}, row), { product: null });
        return __assign(__assign({}, row), { product: product });
    });
};
exports.addProductToRows = addProductToRows;
var getAssociationIdentifiers = function (rows) {
    var _a;
    return rows.reduce(function (identifiers, row) {
        identifiers[(0, models_1.getProductsType)(row.productType)].push((0, models_1.getQuantifiedLinkIdentifier)(row.quantifiedLink));
        return identifiers;
    }, (_a = {},
        _a[models_1.ProductsType.Products] = [],
        _a[models_1.ProductsType.ProductModels] = [],
        _a));
};
exports.getAssociationIdentifiers = getAssociationIdentifiers;
var filterOnLabelOrIdentifier = function (searchValue) {
    return function (row) {
        if (null === row.product) {
            return false;
        }
        return ((null !== row.product.label && -1 !== row.product.label.toLowerCase().indexOf(searchValue.toLowerCase())) ||
            (null !== row.product.identifier &&
                -1 !== row.product.identifier.toLowerCase().indexOf(searchValue.toLowerCase())));
    };
};
exports.filterOnLabelOrIdentifier = filterOnLabelOrIdentifier;
var updateRowInCollection = function (rows, _a) {
    var quantifiedLink = _a.quantifiedLink, productType = _a.productType;
    return rows.map(function (row) {
        if ((0, models_1.getQuantifiedLinkIdentifier)(row.quantifiedLink) !== (0, models_1.getQuantifiedLinkIdentifier)(quantifiedLink) ||
            row.productType !== productType)
            return row;
        return __assign(__assign({}, row), { quantifiedLink: quantifiedLink });
    });
};
exports.updateRowInCollection = updateRowInCollection;
var removeRowFromCollection = function (collection, _a) {
    var quantifiedLink = _a.quantifiedLink, productType = _a.productType;
    return collection.filter(function (row) {
        return (0, models_1.getQuantifiedLinkIdentifier)(row.quantifiedLink) !== (0, models_1.getQuantifiedLinkIdentifier)(quantifiedLink) ||
            row.productType !== productType;
    });
};
exports.removeRowFromCollection = removeRowFromCollection;
var addRowsToCollection = function (collection, addedRows) {
    return addedRows.reduce(function (collection, addedRow) {
        var row = collection.find(function (row) {
            return (0, models_1.getQuantifiedLinkIdentifier)(addedRow.quantifiedLink) === (0, models_1.getQuantifiedLinkIdentifier)(row.quantifiedLink) &&
                addedRow.productType === row.productType;
        });
        if (undefined !== row) {
            row.quantifiedLink.quantity = 1;
        }
        else {
            collection.push(addedRow);
        }
        return collection;
    }, __spreadArray([], collection, true));
};
exports.addRowsToCollection = addRowsToCollection;


/***/ }),

/***/ 80766:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/sub-navigation.ts ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseColumn = __webpack_require__(/*! pim/form/common/column */ 61752);
var ProductEditFormSubNavigation = (function (_super) {
    __extends(ProductEditFormSubNavigation, _super);
    function ProductEditFormSubNavigation() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isCollapsedByUser = false;
        return _this;
    }
    ProductEditFormSubNavigation.prototype.configure = function () {
        this.isCollapsedByUser = this.isCollapsed();
        this.getRoot().on('pim_enrich:form:start_copy', this.onStartCompareTranslate, this);
        this.getRoot().on('pim_enrich:form:stop_copy', this.onStopCompareTranslate, this);
        return _super.prototype.configure.call(this);
    };
    ProductEditFormSubNavigation.prototype.onStartCompareTranslate = function () {
        if (!this.isCollapsed()) {
            this.setCollapsed(true);
        }
    };
    ProductEditFormSubNavigation.prototype.onStopCompareTranslate = function () {
        if (!this.isCollapsedByUser && this.isCollapsed()) {
            this.setCollapsed(false);
        }
    };
    ProductEditFormSubNavigation.prototype.toggleColumn = function () {
        _super.prototype.toggleColumn.call(this);
        this.isCollapsedByUser = this.isCollapsed();
    };
    return ProductEditFormSubNavigation;
}(BaseColumn));
module.exports = ProductEditFormSubNavigation;


/***/ }),

/***/ 75654:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/product/grid/mass-actions.ts ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseForm = __webpack_require__(/*! pim/grid/mass-actions */ 28137);
var MassActions = (function (_super) {
    __extends(MassActions, _super);
    function MassActions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MassActions.prototype.countEntities = function () {
        var count = this.count;
        if (this.datagrid) {
            var selectionState = this.datagrid.getSelectionState();
            count = Object.keys(this.datagrid.getSelectionState().selectedModels).length;
            if (!selectionState.inset) {
                count = this.collection.state.totalRecords - Object.keys(selectionState.selectedModels).length;
            }
        }
        return count;
    };
    return MassActions;
}(BaseForm));
module.exports = MassActions;


/***/ }),

/***/ 26682:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/provider/to-fill-field-provider.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getMissingRequiredFields = void 0;
var _ = __webpack_require__(/*! underscore */ 13469);
var getMissingRequiredFields = function (product, scope, locale) {
    var scopeMissingAttributes = _.findWhere(product.meta.required_missing_attributes, { channel: scope });
    if (undefined === scopeMissingAttributes) {
        return [];
    }
    var localeMissingAttributes = scopeMissingAttributes.locales[locale];
    if (undefined === localeMissingAttributes) {
        return [];
    }
    var missingAttributeCodes = localeMissingAttributes.missing.map(function (missing) { return missing.code; });
    var levelAttributeCodes = Object.keys(product.values);
    return missingAttributeCodes.filter(function (missingAttribute) { return levelAttributeCodes.includes(missingAttribute); });
};
exports.getMissingRequiredFields = getMissingRequiredFields;


/***/ }),

/***/ 89262:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/view/base-interface.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 59904:
/*!**********************************************!*\
  !*** ./public/bundles/pimui/js/view/base.ts ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var styled_components_1 = __webpack_require__(/*! styled-components */ 71893);
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var legacy_bridge_1 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge */ 9178);
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var JQuery = __importStar(__webpack_require__(/*! jquery */ 49845));
var Backbone = __importStar(__webpack_require__(/*! backbone */ 2918));
var mediator = __webpack_require__(/*! oro/mediator */ 27615);
var BaseView = (function (_super) {
    __extends(BaseView, _super);
    function BaseView(config) {
        var _this = _super.call(this, config) || this;
        _this.parent = null;
        _this.reactRef = null;
        _this.preUpdateEventName = 'pim_enrich:form:entity:pre_update';
        _this.postUpdateEventName = 'pim_enrich:form:entity:post_update';
        _this.code = 'form';
        _this.extensions = {};
        _this.zones = {};
        _this.position = 0;
        _this.targetZone = '';
        _this.configured = false;
        return _this;
    }
    BaseView.prototype.configure = function () {
        var _this = this;
        if (null === this.parent) {
            this.model = new Backbone.Model();
        }
        var extensionPromises = Object.values(this.extensions).map(function (extension) {
            return extension.configure();
        });
        return JQuery.when.apply(JQuery, extensionPromises).then(function () {
            _this.configured = true;
        });
    };
    BaseView.prototype.addExtension = function (code, extension, zone, position) {
        extension.setParent(this);
        extension.code = code;
        extension.targetZone = zone;
        extension.position = position;
        if (undefined === this.extensions || null === this.extensions) {
            throw 'this.extensions have to be defined. Please ensure you called parent initialize() method.';
        }
        this.extensions[code] = extension;
    };
    BaseView.prototype.getExtension = function (code) {
        var extensionKey = _.findKey(this.extensions, function (extension) {
            var expectedPosition = extension.code.length - code.length;
            return expectedPosition >= 0 && expectedPosition === extension.code.indexOf(code, expectedPosition);
        });
        if (undefined === extensionKey) {
            extensionKey = '';
        }
        return this.extensions[extensionKey];
    };
    BaseView.prototype.setParent = function (parent) {
        this.parent = parent;
    };
    BaseView.prototype.getParent = function () {
        return this.parent;
    };
    BaseView.prototype.getRoot = function () {
        var rootView = this;
        var parent = this.getParent();
        while (null !== parent) {
            rootView = parent;
            parent = parent.getParent();
        }
        return rootView;
    };
    BaseView.prototype.setData = function (data, options) {
        if (options === void 0) { options = {}; }
        if (!options.silent) {
            this.getRoot().trigger(this.preUpdateEventName, data);
        }
        this.getRoot().model.set(data, options);
        if (!options.silent) {
            this.getRoot().trigger(this.postUpdateEventName, data);
        }
    };
    BaseView.prototype.getFormData = function () {
        return this.getRoot().model.toJSON();
    };
    BaseView.prototype.getFormModel = function () {
        return this.getRoot().model;
    };
    BaseView.prototype.shutdown = function () {
        this.doShutdown();
        Object.values(this.extensions).forEach(function (extension) { return extension.shutdown(); });
    };
    BaseView.prototype.doShutdown = function () {
        this.stopListening();
        this.undelegateEvents();
        this.$el.removeData().off();
        this.remove();
        Backbone.View.prototype.remove.call(this);
    };
    BaseView.prototype.render = function () {
        if (!this.configured) {
            return this;
        }
        return this.renderExtensions();
    };
    BaseView.prototype.renderExtensions = function () {
        var _this = this;
        if (undefined === this.el) {
            return this;
        }
        this.initializeDropZones();
        Object.values(this.extensions).forEach(function (extension) {
            _this.renderExtension(extension);
        });
        return this;
    };
    BaseView.prototype.renderExtension = function (extension) {
        var zone = this.getZone(extension.targetZone);
        if (null === zone) {
            throw new Error("Can not render extension \"" + extension.code + "\" in \"" + this.code + "\": zone \"" + extension.targetZone + "\" does not exist");
        }
        zone.appendChild(extension.el);
        extension.render();
    };
    BaseView.prototype.renderReact = function (componentType, props, container) {
        this.reactRef = container;
        react_dom_1.default.render(react_1.default.createElement(styled_components_1.ThemeProvider, { theme: akeneo_design_system_1.pimTheme }, react_1.default.createElement(legacy_bridge_1.DependenciesProvider, null, react_1.default.createElement(componentType, props))), this.reactRef);
    };
    BaseView.prototype.unmountReact = function () {
        if (null !== this.reactRef) {
            react_dom_1.default.unmountComponentAtNode(this.reactRef);
            this.reactRef = null;
        }
    };
    BaseView.prototype.remove = function () {
        _super.prototype.remove.call(this);
        this.unmountReact();
        return this;
    };
    BaseView.prototype.initializeDropZones = function () {
        this.zones = this.$('[data-drop-zone]')
            .toArray()
            .reduce(function (zones, zone) {
            var _a;
            return __assign(__assign({}, zones), (_a = {}, _a[zone.dataset.dropZone] = zone, _a));
        }, {});
        this.zones['self'] = this.el;
    };
    BaseView.prototype.getZone = function (code) {
        if (!(code in this.zones)) {
            this.zones[code] = this.el.querySelector("[data-drop-zone=\"" + code + "\"]");
        }
        if (!this.zones[code]) {
            return null;
        }
        return this.zones[code];
    };
    BaseView.prototype.triggerExtensions = function (eventName) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        Object.values(this.extensions).forEach(function (extension) {
            extension.trigger.apply(extension, __spreadArray([eventName], args, true));
            extension.triggerExtensions.apply(extension, __spreadArray([eventName], args, true));
        });
    };
    BaseView.prototype.onExtensions = function (code, callback) {
        var _this = this;
        Object.values(this.extensions).forEach(function (extension) {
            _this.listenTo(extension, code, callback);
        });
    };
    BaseView.prototype.getFormCode = function () {
        return this.getRoot().code;
    };
    BaseView.prototype.forwardMediatorEvents = function (events) {
        var _this = this;
        Object.keys(events).forEach(function (localEvent) {
            var mediatorEvent = events[localEvent];
            _this.listenTo(mediator, mediatorEvent, function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                _this.trigger.apply(_this, __spreadArray([localEvent], args, false));
            });
        });
    };
    return BaseView;
}(Backbone.View));
module.exports = BaseView;


/***/ }),

/***/ 56691:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimuser/js/datagrid/action/duplicate-user-action.tsx ***!
  \*****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ 73935));
var user_ui_1 = __webpack_require__(/*! @akeneo-pim-community/user-ui */ 63165);
var Routing = __webpack_require__(/*! pim/router */ 41774);
var AbstractAction = __webpack_require__(/*! oro/datagrid/abstract-action */ 8744);
var DuplicateUserAction = (function (_super) {
    __extends(DuplicateUserAction, _super);
    function DuplicateUserAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DuplicateUserAction.prototype.execute = function () {
        var container = document.createElement('div');
        document.body.appendChild(container);
        var closeApp = function () {
            react_dom_1.default.unmountComponentAtNode(container);
            document.body.removeChild(container);
        };
        var onDuplicateSuccess = function (duplicatedUserId) {
            closeApp();
            Routing.redirect(Routing.generate('pim_user_edit', { identifier: duplicatedUserId }));
        };
        react_dom_1.default.render(react_1.default.createElement(user_ui_1.DuplicateUserApp, { userId: this.model.get('id'), userCode: this.model.get('username'), onCancel: closeApp, onDuplicateSuccess: onDuplicateSuccess }), container);
    };
    return DuplicateUserAction;
}(AbstractAction));
module.exports = DuplicateUserAction;


/***/ }),

/***/ 52999:
/*!***********************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/category-tree.ts ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var CategoryTree = (function (_super) {
    __extends(CategoryTree, _super);
    function CategoryTree() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CategoryTree.prototype.configure = function () {
        var _this = this;
        return $.when(BaseSelect.prototype.configure.apply(this, arguments), FetcherRegistry.getFetcher('category')
            .fetchAll()
            .then(function (categories) {
            _this.config.choices = categories;
        }));
    };
    CategoryTree.prototype.formatChoices = function (categories) {
        return categories.reduce(function (result, category) {
            var label = category.labels[UserContext.get('catalogLocale')];
            result[category.code] = label !== undefined ? label : '[' + category.code + ']';
            return result;
        }, {});
    };
    return CategoryTree;
}(BaseSelect));
module.exports = CategoryTree;


/***/ }),

/***/ 7467:
/*!*****************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/channel.ts ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var ChannelField = (function (_super) {
    __extends(ChannelField, _super);
    function ChannelField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChannelField.prototype.configure = function () {
        var _this = this;
        return $.when(BaseSelect.prototype.configure.apply(this, arguments), FetcherRegistry.getFetcher('channel')
            .fetchAll()
            .then(function (scopes) {
            _this.config.choices = scopes;
        }));
    };
    ChannelField.prototype.formatChoices = function (scopes) {
        return scopes.reduce(function (result, channel) {
            var label = channel.labels[UserContext.get('catalogLocale')];
            result[channel.code] = label !== undefined ? label : '[' + channel.code + ']';
            return result;
        }, {});
    };
    return ChannelField;
}(BaseSelect));
module.exports = ChannelField;


/***/ }),

/***/ 32098:
/*!****************************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/default-grid-views.ts ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var BaseView = __webpack_require__(/*! pimui/js/view/base */ 59904);
var DefaultProductGridView = __webpack_require__(/*! pimuser/js/fields/default-product-grid-view */ 25758);
var Routing = __webpack_require__(/*! routing */ 60847);
var DefaultGridView = (function (_super) {
    __extends(DefaultGridView, _super);
    function DefaultGridView(options) {
        var _this = _super.call(this, options) || this;
        _this.datagridAliases = [];
        _this.config = __assign(__assign({}, _this.config), options.config);
        return _this;
    }
    DefaultGridView.prototype.configure = function () {
        var _this = this;
        return $.when(BaseView.prototype.configure.apply(this, arguments), $.get(Routing.generate('pim_datagrid_view_rest_types')).then(function (datagridViewTypes) {
            _this.datagridAliases = datagridViewTypes;
        }));
    };
    DefaultGridView.prototype.render = function () {
        var _this = this;
        this.$el.html('');
        this.datagridAliases.forEach(function (datagridAlias) {
            var datagridViewSelector = new DefaultProductGridView({
                config: {
                    datagridAlias: datagridAlias,
                    fieldName: 'default_' + datagridAlias.replace(/-/g, '_') + '_view',
                    label: 'pim_user_management.entity.user.properties.default_' + datagridAlias.replace(/-/g, '_') + '_view',
                    readOnly: _this.config.readOnly,
                    choiceUrl: 'pim_datagrid_view_rest_index',
                    placeholder: 'pim_datagrid.view_selector.default_view',
                },
            });
            datagridViewSelector.configure().then(function () {
                datagridViewSelector.setParent(_this);
                _this.$el.append(datagridViewSelector.render().$el);
            });
        });
        return this;
    };
    return DefaultGridView;
}(BaseView));
module.exports = DefaultGridView;


/***/ }),

/***/ 25758:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/default-product-grid-view.ts ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/simple-select-async */ 29915);
var Routing = __webpack_require__(/*! routing */ 60847);
var DefaultProductGridView = (function (_super) {
    __extends(DefaultProductGridView, _super);
    function DefaultProductGridView(options) {
        var _this = _super.call(this, options) || this;
        _this.config = __assign(__assign({}, _this.config), options.config);
        return _this;
    }
    DefaultProductGridView.prototype.configure = function () {
        var _this = this;
        return $.when(BaseSelect.prototype.configure.apply(this, arguments)).then(function () {
            _this.setChoiceUrl(Routing.generate(_this.config.choiceUrl, { alias: _this.config.datagridAlias }));
            _this.allowClear = true;
        });
    };
    DefaultProductGridView.prototype.convertBackendItem = function (item) {
        return {
            id: parseInt(item.id),
            text: item.label,
        };
    };
    DefaultProductGridView.prototype.select2InitSelection = function (element, callback) {
        var _this = this;
        var id = $(element).val();
        if ('' !== id) {
            $.ajax({
                url: this.choiceUrl,
                data: { options: { identifiers: [id] } },
                type: this.choiceVerb,
            }).then(function (response) {
                var selected = _.findWhere(response.results, { id: parseInt(id) });
                if (undefined !== selected) {
                    callback(_this.convertBackendItem(selected));
                }
            });
        }
    };
    DefaultProductGridView.prototype.select2Results = function (response) {
        var _this = this;
        return {
            more: response.more,
            results: response.results.map(function (item) { return _this.convertBackendItem(item); }),
        };
    };
    return DefaultProductGridView;
}(BaseSelect));
module.exports = DefaultProductGridView;


/***/ }),

/***/ 21864:
/*!******************************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/product-grid-filters.ts ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var jquery_1 = __importDefault(__webpack_require__(/*! jquery */ 49845));
var i18n = __importStar(__webpack_require__(/*! pimui/js/i18n */ 86705));
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var __ = __webpack_require__(/*! oro/translator */ 16393);
var BaseMultiSelectAsync = __webpack_require__(/*! pim/form/common/fields/multi-select-async */ 48400);
var UserContext = __webpack_require__(/*! pim/user-context */ 46862);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var LineTemplate = __webpack_require__(/*! pim/template/attribute/attribute-line */ 42056);
var ProductGridFilters = (function (_super) {
    __extends(ProductGridFilters, _super);
    function ProductGridFilters() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.lineView = _.template(LineTemplate);
        _this.attributeGroups = {};
        return _this;
    }
    ProductGridFilters.prototype.configure = function () {
        var _this = this;
        this.attributeGroups = {
            system: ProductGridFilters.getSystemAttributeGroup(),
        };
        return jquery_1.default.when(BaseMultiSelectAsync.prototype.configure.apply(this, arguments), FetcherRegistry.getFetcher('attribute-group')
            .fetchAll()
            .then(function (attributeGroups) {
            _this.attributeGroups = __assign(__assign({}, _this.attributeGroups), attributeGroups);
        }));
    };
    ProductGridFilters.prototype.getSelect2Options = function () {
        var parent = BaseMultiSelectAsync.prototype.getSelect2Options.apply(this, arguments);
        parent.formatResult = this.onGetResult.bind(this);
        parent.dropdownCssClass = 'select2--annotedLabels ' + parent.dropdownCssClass;
        return parent;
    };
    ProductGridFilters.prototype.convertBackendItem = function (item) {
        var locale = UserContext.get('system' === item.group ? 'uiLocale' : 'catalogLocale');
        return {
            id: item.code,
            text: i18n.getLabel(item.labels, locale, item.code),
            group: {
                text: item.group ? i18n.getLabel(this.attributeGroups[item.group].labels, locale, item.group) : '',
            },
        };
    };
    ProductGridFilters.prototype.select2InitSelection = function (element, callback) {
        var _this = this;
        var strValues = (0, jquery_1.default)(element).val();
        var values = strValues.split(',');
        if (values.length > 0) {
            jquery_1.default.ajax({
                url: this.choiceUrl,
                data: { identifiers: strValues, options: { limit: 100 } },
                type: this.choiceVerb,
            }).then(function (response) {
                var selecteds = Object.values(response).filter(function (item) {
                    return values.indexOf(item.code) > -1;
                });
                callback(selecteds.map(function (selected) {
                    return _this.convertBackendItem(selected);
                }));
            });
        }
    };
    ProductGridFilters.getSystemAttributeGroup = function () {
        var result = { labels: {} };
        result['labels'][UserContext.get('uiLocale')] = __('pim_datagrid.filters.system');
        return result;
    };
    ProductGridFilters.prototype.onGetResult = function (item) {
        return this.lineView({ item: item });
    };
    return ProductGridFilters;
}(BaseMultiSelectAsync));
module.exports = ProductGridFilters;


/***/ }),

/***/ 95586:
/*!******************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/timezone.ts ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var formatTimezoneOffsetFromUTC = (__webpack_require__(/*! pim/user/tools/timezone-formatter */ 54331).formatTimezoneOffsetFromUTC);
var TimezoneField = (function (_super) {
    __extends(TimezoneField, _super);
    function TimezoneField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TimezoneField.prototype.configure = function () {
        BaseSelect.prototype.configure.apply(this, arguments);
        this.config.choices = {
            Africa: {
                'Africa/Abidjan': 'Abidjan',
                'Africa/Accra': 'Accra',
                'Africa/Addis_Ababa': 'Addis Ababa',
                'Africa/Algiers': 'Algiers',
                'Africa/Asmara': 'Asmara',
                'Africa/Bamako': 'Bamako',
                'Africa/Bangui': 'Bangui',
                'Africa/Banjul': 'Banjul',
                'Africa/Bissau': 'Bissau',
                'Africa/Blantyre': 'Blantyre',
                'Africa/Brazzaville': 'Brazzaville',
                'Africa/Bujumbura': 'Bujumbura',
                'Africa/Cairo': 'Cairo',
                'Africa/Casablanca': 'Casablanca',
                'Africa/Ceuta': 'Ceuta',
                'Africa/Conakry': 'Conakry',
                'Africa/Dakar': 'Dakar',
                'Africa/Dar_es_Salaam': 'Dar es Salaam',
                'Africa/Djibouti': 'Djibouti',
                'Africa/Douala': 'Douala',
                'Africa/El_Aaiun': 'El Aaiun',
                'Africa/Freetown': 'Freetown',
                'Africa/Gaborone': 'Gaborone',
                'Africa/Harare': 'Harare',
                'Africa/Johannesburg': 'Johannesburg',
                'Africa/Juba': 'Juba',
                'Africa/Kampala': 'Kampala',
                'Africa/Khartoum': 'Khartoum',
                'Africa/Kigali': 'Kigali',
                'Africa/Kinshasa': 'Kinshasa',
                'Africa/Lagos': 'Lagos',
                'Africa/Libreville': 'Libreville',
                'Africa/Lome': 'Lome',
                'Africa/Luanda': 'Luanda',
                'Africa/Lubumbashi': 'Lubumbashi',
                'Africa/Lusaka': 'Lusaka',
                'Africa/Malabo': 'Malabo',
                'Africa/Maputo': 'Maputo',
                'Africa/Maseru': 'Maseru',
                'Africa/Mbabane': 'Mbabane',
                'Africa/Mogadishu': 'Mogadishu',
                'Africa/Monrovia': 'Monrovia',
                'Africa/Nairobi': 'Nairobi',
                'Africa/Ndjamena': 'Ndjamena',
                'Africa/Niamey': 'Niamey',
                'Africa/Nouakchott': 'Nouakchott',
                'Africa/Ouagadougou': 'Ouagadougou',
                'Africa/Porto-Novo': 'Porto-Novo',
                'Africa/Sao_Tome': 'Sao Tome',
                'Africa/Tripoli': 'Tripoli',
                'Africa/Tunis': 'Tunis',
                'Africa/Windhoek': 'Windhoek',
            },
            America: {
                'America/Adak': 'Adak',
                'America/Anchorage': 'Anchorage',
                'America/Anguilla': 'Anguilla',
                'America/Antigua': 'Antigua',
                'America/Araguaina': 'Araguaina',
                'America/Argentina/Buenos_Aires': 'Argentina - Buenos Aires',
                'America/Argentina/Catamarca': 'Argentina - Catamarca',
                'America/Argentina/Cordoba': 'Argentina - Cordoba',
                'America/Argentina/Jujuy': 'Argentina - Jujuy',
                'America/Argentina/La_Rioja': 'Argentina - La Rioja',
                'America/Argentina/Mendoza': 'Argentina - Mendoza',
                'America/Argentina/Rio_Gallegos': 'Argentina - Rio Gallegos',
                'America/Argentina/Salta': 'Argentina - Salta',
                'America/Argentina/San_Juan': 'Argentina - San Juan',
                'America/Argentina/San_Luis': 'Argentina - San Luis',
                'America/Argentina/Tucuman': 'Argentina - Tucuman',
                'America/Argentina/Ushuaia': 'Argentina - Ushuaia',
                'America/Aruba': 'Aruba',
                'America/Asuncion': 'Asuncion',
                'America/Atikokan': 'Atikokan',
                'America/Bahia': 'Bahia',
                'America/Bahia_Banderas': 'Bahia Banderas',
                'America/Barbados': 'Barbados',
                'America/Belem': 'Belem',
                'America/Belize': 'Belize',
                'America/Blanc-Sablon': 'Blanc-Sablon',
                'America/Boa_Vista': 'Boa Vista',
                'America/Bogota': 'Bogota',
                'America/Boise': 'Boise',
                'America/Cambridge_Bay': 'Cambridge Bay',
                'America/Campo_Grande': 'Campo Grande',
                'America/Cancun': 'Cancun',
                'America/Caracas': 'Caracas',
                'America/Cayenne': 'Cayenne',
                'America/Cayman': 'Cayman',
                'America/Chicago': 'Chicago',
                'America/Chihuahua': 'Chihuahua',
                'America/Costa_Rica': 'Costa Rica',
                'America/Creston': 'Creston',
                'America/Cuiaba': 'Cuiaba',
                'America/Curacao': 'Curacao',
                'America/Danmarkshavn': 'Danmarkshavn',
                'America/Dawson': 'Dawson',
                'America/Dawson_Creek': 'Dawson Creek',
                'America/Denver': 'Denver',
                'America/Detroit': 'Detroit',
                'America/Dominica': 'Dominica',
                'America/Edmonton': 'Edmonton',
                'America/Eirunepe': 'Eirunepe',
                'America/El_Salvador': 'El Salvador',
                'America/Fort_Nelson': 'Fort Nelson',
                'America/Fortaleza': 'Fortaleza',
                'America/Glace_Bay': 'Glace Bay',
                'America/Godthab': 'Godthab',
                'America/Goose_Bay': 'Goose Bay',
                'America/Grand_Turk': 'Grand Turk',
                'America/Grenada': 'Grenada',
                'America/Guadeloupe': 'Guadeloupe',
                'America/Guatemala': 'Guatemala',
                'America/Guayaquil': 'Guayaquil',
                'America/Guyana': 'Guyana',
                'America/Halifax': 'Halifax',
                'America/Havana': 'Havana',
                'America/Hermosillo': 'Hermosillo',
                'America/Indiana/Indianapolis': 'Indiana - Indianapolis',
                'America/Indiana/Knox': 'Indiana - Knox',
                'America/Indiana/Marengo': 'Indiana - Marengo',
                'America/Indiana/Petersburg': 'Indiana - Petersburg',
                'America/Indiana/Tell_City': 'Indiana - Tell City',
                'America/Indiana/Vevay': 'Indiana - Vevay',
                'America/Indiana/Vincennes': 'Indiana - Vincennes',
                'America/Indiana/Winamac': 'Indiana - Winamac',
                'America/Inuvik': 'Inuvik',
                'America/Iqaluit': 'Iqaluit',
                'America/Jamaica': 'Jamaica',
                'America/Juneau': 'Juneau',
                'America/Kentucky/Louisville': 'Kentucky - Louisville',
                'America/Kentucky/Monticello': 'Kentucky - Monticello',
                'America/Kralendijk': 'Kralendijk',
                'America/La_Paz': 'La Paz',
                'America/Lima': 'Lima',
                'America/Los_Angeles': 'Los Angeles',
                'America/Lower_Princes': 'Lower Princes',
                'America/Maceio': 'Maceio',
                'America/Managua': 'Managua',
                'America/Manaus': 'Manaus',
                'America/Marigot': 'Marigot',
                'America/Martinique': 'Martinique',
                'America/Matamoros': 'Matamoros',
                'America/Mazatlan': 'Mazatlan',
                'America/Menominee': 'Menominee',
                'America/Merida': 'Merida',
                'America/Metlakatla': 'Metlakatla',
                'America/Mexico_City': 'Mexico City',
                'America/Miquelon': 'Miquelon',
                'America/Moncton': 'Moncton',
                'America/Monterrey': 'Monterrey',
                'America/Montevideo': 'Montevideo',
                'America/Montserrat': 'Montserrat',
                'America/Nassau': 'Nassau',
                'America/New_York': 'New York',
                'America/Nipigon': 'Nipigon',
                'America/Nome': 'Nome',
                'America/Noronha': 'Noronha',
                'America/North_Dakota/Beulah': 'North Dakota - Beulah',
                'America/North_Dakota/Center': 'North Dakota - Center',
                'America/North_Dakota/New_Salem': 'North Dakota - New Salem',
                'America/Ojinaga': 'Ojinaga',
                'America/Panama': 'Panama',
                'America/Pangnirtung': 'Pangnirtung',
                'America/Paramaribo': 'Paramaribo',
                'America/Phoenix': 'Phoenix',
                'America/Port-au-Prince': 'Port-au-Prince',
                'America/Port_of_Spain': 'Port of Spain',
                'America/Porto_Velho': 'Porto Velho',
                'America/Puerto_Rico': 'Puerto Rico',
                'America/Rainy_River': 'Rainy River',
                'America/Rankin_Inlet': 'Rankin Inlet',
                'America/Recife': 'Recife',
                'America/Regina': 'Regina',
                'America/Resolute': 'Resolute',
                'America/Rio_Branco': 'Rio Branco',
                'America/Santarem': 'Santarem',
                'America/Santiago': 'Santiago',
                'America/Santo_Domingo': 'Santo Domingo',
                'America/Sao_Paulo': 'Sao Paulo',
                'America/Scoresbysund': 'Scoresbysund',
                'America/Sitka': 'Sitka',
                'America/St_Barthelemy': 'St Barthelemy',
                'America/St_Johns': 'St Johns',
                'America/St_Kitts': 'St Kitts',
                'America/St_Lucia': 'St Lucia',
                'America/St_Thomas': 'St Thomas',
                'America/St_Vincent': 'St Vincent',
                'America/Swift_Current': 'Swift Current',
                'America/Tegucigalpa': 'Tegucigalpa',
                'America/Thule': 'Thule',
                'America/Thunder_Bay': 'Thunder Bay',
                'America/Tijuana': 'Tijuana',
                'America/Toronto': 'Toronto',
                'America/Tortola': 'Tortola',
                'America/Vancouver': 'Vancouver',
                'America/Whitehorse': 'Whitehorse',
                'America/Winnipeg': 'Winnipeg',
                'America/Yakutat': 'Yakutat',
                'America/Yellowknife': 'Yellowknife',
            },
            Antarctica: {
                'Antarctica/Casey': 'Casey',
                'Antarctica/Davis': 'Davis',
                'Antarctica/DumontDUrville': 'DumontDUrville',
                'Antarctica/Macquarie': 'Macquarie',
                'Antarctica/Mawson': 'Mawson',
                'Antarctica/McMurdo': 'McMurdo',
                'Antarctica/Palmer': 'Palmer',
                'Antarctica/Rothera': 'Rothera',
                'Antarctica/Syowa': 'Syowa',
                'Antarctica/Troll': 'Troll',
                'Antarctica/Vostok': 'Vostok',
            },
            Arctic: {
                'Arctic/Longyearbyen': 'Longyearbyen',
            },
            Asia: {
                'Asia/Aden': 'Aden',
                'Asia/Almaty': 'Almaty',
                'Asia/Amman': 'Amman',
                'Asia/Anadyr': 'Anadyr',
                'Asia/Aqtau': 'Aqtau',
                'Asia/Aqtobe': 'Aqtobe',
                'Asia/Ashgabat': 'Ashgabat',
                'Asia/Baghdad': 'Baghdad',
                'Asia/Bahrain': 'Bahrain',
                'Asia/Baku': 'Baku',
                'Asia/Bangkok': 'Bangkok',
                'Asia/Barnaul': 'Barnaul',
                'Asia/Beirut': 'Beirut',
                'Asia/Bishkek': 'Bishkek',
                'Asia/Brunei': 'Brunei',
                'Asia/Chita': 'Chita',
                'Asia/Choibalsan': 'Choibalsan',
                'Asia/Colombo': 'Colombo',
                'Asia/Damascus': 'Damascus',
                'Asia/Dhaka': 'Dhaka',
                'Asia/Dili': 'Dili',
                'Asia/Dubai': 'Dubai',
                'Asia/Dushanbe': 'Dushanbe',
                'Asia/Gaza': 'Gaza',
                'Asia/Hebron': 'Hebron',
                'Asia/Ho_Chi_Minh': 'Ho Chi Minh',
                'Asia/Hong_Kong': 'Hong Kong',
                'Asia/Hovd': 'Hovd',
                'Asia/Irkutsk': 'Irkutsk',
                'Asia/Jakarta': 'Jakarta',
                'Asia/Jayapura': 'Jayapura',
                'Asia/Jerusalem': 'Jerusalem',
                'Asia/Kabul': 'Kabul',
                'Asia/Kamchatka': 'Kamchatka',
                'Asia/Karachi': 'Karachi',
                'Asia/Kathmandu': 'Kathmandu',
                'Asia/Khandyga': 'Khandyga',
                'Asia/Kolkata': 'Kolkata',
                'Asia/Krasnoyarsk': 'Krasnoyarsk',
                'Asia/Kuala_Lumpur': 'Kuala Lumpur',
                'Asia/Kuching': 'Kuching',
                'Asia/Kuwait': 'Kuwait',
                'Asia/Macau': 'Macau',
                'Asia/Magadan': 'Magadan',
                'Asia/Makassar': 'Makassar',
                'Asia/Manila': 'Manila',
                'Asia/Muscat': 'Muscat',
                'Asia/Nicosia': 'Nicosia',
                'Asia/Novokuznetsk': 'Novokuznetsk',
                'Asia/Novosibirsk': 'Novosibirsk',
                'Asia/Omsk': 'Omsk',
                'Asia/Oral': 'Oral',
                'Asia/Phnom_Penh': 'Phnom Penh',
                'Asia/Pontianak': 'Pontianak',
                'Asia/Pyongyang': 'Pyongyang',
                'Asia/Qatar': 'Qatar',
                'Asia/Qyzylorda': 'Qyzylorda',
                'Asia/Rangoon': 'Rangoon',
                'Asia/Riyadh': 'Riyadh',
                'Asia/Sakhalin': 'Sakhalin',
                'Asia/Samarkand': 'Samarkand',
                'Asia/Seoul': 'Seoul',
                'Asia/Shanghai': 'Shanghai',
                'Asia/Singapore': 'Singapore',
                'Asia/Srednekolymsk': 'Srednekolymsk',
                'Asia/Taipei': 'Taipei',
                'Asia/Tashkent': 'Tashkent',
                'Asia/Tbilisi': 'Tbilisi',
                'Asia/Tehran': 'Tehran',
                'Asia/Thimphu': 'Thimphu',
                'Asia/Tokyo': 'Tokyo',
                'Asia/Tomsk': 'Tomsk',
                'Asia/Ulaanbaatar': 'Ulaanbaatar',
                'Asia/Urumqi': 'Urumqi',
                'Asia/Ust-Nera': 'Ust-Nera',
                'Asia/Vientiane': 'Vientiane',
                'Asia/Vladivostok': 'Vladivostok',
                'Asia/Yakutsk': 'Yakutsk',
                'Asia/Yekaterinburg': 'Yekaterinburg',
                'Asia/Yerevan': 'Yerevan',
            },
            Atlantic: {
                'Atlantic/Azores': 'Azores',
                'Atlantic/Bermuda': 'Bermuda',
                'Atlantic/Canary': 'Canary',
                'Atlantic/Cape_Verde': 'Cape Verde',
                'Atlantic/Faroe': 'Faroe',
                'Atlantic/Madeira': 'Madeira',
                'Atlantic/Reykjavik': 'Reykjavik',
                'Atlantic/South_Georgia': 'South Georgia',
                'Atlantic/St_Helena': 'St Helena',
                'Atlantic/Stanley': 'Stanley',
            },
            Australia: {
                'Australia/Adelaide': 'Adelaide',
                'Australia/Brisbane': 'Brisbane',
                'Australia/Broken_Hill': 'Broken Hill',
                'Australia/Currie': 'Currie',
                'Australia/Darwin': 'Darwin',
                'Australia/Eucla': 'Eucla',
                'Australia/Hobart': 'Hobart',
                'Australia/Lindeman': 'Lindeman',
                'Australia/Lord_Howe': 'Lord Howe',
                'Australia/Melbourne': 'Melbourne',
                'Australia/Perth': 'Perth',
                'Australia/Sydney': 'Sydney',
            },
            Europe: {
                'Europe/Amsterdam': 'Amsterdam',
                'Europe/Andorra': 'Andorra',
                'Europe/Astrakhan': 'Astrakhan',
                'Europe/Athens': 'Athens',
                'Europe/Belgrade': 'Belgrade',
                'Europe/Berlin': 'Berlin',
                'Europe/Bratislava': 'Bratislava',
                'Europe/Brussels': 'Brussels',
                'Europe/Bucharest': 'Bucharest',
                'Europe/Budapest': 'Budapest',
                'Europe/Busingen': 'Busingen',
                'Europe/Chisinau': 'Chisinau',
                'Europe/Copenhagen': 'Copenhagen',
                'Europe/Dublin': 'Dublin',
                'Europe/Gibraltar': 'Gibraltar',
                'Europe/Guernsey': 'Guernsey',
                'Europe/Helsinki': 'Helsinki',
                'Europe/Isle_of_Man': 'Isle of Man',
                'Europe/Istanbul': 'Istanbul',
                'Europe/Jersey': 'Jersey',
                'Europe/Kaliningrad': 'Kaliningrad',
                'Europe/Kiev': 'Kiev',
                'Europe/Kirov': 'Kirov',
                'Europe/Lisbon': 'Lisbon',
                'Europe/Ljubljana': 'Ljubljana',
                'Europe/London': 'London',
                'Europe/Luxembourg': 'Luxembourg',
                'Europe/Madrid': 'Madrid',
                'Europe/Malta': 'Malta',
                'Europe/Mariehamn': 'Mariehamn',
                'Europe/Minsk': 'Minsk',
                'Europe/Monaco': 'Monaco',
                'Europe/Moscow': 'Moscow',
                'Europe/Oslo': 'Oslo',
                'Europe/Paris': 'Paris',
                'Europe/Podgorica': 'Podgorica',
                'Europe/Prague': 'Prague',
                'Europe/Riga': 'Riga',
                'Europe/Rome': 'Rome',
                'Europe/Samara': 'Samara',
                'Europe/San_Marino': 'San Marino',
                'Europe/Sarajevo': 'Sarajevo',
                'Europe/Simferopol': 'Simferopol',
                'Europe/Skopje': 'Skopje',
                'Europe/Sofia': 'Sofia',
                'Europe/Stockholm': 'Stockholm',
                'Europe/Tallinn': 'Tallinn',
                'Europe/Tirane': 'Tirane',
                'Europe/Ulyanovsk': 'Ulyanovsk',
                'Europe/Uzhgorod': 'Uzhgorod',
                'Europe/Vaduz': 'Vaduz',
                'Europe/Vatican': 'Vatican',
                'Europe/Vienna': 'Vienna',
                'Europe/Vilnius': 'Vilnius',
                'Europe/Volgograd': 'Volgograd',
                'Europe/Warsaw': 'Warsaw',
                'Europe/Zagreb': 'Zagreb',
                'Europe/Zaporozhye': 'Zaporozhye',
                'Europe/Zurich': 'Zurich',
            },
            Indian: {
                'Indian/Antananarivo': 'Antananarivo',
                'Indian/Chagos': 'Chagos',
                'Indian/Christmas': 'Christmas',
                'Indian/Cocos': 'Cocos',
                'Indian/Comoro': 'Comoro',
                'Indian/Kerguelen': 'Kerguelen',
                'Indian/Mahe': 'Mahe',
                'Indian/Maldives': 'Maldives',
                'Indian/Mauritius': 'Mauritius',
                'Indian/Mayotte': 'Mayotte',
                'Indian/Reunion': 'Reunion',
            },
            Pacific: {
                'Pacific/Apia': 'Apia',
                'Pacific/Auckland': 'Auckland',
                'Pacific/Bougainville': 'Bougainville',
                'Pacific/Chatham': 'Chatham',
                'Pacific/Chuuk': 'Chuuk',
                'Pacific/Easter': 'Easter',
                'Pacific/Efate': 'Efate',
                'Pacific/Enderbury': 'Enderbury',
                'Pacific/Fakaofo': 'Fakaofo',
                'Pacific/Fiji': 'Fiji',
                'Pacific/Funafuti': 'Funafuti',
                'Pacific/Galapagos': 'Galapagos',
                'Pacific/Gambier': 'Gambier',
                'Pacific/Guadalcanal': 'Guadalcanal',
                'Pacific/Guam': 'Guam',
                'Pacific/Honolulu': 'Honolulu',
                'Pacific/Johnston': 'Johnston',
                'Pacific/Kiritimati': 'Kiritimati',
                'Pacific/Kosrae': 'Kosrae',
                'Pacific/Kwajalein': 'Kwajalein',
                'Pacific/Majuro': 'Majuro',
                'Pacific/Marquesas': 'Marquesas',
                'Pacific/Midway': 'Midway',
                'Pacific/Nauru': 'Nauru',
                'Pacific/Niue': 'Niue',
                'Pacific/Norfolk': 'Norfolk',
                'Pacific/Noumea': 'Noumea',
                'Pacific/Pago_Pago': 'Pago Pago',
                'Pacific/Palau': 'Palau',
                'Pacific/Pitcairn': 'Pitcairn',
                'Pacific/Pohnpei': 'Pohnpei',
                'Pacific/Port_Moresby': 'Port Moresby',
                'Pacific/Rarotonga': 'Rarotonga',
                'Pacific/Saipan': 'Saipan',
                'Pacific/Tahiti': 'Tahiti',
                'Pacific/Tarawa': 'Tarawa',
                'Pacific/Tongatapu': 'Tongatapu',
                'Pacific/Wake': 'Wake',
                'Pacific/Wallis': 'Wallis',
            },
            Other: {
                UTC: 'UTC',
            },
        };
    };
    TimezoneField.prototype.formatChoices = function (areas) {
        var _this = this;
        return Object.keys(areas).reduce(function (accumulator, area) {
            var _a;
            return (__assign(__assign({}, accumulator), (_a = {}, _a[area] = _this.formatTimeZones(areas[area]), _a)));
        }, {});
    };
    TimezoneField.prototype.formatTimeZones = function (timeZones) {
        var _this = this;
        return Object.keys(timeZones).reduce(function (accumulator, timeZone) {
            var _a;
            return (__assign(__assign({}, accumulator), (_a = {}, _a[timeZone] = timeZones[timeZone] + _this.getTimezoneContext(timeZone), _a)));
        }, {});
    };
    TimezoneField.prototype.getTimezoneContext = function (timeZone) {
        return timeZone === 'UTC' ? '' : ' (UTC' + formatTimezoneOffsetFromUTC(timeZone) + ')';
    };
    return TimezoneField;
}(BaseSelect));
module.exports = TimezoneField;


/***/ }),

/***/ 21241:
/*!*******************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/ui-locale.ts ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var UiLocaleField = (function (_super) {
    __extends(UiLocaleField, _super);
    function UiLocaleField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UiLocaleField.prototype.configure = function () {
        var _this = this;
        return $.when(BaseSelect.prototype.configure.apply(this, arguments), FetcherRegistry.getFetcher('ui-locale')
            .fetchAll()
            .then(function (locales) {
            _this.config.choices = locales;
        }));
    };
    UiLocaleField.prototype.formatChoices = function (locales) {
        return locales.reduce(function (result, locale) {
            result[locale.code] = locale.label;
            return result;
        }, {});
    };
    return UiLocaleField;
}(BaseSelect));
module.exports = UiLocaleField;


/***/ }),

/***/ 11571:
/*!********************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/user-group.ts ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var UserGroupField = (function (_super) {
    __extends(UserGroupField, _super);
    function UserGroupField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UserGroupField.prototype.configure = function () {
        var _this = this;
        return $.when(BaseSelect.prototype.configure.apply(this, arguments), FetcherRegistry.getFetcher('user-group')
            .fetchAll()
            .then(function (userGroups) {
            _this.config.choices = userGroups.filter(function (userGroup) {
                return userGroup.meta.default !== true;
            });
        }));
    };
    UserGroupField.prototype.formatChoices = function (userGroups) {
        return userGroups.reduce(function (result, userGroup) {
            result[userGroup.name] = userGroup.name;
            return result;
        }, {});
    };
    return UserGroupField;
}(BaseSelect));
module.exports = UserGroupField;


/***/ }),

/***/ 36314:
/*!*******************************************************!*\
  !*** ./public/bundles/pimuser/js/fields/user-role.ts ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var UserRoleField = (function (_super) {
    __extends(UserRoleField, _super);
    function UserRoleField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UserRoleField.prototype.configure = function () {
        var _this = this;
        return $.when(BaseSelect.prototype.configure.apply(this, arguments), FetcherRegistry.getFetcher('user-role')
            .fetchAll()
            .then(function (userRoles) {
            _this.config.choices = userRoles;
        }));
    };
    UserRoleField.prototype.formatChoices = function (userRoles) {
        return userRoles.reduce(function (result, userRole) {
            result[userRole.role] = userRole.label;
            return result;
        }, {});
    };
    return UserRoleField;
}(BaseSelect));
module.exports = UserRoleField;


/***/ }),

/***/ 98729:
/*!**************************************************************!*\
  !*** ./public/bundles/pimuser/js/form/DuplicateMenuLink.tsx ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DuplicateMenuLink = void 0;
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var akeneo_design_system_1 = __webpack_require__(/*! akeneo-design-system */ 96541);
var user_ui_1 = __webpack_require__(/*! @akeneo-pim-community/user-ui */ 63165);
var Router = __webpack_require__(/*! pim/router */ 41774);
var translate = __webpack_require__(/*! oro/translator */ 16393);
var DuplicateMenuLink = function (_a) {
    var userId = _a.userId, userCode = _a.userCode;
    var _b = (0, akeneo_design_system_1.useBooleanState)(false), isAppOpened = _b[0], openApp = _b[1], closeApp = _b[2];
    var onDuplicateSuccess = function (duplicatedUserId) {
        Router.redirect(Router.generate('pim_user_edit', { identifier: duplicatedUserId }));
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("button", { className: "AknDropdown-menuLink duplicate", onClick: openApp }, translate('pim_common.duplicate')),
        isAppOpened && (react_1.default.createElement(user_ui_1.DuplicateUserApp, { userId: userId, userCode: userCode, onCancel: closeApp, onDuplicateSuccess: onDuplicateSuccess }))));
};
exports.DuplicateMenuLink = DuplicateMenuLink;


/***/ }),

/***/ 23875:
/*!**************************************************************!*\
  !*** ./public/bundles/pimuser/js/form/create-user-button.ts ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var CreateButton = __webpack_require__(/*! pim/form/common/index/create-button */ 16483);
var FeatureFlags = __webpack_require__(/*! pim/feature-flags */ 5857);
var CreateUserButton = (function (_super) {
    __extends(CreateUserButton, _super);
    function CreateUserButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CreateUserButton.prototype.render = function () {
        if (FeatureFlags.isEnabled('free_trial')) {
            this.$el.remove();
            return this;
        }
        return _super.prototype.render.call(this);
    };
    return CreateUserButton;
}(CreateButton));
module.exports = CreateUserButton;


/***/ }),

/***/ 63091:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimuser/js/form/duplicate-secondary-action.tsx ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var react_1 = __importDefault(__webpack_require__(/*! react */ 67294));
var react_2 = __webpack_require__(/*! @akeneo-pim-community/legacy-bridge/src/bridge/react */ 74164);
var DuplicateMenuLink_1 = __webpack_require__(/*! ./DuplicateMenuLink */ 98729);
var DuplicateSecondaryAction = (function (_super) {
    __extends(DuplicateSecondaryAction, _super);
    function DuplicateSecondaryAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DuplicateSecondaryAction.prototype.reactElementToMount = function () {
        return react_1.default.createElement(DuplicateMenuLink_1.DuplicateMenuLink, { userId: this.getFormData().meta.id, userCode: this.getFormData().code });
    };
    return DuplicateSecondaryAction;
}(react_2.ReactView));
module.exports = DuplicateSecondaryAction;


/***/ }),

/***/ 17365:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimuser/js/form/fields/select-profile.ts ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var $ = __importStar(__webpack_require__(/*! jquery */ 49845));
var _ = __importStar(__webpack_require__(/*! underscore */ 13469));
var __ = __webpack_require__(/*! oro/translator */ 16393);
var BaseSelect = __webpack_require__(/*! pim/form/common/fields/select */ 71364);
var FetcherRegistry = __webpack_require__(/*! pim/fetcher-registry */ 60701);
var containerTemplate = __webpack_require__(/*! pim/templates/user/form/fields/select-profile-container */ 47151);
var SelectProfile = (function (_super) {
    __extends(SelectProfile, _super);
    function SelectProfile() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.containerTemplate = _.template(containerTemplate);
        return _this;
    }
    SelectProfile.prototype.configure = function () {
        var _this = this;
        return $.when(BaseSelect.prototype.configure.apply(this, arguments), FetcherRegistry.getFetcher('user-profiles')
            .fetchAll()
            .then(function (profiles) {
            _this.config.choices = profiles;
        }));
    };
    SelectProfile.prototype.formatChoices = function (profiles) {
        return profiles.reduce(function (result, profile) {
            result[profile.code] = __(profile.label);
            return result;
        }, {});
    };
    SelectProfile.prototype.getFieldValue = function (field) {
        return null === field.value ? '' : field.value;
    };
    return SelectProfile;
}(BaseSelect));
module.exports = SelectProfile;


/***/ }),

/***/ 41196:
/*!********************************************************************!*\
  !*** ./public/bundles/pimuser/js/form/user-profile-tab-content.ts ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseView = __webpack_require__(/*! pim/common/simple-view */ 8175);
var FeatureFlags = __webpack_require__(/*! pim/feature-flags */ 5857);
var UserProfileTabContent = (function (_super) {
    __extends(UserProfileTabContent, _super);
    function UserProfileTabContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UserProfileTabContent.prototype.configure = function () {
        if (FeatureFlags.isEnabled('free_trial')) {
            Object.values(this.extensions).forEach(function (extension) {
                extension.readOnly = true;
            });
        }
        BaseView.prototype.configure.apply(this, arguments);
    };
    return UserProfileTabContent;
}(BaseView));
module.exports = UserProfileTabContent;


/***/ }),

/***/ 54331:
/*!***************************************************************!*\
  !*** ./public/bundles/pimuser/js/tools/timezone-formatter.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatTimezoneOffsetFromUTC = void 0;
var formatTimezoneOffsetFromUTC = function (timeZone) {
    var now = new Date();
    var dateWithTimeZone = now.toLocaleString('en-US', { timeZone: timeZone });
    var dateWithLocaleTimeZone = now.toLocaleString('en-US');
    var diff = (Date.parse(dateWithLocaleTimeZone) - Date.parse(dateWithTimeZone)) / 3600000;
    var hourOffset = -(diff + now.getTimezoneOffset() / 60);
    return hourOffset >= 0 ? '+' + formatTimezoneOffset(hourOffset) : '-' + formatTimezoneOffset(hourOffset);
};
exports.formatTimezoneOffsetFromUTC = formatTimezoneOffsetFromUTC;
var formatTimezoneOffset = function (hourOffset) {
    var absHourOffset = Math.abs(hourOffset);
    var hours = Math.floor(absHourOffset);
    var minutes = (absHourOffset - hours) * 60;
    return hours.toString().padStart(2, '0') + ':' + minutes.toString().padStart(2, '0');
};


/***/ }),

/***/ 26693:
/*!**************************************************************************************!*\
  !*** ./vendor/akeneo/pim-community-dev/frontend/webpack/require-polyfill-exposed.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ___EXPOSE_LOADER_IMPORT___ = __webpack_require__(/*! -!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[7].use[1]!./require-polyfill.js */ 42219);
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = __webpack_require__(/*! ../../../../../node_modules/expose-loader/dist/runtime/getGlobalThis.js */ 27672);
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;
if (typeof ___EXPOSE_LOADER_GLOBAL_THIS___["require"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___["require"] = ___EXPOSE_LOADER_IMPORT___;
else throw new Error('[exposes-loader] The "require" value exists in the global scope, it may not be safe to overwrite it, use the "override" option')
module.exports = ___EXPOSE_LOADER_IMPORT___;


/***/ }),

/***/ 73310:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/lib/summernote/summernote.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*** IMPORTS FROM imports-loader ***/

var require = function(){};require.specified = function(){};

/**
 * Super simple wysiwyg editor on Bootstrap v0.6.16
 * http://summernote.org/
 *
 * summernote.js
 * Copyright 2013-2015 Alan Hong. and other contributors
 * summernote may be freely distributed under the MIT license./
 *
 * Date: 2015-08-03T16:41Z
 */
(function (factory) {
  /* global define */
  if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(function ($) {
  if (!Array.prototype.reduce) {
    /**
     * Array.prototype.reduce polyfill
     *
     * @param {Function} callback
     * @param {Value} [initialValue]
     * @return {Value}
     *
     * @see http://goo.gl/WNriQD
     */
    Array.prototype.reduce = function (callback) {
      var t = Object(this),
          len = t.length >>> 0,
          k = 0,
          value;

      if (arguments.length === 2) {
        value = arguments[1];
      } else {
        while (k < len && !(k in t)) {
          k++;
        }

        if (k >= len) {
          throw new TypeError('Reduce of empty array with no initial value');
        }

        value = t[k++];
      }

      for (; k < len; k++) {
        if (k in t) {
          value = callback(value, t[k], k, t);
        }
      }

      return value;
    };
  }

  if ('function' !== typeof Array.prototype.filter) {
    /**
     * Array.prototype.filter polyfill
     *
     * @param {Function} func
     * @return {Array}
     *
     * @see http://goo.gl/T1KFnq
     */
    Array.prototype.filter = function (func) {
      var t = Object(this),
          len = t.length >>> 0;
      var res = [];
      var thisArg = arguments.length >= 2 ? arguments[1] : void 0;

      for (var i = 0; i < len; i++) {
        if (i in t) {
          var val = t[i];

          if (func.call(thisArg, val, i, t)) {
            res.push(val);
          }
        }
      }

      return res;
    };
  }

  if (!Array.prototype.map) {
    /**
     * Array.prototype.map polyfill
     *
     * @param {Function} callback
     * @return {Array}
     *
     * @see https://goo.gl/SMWaMK
     */
    Array.prototype.map = function (callback, thisArg) {
      var T, A, k;

      if (this === null) {
        throw new TypeError(' this is null or not defined');
      }

      var O = Object(this);
      var len = O.length >>> 0;

      if (typeof callback !== 'function') {
        throw new TypeError(callback + ' is not a function');
      }

      if (arguments.length > 1) {
        T = thisArg;
      }

      A = new Array(len);
      k = 0;

      while (k < len) {
        var kValue, mappedValue;

        if (k in O) {
          kValue = O[k];
          mappedValue = callback.call(T, kValue, k, O);
          A[k] = mappedValue;
        }

        k++;
      }

      return A;
    };
  }

  var isSupportAmd =  true && __webpack_require__.amdO;
  /**
   * returns whether font is installed or not.
   *
   * @param {String} fontName
   * @return {Boolean}
   */

  var isFontInstalled = function isFontInstalled(fontName) {
    var testFontName = fontName === 'Comic Sans MS' ? 'Courier New' : 'Comic Sans MS';
    var $tester = $('<div>').css({
      position: 'absolute',
      left: '-9999px',
      top: '-9999px',
      fontSize: '200px'
    }).text('mmmmmmmmmwwwwwww').appendTo(document.body);
    var originalWidth = $tester.css('fontFamily', testFontName).width();
    var width = $tester.css('fontFamily', fontName + ',' + testFontName).width();
    $tester.remove();
    return originalWidth !== width;
  };

  var userAgent = navigator.userAgent;
  var isMSIE = /MSIE|Trident/i.test(userAgent);
  var browserVersion;

  if (isMSIE) {
    var matches = /MSIE (\d+[.]\d+)/.exec(userAgent);

    if (matches) {
      browserVersion = parseFloat(matches[1]);
    }

    matches = /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(userAgent);

    if (matches) {
      browserVersion = parseFloat(matches[1]);
    }
  }
  /**
   * @class core.agent
   *
   * Object which check platform and agent
   *
   * @singleton
   * @alternateClassName agent
   */


  var agent = {
    /** @property {Boolean} [isMac=false] true if this agent is Mac  */
    isMac: navigator.appVersion.indexOf('Mac') > -1,

    /** @property {Boolean} [isMSIE=false] true if this agent is a Internet Explorer  */
    isMSIE: isMSIE,

    /** @property {Boolean} [isFF=false] true if this agent is a Firefox  */
    isFF: /firefox/i.test(userAgent),
    isWebkit: /webkit/i.test(userAgent),

    /** @property {Boolean} [isSafari=false] true if this agent is a Safari  */
    isSafari: /safari/i.test(userAgent),

    /** @property {Float} browserVersion current browser version  */
    browserVersion: browserVersion,

    /** @property {String} jqueryVersion current jQuery version string  */
    jqueryVersion: parseFloat($.fn.jquery),
    isSupportAmd: isSupportAmd,
    hasCodeMirror: isSupportAmd ? require.specified('CodeMirror') : !!window.CodeMirror,
    isFontInstalled: isFontInstalled,
    isW3CRangeSupport: !!document.createRange
  };
  /**
   * @class core.func
   *
   * func utils (for high-order func's arg)
   *
   * @singleton
   * @alternateClassName func
   */

  var func = function () {
    var eq = function eq(itemA) {
      return function (itemB) {
        return itemA === itemB;
      };
    };

    var eq2 = function eq2(itemA, itemB) {
      return itemA === itemB;
    };

    var peq2 = function peq2(propName) {
      return function (itemA, itemB) {
        return itemA[propName] === itemB[propName];
      };
    };

    var ok = function ok() {
      return true;
    };

    var fail = function fail() {
      return false;
    };

    var not = function not(f) {
      return function () {
        return !f.apply(f, arguments);
      };
    };

    var and = function and(fA, fB) {
      return function (item) {
        return fA(item) && fB(item);
      };
    };

    var self = function self(a) {
      return a;
    };

    var idCounter = 0;
    /**
     * generate a globally-unique id
     *
     * @param {String} [prefix]
     */

    var uniqueId = function uniqueId(prefix) {
      var id = ++idCounter + '';
      return prefix ? prefix + id : id;
    };
    /**
     * returns bnd (bounds) from rect
     *
     * - IE Compatability Issue: http://goo.gl/sRLOAo
     * - Scroll Issue: http://goo.gl/sNjUc
     *
     * @param {Rect} rect
     * @return {Object} bounds
     * @return {Number} bounds.top
     * @return {Number} bounds.left
     * @return {Number} bounds.width
     * @return {Number} bounds.height
     */


    var rect2bnd = function rect2bnd(rect) {
      var $document = $(document);
      return {
        top: rect.top + $document.scrollTop(),
        left: rect.left + $document.scrollLeft(),
        width: rect.right - rect.left,
        height: rect.bottom - rect.top
      };
    };
    /**
     * returns a copy of the object where the keys have become the values and the values the keys.
     * @param {Object} obj
     * @return {Object}
     */


    var invertObject = function invertObject(obj) {
      var inverted = {};

      for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
          inverted[obj[key]] = key;
        }
      }

      return inverted;
    };
    /**
     * @param {String} namespace
     * @param {String} [prefix]
     * @return {String}
     */


    var namespaceToCamel = function namespaceToCamel(namespace, prefix) {
      prefix = prefix || '';
      return prefix + namespace.split('.').map(function (name) {
        return name.substring(0, 1).toUpperCase() + name.substring(1);
      }).join('');
    };

    return {
      eq: eq,
      eq2: eq2,
      peq2: peq2,
      ok: ok,
      fail: fail,
      self: self,
      not: not,
      and: and,
      uniqueId: uniqueId,
      rect2bnd: rect2bnd,
      invertObject: invertObject,
      namespaceToCamel: namespaceToCamel
    };
  }();
  /**
   * @class core.list
   *
   * list utils
   *
   * @singleton
   * @alternateClassName list
   */


  var list = function () {
    /**
     * returns the first item of an array.
     *
     * @param {Array} array
     */
    var head = function head(array) {
      return array[0];
    };
    /**
     * returns the last item of an array.
     *
     * @param {Array} array
     */


    var last = function last(array) {
      return array[array.length - 1];
    };
    /**
     * returns everything but the last entry of the array.
     *
     * @param {Array} array
     */


    var initial = function initial(array) {
      return array.slice(0, array.length - 1);
    };
    /**
     * returns the rest of the items in an array.
     *
     * @param {Array} array
     */


    var tail = function tail(array) {
      return array.slice(1);
    };
    /**
     * returns item of array
     */


    var find = function find(array, pred) {
      for (var idx = 0, len = array.length; idx < len; idx++) {
        var item = array[idx];

        if (pred(item)) {
          return item;
        }
      }
    };
    /**
     * returns true if all of the values in the array pass the predicate truth test.
     */


    var all = function all(array, pred) {
      for (var idx = 0, len = array.length; idx < len; idx++) {
        if (!pred(array[idx])) {
          return false;
        }
      }

      return true;
    };
    /**
     * returns index of item
     */


    var indexOf = function indexOf(array, item) {
      return $.inArray(item, array);
    };
    /**
     * returns true if the value is present in the list.
     */


    var contains = function contains(array, item) {
      return indexOf(array, item) !== -1;
    };
    /**
     * get sum from a list
     *
     * @param {Array} array - array
     * @param {Function} fn - iterator
     */


    var sum = function sum(array, fn) {
      fn = fn || func.self;
      return array.reduce(function (memo, v) {
        return memo + fn(v);
      }, 0);
    };
    /**
     * returns a copy of the collection with array type.
     * @param {Collection} collection - collection eg) node.childNodes, ...
     */


    var from = function from(collection) {
      var result = [],
          idx = -1,
          length = collection.length;

      while (++idx < length) {
        result[idx] = collection[idx];
      }

      return result;
    };
    /**
     * cluster elements by predicate function.
     *
     * @param {Array} array - array
     * @param {Function} fn - predicate function for cluster rule
     * @param {Array[]}
     */


    var clusterBy = function clusterBy(array, fn) {
      if (!array.length) {
        return [];
      }

      var aTail = tail(array);
      return aTail.reduce(function (memo, v) {
        var aLast = last(memo);

        if (fn(last(aLast), v)) {
          aLast[aLast.length] = v;
        } else {
          memo[memo.length] = [v];
        }

        return memo;
      }, [[head(array)]]);
    };
    /**
     * returns a copy of the array with all falsy values removed
     *
     * @param {Array} array - array
     * @param {Function} fn - predicate function for cluster rule
     */


    var compact = function compact(array) {
      var aResult = [];

      for (var idx = 0, len = array.length; idx < len; idx++) {
        if (array[idx]) {
          aResult.push(array[idx]);
        }
      }

      return aResult;
    };
    /**
     * produces a duplicate-free version of the array
     *
     * @param {Array} array
     */


    var unique = function unique(array) {
      var results = [];

      for (var idx = 0, len = array.length; idx < len; idx++) {
        if (!contains(results, array[idx])) {
          results.push(array[idx]);
        }
      }

      return results;
    };
    /**
     * returns next item.
     * @param {Array} array
     */


    var next = function next(array, item) {
      var idx = indexOf(array, item);

      if (idx === -1) {
        return null;
      }

      return array[idx + 1];
    };
    /**
     * returns prev item.
     * @param {Array} array
     */


    var prev = function prev(array, item) {
      var idx = indexOf(array, item);

      if (idx === -1) {
        return null;
      }

      return array[idx - 1];
    };

    return {
      head: head,
      last: last,
      initial: initial,
      tail: tail,
      prev: prev,
      next: next,
      find: find,
      contains: contains,
      all: all,
      sum: sum,
      from: from,
      clusterBy: clusterBy,
      compact: compact,
      unique: unique
    };
  }();

  var NBSP_CHAR = String.fromCharCode(160);
  var ZERO_WIDTH_NBSP_CHAR = "\uFEFF";
  /**
   * @class core.dom
   *
   * Dom functions
   *
   * @singleton
   * @alternateClassName dom
   */

  var dom = function () {
    /**
     * @method isEditable
     *
     * returns whether node is `note-editable` or not.
     *
     * @param {Node} node
     * @return {Boolean}
     */
    var isEditable = function isEditable(node) {
      return node && $(node).hasClass('note-editable');
    };
    /**
     * @method isControlSizing
     *
     * returns whether node is `note-control-sizing` or not.
     *
     * @param {Node} node
     * @return {Boolean}
     */


    var isControlSizing = function isControlSizing(node) {
      return node && $(node).hasClass('note-control-sizing');
    };
    /**
     * @method  buildLayoutInfo
     *
     * build layoutInfo from $editor(.note-editor)
     *
     * @param {jQuery} $editor
     * @return {Object}
     * @return {Function} return.editor
     * @return {Node} return.dropzone
     * @return {Node} return.toolbar
     * @return {Node} return.editable
     * @return {Node} return.codable
     * @return {Node} return.popover
     * @return {Node} return.handle
     * @return {Node} return.dialog
     */


    var buildLayoutInfo = function buildLayoutInfo($editor) {
      var makeFinder; // air mode

      if ($editor.hasClass('note-air-editor')) {
        var id = list.last($editor.attr('id').split('-'));

        makeFinder = function makeFinder(sIdPrefix) {
          return function () {
            return $(sIdPrefix + id);
          };
        };

        return {
          editor: function editor() {
            return $editor;
          },
          holder: function holder() {
            return $editor.data('holder');
          },
          editable: function editable() {
            return $editor;
          },
          popover: makeFinder('#note-popover-'),
          handle: makeFinder('#note-handle-'),
          dialog: makeFinder('#note-dialog-')
        }; // frame mode
      } else {
        makeFinder = function makeFinder(className, $base) {
          $base = $base || $editor;
          return function () {
            return $base.find(className);
          };
        };

        var options = $editor.data('options');
        var $dialogHolder = options && options.dialogsInBody ? $(document.body) : null;
        return {
          editor: function editor() {
            return $editor;
          },
          holder: function holder() {
            return $editor.data('holder');
          },
          dropzone: makeFinder('.note-dropzone'),
          toolbar: makeFinder('.note-toolbar'),
          editable: makeFinder('.note-editable'),
          codable: makeFinder('.note-codable'),
          statusbar: makeFinder('.note-statusbar'),
          popover: makeFinder('.note-popover'),
          handle: makeFinder('.note-handle'),
          dialog: makeFinder('.note-dialog', $dialogHolder)
        };
      }
    };
    /**
     * returns makeLayoutInfo from editor's descendant node.
     *
     * @private
     * @param {Node} descendant
     * @return {Object}
     */


    var makeLayoutInfo = function makeLayoutInfo(descendant) {
      var $target = $(descendant).closest('.note-editor, .note-air-editor, .note-air-layout');

      if (!$target.length) {
        return null;
      }

      var $editor;

      if ($target.is('.note-editor, .note-air-editor')) {
        $editor = $target;
      } else {
        $editor = $('#note-editor-' + list.last($target.attr('id').split('-')));
      }

      return buildLayoutInfo($editor);
    };
    /**
     * @method makePredByNodeName
     *
     * returns predicate which judge whether nodeName is same
     *
     * @param {String} nodeName
     * @return {Function}
     */


    var makePredByNodeName = function makePredByNodeName(nodeName) {
      nodeName = nodeName.toUpperCase();
      return function (node) {
        return node && node.nodeName.toUpperCase() === nodeName;
      };
    };
    /**
     * @method isText
     *
     *
     *
     * @param {Node} node
     * @return {Boolean} true if node's type is text(3)
     */


    var isText = function isText(node) {
      return node && node.nodeType === 3;
    };
    /**
     * ex) br, col, embed, hr, img, input, ...
     * @see http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements
     */


    var isVoid = function isVoid(node) {
      return node && /^BR|^IMG|^HR|^IFRAME|^BUTTON/.test(node.nodeName.toUpperCase());
    };

    var isPara = function isPara(node) {
      if (isEditable(node)) {
        return false;
      } // Chrome(v31.0), FF(v25.0.1) use DIV for paragraph


      return node && /^DIV|^P|^LI|^H[1-7]/.test(node.nodeName.toUpperCase());
    };

    var isLi = makePredByNodeName('LI');

    var isPurePara = function isPurePara(node) {
      return isPara(node) && !isLi(node);
    };

    var isTable = makePredByNodeName('TABLE');

    var isInline = function isInline(node) {
      return !isBodyContainer(node) && !isList(node) && !isHr(node) && !isPara(node) && !isTable(node) && !isBlockquote(node);
    };

    var isList = function isList(node) {
      return node && /^UL|^OL/.test(node.nodeName.toUpperCase());
    };

    var isHr = makePredByNodeName('HR');

    var isCell = function isCell(node) {
      return node && /^TD|^TH/.test(node.nodeName.toUpperCase());
    };

    var isBlockquote = makePredByNodeName('BLOCKQUOTE');

    var isBodyContainer = function isBodyContainer(node) {
      return isCell(node) || isBlockquote(node) || isEditable(node);
    };

    var isAnchor = makePredByNodeName('A');

    var isParaInline = function isParaInline(node) {
      return isInline(node) && !!ancestor(node, isPara);
    };

    var isBodyInline = function isBodyInline(node) {
      return isInline(node) && !ancestor(node, isPara);
    };

    var isBody = makePredByNodeName('BODY');
    /**
     * returns whether nodeB is closest sibling of nodeA
     *
     * @param {Node} nodeA
     * @param {Node} nodeB
     * @return {Boolean}
     */

    var isClosestSibling = function isClosestSibling(nodeA, nodeB) {
      return nodeA.nextSibling === nodeB || nodeA.previousSibling === nodeB;
    };
    /**
     * returns array of closest siblings with node
     *
     * @param {Node} node
     * @param {function} [pred] - predicate function
     * @return {Node[]}
     */


    var withClosestSiblings = function withClosestSiblings(node, pred) {
      pred = pred || func.ok;
      var siblings = [];

      if (node.previousSibling && pred(node.previousSibling)) {
        siblings.push(node.previousSibling);
      }

      siblings.push(node);

      if (node.nextSibling && pred(node.nextSibling)) {
        siblings.push(node.nextSibling);
      }

      return siblings;
    };
    /**
     * blank HTML for cursor position
     * - [workaround] old IE only works with &nbsp;
     * - [workaround] IE11 and other browser works with bogus br
     */


    var blankHTML = agent.isMSIE && agent.browserVersion < 11 ? '&nbsp;' : '<br>';
    /**
     * @method nodeLength
     *
     * returns #text's text size or element's childNodes size
     *
     * @param {Node} node
     */

    var nodeLength = function nodeLength(node) {
      if (isText(node)) {
        return node.nodeValue.length;
      }

      return node.childNodes.length;
    };
    /**
     * returns whether node is empty or not.
     *
     * @param {Node} node
     * @return {Boolean}
     */


    var isEmpty = function isEmpty(node) {
      var len = nodeLength(node);

      if (len === 0) {
        return true;
      } else if (!isText(node) && len === 1 && node.innerHTML === blankHTML) {
        // ex) <p><br></p>, <span><br></span>
        return true;
      } else if (list.all(node.childNodes, isText) && node.innerHTML === '') {
        // ex) <p></p>, <span></span>
        return true;
      }

      return false;
    };
    /**
     * padding blankHTML if node is empty (for cursor position)
     */


    var paddingBlankHTML = function paddingBlankHTML(node) {
      if (!isVoid(node) && !nodeLength(node)) {
        node.innerHTML = blankHTML;
      }
    };
    /**
     * find nearest ancestor predicate hit
     *
     * @param {Node} node
     * @param {Function} pred - predicate function
     */


    var ancestor = function ancestor(node, pred) {
      while (node) {
        if (pred(node)) {
          return node;
        }

        if (isEditable(node)) {
          break;
        }

        node = node.parentNode;
      }

      return null;
    };
    /**
     * find nearest ancestor only single child blood line and predicate hit
     *
     * @param {Node} node
     * @param {Function} pred - predicate function
     */


    var singleChildAncestor = function singleChildAncestor(node, pred) {
      node = node.parentNode;

      while (node) {
        if (nodeLength(node) !== 1) {
          break;
        }

        if (pred(node)) {
          return node;
        }

        if (isEditable(node)) {
          break;
        }

        node = node.parentNode;
      }

      return null;
    };
    /**
     * returns new array of ancestor nodes (until predicate hit).
     *
     * @param {Node} node
     * @param {Function} [optional] pred - predicate function
     */


    var listAncestor = function listAncestor(node, pred) {
      pred = pred || func.fail;
      var ancestors = [];
      ancestor(node, function (el) {
        if (!isEditable(el)) {
          ancestors.push(el);
        }

        return pred(el);
      });
      return ancestors;
    };
    /**
     * find farthest ancestor predicate hit
     */


    var lastAncestor = function lastAncestor(node, pred) {
      var ancestors = listAncestor(node);
      return list.last(ancestors.filter(pred));
    };
    /**
     * returns common ancestor node between two nodes.
     *
     * @param {Node} nodeA
     * @param {Node} nodeB
     */


    var commonAncestor = function commonAncestor(nodeA, nodeB) {
      var ancestors = listAncestor(nodeA);

      for (var n = nodeB; n; n = n.parentNode) {
        if ($.inArray(n, ancestors) > -1) {
          return n;
        }
      }

      return null; // difference document area
    };
    /**
     * listing all previous siblings (until predicate hit).
     *
     * @param {Node} node
     * @param {Function} [optional] pred - predicate function
     */


    var listPrev = function listPrev(node, pred) {
      pred = pred || func.fail;
      var nodes = [];

      while (node) {
        if (pred(node)) {
          break;
        }

        nodes.push(node);
        node = node.previousSibling;
      }

      return nodes;
    };
    /**
     * listing next siblings (until predicate hit).
     *
     * @param {Node} node
     * @param {Function} [pred] - predicate function
     */


    var listNext = function listNext(node, pred) {
      pred = pred || func.fail;
      var nodes = [];

      while (node) {
        if (pred(node)) {
          break;
        }

        nodes.push(node);
        node = node.nextSibling;
      }

      return nodes;
    };
    /**
     * listing descendant nodes
     *
     * @param {Node} node
     * @param {Function} [pred] - predicate function
     */


    var listDescendant = function listDescendant(node, pred) {
      var descendents = [];
      pred = pred || func.ok; // start DFS(depth first search) with node

      (function fnWalk(current) {
        if (node !== current && pred(current)) {
          descendents.push(current);
        }

        for (var idx = 0, len = current.childNodes.length; idx < len; idx++) {
          fnWalk(current.childNodes[idx]);
        }
      })(node);

      return descendents;
    };
    /**
     * wrap node with new tag.
     *
     * @param {Node} node
     * @param {Node} tagName of wrapper
     * @return {Node} - wrapper
     */


    var wrap = function wrap(node, wrapperName) {
      var parent = node.parentNode;
      var wrapper = $('<' + wrapperName + '>')[0];
      parent.insertBefore(wrapper, node);
      wrapper.appendChild(node);
      return wrapper;
    };
    /**
     * insert node after preceding
     *
     * @param {Node} node
     * @param {Node} preceding - predicate function
     */


    var insertAfter = function insertAfter(node, preceding) {
      var next = preceding.nextSibling,
          parent = preceding.parentNode;

      if (next) {
        parent.insertBefore(node, next);
      } else {
        parent.appendChild(node);
      }

      return node;
    };
    /**
     * append elements.
     *
     * @param {Node} node
     * @param {Collection} aChild
     */


    var appendChildNodes = function appendChildNodes(node, aChild) {
      $.each(aChild, function (idx, child) {
        node.appendChild(child);
      });
      return node;
    };
    /**
     * returns whether boundaryPoint is left edge or not.
     *
     * @param {BoundaryPoint} point
     * @return {Boolean}
     */


    var isLeftEdgePoint = function isLeftEdgePoint(point) {
      return point.offset === 0;
    };
    /**
     * returns whether boundaryPoint is right edge or not.
     *
     * @param {BoundaryPoint} point
     * @return {Boolean}
     */


    var isRightEdgePoint = function isRightEdgePoint(point) {
      return point.offset === nodeLength(point.node);
    };
    /**
     * returns whether boundaryPoint is edge or not.
     *
     * @param {BoundaryPoint} point
     * @return {Boolean}
     */


    var isEdgePoint = function isEdgePoint(point) {
      return isLeftEdgePoint(point) || isRightEdgePoint(point);
    };
    /**
     * returns wheter node is left edge of ancestor or not.
     *
     * @param {Node} node
     * @param {Node} ancestor
     * @return {Boolean}
     */


    var isLeftEdgeOf = function isLeftEdgeOf(node, ancestor) {
      while (node && node !== ancestor) {
        if (position(node) !== 0) {
          return false;
        }

        node = node.parentNode;
      }

      return true;
    };
    /**
     * returns whether node is right edge of ancestor or not.
     *
     * @param {Node} node
     * @param {Node} ancestor
     * @return {Boolean}
     */


    var isRightEdgeOf = function isRightEdgeOf(node, ancestor) {
      while (node && node !== ancestor) {
        if (position(node) !== nodeLength(node.parentNode) - 1) {
          return false;
        }

        node = node.parentNode;
      }

      return true;
    };
    /**
     * returns whether point is left edge of ancestor or not.
     * @param {BoundaryPoint} point
     * @param {Node} ancestor
     * @return {Boolean}
     */


    var isLeftEdgePointOf = function isLeftEdgePointOf(point, ancestor) {
      return isLeftEdgePoint(point) && isLeftEdgeOf(point.node, ancestor);
    };
    /**
     * returns whether point is right edge of ancestor or not.
     * @param {BoundaryPoint} point
     * @param {Node} ancestor
     * @return {Boolean}
     */


    var isRightEdgePointOf = function isRightEdgePointOf(point, ancestor) {
      return isRightEdgePoint(point) && isRightEdgeOf(point.node, ancestor);
    };
    /**
     * returns offset from parent.
     *
     * @param {Node} node
     */


    var position = function position(node) {
      var offset = 0;

      while (node = node.previousSibling) {
        offset += 1;
      }

      return offset;
    };

    var hasChildren = function hasChildren(node) {
      return !!(node && node.childNodes && node.childNodes.length);
    };
    /**
     * returns previous boundaryPoint
     *
     * @param {BoundaryPoint} point
     * @param {Boolean} isSkipInnerOffset
     * @return {BoundaryPoint}
     */


    var prevPoint = function prevPoint(point, isSkipInnerOffset) {
      var node, offset;

      if (point.offset === 0) {
        if (isEditable(point.node)) {
          return null;
        }

        node = point.node.parentNode;
        offset = position(point.node);
      } else if (hasChildren(point.node)) {
        node = point.node.childNodes[point.offset - 1];
        offset = nodeLength(node);
      } else {
        node = point.node;
        offset = isSkipInnerOffset ? 0 : point.offset - 1;
      }

      return {
        node: node,
        offset: offset
      };
    };
    /**
     * returns next boundaryPoint
     *
     * @param {BoundaryPoint} point
     * @param {Boolean} isSkipInnerOffset
     * @return {BoundaryPoint}
     */


    var nextPoint = function nextPoint(point, isSkipInnerOffset) {
      var node, offset;

      if (nodeLength(point.node) === point.offset) {
        if (isEditable(point.node)) {
          return null;
        }

        node = point.node.parentNode;
        offset = position(point.node) + 1;
      } else if (hasChildren(point.node)) {
        node = point.node.childNodes[point.offset];
        offset = 0;
      } else {
        node = point.node;
        offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;
      }

      return {
        node: node,
        offset: offset
      };
    };
    /**
     * returns whether pointA and pointB is same or not.
     *
     * @param {BoundaryPoint} pointA
     * @param {BoundaryPoint} pointB
     * @return {Boolean}
     */


    var isSamePoint = function isSamePoint(pointA, pointB) {
      return pointA.node === pointB.node && pointA.offset === pointB.offset;
    };
    /**
     * returns whether point is visible (can set cursor) or not.
     *
     * @param {BoundaryPoint} point
     * @return {Boolean}
     */


    var isVisiblePoint = function isVisiblePoint(point) {
      if (isText(point.node) || !hasChildren(point.node) || isEmpty(point.node)) {
        return true;
      }

      var leftNode = point.node.childNodes[point.offset - 1];
      var rightNode = point.node.childNodes[point.offset];

      if ((!leftNode || isVoid(leftNode)) && (!rightNode || isVoid(rightNode))) {
        return true;
      }

      return false;
    };
    /**
     * @method prevPointUtil
     *
     * @param {BoundaryPoint} point
     * @param {Function} pred
     * @return {BoundaryPoint}
     */


    var prevPointUntil = function prevPointUntil(point, pred) {
      while (point) {
        if (pred(point)) {
          return point;
        }

        point = prevPoint(point);
      }

      return null;
    };
    /**
     * @method nextPointUntil
     *
     * @param {BoundaryPoint} point
     * @param {Function} pred
     * @return {BoundaryPoint}
     */


    var nextPointUntil = function nextPointUntil(point, pred) {
      while (point) {
        if (pred(point)) {
          return point;
        }

        point = nextPoint(point);
      }

      return null;
    };
    /**
     * returns whether point has character or not.
     *
     * @param {Point} point
     * @return {Boolean}
     */


    var isCharPoint = function isCharPoint(point) {
      if (!isText(point.node)) {
        return false;
      }

      var ch = point.node.nodeValue.charAt(point.offset - 1);
      return ch && ch !== ' ' && ch !== NBSP_CHAR;
    };
    /**
     * @method walkPoint
     *
     * @param {BoundaryPoint} startPoint
     * @param {BoundaryPoint} endPoint
     * @param {Function} handler
     * @param {Boolean} isSkipInnerOffset
     */


    var walkPoint = function walkPoint(startPoint, endPoint, handler, isSkipInnerOffset) {
      var point = startPoint;

      while (point) {
        handler(point);

        if (isSamePoint(point, endPoint)) {
          break;
        }

        var isSkipOffset = isSkipInnerOffset && startPoint.node !== point.node && endPoint.node !== point.node;
        point = nextPoint(point, isSkipOffset);
      }
    };
    /**
     * @method makeOffsetPath
     *
     * return offsetPath(array of offset) from ancestor
     *
     * @param {Node} ancestor - ancestor node
     * @param {Node} node
     */


    var makeOffsetPath = function makeOffsetPath(ancestor, node) {
      var ancestors = listAncestor(node, func.eq(ancestor));
      return ancestors.map(position).reverse();
    };
    /**
     * @method fromOffsetPath
     *
     * return element from offsetPath(array of offset)
     *
     * @param {Node} ancestor - ancestor node
     * @param {array} offsets - offsetPath
     */


    var fromOffsetPath = function fromOffsetPath(ancestor, offsets) {
      var current = ancestor;

      for (var i = 0, len = offsets.length; i < len; i++) {
        if (current.childNodes.length <= offsets[i]) {
          current = current.childNodes[current.childNodes.length - 1];
        } else {
          current = current.childNodes[offsets[i]];
        }
      }

      return current;
    };
    /**
     * @method splitNode
     *
     * split element or #text
     *
     * @param {BoundaryPoint} point
     * @param {Object} [options]
     * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false
     * @param {Boolean} [options.isNotSplitEdgePoint] - default: false
     * @return {Node} right node of boundaryPoint
     */


    var splitNode = function splitNode(point, options) {
      var isSkipPaddingBlankHTML = options && options.isSkipPaddingBlankHTML;
      var isNotSplitEdgePoint = options && options.isNotSplitEdgePoint; // edge case

      if (isEdgePoint(point) && (isText(point.node) || isNotSplitEdgePoint)) {
        if (isLeftEdgePoint(point)) {
          return point.node;
        } else if (isRightEdgePoint(point)) {
          return point.node.nextSibling;
        }
      } // split #text


      if (isText(point.node)) {
        return point.node.splitText(point.offset);
      } else {
        var childNode = point.node.childNodes[point.offset];
        var clone = insertAfter(point.node.cloneNode(false), point.node);
        appendChildNodes(clone, listNext(childNode));

        if (!isSkipPaddingBlankHTML) {
          paddingBlankHTML(point.node);
          paddingBlankHTML(clone);
        }

        return clone;
      }
    };
    /**
     * @method splitTree
     *
     * split tree by point
     *
     * @param {Node} root - split root
     * @param {BoundaryPoint} point
     * @param {Object} [options]
     * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false
     * @param {Boolean} [options.isNotSplitEdgePoint] - default: false
     * @return {Node} right node of boundaryPoint
     */


    var splitTree = function splitTree(root, point, options) {
      // ex) [#text, <span>, <p>]
      var ancestors = listAncestor(point.node, func.eq(root));

      if (!ancestors.length) {
        return null;
      } else if (ancestors.length === 1) {
        return splitNode(point, options);
      }

      return ancestors.reduce(function (node, parent) {
        if (node === point.node) {
          node = splitNode(point, options);
        }

        return splitNode({
          node: parent,
          offset: node ? dom.position(node) : nodeLength(parent)
        }, options);
      });
    };
    /**
     * split point
     *
     * @param {Point} point
     * @param {Boolean} isInline
     * @return {Object}
     */


    var splitPoint = function splitPoint(point, isInline) {
      // find splitRoot, container
      //  - inline: splitRoot is a child of paragraph
      //  - block: splitRoot is a child of bodyContainer
      var pred = isInline ? isPara : isBodyContainer;
      var ancestors = listAncestor(point.node, pred);
      var topAncestor = list.last(ancestors) || point.node;
      var splitRoot, container;

      if (pred(topAncestor)) {
        splitRoot = ancestors[ancestors.length - 2];
        container = topAncestor;
      } else {
        splitRoot = topAncestor;
        container = splitRoot.parentNode;
      } // if splitRoot is exists, split with splitTree


      var pivot = splitRoot && splitTree(splitRoot, point, {
        isSkipPaddingBlankHTML: isInline,
        isNotSplitEdgePoint: isInline
      }); // if container is point.node, find pivot with point.offset

      if (!pivot && container === point.node) {
        pivot = point.node.childNodes[point.offset];
      }

      return {
        rightNode: pivot,
        container: container
      };
    };

    var create = function create(nodeName) {
      return document.createElement(nodeName);
    };

    var createText = function createText(text) {
      return document.createTextNode(text);
    };
    /**
     * @method remove
     *
     * remove node, (isRemoveChild: remove child or not)
     *
     * @param {Node} node
     * @param {Boolean} isRemoveChild
     */


    var remove = function remove(node, isRemoveChild) {
      if (!node || !node.parentNode) {
        return;
      }

      if (node.removeNode) {
        return node.removeNode(isRemoveChild);
      }

      var parent = node.parentNode;

      if (!isRemoveChild) {
        var nodes = [];
        var i, len;

        for (i = 0, len = node.childNodes.length; i < len; i++) {
          nodes.push(node.childNodes[i]);
        }

        for (i = 0, len = nodes.length; i < len; i++) {
          parent.insertBefore(nodes[i], node);
        }
      }

      parent.removeChild(node);
    };
    /**
     * @method removeWhile
     *
     * @param {Node} node
     * @param {Function} pred
     */


    var removeWhile = function removeWhile(node, pred) {
      while (node) {
        if (isEditable(node) || !pred(node)) {
          break;
        }

        var parent = node.parentNode;
        remove(node);
        node = parent;
      }
    };
    /**
     * @method replace
     *
     * replace node with provided nodeName
     *
     * @param {Node} node
     * @param {String} nodeName
     * @return {Node} - new node
     */


    var replace = function replace(node, nodeName) {
      if (node.nodeName.toUpperCase() === nodeName.toUpperCase()) {
        return node;
      }

      var newNode = create(nodeName);

      if (node.style.cssText) {
        newNode.style.cssText = node.style.cssText;
      }

      appendChildNodes(newNode, list.from(node.childNodes));
      insertAfter(newNode, node);
      remove(node);
      return newNode;
    };

    var isTextarea = makePredByNodeName('TEXTAREA');
    /**
     * @param {jQuery} $node
     * @param {Boolean} [stripLinebreaks] - default: false
     */

    var value = function value($node, stripLinebreaks) {
      var val = isTextarea($node[0]) ? $node.val() : $node.html();

      if (stripLinebreaks) {
        return val.replace(/[\n\r]/g, '');
      }

      return val;
    };
    /**
     * @method html
     *
     * get the HTML contents of node
     *
     * @param {jQuery} $node
     * @param {Boolean} [isNewlineOnBlock]
     */


    var html = function html($node, isNewlineOnBlock) {
      var markup = value($node);

      if (isNewlineOnBlock) {
        var regexTag = /<(\/?)(\b(?!!)[^>\s]*)(.*?)(\s*\/?>)/g;
        markup = markup.replace(regexTag, function (match, endSlash, name) {
          name = name.toUpperCase();
          var isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) && !!endSlash;
          var isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);
          return match + (isEndOfInlineContainer || isBlockNode ? '\n' : '');
        });
        markup = $.trim(markup);
      }

      return markup;
    };

    return {
      /** @property {String} NBSP_CHAR */
      NBSP_CHAR: NBSP_CHAR,

      /** @property {String} ZERO_WIDTH_NBSP_CHAR */
      ZERO_WIDTH_NBSP_CHAR: ZERO_WIDTH_NBSP_CHAR,

      /** @property {String} blank */
      blank: blankHTML,

      /** @property {String} emptyPara */
      emptyPara: '<p>' + blankHTML + '</p>',
      makePredByNodeName: makePredByNodeName,
      isEditable: isEditable,
      isControlSizing: isControlSizing,
      buildLayoutInfo: buildLayoutInfo,
      makeLayoutInfo: makeLayoutInfo,
      isText: isText,
      isVoid: isVoid,
      isPara: isPara,
      isPurePara: isPurePara,
      isInline: isInline,
      isBlock: func.not(isInline),
      isBodyInline: isBodyInline,
      isBody: isBody,
      isParaInline: isParaInline,
      isList: isList,
      isTable: isTable,
      isCell: isCell,
      isBlockquote: isBlockquote,
      isBodyContainer: isBodyContainer,
      isAnchor: isAnchor,
      isDiv: makePredByNodeName('DIV'),
      isLi: isLi,
      isBR: makePredByNodeName('BR'),
      isSpan: makePredByNodeName('SPAN'),
      isB: makePredByNodeName('B'),
      isU: makePredByNodeName('U'),
      isS: makePredByNodeName('S'),
      isI: makePredByNodeName('I'),
      isImg: makePredByNodeName('IMG'),
      isTextarea: isTextarea,
      isEmpty: isEmpty,
      isEmptyAnchor: func.and(isAnchor, isEmpty),
      isClosestSibling: isClosestSibling,
      withClosestSiblings: withClosestSiblings,
      nodeLength: nodeLength,
      isLeftEdgePoint: isLeftEdgePoint,
      isRightEdgePoint: isRightEdgePoint,
      isEdgePoint: isEdgePoint,
      isLeftEdgeOf: isLeftEdgeOf,
      isRightEdgeOf: isRightEdgeOf,
      isLeftEdgePointOf: isLeftEdgePointOf,
      isRightEdgePointOf: isRightEdgePointOf,
      prevPoint: prevPoint,
      nextPoint: nextPoint,
      isSamePoint: isSamePoint,
      isVisiblePoint: isVisiblePoint,
      prevPointUntil: prevPointUntil,
      nextPointUntil: nextPointUntil,
      isCharPoint: isCharPoint,
      walkPoint: walkPoint,
      ancestor: ancestor,
      singleChildAncestor: singleChildAncestor,
      listAncestor: listAncestor,
      lastAncestor: lastAncestor,
      listNext: listNext,
      listPrev: listPrev,
      listDescendant: listDescendant,
      commonAncestor: commonAncestor,
      wrap: wrap,
      insertAfter: insertAfter,
      appendChildNodes: appendChildNodes,
      position: position,
      hasChildren: hasChildren,
      makeOffsetPath: makeOffsetPath,
      fromOffsetPath: fromOffsetPath,
      splitTree: splitTree,
      splitPoint: splitPoint,
      create: create,
      createText: createText,
      remove: remove,
      removeWhile: removeWhile,
      replace: replace,
      html: html,
      value: value
    };
  }();

  var range = function () {
    /**
     * return boundaryPoint from TextRange, inspired by Andy Na's HuskyRange.js
     *
     * @param {TextRange} textRange
     * @param {Boolean} isStart
     * @return {BoundaryPoint}
     *
     * @see http://msdn.microsoft.com/en-us/library/ie/ms535872(v=vs.85).aspx
     */
    var textRangeToPoint = function textRangeToPoint(textRange, isStart) {
      var container = textRange.parentElement(),
          offset;
      var tester = document.body.createTextRange(),
          prevContainer;
      var childNodes = list.from(container.childNodes);

      for (offset = 0; offset < childNodes.length; offset++) {
        if (dom.isText(childNodes[offset])) {
          continue;
        }

        tester.moveToElementText(childNodes[offset]);

        if (tester.compareEndPoints('StartToStart', textRange) >= 0) {
          break;
        }

        prevContainer = childNodes[offset];
      }

      if (offset !== 0 && dom.isText(childNodes[offset - 1])) {
        var textRangeStart = document.body.createTextRange(),
            curTextNode = null;
        textRangeStart.moveToElementText(prevContainer || container);
        textRangeStart.collapse(!prevContainer);
        curTextNode = prevContainer ? prevContainer.nextSibling : container.firstChild;
        var pointTester = textRange.duplicate();
        pointTester.setEndPoint('StartToStart', textRangeStart);
        var textCount = pointTester.text.replace(/[\r\n]/g, '').length;

        while (textCount > curTextNode.nodeValue.length && curTextNode.nextSibling) {
          textCount -= curTextNode.nodeValue.length;
          curTextNode = curTextNode.nextSibling;
        }
        /* jshint ignore:start */


        var dummy = curTextNode.nodeValue; // enforce IE to re-reference curTextNode, hack

        /* jshint ignore:end */

        if (isStart && curTextNode.nextSibling && dom.isText(curTextNode.nextSibling) && textCount === curTextNode.nodeValue.length) {
          textCount -= curTextNode.nodeValue.length;
          curTextNode = curTextNode.nextSibling;
        }

        container = curTextNode;
        offset = textCount;
      }

      return {
        cont: container,
        offset: offset
      };
    };
    /**
     * return TextRange from boundary point (inspired by google closure-library)
     * @param {BoundaryPoint} point
     * @return {TextRange}
     */


    var pointToTextRange = function pointToTextRange(point) {
      var textRangeInfo = function textRangeInfo(container, offset) {
        var node, isCollapseToStart;

        if (dom.isText(container)) {
          var prevTextNodes = dom.listPrev(container, func.not(dom.isText));
          var prevContainer = list.last(prevTextNodes).previousSibling;
          node = prevContainer || container.parentNode;
          offset += list.sum(list.tail(prevTextNodes), dom.nodeLength);
          isCollapseToStart = !prevContainer;
        } else {
          node = container.childNodes[offset] || container;

          if (dom.isText(node)) {
            return textRangeInfo(node, 0);
          }

          offset = 0;
          isCollapseToStart = false;
        }

        return {
          node: node,
          collapseToStart: isCollapseToStart,
          offset: offset
        };
      };

      var textRange = document.body.createTextRange();
      var info = textRangeInfo(point.node, point.offset);
      textRange.moveToElementText(info.node);
      textRange.collapse(info.collapseToStart);
      textRange.moveStart('character', info.offset);
      return textRange;
    };
    /**
     * Wrapped Range
     *
     * @constructor
     * @param {Node} sc - start container
     * @param {Number} so - start offset
     * @param {Node} ec - end container
     * @param {Number} eo - end offset
     */


    var WrappedRange = function WrappedRange(sc, so, ec, eo) {
      this.sc = sc;
      this.so = so;
      this.ec = ec;
      this.eo = eo; // nativeRange: get nativeRange from sc, so, ec, eo

      var nativeRange = function nativeRange() {
        if (agent.isW3CRangeSupport) {
          var w3cRange = document.createRange();
          w3cRange.setStart(sc, so);
          w3cRange.setEnd(ec, eo);
          return w3cRange;
        } else {
          var textRange = pointToTextRange({
            node: sc,
            offset: so
          });
          textRange.setEndPoint('EndToEnd', pointToTextRange({
            node: ec,
            offset: eo
          }));
          return textRange;
        }
      };

      this.getPoints = function () {
        return {
          sc: sc,
          so: so,
          ec: ec,
          eo: eo
        };
      };

      this.getStartPoint = function () {
        return {
          node: sc,
          offset: so
        };
      };

      this.getEndPoint = function () {
        return {
          node: ec,
          offset: eo
        };
      };
      /**
       * select update visible range
       */


      this.select = function () {
        var nativeRng = nativeRange();

        if (agent.isW3CRangeSupport) {
          var selection = document.getSelection();

          if (selection.rangeCount > 0) {
            selection.removeAllRanges();
          }

          selection.addRange(nativeRng);
        } else {
          nativeRng.select();
        }

        return this;
      };
      /**
       * @return {WrappedRange}
       */


      this.normalize = function () {
        /**
         * @param {BoundaryPoint} point
         * @param {Boolean} isLeftToRight
         * @return {BoundaryPoint}
         */
        var getVisiblePoint = function getVisiblePoint(point, isLeftToRight) {
          if (dom.isVisiblePoint(point) && !dom.isEdgePoint(point) || dom.isVisiblePoint(point) && dom.isRightEdgePoint(point) && !isLeftToRight || dom.isVisiblePoint(point) && dom.isLeftEdgePoint(point) && isLeftToRight || dom.isVisiblePoint(point) && dom.isBlock(point.node) && dom.isEmpty(point.node)) {
            return point;
          } // point on block's edge


          var block = dom.ancestor(point.node, dom.isBlock);

          if ((dom.isLeftEdgePointOf(point, block) || dom.isVoid(dom.prevPoint(point).node)) && !isLeftToRight || (dom.isRightEdgePointOf(point, block) || dom.isVoid(dom.nextPoint(point).node)) && isLeftToRight) {
            // returns point already on visible point
            if (dom.isVisiblePoint(point)) {
              return point;
            } // reverse direction


            isLeftToRight = !isLeftToRight;
          }

          var nextPoint = isLeftToRight ? dom.nextPointUntil(dom.nextPoint(point), dom.isVisiblePoint) : dom.prevPointUntil(dom.prevPoint(point), dom.isVisiblePoint);
          return nextPoint || point;
        };

        var endPoint = getVisiblePoint(this.getEndPoint(), false);
        var startPoint = this.isCollapsed() ? endPoint : getVisiblePoint(this.getStartPoint(), true);
        return new WrappedRange(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset);
      };
      /**
       * returns matched nodes on range
       *
       * @param {Function} [pred] - predicate function
       * @param {Object} [options]
       * @param {Boolean} [options.includeAncestor]
       * @param {Boolean} [options.fullyContains]
       * @return {Node[]}
       */


      this.nodes = function (pred, options) {
        pred = pred || func.ok;
        var includeAncestor = options && options.includeAncestor;
        var fullyContains = options && options.fullyContains; // TODO compare points and sort

        var startPoint = this.getStartPoint();
        var endPoint = this.getEndPoint();
        var nodes = [];
        var leftEdgeNodes = [];
        dom.walkPoint(startPoint, endPoint, function (point) {
          if (dom.isEditable(point.node)) {
            return;
          }

          var node;

          if (fullyContains) {
            if (dom.isLeftEdgePoint(point)) {
              leftEdgeNodes.push(point.node);
            }

            if (dom.isRightEdgePoint(point) && list.contains(leftEdgeNodes, point.node)) {
              node = point.node;
            }
          } else if (includeAncestor) {
            node = dom.ancestor(point.node, pred);
          } else {
            node = point.node;
          }

          if (node && pred(node)) {
            nodes.push(node);
          }
        }, true);
        return list.unique(nodes);
      };
      /**
       * returns commonAncestor of range
       * @return {Element} - commonAncestor
       */


      this.commonAncestor = function () {
        return dom.commonAncestor(sc, ec);
      };
      /**
       * returns expanded range by pred
       *
       * @param {Function} pred - predicate function
       * @return {WrappedRange}
       */


      this.expand = function (pred) {
        var startAncestor = dom.ancestor(sc, pred);
        var endAncestor = dom.ancestor(ec, pred);

        if (!startAncestor && !endAncestor) {
          return new WrappedRange(sc, so, ec, eo);
        }

        var boundaryPoints = this.getPoints();

        if (startAncestor) {
          boundaryPoints.sc = startAncestor;
          boundaryPoints.so = 0;
        }

        if (endAncestor) {
          boundaryPoints.ec = endAncestor;
          boundaryPoints.eo = dom.nodeLength(endAncestor);
        }

        return new WrappedRange(boundaryPoints.sc, boundaryPoints.so, boundaryPoints.ec, boundaryPoints.eo);
      };
      /**
       * @param {Boolean} isCollapseToStart
       * @return {WrappedRange}
       */


      this.collapse = function (isCollapseToStart) {
        if (isCollapseToStart) {
          return new WrappedRange(sc, so, sc, so);
        } else {
          return new WrappedRange(ec, eo, ec, eo);
        }
      };
      /**
       * splitText on range
       */


      this.splitText = function () {
        var isSameContainer = sc === ec;
        var boundaryPoints = this.getPoints();

        if (dom.isText(ec) && !dom.isEdgePoint(this.getEndPoint())) {
          ec.splitText(eo);
        }

        if (dom.isText(sc) && !dom.isEdgePoint(this.getStartPoint())) {
          boundaryPoints.sc = sc.splitText(so);
          boundaryPoints.so = 0;

          if (isSameContainer) {
            boundaryPoints.ec = boundaryPoints.sc;
            boundaryPoints.eo = eo - so;
          }
        }

        return new WrappedRange(boundaryPoints.sc, boundaryPoints.so, boundaryPoints.ec, boundaryPoints.eo);
      };
      /**
       * delete contents on range
       * @return {WrappedRange}
       */


      this.deleteContents = function () {
        if (this.isCollapsed()) {
          return this;
        }

        var rng = this.splitText();
        var nodes = rng.nodes(null, {
          fullyContains: true
        }); // find new cursor point

        var point = dom.prevPointUntil(rng.getStartPoint(), function (point) {
          return !list.contains(nodes, point.node);
        });
        var emptyParents = [];
        $.each(nodes, function (idx, node) {
          // find empty parents
          var parent = node.parentNode;

          if (point.node !== parent && dom.nodeLength(parent) === 1) {
            emptyParents.push(parent);
          }

          dom.remove(node, false);
        }); // remove empty parents

        $.each(emptyParents, function (idx, node) {
          dom.remove(node, false);
        });
        return new WrappedRange(point.node, point.offset, point.node, point.offset).normalize();
      };
      /**
       * makeIsOn: return isOn(pred) function
       */


      var makeIsOn = function makeIsOn(pred) {
        return function () {
          var ancestor = dom.ancestor(sc, pred);
          return !!ancestor && ancestor === dom.ancestor(ec, pred);
        };
      }; // isOnEditable: judge whether range is on editable or not


      this.isOnEditable = makeIsOn(dom.isEditable); // isOnList: judge whether range is on list node or not

      this.isOnList = makeIsOn(dom.isList); // isOnAnchor: judge whether range is on anchor node or not

      this.isOnAnchor = makeIsOn(dom.isAnchor); // isOnAnchor: judge whether range is on cell node or not

      this.isOnCell = makeIsOn(dom.isCell);
      /**
       * @param {Function} pred
       * @return {Boolean}
       */

      this.isLeftEdgeOf = function (pred) {
        if (!dom.isLeftEdgePoint(this.getStartPoint())) {
          return false;
        }

        var node = dom.ancestor(this.sc, pred);
        return node && dom.isLeftEdgeOf(this.sc, node);
      };
      /**
       * returns whether range was collapsed or not
       */


      this.isCollapsed = function () {
        return sc === ec && so === eo;
      };
      /**
       * wrap inline nodes which children of body with paragraph
       *
       * @return {WrappedRange}
       */


      this.wrapBodyInlineWithPara = function () {
        if (dom.isBodyContainer(sc) && dom.isEmpty(sc)) {
          sc.innerHTML = dom.emptyPara;
          return new WrappedRange(sc.firstChild, 0, sc.firstChild, 0);
        }
        /**
         * [workaround] firefox often create range on not visible point. so normalize here.
         *  - firefox: |<p>text</p>|
         *  - chrome: <p>|text|</p>
         */


        var rng = this.normalize();

        if (dom.isParaInline(sc) || dom.isPara(sc)) {
          return rng;
        } // find inline top ancestor


        var topAncestor;

        if (dom.isInline(rng.sc)) {
          var ancestors = dom.listAncestor(rng.sc, func.not(dom.isInline));
          topAncestor = list.last(ancestors);

          if (!dom.isInline(topAncestor)) {
            topAncestor = ancestors[ancestors.length - 2] || rng.sc.childNodes[rng.so];
          }
        } else {
          topAncestor = rng.sc.childNodes[rng.so > 0 ? rng.so - 1 : 0];
        } // siblings not in paragraph


        var inlineSiblings = dom.listPrev(topAncestor, dom.isParaInline).reverse();
        inlineSiblings = inlineSiblings.concat(dom.listNext(topAncestor.nextSibling, dom.isParaInline)); // wrap with paragraph

        if (inlineSiblings.length) {
          var para = dom.wrap(list.head(inlineSiblings), 'p');
          dom.appendChildNodes(para, list.tail(inlineSiblings));
        }

        return this.normalize();
      };
      /**
       * insert node at current cursor
       *
       * @param {Node} node
       * @return {Node}
       */


      this.insertNode = function (node) {
        var rng = this.wrapBodyInlineWithPara().deleteContents();
        var info = dom.splitPoint(rng.getStartPoint(), dom.isInline(node));

        if (info.rightNode) {
          info.rightNode.parentNode.insertBefore(node, info.rightNode);
        } else {
          info.container.appendChild(node);
        }

        return node;
      };
      /**
       * insert html at current cursor
       */


      this.pasteHTML = function (markup) {
        var contentsContainer = $('<div></div>').html(markup)[0];
        var childNodes = list.from(contentsContainer.childNodes);
        var rng = this.wrapBodyInlineWithPara().deleteContents();
        return childNodes.reverse().map(function (childNode) {
          return rng.insertNode(childNode);
        }).reverse();
      };
      /**
       * returns text in range
       *
       * @return {String}
       */


      this.toString = function () {
        var nativeRng = nativeRange();
        return agent.isW3CRangeSupport ? nativeRng.toString() : nativeRng.text;
      };
      /**
       * returns range for word before cursor
       *
       * @param {Boolean} [findAfter] - find after cursor, default: false
       * @return {WrappedRange}
       */


      this.getWordRange = function (findAfter) {
        var endPoint = this.getEndPoint();

        if (!dom.isCharPoint(endPoint)) {
          return this;
        }

        var startPoint = dom.prevPointUntil(endPoint, function (point) {
          return !dom.isCharPoint(point);
        });

        if (findAfter) {
          endPoint = dom.nextPointUntil(endPoint, function (point) {
            return !dom.isCharPoint(point);
          });
        }

        return new WrappedRange(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset);
      };
      /**
       * create offsetPath bookmark
       *
       * @param {Node} editable
       */


      this.bookmark = function (editable) {
        return {
          s: {
            path: dom.makeOffsetPath(editable, sc),
            offset: so
          },
          e: {
            path: dom.makeOffsetPath(editable, ec),
            offset: eo
          }
        };
      };
      /**
       * create offsetPath bookmark base on paragraph
       *
       * @param {Node[]} paras
       */


      this.paraBookmark = function (paras) {
        return {
          s: {
            path: list.tail(dom.makeOffsetPath(list.head(paras), sc)),
            offset: so
          },
          e: {
            path: list.tail(dom.makeOffsetPath(list.last(paras), ec)),
            offset: eo
          }
        };
      };
      /**
       * getClientRects
       * @return {Rect[]}
       */


      this.getClientRects = function () {
        var nativeRng = nativeRange();
        return nativeRng.getClientRects();
      };
    };
    /**
     * @class core.range
     *
     * Data structure
     *  * BoundaryPoint: a point of dom tree
     *  * BoundaryPoints: two boundaryPoints corresponding to the start and the end of the Range
     *
     * See to http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position
     *
     * @singleton
     * @alternateClassName range
     */


    return {
      /**
       * @method
       *
       * create Range Object From arguments or Browser Selection
       *
       * @param {Node} sc - start container
       * @param {Number} so - start offset
       * @param {Node} ec - end container
       * @param {Number} eo - end offset
       * @return {WrappedRange}
       */
      create: function create(sc, so, ec, eo) {
        if (!arguments.length) {
          // from Browser Selection
          if (agent.isW3CRangeSupport) {
            var selection = document.getSelection();

            if (!selection || selection.rangeCount === 0) {
              return null;
            } else if (dom.isBody(selection.anchorNode)) {
              // Firefox: returns entire body as range on initialization. We won't never need it.
              return null;
            }

            var nativeRng = selection.getRangeAt(0);
            sc = nativeRng.startContainer;
            so = nativeRng.startOffset;
            ec = nativeRng.endContainer;
            eo = nativeRng.endOffset;
          } else {
            // IE8: TextRange
            var textRange = document.selection.createRange();
            var textRangeEnd = textRange.duplicate();
            textRangeEnd.collapse(false);
            var textRangeStart = textRange;
            textRangeStart.collapse(true);
            var startPoint = textRangeToPoint(textRangeStart, true),
                endPoint = textRangeToPoint(textRangeEnd, false); // same visible point case: range was collapsed.

            if (dom.isText(startPoint.node) && dom.isLeftEdgePoint(startPoint) && dom.isTextNode(endPoint.node) && dom.isRightEdgePoint(endPoint) && endPoint.node.nextSibling === startPoint.node) {
              startPoint = endPoint;
            }

            sc = startPoint.cont;
            so = startPoint.offset;
            ec = endPoint.cont;
            eo = endPoint.offset;
          }
        } else if (arguments.length === 2) {
          //collapsed
          ec = sc;
          eo = so;
        }

        return new WrappedRange(sc, so, ec, eo);
      },

      /**
       * @method
       *
       * create WrappedRange from node
       *
       * @param {Node} node
       * @return {WrappedRange}
       */
      createFromNode: function createFromNode(node) {
        var sc = node;
        var so = 0;
        var ec = node;
        var eo = dom.nodeLength(ec); // browsers can't target a picture or void node

        if (dom.isVoid(sc)) {
          so = dom.listPrev(sc).length - 1;
          sc = sc.parentNode;
        }

        if (dom.isBR(ec)) {
          eo = dom.listPrev(ec).length - 1;
          ec = ec.parentNode;
        } else if (dom.isVoid(ec)) {
          eo = dom.listPrev(ec).length;
          ec = ec.parentNode;
        }

        return this.create(sc, so, ec, eo);
      },

      /**
       * create WrappedRange from node after position
       *
       * @param {Node} node
       * @return {WrappedRange}
       */
      createFromNodeBefore: function createFromNodeBefore(node) {
        return this.createFromNode(node).collapse(true);
      },

      /**
       * create WrappedRange from node after position
       *
       * @param {Node} node
       * @return {WrappedRange}
       */
      createFromNodeAfter: function createFromNodeAfter(node) {
        return this.createFromNode(node).collapse();
      },

      /**
       * @method
       *
       * create WrappedRange from bookmark
       *
       * @param {Node} editable
       * @param {Object} bookmark
       * @return {WrappedRange}
       */
      createFromBookmark: function createFromBookmark(editable, bookmark) {
        var sc = dom.fromOffsetPath(editable, bookmark.s.path);
        var so = bookmark.s.offset;
        var ec = dom.fromOffsetPath(editable, bookmark.e.path);
        var eo = bookmark.e.offset;
        return new WrappedRange(sc, so, ec, eo);
      },

      /**
       * @method
       *
       * create WrappedRange from paraBookmark
       *
       * @param {Object} bookmark
       * @param {Node[]} paras
       * @return {WrappedRange}
       */
      createFromParaBookmark: function createFromParaBookmark(bookmark, paras) {
        var so = bookmark.s.offset;
        var eo = bookmark.e.offset;
        var sc = dom.fromOffsetPath(list.head(paras), bookmark.s.path);
        var ec = dom.fromOffsetPath(list.last(paras), bookmark.e.path);
        return new WrappedRange(sc, so, ec, eo);
      }
    };
  }();
  /**
   * @class defaults
   *
   * @singleton
   */


  var defaults = {
    /** @property */
    version: '0.6.16',

    /**
     *
     * for event options, reference to EventHandler.attach
     *
     * @property {Object} options
     * @property {String/Number} [options.width=null] set editor width
     * @property {String/Number} [options.height=null] set editor height, ex) 300
     * @property {String/Number} options.minHeight set minimum height of editor
     * @property {String/Number} options.maxHeight
     * @property {String/Number} options.focus
     * @property {Number} options.tabsize
     * @property {Boolean} options.styleWithSpan
     * @property {Object} options.codemirror
     * @property {Object} [options.codemirror.mode='text/html']
     * @property {Object} [options.codemirror.htmlMode=true]
     * @property {Object} [options.codemirror.lineNumbers=true]
     * @property {String} [options.lang=en-US] language 'en-US', 'ko-KR', ...
     * @property {String} [options.direction=null] text direction, ex) 'rtl'
     * @property {Array} [options.toolbar]
     * @property {Boolean} [options.airMode=false]
     * @property {Array} [options.airPopover]
     * @property {Fucntion} [options.onInit] initialize
     * @property {Fucntion} [options.onsubmit]
     */
    options: {
      width: null,
      // set editor width
      height: null,
      // set editor height, ex) 300
      minHeight: null,
      // set minimum height of editor
      maxHeight: null,
      // set maximum height of editor
      focus: false,
      // set focus to editable area after initializing summernote
      tabsize: 4,
      // size of tab ex) 2 or 4
      styleWithSpan: true,
      // style with span (Chrome and FF only)
      disableLinkTarget: false,
      // hide link Target Checkbox
      disableDragAndDrop: false,
      // disable drag and drop event
      disableResizeEditor: false,
      // disable resizing editor
      disableResizeImage: false,
      // disable resizing image
      shortcuts: true,
      // enable keyboard shortcuts
      textareaAutoSync: true,
      // enable textarea auto sync
      placeholder: false,
      // enable placeholder text
      prettifyHtml: true,
      // enable prettifying html while toggling codeview
      iconPrefix: 'fa fa-',
      // prefix for css icon classes
      icons: {
        font: {
          bold: 'bold',
          italic: 'italic',
          underline: 'underline',
          clear: 'eraser',
          height: 'text-height',
          strikethrough: 'strikethrough',
          superscript: 'superscript',
          subscript: 'subscript'
        },
        image: {
          image: 'picture-o',
          floatLeft: 'align-left',
          floatRight: 'align-right',
          floatNone: 'align-justify',
          shapeRounded: 'square',
          shapeCircle: 'circle-o',
          shapeThumbnail: 'picture-o',
          shapeNone: 'times',
          remove: 'trash-o'
        },
        link: {
          link: 'link',
          unlink: 'unlink',
          edit: 'edit'
        },
        table: {
          table: 'table'
        },
        hr: {
          insert: 'minus'
        },
        style: {
          style: 'magic'
        },
        lists: {
          unordered: 'list-ul',
          ordered: 'list-ol'
        },
        options: {
          help: 'question',
          fullscreen: 'arrows-alt',
          codeview: 'code'
        },
        paragraph: {
          paragraph: 'align-left',
          outdent: 'outdent',
          indent: 'indent',
          left: 'align-left',
          center: 'align-center',
          right: 'align-right',
          justify: 'align-justify'
        },
        color: {
          recent: 'font'
        },
        history: {
          undo: 'undo',
          redo: 'repeat'
        },
        misc: {
          check: 'check'
        }
      },
      dialogsInBody: false,
      // false will add dialogs into editor
      codemirror: {
        // codemirror options
        mode: 'text/html',
        htmlMode: true,
        lineNumbers: true
      },
      // language
      lang: 'en-US',
      // language 'en-US', 'ko-KR', ...
      direction: null,
      // text direction, ex) 'rtl'
      // toolbar
      toolbar: [['style', ['style']], ['font', ['bold', 'italic', 'underline', 'clear']], // ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
      ['fontname', ['fontname']], ['fontsize', ['fontsize']], ['color', ['color']], ['para', ['ul', 'ol', 'paragraph']], ['height', ['height']], ['table', ['table']], ['insert', ['link', 'picture', 'hr']], ['view', ['fullscreen', 'codeview']], ['help', ['help']]],
      plugin: {},
      // air mode: inline editor
      airMode: false,
      // airPopover: [
      //   ['style', ['style']],
      //   ['font', ['bold', 'italic', 'underline', 'clear']],
      //   ['fontname', ['fontname']],
      //   ['color', ['color']],
      //   ['para', ['ul', 'ol', 'paragraph']],
      //   ['height', ['height']],
      //   ['table', ['table']],
      //   ['insert', ['link', 'picture']],
      //   ['help', ['help']]
      // ],
      airPopover: [['color', ['color']], ['font', ['bold', 'underline', 'clear']], ['para', ['ul', 'paragraph']], ['table', ['table']], ['insert', ['link', 'picture']]],
      // style tag
      styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],
      // default fontName
      defaultFontName: 'Helvetica Neue',
      // fontName
      fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande', 'Tahoma', 'Times New Roman', 'Verdana'],
      fontNamesIgnoreCheck: [],
      fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],
      // pallete colors(n x n)
      colors: [['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F7F7', '#FFFFFF'], ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF'], ['#F7C6CE', '#FFE7CE', '#FFEFC6', '#D6EFD6', '#CEDEE7', '#CEE7F7', '#D6D6E7', '#E7D6DE'], ['#E79C9C', '#FFC69C', '#FFE79C', '#B5D6A5', '#A5C6CE', '#9CC6EF', '#B5A5D6', '#D6A5BD'], ['#E76363', '#F7AD6B', '#FFD663', '#94BD7B', '#73A5AD', '#6BADDE', '#8C7BC6', '#C67BA5'], ['#CE0000', '#E79439', '#EFC631', '#6BA54A', '#4A7B8C', '#3984C6', '#634AA5', '#A54A7B'], ['#9C0000', '#B56308', '#BD9400', '#397B21', '#104A5A', '#085294', '#311873', '#731842'], ['#630000', '#7B3900', '#846300', '#295218', '#083139', '#003163', '#21104A', '#4A1031']],
      // lineHeight
      lineHeights: ['1.0', '1.2', '1.4', '1.5', '1.6', '1.8', '2.0', '3.0'],
      // insertTable max size
      insertTableMaxSize: {
        col: 10,
        row: 10
      },
      // image
      maximumImageFileSize: null,
      // size in bytes, null = no limit
      // callbacks
      oninit: null,
      // initialize
      onfocus: null,
      // editable has focus
      onblur: null,
      // editable out of focus
      onenter: null,
      // enter key pressed
      onkeyup: null,
      // keyup
      onkeydown: null,
      // keydown
      onImageUpload: null,
      // imageUpload
      onImageUploadError: null,
      // imageUploadError
      onMediaDelete: null,
      // media delete
      onToolbarClick: null,
      onsubmit: null,

      /**
       * manipulate link address when user create link
       * @param {String} sLinkUrl
       * @return {String}
       */
      onCreateLink: function onCreateLink(sLinkUrl) {
        if (sLinkUrl.indexOf('@') !== -1 && sLinkUrl.indexOf(':') === -1) {
          sLinkUrl = 'mailto:' + sLinkUrl;
        }

        return sLinkUrl;
      },
      keyMap: {
        pc: {
          'ENTER': 'insertParagraph',
          'CTRL+Z': 'undo',
          'CTRL+Y': 'redo',
          'TAB': 'tab',
          'SHIFT+TAB': 'untab',
          'CTRL+B': 'bold',
          'CTRL+I': 'italic',
          'CTRL+U': 'underline',
          'CTRL+SHIFT+S': 'strikethrough',
          'CTRL+BACKSLASH': 'removeFormat',
          'CTRL+SHIFT+L': 'justifyLeft',
          'CTRL+SHIFT+E': 'justifyCenter',
          'CTRL+SHIFT+R': 'justifyRight',
          'CTRL+SHIFT+J': 'justifyFull',
          'CTRL+SHIFT+NUM7': 'insertUnorderedList',
          'CTRL+SHIFT+NUM8': 'insertOrderedList',
          'CTRL+LEFTBRACKET': 'outdent',
          'CTRL+RIGHTBRACKET': 'indent',
          'CTRL+NUM0': 'formatPara',
          'CTRL+NUM1': 'formatH1',
          'CTRL+NUM2': 'formatH2',
          'CTRL+NUM3': 'formatH3',
          'CTRL+NUM4': 'formatH4',
          'CTRL+NUM5': 'formatH5',
          'CTRL+NUM6': 'formatH6',
          'CTRL+ENTER': 'insertHorizontalRule',
          'CTRL+K': 'showLinkDialog'
        },
        mac: {
          'ENTER': 'insertParagraph',
          'CMD+Z': 'undo',
          'CMD+SHIFT+Z': 'redo',
          'TAB': 'tab',
          'SHIFT+TAB': 'untab',
          'CMD+B': 'bold',
          'CMD+I': 'italic',
          'CMD+U': 'underline',
          'CMD+SHIFT+S': 'strikethrough',
          'CMD+BACKSLASH': 'removeFormat',
          'CMD+SHIFT+L': 'justifyLeft',
          'CMD+SHIFT+E': 'justifyCenter',
          'CMD+SHIFT+R': 'justifyRight',
          'CMD+SHIFT+J': 'justifyFull',
          'CMD+SHIFT+NUM7': 'insertUnorderedList',
          'CMD+SHIFT+NUM8': 'insertOrderedList',
          'CMD+LEFTBRACKET': 'outdent',
          'CMD+RIGHTBRACKET': 'indent',
          'CMD+NUM0': 'formatPara',
          'CMD+NUM1': 'formatH1',
          'CMD+NUM2': 'formatH2',
          'CMD+NUM3': 'formatH3',
          'CMD+NUM4': 'formatH4',
          'CMD+NUM5': 'formatH5',
          'CMD+NUM6': 'formatH6',
          'CMD+ENTER': 'insertHorizontalRule',
          'CMD+K': 'showLinkDialog'
        }
      }
    },
    // default language: en-US
    lang: {
      'en-US': {
        font: {
          bold: 'Bold',
          italic: 'Italic',
          underline: 'Underline',
          clear: 'Remove Font Style',
          height: 'Line Height',
          name: 'Font Family',
          strikethrough: 'Strikethrough',
          subscript: 'Subscript',
          superscript: 'Superscript',
          size: 'Font Size'
        },
        image: {
          image: 'Picture',
          insert: 'Insert Image',
          resizeFull: 'Resize Full',
          resizeHalf: 'Resize Half',
          resizeQuarter: 'Resize Quarter',
          floatLeft: 'Float Left',
          floatRight: 'Float Right',
          floatNone: 'Float None',
          shapeRounded: 'Shape: Rounded',
          shapeCircle: 'Shape: Circle',
          shapeThumbnail: 'Shape: Thumbnail',
          shapeNone: 'Shape: None',
          dragImageHere: 'Drag image or text here',
          dropImage: 'Drop image or Text',
          selectFromFiles: 'Select from files',
          maximumFileSize: 'Maximum file size',
          maximumFileSizeError: 'Maximum file size exceeded.',
          url: 'Image URL',
          remove: 'Remove Image'
        },
        link: {
          link: 'Link',
          insert: 'Insert Link',
          unlink: 'Unlink',
          edit: 'Edit',
          textToDisplay: 'Text to display',
          url: 'To what URL should this link go?',
          openInNewWindow: 'Open in new window'
        },
        table: {
          table: 'Table'
        },
        hr: {
          insert: 'Insert Horizontal Rule'
        },
        style: {
          style: 'Style',
          normal: 'Normal',
          blockquote: 'Quote',
          pre: 'Code',
          h1: 'Header 1',
          h2: 'Header 2',
          h3: 'Header 3',
          h4: 'Header 4',
          h5: 'Header 5',
          h6: 'Header 6'
        },
        lists: {
          unordered: 'Unordered list',
          ordered: 'Ordered list'
        },
        options: {
          help: 'Help',
          fullscreen: 'Full Screen',
          codeview: 'Code View'
        },
        paragraph: {
          paragraph: 'Paragraph',
          outdent: 'Outdent',
          indent: 'Indent',
          left: 'Align left',
          center: 'Align center',
          right: 'Align right',
          justify: 'Justify full'
        },
        color: {
          recent: 'Recent Color',
          more: 'More Color',
          background: 'Background Color',
          foreground: 'Foreground Color',
          transparent: 'Transparent',
          setTransparent: 'Set transparent',
          reset: 'Reset',
          resetToDefault: 'Reset to default'
        },
        shortcut: {
          shortcuts: 'Keyboard shortcuts',
          close: 'Close',
          textFormatting: 'Text formatting',
          action: 'Action',
          paragraphFormatting: 'Paragraph formatting',
          documentStyle: 'Document Style',
          extraKeys: 'Extra keys'
        },
        history: {
          undo: 'Undo',
          redo: 'Redo'
        }
      }
    }
  };
  /**
   * @class core.async
   *
   * Async functions which returns `Promise`
   *
   * @singleton
   * @alternateClassName async
   */

  var async = function () {
    /**
     * @method readFileAsDataURL
     *
     * read contents of file as representing URL
     *
     * @param {File} file
     * @return {Promise} - then: sDataUrl
     */
    var readFileAsDataURL = function readFileAsDataURL(file) {
      return $.Deferred(function (deferred) {
        $.extend(new FileReader(), {
          onload: function onload(e) {
            var sDataURL = e.target.result;
            deferred.resolve(sDataURL);
          },
          onerror: function onerror() {
            deferred.reject(this);
          }
        }).readAsDataURL(file);
      }).promise();
    };
    /**
     * @method createImage
     *
     * create `<image>` from url string
     *
     * @param {String} sUrl
     * @param {String} filename
     * @return {Promise} - then: $image
     */


    var createImage = function createImage(sUrl, filename) {
      return $.Deferred(function (deferred) {
        var $img = $('<img>');
        $img.one('load', function () {
          $img.off('error abort');
          deferred.resolve($img);
        }).one('error abort', function () {
          $img.off('load').detach();
          deferred.reject($img);
        }).css({
          display: 'none'
        }).appendTo(document.body).attr({
          'src': sUrl,
          'data-filename': filename
        });
      }).promise();
    };

    return {
      readFileAsDataURL: readFileAsDataURL,
      createImage: createImage
    };
  }();
  /**
   * @class core.key
   *
   * Object for keycodes.
   *
   * @singleton
   * @alternateClassName key
   */


  var key = function () {
    var keyMap = {
      'BACKSPACE': 8,
      'TAB': 9,
      'ENTER': 13,
      'SPACE': 32,
      // Number: 0-9
      'NUM0': 48,
      'NUM1': 49,
      'NUM2': 50,
      'NUM3': 51,
      'NUM4': 52,
      'NUM5': 53,
      'NUM6': 54,
      'NUM7': 55,
      'NUM8': 56,
      // Alphabet: a-z
      'B': 66,
      'E': 69,
      'I': 73,
      'J': 74,
      'K': 75,
      'L': 76,
      'R': 82,
      'S': 83,
      'U': 85,
      'V': 86,
      'Y': 89,
      'Z': 90,
      'SLASH': 191,
      'LEFTBRACKET': 219,
      'BACKSLASH': 220,
      'RIGHTBRACKET': 221
    };
    return {
      /**
       * @method isEdit
       *
       * @param {Number} keyCode
       * @return {Boolean}
       */
      isEdit: function isEdit(keyCode) {
        return list.contains([8, 9, 13, 32], keyCode);
      },

      /**
       * @method isMove
       *
       * @param {Number} keyCode
       * @return {Boolean}
       */
      isMove: function isMove(keyCode) {
        return list.contains([37, 38, 39, 40], keyCode);
      },

      /**
       * @property {Object} nameFromCode
       * @property {String} nameFromCode.8 "BACKSPACE"
       */
      nameFromCode: func.invertObject(keyMap),
      code: keyMap
    };
  }();
  /**
   * @class editing.History
   *
   * Editor History
   *
   */


  var History = function History($editable) {
    var stack = [],
        stackOffset = -1;
    var editable = $editable[0];

    var makeSnapshot = function makeSnapshot() {
      var rng = range.create();
      var emptyBookmark = {
        s: {
          path: [],
          offset: 0
        },
        e: {
          path: [],
          offset: 0
        }
      };
      return {
        contents: $editable.html(),
        bookmark: rng ? rng.bookmark(editable) : emptyBookmark
      };
    };

    var applySnapshot = function applySnapshot(snapshot) {
      if (snapshot.contents !== null) {
        $editable.html(snapshot.contents);
      }

      if (snapshot.bookmark !== null) {
        range.createFromBookmark(editable, snapshot.bookmark).select();
      }
    };
    /**
     * undo
     */


    this.undo = function () {
      // Create snap shot if not yet recorded
      if ($editable.html() !== stack[stackOffset].contents) {
        this.recordUndo();
      }

      if (0 < stackOffset) {
        stackOffset--;
        applySnapshot(stack[stackOffset]);
      }
    };
    /**
     * redo
     */


    this.redo = function () {
      if (stack.length - 1 > stackOffset) {
        stackOffset++;
        applySnapshot(stack[stackOffset]);
      }
    };
    /**
     * recorded undo
     */


    this.recordUndo = function () {
      stackOffset++; // Wash out stack after stackOffset

      if (stack.length > stackOffset) {
        stack = stack.slice(0, stackOffset);
      } // Create new snapshot and push it to the end


      stack.push(makeSnapshot());
    }; // Create first undo stack


    this.recordUndo();
  };
  /**
   * @class editing.Style
   *
   * Style
   *
   */


  var Style = function Style() {
    /**
     * @method jQueryCSS
     *
     * [workaround] for old jQuery
     * passing an array of style properties to .css()
     * will result in an object of property-value pairs.
     * (compability with version < 1.9)
     *
     * @private
     * @param  {jQuery} $obj
     * @param  {Array} propertyNames - An array of one or more CSS properties.
     * @return {Object}
     */
    var jQueryCSS = function jQueryCSS($obj, propertyNames) {
      if (agent.jqueryVersion < 1.9) {
        var result = {};
        $.each(propertyNames, function (idx, propertyName) {
          result[propertyName] = $obj.css(propertyName);
        });
        return result;
      }

      return $obj.css.call($obj, propertyNames);
    };
    /**
     * returns style object from node
     *
     * @param {jQuery} $node
     * @return {Object}
     */


    this.fromNode = function ($node) {
      var properties = ['font-family', 'font-size', 'text-align', 'list-style-type', 'line-height'];
      var styleInfo = jQueryCSS($node, properties) || {};
      styleInfo['font-size'] = parseInt(styleInfo['font-size'], 10);
      return styleInfo;
    };
    /**
     * paragraph level style
     *
     * @param {WrappedRange} rng
     * @param {Object} styleInfo
     */


    this.stylePara = function (rng, styleInfo) {
      $.each(rng.nodes(dom.isPara, {
        includeAncestor: true
      }), function (idx, para) {
        $(para).css(styleInfo);
      });
    };
    /**
     * insert and returns styleNodes on range.
     *
     * @param {WrappedRange} rng
     * @param {Object} [options] - options for styleNodes
     * @param {String} [options.nodeName] - default: `SPAN`
     * @param {Boolean} [options.expandClosestSibling] - default: `false`
     * @param {Boolean} [options.onlyPartialContains] - default: `false`
     * @return {Node[]}
     */


    this.styleNodes = function (rng, options) {
      rng = rng.splitText();
      var nodeName = options && options.nodeName || 'SPAN';
      var expandClosestSibling = !!(options && options.expandClosestSibling);
      var onlyPartialContains = !!(options && options.onlyPartialContains);

      if (rng.isCollapsed()) {
        return [rng.insertNode(dom.create(nodeName))];
      }

      var pred = dom.makePredByNodeName(nodeName);
      var nodes = rng.nodes(dom.isText, {
        fullyContains: true
      }).map(function (text) {
        return dom.singleChildAncestor(text, pred) || dom.wrap(text, nodeName);
      });

      if (expandClosestSibling) {
        if (onlyPartialContains) {
          var nodesInRange = rng.nodes(); // compose with partial contains predication

          pred = func.and(pred, function (node) {
            return list.contains(nodesInRange, node);
          });
        }

        return nodes.map(function (node) {
          var siblings = dom.withClosestSiblings(node, pred);
          var head = list.head(siblings);
          var tails = list.tail(siblings);
          $.each(tails, function (idx, elem) {
            dom.appendChildNodes(head, elem.childNodes);
            dom.remove(elem);
          });
          return list.head(siblings);
        });
      } else {
        return nodes;
      }
    };
    /**
     * get current style on cursor
     *
     * @param {WrappedRange} rng
     * @return {Object} - object contains style properties.
     */


    this.current = function (rng) {
      var $cont = $(dom.isText(rng.sc) ? rng.sc.parentNode : rng.sc);
      var styleInfo = this.fromNode($cont); // document.queryCommandState for toggle state

      styleInfo['font-bold'] = document.queryCommandState('bold') ? 'bold' : 'normal';
      styleInfo['font-italic'] = document.queryCommandState('italic') ? 'italic' : 'normal';
      styleInfo['font-underline'] = document.queryCommandState('underline') ? 'underline' : 'normal';
      styleInfo['font-strikethrough'] = document.queryCommandState('strikeThrough') ? 'strikethrough' : 'normal';
      styleInfo['font-superscript'] = document.queryCommandState('superscript') ? 'superscript' : 'normal';
      styleInfo['font-subscript'] = document.queryCommandState('subscript') ? 'subscript' : 'normal'; // list-style-type to list-style(unordered, ordered)

      if (!rng.isOnList()) {
        styleInfo['list-style'] = 'none';
      } else {
        var aOrderedType = ['circle', 'disc', 'disc-leading-zero', 'square'];
        var isUnordered = $.inArray(styleInfo['list-style-type'], aOrderedType) > -1;
        styleInfo['list-style'] = isUnordered ? 'unordered' : 'ordered';
      }

      var para = dom.ancestor(rng.sc, dom.isPara);

      if (para && para.style['line-height']) {
        styleInfo['line-height'] = para.style.lineHeight;
      } else {
        var lineHeight = parseInt(styleInfo['line-height'], 10) / parseInt(styleInfo['font-size'], 10);
        styleInfo['line-height'] = lineHeight.toFixed(1);
      }

      styleInfo.anchor = rng.isOnAnchor() && dom.ancestor(rng.sc, dom.isAnchor);
      styleInfo.ancestors = dom.listAncestor(rng.sc, dom.isEditable);
      styleInfo.range = rng;
      return styleInfo;
    };
  };
  /**
   * @class editing.Bullet
   *
   * @alternateClassName Bullet
   */


  var Bullet = function Bullet() {
    /**
     * @method insertOrderedList
     *
     * toggle ordered list
     *
     * @type command
     */
    this.insertOrderedList = function () {
      this.toggleList('OL');
    };
    /**
     * @method insertUnorderedList
     *
     * toggle unordered list
     *
     * @type command
     */


    this.insertUnorderedList = function () {
      this.toggleList('UL');
    };
    /**
     * @method indent
     *
     * indent
     *
     * @type command
     */


    this.indent = function () {
      var self = this;
      var rng = range.create().wrapBodyInlineWithPara();
      var paras = rng.nodes(dom.isPara, {
        includeAncestor: true
      });
      var clustereds = list.clusterBy(paras, func.peq2('parentNode'));
      $.each(clustereds, function (idx, paras) {
        var head = list.head(paras);

        if (dom.isLi(head)) {
          self.wrapList(paras, head.parentNode.nodeName);
        } else {
          $.each(paras, function (idx, para) {
            $(para).css('marginLeft', function (idx, val) {
              return (parseInt(val, 10) || 0) + 25;
            });
          });
        }
      });
      rng.select();
    };
    /**
     * @method outdent
     *
     * outdent
     *
     * @type command
     */


    this.outdent = function () {
      var self = this;
      var rng = range.create().wrapBodyInlineWithPara();
      var paras = rng.nodes(dom.isPara, {
        includeAncestor: true
      });
      var clustereds = list.clusterBy(paras, func.peq2('parentNode'));
      $.each(clustereds, function (idx, paras) {
        var head = list.head(paras);

        if (dom.isLi(head)) {
          self.releaseList([paras]);
        } else {
          $.each(paras, function (idx, para) {
            $(para).css('marginLeft', function (idx, val) {
              val = parseInt(val, 10) || 0;
              return val > 25 ? val - 25 : '';
            });
          });
        }
      });
      rng.select();
    };
    /**
     * @method toggleList
     *
     * toggle list
     *
     * @param {String} listName - OL or UL
     */


    this.toggleList = function (listName) {
      var self = this;
      var rng = range.create().wrapBodyInlineWithPara();
      var paras = rng.nodes(dom.isPara, {
        includeAncestor: true
      });
      var bookmark = rng.paraBookmark(paras);
      var clustereds = list.clusterBy(paras, func.peq2('parentNode')); // paragraph to list

      if (list.find(paras, dom.isPurePara)) {
        var wrappedParas = [];
        $.each(clustereds, function (idx, paras) {
          wrappedParas = wrappedParas.concat(self.wrapList(paras, listName));
        });
        paras = wrappedParas; // list to paragraph or change list style
      } else {
        var diffLists = rng.nodes(dom.isList, {
          includeAncestor: true
        }).filter(function (listNode) {
          return !$.nodeName(listNode, listName);
        });

        if (diffLists.length) {
          $.each(diffLists, function (idx, listNode) {
            dom.replace(listNode, listName);
          });
        } else {
          paras = this.releaseList(clustereds, true);
        }
      }

      range.createFromParaBookmark(bookmark, paras).select();
    };
    /**
     * @method wrapList
     *
     * @param {Node[]} paras
     * @param {String} listName
     * @return {Node[]}
     */


    this.wrapList = function (paras, listName) {
      var head = list.head(paras);
      var last = list.last(paras);
      var prevList = dom.isList(head.previousSibling) && head.previousSibling;
      var nextList = dom.isList(last.nextSibling) && last.nextSibling;
      var listNode = prevList || dom.insertAfter(dom.create(listName || 'UL'), last); // P to LI

      paras = paras.map(function (para) {
        return dom.isPurePara(para) ? dom.replace(para, 'LI') : para;
      }); // append to list(<ul>, <ol>)

      dom.appendChildNodes(listNode, paras);

      if (nextList) {
        dom.appendChildNodes(listNode, list.from(nextList.childNodes));
        dom.remove(nextList);
      }

      return paras;
    };
    /**
     * @method releaseList
     *
     * @param {Array[]} clustereds
     * @param {Boolean} isEscapseToBody
     * @return {Node[]}
     */


    this.releaseList = function (clustereds, isEscapseToBody) {
      var releasedParas = [];
      $.each(clustereds, function (idx, paras) {
        var head = list.head(paras);
        var last = list.last(paras);
        var headList = isEscapseToBody ? dom.lastAncestor(head, dom.isList) : head.parentNode;
        var lastList = headList.childNodes.length > 1 ? dom.splitTree(headList, {
          node: last.parentNode,
          offset: dom.position(last) + 1
        }, {
          isSkipPaddingBlankHTML: true
        }) : null;
        var middleList = dom.splitTree(headList, {
          node: head.parentNode,
          offset: dom.position(head)
        }, {
          isSkipPaddingBlankHTML: true
        });
        paras = isEscapseToBody ? dom.listDescendant(middleList, dom.isLi) : list.from(middleList.childNodes).filter(dom.isLi); // LI to P

        if (isEscapseToBody || !dom.isList(headList.parentNode)) {
          paras = paras.map(function (para) {
            return dom.replace(para, 'P');
          });
        }

        $.each(list.from(paras).reverse(), function (idx, para) {
          dom.insertAfter(para, headList);
        }); // remove empty lists

        var rootLists = list.compact([headList, middleList, lastList]);
        $.each(rootLists, function (idx, rootList) {
          var listNodes = [rootList].concat(dom.listDescendant(rootList, dom.isList));
          $.each(listNodes.reverse(), function (idx, listNode) {
            if (!dom.nodeLength(listNode)) {
              dom.remove(listNode, true);
            }
          });
        });
        releasedParas = releasedParas.concat(paras);
      });
      return releasedParas;
    };
  };
  /**
   * @class editing.Typing
   *
   * Typing
   *
   */


  var Typing = function Typing() {
    // a Bullet instance to toggle lists off
    var bullet = new Bullet();
    /**
     * insert tab
     *
     * @param {jQuery} $editable
     * @param {WrappedRange} rng
     * @param {Number} tabsize
     */

    this.insertTab = function ($editable, rng, tabsize) {
      var tab = dom.createText(new Array(tabsize + 1).join(dom.NBSP_CHAR));
      rng = rng.deleteContents();
      rng.insertNode(tab, true);
      rng = range.create(tab, tabsize);
      rng.select();
    };
    /**
     * insert paragraph
     */


    this.insertParagraph = function () {
      var rng = range.create(); // deleteContents on range.

      rng = rng.deleteContents(); // Wrap range if it needs to be wrapped by paragraph

      rng = rng.wrapBodyInlineWithPara(); // finding paragraph

      var splitRoot = dom.ancestor(rng.sc, dom.isPara);
      var nextPara; // on paragraph: split paragraph

      if (splitRoot) {
        // if it is an empty line with li
        if (dom.isEmpty(splitRoot) && dom.isLi(splitRoot)) {
          // disable UL/OL and escape!
          bullet.toggleList(splitRoot.parentNode.nodeName);
          return; // if new line has content (not a line break)
        } else {
          nextPara = dom.splitTree(splitRoot, rng.getStartPoint());
          var emptyAnchors = dom.listDescendant(splitRoot, dom.isEmptyAnchor);
          emptyAnchors = emptyAnchors.concat(dom.listDescendant(nextPara, dom.isEmptyAnchor));
          $.each(emptyAnchors, function (idx, anchor) {
            dom.remove(anchor);
          });
        } // no paragraph: insert empty paragraph

      } else {
        var next = rng.sc.childNodes[rng.so];
        nextPara = $(dom.emptyPara)[0];

        if (next) {
          rng.sc.insertBefore(nextPara, next);
        } else {
          rng.sc.appendChild(nextPara);
        }
      }

      range.create(nextPara, 0).normalize().select();
    };
  };
  /**
   * @class editing.Table
   *
   * Table
   *
   */


  var Table = function Table() {
    /**
     * handle tab key
     *
     * @param {WrappedRange} rng
     * @param {Boolean} isShift
     */
    this.tab = function (rng, isShift) {
      var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);
      var table = dom.ancestor(cell, dom.isTable);
      var cells = dom.listDescendant(table, dom.isCell);
      var nextCell = list[isShift ? 'prev' : 'next'](cells, cell);

      if (nextCell) {
        range.create(nextCell, 0).select();
      }
    };
    /**
     * create empty table element
     *
     * @param {Number} rowCount
     * @param {Number} colCount
     * @return {Node}
     */


    this.createTable = function (colCount, rowCount) {
      var tds = [],
          tdHTML;

      for (var idxCol = 0; idxCol < colCount; idxCol++) {
        tds.push('<td>' + dom.blank + '</td>');
      }

      tdHTML = tds.join('');
      var trs = [],
          trHTML;

      for (var idxRow = 0; idxRow < rowCount; idxRow++) {
        trs.push('<tr>' + tdHTML + '</tr>');
      }

      trHTML = trs.join('');
      return $('<table class="table table-bordered">' + trHTML + '</table>')[0];
    };
  };

  var KEY_BOGUS = 'bogus';
  /**
   * @class editing.Editor
   *
   * Editor
   *
   */

  var Editor = function Editor(handler) {
    var self = this;
    var style = new Style();
    var table = new Table();
    var typing = new Typing();
    var bullet = new Bullet();
    /**
     * @method createRange
     *
     * create range
     *
     * @param {jQuery} $editable
     * @return {WrappedRange}
     */

    this.createRange = function ($editable) {
      this.focus($editable);
      return range.create();
    };
    /**
     * @method saveRange
     *
     * save current range
     *
     * @param {jQuery} $editable
     * @param {Boolean} [thenCollapse=false]
     */


    this.saveRange = function ($editable, thenCollapse) {
      this.focus($editable);
      $editable.data('range', range.create());

      if (thenCollapse) {
        range.create().collapse().select();
      }
    };
    /**
     * @method saveRange
     *
     * save current node list to $editable.data('childNodes')
     *
     * @param {jQuery} $editable
     */


    this.saveNode = function ($editable) {
      // copy child node reference
      var copy = [];

      for (var key = 0, len = $editable[0].childNodes.length; key < len; key++) {
        copy.push($editable[0].childNodes[key]);
      }

      $editable.data('childNodes', copy);
    };
    /**
     * @method restoreRange
     *
     * restore lately range
     *
     * @param {jQuery} $editable
     */


    this.restoreRange = function ($editable) {
      var rng = $editable.data('range');

      if (rng) {
        rng.select();
        this.focus($editable);
      }
    };
    /**
     * @method restoreNode
     *
     * restore lately node list
     *
     * @param {jQuery} $editable
     */


    this.restoreNode = function ($editable) {
      $editable.html('');
      var child = $editable.data('childNodes');

      for (var index = 0, len = child.length; index < len; index++) {
        $editable[0].appendChild(child[index]);
      }
    };
    /**
     * @method currentStyle
     *
     * current style
     *
     * @param {Node} target
     * @return {Object|Boolean} unfocus
     */


    this.currentStyle = function (target) {
      var rng = range.create();
      var styleInfo = rng && rng.isOnEditable() ? style.current(rng.normalize()) : {};

      if (dom.isImg(target)) {
        styleInfo.image = target;
      }

      return styleInfo;
    };
    /**
     * style from node
     *
     * @param {jQuery} $node
     * @return {Object}
     */


    this.styleFromNode = function ($node) {
      return style.fromNode($node);
    };

    var triggerOnBeforeChange = function triggerOnBeforeChange($editable) {
      var $holder = dom.makeLayoutInfo($editable).holder();
      handler.bindCustomEvent($holder, $editable.data('callbacks'), 'before.command')($editable.html(), $editable);
    };

    var triggerOnChange = function triggerOnChange($editable) {
      var $holder = dom.makeLayoutInfo($editable).holder();
      handler.bindCustomEvent($holder, $editable.data('callbacks'), 'change')($editable.html(), $editable);
    };
    /**
     * @method undo
     * undo
     * @param {jQuery} $editable
     */


    this.undo = function ($editable) {
      triggerOnBeforeChange($editable);
      $editable.data('NoteHistory').undo();
      triggerOnChange($editable);
    };
    /**
     * @method redo
     * redo
     * @param {jQuery} $editable
     */


    this.redo = function ($editable) {
      triggerOnBeforeChange($editable);
      $editable.data('NoteHistory').redo();
      triggerOnChange($editable);
    };
    /**
     * @method beforeCommand
     * before command
     * @param {jQuery} $editable
     */


    var beforeCommand = this.beforeCommand = function ($editable) {
      triggerOnBeforeChange($editable); // keep focus on editable before command execution

      self.focus($editable);
    };
    /**
     * @method afterCommand
     * after command
     * @param {jQuery} $editable
     * @param {Boolean} isPreventTrigger
     */


    var afterCommand = this.afterCommand = function ($editable, isPreventTrigger) {
      $editable.data('NoteHistory').recordUndo();

      if (!isPreventTrigger) {
        triggerOnChange($editable);
      }
    };
    /**
     * @method bold
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method italic
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method underline
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method strikethrough
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method formatBlock
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method superscript
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method subscript
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method justifyLeft
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method justifyCenter
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method justifyRight
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method justifyFull
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method formatBlock
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method removeFormat
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method backColor
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method foreColor
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method insertHorizontalRule
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /**
     * @method fontName
     *
     * change font name
     *
     * @param {jQuery} $editable
     * @param {Mixed} value
     */

    /* jshint ignore:start */
    // native commands(with execCommand), generate function for execCommand


    var commands = ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'formatBlock', 'removeFormat', 'backColor', 'foreColor', 'fontName'];

    for (var idx = 0, len = commands.length; idx < len; idx++) {
      this[commands[idx]] = function (sCmd) {
        return function ($editable, value) {
          beforeCommand($editable);
          document.execCommand(sCmd, false, value);
          afterCommand($editable, true);
        };
      }(commands[idx]);
    }
    /* jshint ignore:end */

    /**
     * @method tab
     *
     * handle tab key
     *
     * @param {jQuery} $editable
     * @param {Object} options
     */


    this.tab = function ($editable, options) {
      var rng = this.createRange($editable);

      if (rng.isCollapsed() && rng.isOnCell()) {
        table.tab(rng);
      } else {
        beforeCommand($editable);
        typing.insertTab($editable, rng, options.tabsize);
        afterCommand($editable);
      }
    };
    /**
     * @method untab
     *
     * handle shift+tab key
     *
     */


    this.untab = function ($editable) {
      var rng = this.createRange($editable);

      if (rng.isCollapsed() && rng.isOnCell()) {
        table.tab(rng, true);
      }
    };
    /**
     * @method insertParagraph
     *
     * insert paragraph
     *
     * @param {Node} $editable
     */


    this.insertParagraph = function ($editable) {
      beforeCommand($editable);
      typing.insertParagraph($editable);
      afterCommand($editable);
    };
    /**
     * @method insertOrderedList
     *
     * @param {jQuery} $editable
     */


    this.insertOrderedList = function ($editable) {
      beforeCommand($editable);
      bullet.insertOrderedList($editable);
      afterCommand($editable);
    };
    /**
     * @param {jQuery} $editable
     */


    this.insertUnorderedList = function ($editable) {
      beforeCommand($editable);
      bullet.insertUnorderedList($editable);
      afterCommand($editable);
    };
    /**
     * @param {jQuery} $editable
     */


    this.indent = function ($editable) {
      beforeCommand($editable);
      bullet.indent($editable);
      afterCommand($editable);
    };
    /**
     * @param {jQuery} $editable
     */


    this.outdent = function ($editable) {
      beforeCommand($editable);
      bullet.outdent($editable);
      afterCommand($editable);
    };
    /**
     * insert image
     *
     * @param {jQuery} $editable
     * @param {String} sUrl
     */


    this.insertImage = function ($editable, sUrl, filename) {
      async.createImage(sUrl, filename).then(function ($image) {
        beforeCommand($editable);
        $image.css({
          display: '',
          width: Math.min($editable.width(), $image.width())
        });
        range.create().insertNode($image[0]);
        range.createFromNodeAfter($image[0]).select();
        afterCommand($editable);
      }).fail(function () {
        var $holder = dom.makeLayoutInfo($editable).holder();
        handler.bindCustomEvent($holder, $editable.data('callbacks'), 'image.upload.error')();
      });
    };
    /**
     * @method insertNode
     * insert node
     * @param {Node} $editable
     * @param {Node} node
     */


    this.insertNode = function ($editable, node) {
      beforeCommand($editable);
      range.create().insertNode(node);
      range.createFromNodeAfter(node).select();
      afterCommand($editable);
    };
    /**
     * insert text
     * @param {Node} $editable
     * @param {String} text
     */


    this.insertText = function ($editable, text) {
      beforeCommand($editable);
      var textNode = range.create().insertNode(dom.createText(text));
      range.create(textNode, dom.nodeLength(textNode)).select();
      afterCommand($editable);
    };
    /**
     * paste HTML
     * @param {Node} $editable
     * @param {String} markup
     */


    this.pasteHTML = function ($editable, markup) {
      beforeCommand($editable);
      var contents = range.create().pasteHTML(markup);
      range.createFromNodeAfter(list.last(contents)).select();
      afterCommand($editable);
    };
    /**
     * formatBlock
     *
     * @param {jQuery} $editable
     * @param {String} tagName
     */


    this.formatBlock = function ($editable, tagName) {
      beforeCommand($editable); // [workaround] for MSIE, IE need `<`

      tagName = agent.isMSIE ? '<' + tagName + '>' : tagName;
      document.execCommand('FormatBlock', false, tagName);
      afterCommand($editable);
    };

    this.formatPara = function ($editable) {
      beforeCommand($editable);
      this.formatBlock($editable, 'P');
      afterCommand($editable);
    };
    /* jshint ignore:start */


    for (var idx = 1; idx <= 6; idx++) {
      this['formatH' + idx] = function (idx) {
        return function ($editable) {
          this.formatBlock($editable, 'H' + idx);
        };
      }(idx);
    }

    ;
    /* jshint ignore:end */

    /**
     * fontSize
     *
     * @param {jQuery} $editable
     * @param {String} value - px
     */

    this.fontSize = function ($editable, value) {
      var rng = range.create();

      if (rng.isCollapsed()) {
        var spans = style.styleNodes(rng);
        var firstSpan = list.head(spans);
        $(spans).css({
          'font-size': value + 'px'
        }); // [workaround] added styled bogus span for style
        //  - also bogus character needed for cursor position

        if (firstSpan && !dom.nodeLength(firstSpan)) {
          firstSpan.innerHTML = dom.ZERO_WIDTH_NBSP_CHAR;
          range.createFromNodeAfter(firstSpan.firstChild).select();
          $editable.data(KEY_BOGUS, firstSpan);
        }
      } else {
        beforeCommand($editable);
        $(style.styleNodes(rng)).css({
          'font-size': value + 'px'
        });
        afterCommand($editable);
      }
    };
    /**
     * insert horizontal rule
     * @param {jQuery} $editable
     */


    this.insertHorizontalRule = function ($editable) {
      beforeCommand($editable);
      var rng = range.create();
      var hrNode = rng.insertNode($('<HR/>')[0]);

      if (hrNode.nextSibling) {
        range.create(hrNode.nextSibling, 0).normalize().select();
      }

      afterCommand($editable);
    };
    /**
     * remove bogus node and character
     */


    this.removeBogus = function ($editable) {
      var bogusNode = $editable.data(KEY_BOGUS);

      if (!bogusNode) {
        return;
      }

      var textNode = list.find(list.from(bogusNode.childNodes), dom.isText);
      var bogusCharIdx = textNode.nodeValue.indexOf(dom.ZERO_WIDTH_NBSP_CHAR);

      if (bogusCharIdx !== -1) {
        textNode.deleteData(bogusCharIdx, 1);
      }

      if (dom.isEmpty(bogusNode)) {
        dom.remove(bogusNode);
      }

      $editable.removeData(KEY_BOGUS);
    };
    /**
     * lineHeight
     * @param {jQuery} $editable
     * @param {String} value
     */


    this.lineHeight = function ($editable, value) {
      beforeCommand($editable);
      style.stylePara(range.create(), {
        lineHeight: value
      });
      afterCommand($editable);
    };
    /**
     * unlink
     *
     * @type command
     *
     * @param {jQuery} $editable
     */


    this.unlink = function ($editable) {
      var rng = this.createRange($editable);

      if (rng.isOnAnchor()) {
        var anchor = dom.ancestor(rng.sc, dom.isAnchor);
        rng = range.createFromNode(anchor);
        rng.select();
        beforeCommand($editable);
        document.execCommand('unlink');
        afterCommand($editable);
      }
    };
    /**
     * create link (command)
     *
     * @param {jQuery} $editable
     * @param {Object} linkInfo
     * @param {Object} options
     */


    this.createLink = function ($editable, linkInfo, options) {
      var linkUrl = linkInfo.url;
      var linkText = linkInfo.text;
      var isNewWindow = linkInfo.isNewWindow;
      var rng = linkInfo.range || this.createRange($editable);
      var isTextChanged = rng.toString() !== linkText;
      options = options || dom.makeLayoutInfo($editable).editor().data('options');
      beforeCommand($editable);

      if (options.onCreateLink) {
        linkUrl = options.onCreateLink(linkUrl);
      }

      var anchors = [];

      if (isTextChanged) {
        // Create a new link when text changed.
        var anchor = rng.insertNode($('<A>' + linkText + '</A>')[0]);
        anchors.push(anchor);
      } else {
        anchors = style.styleNodes(rng, {
          nodeName: 'A',
          expandClosestSibling: true,
          onlyPartialContains: true
        });
      }

      $.each(anchors, function (idx, anchor) {
        $(anchor).attr('href', linkUrl);

        if (isNewWindow) {
          $(anchor).attr('target', '_blank');
        } else {
          $(anchor).removeAttr('target');
        }
      });
      var startRange = range.createFromNodeBefore(list.head(anchors));
      var startPoint = startRange.getStartPoint();
      var endRange = range.createFromNodeAfter(list.last(anchors));
      var endPoint = endRange.getEndPoint();
      range.create(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset).select();
      afterCommand($editable);
    };
    /**
     * returns link info
     *
     * @return {Object}
     * @return {WrappedRange} return.range
     * @return {String} return.text
     * @return {Boolean} [return.isNewWindow=true]
     * @return {String} [return.url=""]
     */


    this.getLinkInfo = function ($editable) {
      this.focus($editable);
      var rng = range.create().expand(dom.isAnchor); // Get the first anchor on range(for edit).

      var $anchor = $(list.head(rng.nodes(dom.isAnchor)));
      return {
        range: rng,
        text: rng.toString(),
        isNewWindow: $anchor.length ? $anchor.attr('target') === '_blank' : false,
        url: $anchor.length ? $anchor.attr('href') : ''
      };
    };
    /**
     * setting color
     *
     * @param {Node} $editable
     * @param {Object} sObjColor  color code
     * @param {String} sObjColor.foreColor foreground color
     * @param {String} sObjColor.backColor background color
     */


    this.color = function ($editable, sObjColor) {
      var oColor = JSON.parse(sObjColor);
      var foreColor = oColor.foreColor,
          backColor = oColor.backColor;
      beforeCommand($editable);

      if (foreColor) {
        document.execCommand('foreColor', false, foreColor);
      }

      if (backColor) {
        document.execCommand('backColor', false, backColor);
      }

      afterCommand($editable);
    };
    /**
     * insert Table
     *
     * @param {Node} $editable
     * @param {String} sDim dimension of table (ex : "5x5")
     */


    this.insertTable = function ($editable, sDim) {
      var dimension = sDim.split('x');
      beforeCommand($editable);
      var rng = range.create().deleteContents();
      rng.insertNode(table.createTable(dimension[0], dimension[1]));
      afterCommand($editable);
    };
    /**
     * float me
     *
     * @param {jQuery} $editable
     * @param {String} value
     * @param {jQuery} $target
     */


    this.floatMe = function ($editable, value, $target) {
      beforeCommand($editable); // bootstrap

      $target.removeClass('pull-left pull-right');

      if (value && value !== 'none') {
        $target.addClass('pull-' + value);
      } // fallback for non-bootstrap


      $target.css('float', value);
      afterCommand($editable);
    };
    /**
     * change image shape
     *
     * @param {jQuery} $editable
     * @param {String} value css class
     * @param {Node} $target
     */


    this.imageShape = function ($editable, value, $target) {
      beforeCommand($editable);
      $target.removeClass('img-rounded img-circle img-thumbnail');

      if (value) {
        $target.addClass(value);
      }

      afterCommand($editable);
    };
    /**
     * resize overlay element
     * @param {jQuery} $editable
     * @param {String} value
     * @param {jQuery} $target - target element
     */


    this.resize = function ($editable, value, $target) {
      beforeCommand($editable);
      $target.css({
        width: value * 100 + '%',
        height: ''
      });
      afterCommand($editable);
    };
    /**
     * @param {Position} pos
     * @param {jQuery} $target - target element
     * @param {Boolean} [bKeepRatio] - keep ratio
     */


    this.resizeTo = function (pos, $target, bKeepRatio) {
      var imageSize;

      if (bKeepRatio) {
        var newRatio = pos.y / pos.x;
        var ratio = $target.data('ratio');
        imageSize = {
          width: ratio > newRatio ? pos.x : pos.y / ratio,
          height: ratio > newRatio ? pos.x * ratio : pos.y
        };
      } else {
        imageSize = {
          width: pos.x,
          height: pos.y
        };
      }

      $target.css(imageSize);
    };
    /**
     * remove media object
     *
     * @param {jQuery} $editable
     * @param {String} value - dummy argument (for keep interface)
     * @param {jQuery} $target - target element
     */


    this.removeMedia = function ($editable, value, $target) {
      beforeCommand($editable);
      $target.detach();
      handler.bindCustomEvent($(), $editable.data('callbacks'), 'media.delete')($target, $editable);
      afterCommand($editable);
    };
    /**
     * set focus
     *
     * @param $editable
     */


    this.focus = function ($editable) {
      $editable.focus(); // [workaround] for firefox bug http://goo.gl/lVfAaI

      if (agent.isFF && !range.create().isOnEditable()) {
        range.createFromNode($editable[0]).normalize().collapse().select();
      }
    };
    /**
     * returns whether contents is empty or not.
     *
     * @param {jQuery} $editable
     * @return {Boolean}
     */


    this.isEmpty = function ($editable) {
      return dom.isEmpty($editable[0]) || dom.emptyPara === $editable.html();
    };
  };
  /**
   * @class module.Button
   *
   * Button
   */


  var Button = function Button() {
    /**
     * update button status
     *
     * @param {jQuery} $container
     * @param {Object} styleInfo
     */
    this.update = function ($container, styleInfo) {
      /**
       * handle dropdown's check mark (for fontname, fontsize, lineHeight).
       * @param {jQuery} $btn
       * @param {Number} value
       */
      var checkDropdownMenu = function checkDropdownMenu($btn, value) {
        $btn.find('.dropdown-menu li a').each(function () {
          // always compare string to avoid creating another func.
          var isChecked = $(this).data('value') + '' === value + '';
          this.className = isChecked ? 'checked' : '';
        });
      };
      /**
       * update button state(active or not).
       *
       * @private
       * @param {String} selector
       * @param {Function} pred
       */


      var btnState = function btnState(selector, pred) {
        var $btn = $container.find(selector);
        $btn.toggleClass('active', pred());
      };

      if (styleInfo.image) {
        var $img = $(styleInfo.image);
        btnState('button[data-event="imageShape"][data-value="img-rounded"]', function () {
          return $img.hasClass('img-rounded');
        });
        btnState('button[data-event="imageShape"][data-value="img-circle"]', function () {
          return $img.hasClass('img-circle');
        });
        btnState('button[data-event="imageShape"][data-value="img-thumbnail"]', function () {
          return $img.hasClass('img-thumbnail');
        });
        btnState('button[data-event="imageShape"]:not([data-value])', function () {
          return !$img.is('.img-rounded, .img-circle, .img-thumbnail');
        });
        var imgFloat = $img.css('float');
        btnState('button[data-event="floatMe"][data-value="left"]', function () {
          return imgFloat === 'left';
        });
        btnState('button[data-event="floatMe"][data-value="right"]', function () {
          return imgFloat === 'right';
        });
        btnState('button[data-event="floatMe"][data-value="none"]', function () {
          return imgFloat !== 'left' && imgFloat !== 'right';
        });
        var style = $img.attr('style');
        btnState('button[data-event="resize"][data-value="1"]', function () {
          return !!/(^|\s)(max-)?width\s*:\s*100%/.test(style);
        });
        btnState('button[data-event="resize"][data-value="0.5"]', function () {
          return !!/(^|\s)(max-)?width\s*:\s*50%/.test(style);
        });
        btnState('button[data-event="resize"][data-value="0.25"]', function () {
          return !!/(^|\s)(max-)?width\s*:\s*25%/.test(style);
        });
        return;
      } // fontname


      var $fontname = $container.find('.note-fontname');

      if ($fontname.length) {
        var selectedFont = styleInfo['font-family'];

        if (!!selectedFont) {
          var list = selectedFont.split(',');

          for (var i = 0, len = list.length; i < len; i++) {
            selectedFont = list[i].replace(/[\'\"]/g, '').replace(/\s+$/, '').replace(/^\s+/, '');

            if (agent.isFontInstalled(selectedFont)) {
              break;
            }
          }

          $fontname.find('.note-current-fontname').text(selectedFont);
          checkDropdownMenu($fontname, selectedFont);
        }
      } // fontsize


      var $fontsize = $container.find('.note-fontsize');
      $fontsize.find('.note-current-fontsize').text(styleInfo['font-size']);
      checkDropdownMenu($fontsize, parseFloat(styleInfo['font-size'])); // lineheight

      var $lineHeight = $container.find('.note-height');
      checkDropdownMenu($lineHeight, parseFloat(styleInfo['line-height']));
      btnState('button[data-event="bold"]', function () {
        return styleInfo['font-bold'] === 'bold';
      });
      btnState('button[data-event="italic"]', function () {
        return styleInfo['font-italic'] === 'italic';
      });
      btnState('button[data-event="underline"]', function () {
        return styleInfo['font-underline'] === 'underline';
      });
      btnState('button[data-event="strikethrough"]', function () {
        return styleInfo['font-strikethrough'] === 'strikethrough';
      });
      btnState('button[data-event="superscript"]', function () {
        return styleInfo['font-superscript'] === 'superscript';
      });
      btnState('button[data-event="subscript"]', function () {
        return styleInfo['font-subscript'] === 'subscript';
      });
      btnState('button[data-event="justifyLeft"]', function () {
        return styleInfo['text-align'] === 'left' || styleInfo['text-align'] === 'start';
      });
      btnState('button[data-event="justifyCenter"]', function () {
        return styleInfo['text-align'] === 'center';
      });
      btnState('button[data-event="justifyRight"]', function () {
        return styleInfo['text-align'] === 'right';
      });
      btnState('button[data-event="justifyFull"]', function () {
        return styleInfo['text-align'] === 'justify';
      });
      btnState('button[data-event="insertUnorderedList"]', function () {
        return styleInfo['list-style'] === 'unordered';
      });
      btnState('button[data-event="insertOrderedList"]', function () {
        return styleInfo['list-style'] === 'ordered';
      });
    };
    /**
     * update recent color
     *
     * @param {Node} button
     * @param {String} eventName
     * @param {Mixed} value
     */


    this.updateRecentColor = function (button, eventName, value) {
      var $color = $(button).closest('.note-color');
      var $recentColor = $color.find('.note-recent-color');
      var colorInfo = JSON.parse($recentColor.attr('data-value'));
      colorInfo[eventName] = value;
      $recentColor.attr('data-value', JSON.stringify(colorInfo));
      var sKey = eventName === 'backColor' ? 'background-color' : 'color';
      $recentColor.find('i').css(sKey, value);
    };
  };
  /**
   * @class module.Toolbar
   *
   * Toolbar
   */


  var Toolbar = function Toolbar() {
    var button = new Button();

    this.update = function ($toolbar, styleInfo) {
      button.update($toolbar, styleInfo);
    };
    /**
     * @param {Node} button
     * @param {String} eventName
     * @param {String} value
     */


    this.updateRecentColor = function (buttonNode, eventName, value) {
      button.updateRecentColor(buttonNode, eventName, value);
    };
    /**
     * activate buttons exclude codeview
     * @param {jQuery} $toolbar
     */


    this.activate = function ($toolbar) {
      $toolbar.find('button').not('button[data-event="codeview"]').removeClass('disabled');
    };
    /**
     * deactivate buttons exclude codeview
     * @param {jQuery} $toolbar
     */


    this.deactivate = function ($toolbar) {
      $toolbar.find('button').not('button[data-event="codeview"]').addClass('disabled');
    };
    /**
     * @param {jQuery} $container
     * @param {Boolean} [bFullscreen=false]
     */


    this.updateFullscreen = function ($container, bFullscreen) {
      var $btn = $container.find('button[data-event="fullscreen"]');
      $btn.toggleClass('active', bFullscreen);
    };
    /**
     * @param {jQuery} $container
     * @param {Boolean} [isCodeview=false]
     */


    this.updateCodeview = function ($container, isCodeview) {
      var $btn = $container.find('button[data-event="codeview"]');
      $btn.toggleClass('active', isCodeview);

      if (isCodeview) {
        this.deactivate($container);
      } else {
        this.activate($container);
      }
    };
    /**
     * get button in toolbar
     *
     * @param {jQuery} $editable
     * @param {String} name
     * @return {jQuery}
     */


    this.get = function ($editable, name) {
      var $toolbar = dom.makeLayoutInfo($editable).toolbar();
      return $toolbar.find('[data-name=' + name + ']');
    };
    /**
     * set button state
     * @param {jQuery} $editable
     * @param {String} name
     * @param {Boolean} [isActive=true]
     */


    this.setButtonState = function ($editable, name, isActive) {
      isActive = isActive === false ? false : true;
      var $button = this.get($editable, name);
      $button.toggleClass('active', isActive);
    };
  };

  var EDITABLE_PADDING = 24;

  var Statusbar = function Statusbar() {
    var $document = $(document);

    this.attach = function (layoutInfo, options) {
      if (!options.disableResizeEditor) {
        layoutInfo.statusbar().on('mousedown', hStatusbarMousedown);
      }
    };
    /**
     * `mousedown` event handler on statusbar
     *
     * @param {MouseEvent} event
     */


    var hStatusbarMousedown = function hStatusbarMousedown(event) {
      event.preventDefault();
      event.stopPropagation();
      var $editable = dom.makeLayoutInfo(event.target).editable();
      var editableTop = $editable.offset().top - $document.scrollTop();
      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);
      var options = layoutInfo.editor().data('options');
      $document.on('mousemove', function (event) {
        var nHeight = event.clientY - (editableTop + EDITABLE_PADDING);
        nHeight = options.minHeight > 0 ? Math.max(nHeight, options.minHeight) : nHeight;
        nHeight = options.maxHeight > 0 ? Math.min(nHeight, options.maxHeight) : nHeight;
        $editable.height(nHeight);
      }).one('mouseup', function () {
        $document.off('mousemove');
      });
    };
  };
  /**
   * @class module.Popover
   *
   * Popover (http://getbootstrap.com/javascript/#popovers)
   *
   */


  var Popover = function Popover() {
    var button = new Button();
    /**
     * returns position from placeholder
     *
     * @private
     * @param {Node} placeholder
     * @param {Object} options
     * @param {Boolean} options.isAirMode
     * @return {Position}
     */

    var posFromPlaceholder = function posFromPlaceholder(placeholder, options) {
      var isAirMode = options && options.isAirMode;
      var isLeftTop = options && options.isLeftTop;
      var $placeholder = $(placeholder);
      var pos = isAirMode ? $placeholder.offset() : $placeholder.position();
      var height = isLeftTop ? 0 : $placeholder.outerHeight(true); // include margin
      // popover below placeholder.

      return {
        left: pos.left,
        top: pos.top + height
      };
    };
    /**
     * show popover
     *
     * @private
     * @param {jQuery} popover
     * @param {Position} pos
     */


    var showPopover = function showPopover($popover, pos) {
      $popover.css({
        display: 'block',
        left: pos.left,
        top: pos.top
      });
    };

    var PX_POPOVER_ARROW_OFFSET_X = 20;
    /**
     * update current state
     * @param {jQuery} $popover - popover container
     * @param {Object} styleInfo - style object
     * @param {Boolean} isAirMode
     */

    this.update = function ($popover, styleInfo, isAirMode) {
      button.update($popover, styleInfo);
      var $linkPopover = $popover.find('.note-link-popover');

      if (styleInfo.anchor) {
        var $anchor = $linkPopover.find('a');
        var href = $(styleInfo.anchor).attr('href');
        var target = $(styleInfo.anchor).attr('target');
        $anchor.attr('href', href).html(href);

        if (!target) {
          $anchor.removeAttr('target');
        } else {
          $anchor.attr('target', '_blank');
        }

        showPopover($linkPopover, posFromPlaceholder(styleInfo.anchor, {
          isAirMode: isAirMode
        }));
      } else {
        $linkPopover.hide();
      }

      var $imagePopover = $popover.find('.note-image-popover');

      if (styleInfo.image) {
        showPopover($imagePopover, posFromPlaceholder(styleInfo.image, {
          isAirMode: isAirMode,
          isLeftTop: true
        }));
      } else {
        $imagePopover.hide();
      }

      var $airPopover = $popover.find('.note-air-popover');

      if (isAirMode && styleInfo.range && !styleInfo.range.isCollapsed()) {
        var rect = list.last(styleInfo.range.getClientRects());

        if (rect) {
          var bnd = func.rect2bnd(rect);
          showPopover($airPopover, {
            left: Math.max(bnd.left + bnd.width / 2 - PX_POPOVER_ARROW_OFFSET_X, 0),
            top: bnd.top + bnd.height
          });
        }
      } else {
        $airPopover.hide();
      }
    };
    /**
     * @param {Node} button
     * @param {String} eventName
     * @param {String} value
     */


    this.updateRecentColor = function (button, eventName, value) {
      button.updateRecentColor(button, eventName, value);
    };
    /**
     * hide all popovers
     * @param {jQuery} $popover - popover container
     */


    this.hide = function ($popover) {
      $popover.children().hide();
    };
  };
  /**
   * @class module.Handle
   *
   * Handle
   */


  var Handle = function Handle(handler) {
    var $document = $(document);
    /**
     * `mousedown` event handler on $handle
     *  - controlSizing: resize image
     *
     * @param {MouseEvent} event
     */

    var hHandleMousedown = function hHandleMousedown(event) {
      if (dom.isControlSizing(event.target)) {
        event.preventDefault();
        event.stopPropagation();
        var layoutInfo = dom.makeLayoutInfo(event.target),
            $handle = layoutInfo.handle(),
            $popover = layoutInfo.popover(),
            $editable = layoutInfo.editable(),
            $editor = layoutInfo.editor();
        var target = $handle.find('.note-control-selection').data('target'),
            $target = $(target),
            posStart = $target.offset(),
            scrollTop = $document.scrollTop();
        var isAirMode = $editor.data('options').airMode;
        $document.on('mousemove', function (event) {
          handler.invoke('editor.resizeTo', {
            x: event.clientX - posStart.left,
            y: event.clientY - (posStart.top - scrollTop)
          }, $target, !event.shiftKey);
          handler.invoke('handle.update', $handle, {
            image: target
          }, isAirMode);
          handler.invoke('popover.update', $popover, {
            image: target
          }, isAirMode);
        }).one('mouseup', function () {
          $document.off('mousemove');
          handler.invoke('editor.afterCommand', $editable);
        });

        if (!$target.data('ratio')) {
          // original ratio.
          $target.data('ratio', $target.height() / $target.width());
        }
      }
    };

    this.attach = function (layoutInfo) {
      layoutInfo.handle().on('mousedown', hHandleMousedown);
    };
    /**
     * update handle
     * @param {jQuery} $handle
     * @param {Object} styleInfo
     * @param {Boolean} isAirMode
     */


    this.update = function ($handle, styleInfo, isAirMode) {
      var $selection = $handle.find('.note-control-selection');

      if (styleInfo.image) {
        var $image = $(styleInfo.image);
        var pos = isAirMode ? $image.offset() : $image.position(); // include margin

        var imageSize = {
          w: $image.outerWidth(true),
          h: $image.outerHeight(true)
        };
        $selection.css({
          display: 'block',
          left: pos.left,
          top: pos.top,
          width: imageSize.w,
          height: imageSize.h
        }).data('target', styleInfo.image); // save current image element.

        var sizingText = imageSize.w + 'x' + imageSize.h;
        $selection.find('.note-control-selection-info').text(sizingText);
      } else {
        $selection.hide();
      }
    };
    /**
     * hide
     *
     * @param {jQuery} $handle
     */


    this.hide = function ($handle) {
      $handle.children().hide();
    };
  };

  var Fullscreen = function Fullscreen(handler) {
    var $window = $(window);
    var $scrollbar = $('html, body');
    /**
     * toggle fullscreen
     *
     * @param {Object} layoutInfo
     */

    this.toggle = function (layoutInfo) {
      var $editor = layoutInfo.editor(),
          $toolbar = layoutInfo.toolbar(),
          $editable = layoutInfo.editable(),
          $codable = layoutInfo.codable();

      var resize = function resize(size) {
        $editable.css('height', size.h);
        $codable.css('height', size.h);

        if ($codable.data('cmeditor')) {
          $codable.data('cmeditor').setsize(null, size.h);
        }
      };

      $editor.toggleClass('fullscreen');
      var isFullscreen = $editor.hasClass('fullscreen');

      if (isFullscreen) {
        $editable.data('orgheight', $editable.css('height'));
        $window.on('resize', function () {
          resize({
            h: $window.height() - $toolbar.outerHeight()
          });
        }).trigger('resize');
        $scrollbar.css('overflow', 'hidden');
      } else {
        $window.off('resize');
        resize({
          h: $editable.data('orgheight')
        });
        $scrollbar.css('overflow', 'visible');
      }

      handler.invoke('toolbar.updateFullscreen', $toolbar, isFullscreen);
    };
  };

  var CodeMirror;

  if (agent.hasCodeMirror) {
    if (agent.isSupportAmd) {
      require(['CodeMirror'], function (cm) {
        CodeMirror = cm;
      });
    } else {
      CodeMirror = window.CodeMirror;
    }
  }
  /**
   * @class Codeview
   */


  var Codeview = function Codeview(handler) {
    this.sync = function (layoutInfo) {
      var isCodeview = handler.invoke('codeview.isActivated', layoutInfo);

      if (isCodeview && agent.hasCodeMirror) {
        layoutInfo.codable().data('cmEditor').save();
      }
    };
    /**
     * @param {Object} layoutInfo
     * @return {Boolean}
     */


    this.isActivated = function (layoutInfo) {
      var $editor = layoutInfo.editor();
      return $editor.hasClass('codeview');
    };
    /**
     * toggle codeview
     *
     * @param {Object} layoutInfo
     */


    this.toggle = function (layoutInfo) {
      if (this.isActivated(layoutInfo)) {
        this.deactivate(layoutInfo);
      } else {
        this.activate(layoutInfo);
      }
    };
    /**
     * activate code view
     *
     * @param {Object} layoutInfo
     */


    this.activate = function (layoutInfo) {
      var $editor = layoutInfo.editor(),
          $toolbar = layoutInfo.toolbar(),
          $editable = layoutInfo.editable(),
          $codable = layoutInfo.codable(),
          $popover = layoutInfo.popover(),
          $handle = layoutInfo.handle();
      var options = $editor.data('options');
      $codable.val(dom.html($editable, options.prettifyHtml));
      $codable.height($editable.height());
      handler.invoke('toolbar.updateCodeview', $toolbar, true);
      handler.invoke('popover.hide', $popover);
      handler.invoke('handle.hide', $handle);
      $editor.addClass('codeview');
      $codable.focus(); // activate CodeMirror as codable

      if (agent.hasCodeMirror) {
        var cmEditor = CodeMirror.fromTextArea($codable[0], options.codemirror); // CodeMirror TernServer

        if (options.codemirror.tern) {
          var server = new CodeMirror.TernServer(options.codemirror.tern);
          cmEditor.ternServer = server;
          cmEditor.on('cursorActivity', function (cm) {
            server.updateArgHints(cm);
          });
        } // CodeMirror hasn't Padding.


        cmEditor.setSize(null, $editable.outerHeight());
        $codable.data('cmEditor', cmEditor);
      }
    };
    /**
     * deactivate code view
     *
     * @param {Object} layoutInfo
     */


    this.deactivate = function (layoutInfo) {
      var $holder = layoutInfo.holder(),
          $editor = layoutInfo.editor(),
          $toolbar = layoutInfo.toolbar(),
          $editable = layoutInfo.editable(),
          $codable = layoutInfo.codable();
      var options = $editor.data('options'); // deactivate CodeMirror as codable

      if (agent.hasCodeMirror) {
        var cmEditor = $codable.data('cmEditor');
        $codable.val(cmEditor.getValue());
        cmEditor.toTextArea();
      }

      var value = dom.value($codable, options.prettifyHtml) || dom.emptyPara;
      var isChange = $editable.html() !== value;
      $editable.html(value);
      $editable.height(options.height ? $codable.height() : 'auto');
      $editor.removeClass('codeview');

      if (isChange) {
        handler.bindCustomEvent($holder, $editable.data('callbacks'), 'change')($editable.html(), $editable);
      }

      $editable.focus();
      handler.invoke('toolbar.updateCodeview', $toolbar, false);
    };
  };

  var DragAndDrop = function DragAndDrop(handler) {
    var $document = $(document);
    /**
     * attach Drag and Drop Events
     *
     * @param {Object} layoutInfo - layout Informations
     * @param {Object} options
     */

    this.attach = function (layoutInfo, options) {
      if (options.airMode || options.disableDragAndDrop) {
        // prevent default drop event
        $document.on('drop', function (e) {
          e.preventDefault();
        });
      } else {
        this.attachDragAndDropEvent(layoutInfo, options);
      }
    };
    /**
     * attach Drag and Drop Events
     *
     * @param {Object} layoutInfo - layout Informations
     * @param {Object} options
     */


    this.attachDragAndDropEvent = function (layoutInfo, options) {
      var collection = $(),
          $editor = layoutInfo.editor(),
          $dropzone = layoutInfo.dropzone(),
          $dropzoneMessage = $dropzone.find('.note-dropzone-message'); // show dropzone on dragenter when dragging a object to document
      // -but only if the editor is visible, i.e. has a positive width and height

      $document.on('dragenter', function (e) {
        var isCodeview = handler.invoke('codeview.isActivated', layoutInfo);
        var hasEditorSize = $editor.width() > 0 && $editor.height() > 0;

        if (!isCodeview && !collection.length && hasEditorSize) {
          $editor.addClass('dragover');
          $dropzone.width($editor.width());
          $dropzone.height($editor.height());
          $dropzoneMessage.text(options.langInfo.image.dragImageHere);
        }

        collection = collection.add(e.target);
      }).on('dragleave', function (e) {
        collection = collection.not(e.target);

        if (!collection.length) {
          $editor.removeClass('dragover');
        }
      }).on('drop', function () {
        collection = $();
        $editor.removeClass('dragover');
      }); // change dropzone's message on hover.

      $dropzone.on('dragenter', function () {
        $dropzone.addClass('hover');
        $dropzoneMessage.text(options.langInfo.image.dropImage);
      }).on('dragleave', function () {
        $dropzone.removeClass('hover');
        $dropzoneMessage.text(options.langInfo.image.dragImageHere);
      }); // attach dropImage

      $dropzone.on('drop', function (event) {
        var dataTransfer = event.originalEvent.dataTransfer;
        var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);

        if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {
          event.preventDefault();
          layoutInfo.editable().focus();
          handler.insertImages(layoutInfo, dataTransfer.files);
        } else {
          var insertNodefunc = function insertNodefunc() {
            layoutInfo.holder().summernote('insertNode', this);
          };

          for (var i = 0, len = dataTransfer.types.length; i < len; i++) {
            var type = dataTransfer.types[i];
            var content = dataTransfer.getData(type);

            if (type.toLowerCase().indexOf('text') > -1) {
              layoutInfo.holder().summernote('pasteHTML', content);
            } else {
              $(content).each(insertNodefunc);
            }
          }
        }
      }).on('dragover', false); // prevent default dragover event
    };
  };

  var Clipboard = function Clipboard(handler) {
    var $paste;

    this.attach = function (layoutInfo) {
      // [workaround] getting image from clipboard
      //  - IE11 and Firefox: CTRL+v hook
      //  - Webkit: event.clipboardData
      if (agent.isMSIE && agent.browserVersion > 10 || agent.isFF) {
        $paste = $('<div />').attr('contenteditable', true).css({
          position: 'absolute',
          left: -100000,
          opacity: 0
        });
        layoutInfo.editable().on('keydown', function (e) {
          if (e.ctrlKey && e.keyCode === key.code.V) {
            handler.invoke('saveRange', layoutInfo.editable());
            $paste.focus();
            setTimeout(function () {
              pasteByHook(layoutInfo);
            }, 0);
          }
        });
        layoutInfo.editable().before($paste);
      } else {
        layoutInfo.editable().on('paste', pasteByEvent);
      }
    };

    var pasteByHook = function pasteByHook(layoutInfo) {
      var $editable = layoutInfo.editable();
      var node = $paste[0].firstChild;

      if (dom.isImg(node)) {
        var dataURI = node.src;
        var decodedData = atob(dataURI.split(',')[1]);
        var array = new Uint8Array(decodedData.length);

        for (var i = 0; i < decodedData.length; i++) {
          array[i] = decodedData.charCodeAt(i);
        }

        var blob = new Blob([array], {
          type: 'image/png'
        });
        blob.name = 'clipboard.png';
        handler.invoke('restoreRange', $editable);
        handler.invoke('focus', $editable);
        handler.insertImages(layoutInfo, [blob]);
      } else {
        var pasteContent = $('<div />').html($paste.html()).html();
        handler.invoke('restoreRange', $editable);
        handler.invoke('focus', $editable);

        if (pasteContent) {
          handler.invoke('pasteHTML', $editable, pasteContent);
        }
      }

      $paste.empty();
    };
    /**
     * paste by clipboard event
     *
     * @param {Event} event
     */


    var pasteByEvent = function pasteByEvent(event) {
      var clipboardData = event.originalEvent.clipboardData;
      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);
      var $editable = layoutInfo.editable();

      if (clipboardData && clipboardData.items && clipboardData.items.length) {
        var item = list.head(clipboardData.items);

        if (item.kind === 'file' && item.type.indexOf('image/') !== -1) {
          handler.insertImages(layoutInfo, [item.getAsFile()]);
        }

        handler.invoke('editor.afterCommand', $editable);
      }
    };
  };

  var LinkDialog = function LinkDialog(handler) {
    /**
     * toggle button status
     *
     * @private
     * @param {jQuery} $btn
     * @param {Boolean} isEnable
     */
    var toggleBtn = function toggleBtn($btn, isEnable) {
      $btn.toggleClass('disabled', !isEnable);
      $btn.attr('disabled', !isEnable);
    };
    /**
     * bind enter key
     *
     * @private
     * @param {jQuery} $input
     * @param {jQuery} $btn
     */


    var bindEnterKey = function bindEnterKey($input, $btn) {
      $input.on('keypress', function (event) {
        if (event.keyCode === key.code.ENTER) {
          $btn.trigger('click');
        }
      });
    };
    /**
     * Show link dialog and set event handlers on dialog controls.
     *
     * @param {jQuery} $editable
     * @param {jQuery} $dialog
     * @param {Object} linkInfo
     * @return {Promise}
     */


    this.showLinkDialog = function ($editable, $dialog, linkInfo) {
      return $.Deferred(function (deferred) {
        var $linkDialog = $dialog.find('.note-link-dialog');
        var $linkText = $linkDialog.find('.note-link-text'),
            $linkUrl = $linkDialog.find('.note-link-url'),
            $linkBtn = $linkDialog.find('.note-link-btn'),
            $openInNewWindow = $linkDialog.find('input[type=checkbox]');
        $linkDialog.one('shown.bs.modal', function () {
          $linkText.val(linkInfo.text);
          $linkText.on('input', function () {
            toggleBtn($linkBtn, $linkText.val() && $linkUrl.val()); // if linktext was modified by keyup,
            // stop cloning text from linkUrl

            linkInfo.text = $linkText.val();
          }); // Block added to the original library (@see PIM-10577)

          $linkText.on('paste', function () {
            setTimeout(function () {
              toggleBtn($linkBtn, $linkText.val() && $linkUrl.val()); // if linktext was modified by keyup,
              // stop cloning text from linkUrl

              linkInfo.text = $linkText.val();
            }, 0);
          }); // if no url was given, copy text to url

          if (!linkInfo.url) {
            linkInfo.url = linkInfo.text || 'http://';
            toggleBtn($linkBtn, linkInfo.text);
          }

          $linkUrl.on('input', function () {
            // display same link on `Text to display` input
            // when create a new link
            if (!linkInfo.text) {
              $linkText.val($linkUrl.val());
            }

            toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());
          }).val(linkInfo.url).trigger('focus').trigger('select'); // Block added to the original library (@see PIM-10577)

          $linkUrl.on('paste', function () {
            setTimeout(function () {
              // display same link on `Text to display` input
              // when create a new link
              if (!linkInfo.text) {
                $linkText.val($linkUrl.val());
              }

              toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());
            }, 0);
          }).val(linkInfo.url).trigger('focus').trigger('select');
          bindEnterKey($linkUrl, $linkBtn);
          bindEnterKey($linkText, $linkBtn);
          $openInNewWindow.prop('checked', linkInfo.isNewWindow);
          $linkBtn.one('click', function (event) {
            event.preventDefault();
            deferred.resolve({
              range: linkInfo.range,
              url: $linkUrl.val(),
              text: $linkText.val(),
              isNewWindow: $openInNewWindow.is(':checked')
            });
            $linkDialog.modal('hide');
          });
        }).one('hidden.bs.modal', function () {
          // detach events
          $linkText.off('input keypress');
          $linkUrl.off('input keypress');
          $linkBtn.off('click');

          if (deferred.state() === 'pending') {
            deferred.reject();
          }
        }).modal('show');
      }).promise();
    };
    /**
     * @param {Object} layoutInfo
     */


    this.show = function (layoutInfo) {
      var $editor = layoutInfo.editor(),
          $dialog = layoutInfo.dialog(),
          $editable = layoutInfo.editable(),
          $popover = layoutInfo.popover(),
          linkInfo = handler.invoke('editor.getLinkInfo', $editable);
      var options = $editor.data('options');
      handler.invoke('editor.saveRange', $editable);
      this.showLinkDialog($editable, $dialog, linkInfo).then(function (linkInfo) {
        handler.invoke('editor.restoreRange', $editable);
        handler.invoke('editor.createLink', $editable, linkInfo, options); // hide popover after creating link

        handler.invoke('popover.hide', $popover);
      }).fail(function () {
        handler.invoke('editor.restoreRange', $editable);
      });
    };
  };

  var ImageDialog = function ImageDialog(handler) {
    /**
     * toggle button status
     *
     * @private
     * @param {jQuery} $btn
     * @param {Boolean} isEnable
     */
    var toggleBtn = function toggleBtn($btn, isEnable) {
      $btn.toggleClass('disabled', !isEnable);
      $btn.attr('disabled', !isEnable);
    };
    /**
     * bind enter key
     *
     * @private
     * @param {jQuery} $input
     * @param {jQuery} $btn
     */


    var bindEnterKey = function bindEnterKey($input, $btn) {
      $input.on('keypress', function (event) {
        if (event.keyCode === key.code.ENTER) {
          $btn.trigger('click');
        }
      });
    };

    this.show = function (layoutInfo) {
      var $dialog = layoutInfo.dialog(),
          $editable = layoutInfo.editable();
      handler.invoke('editor.saveRange', $editable);
      this.showImageDialog($editable, $dialog).then(function (data) {
        handler.invoke('editor.restoreRange', $editable);

        if (typeof data === 'string') {
          // image url
          handler.invoke('editor.insertImage', $editable, data);
        } else {
          // array of files
          handler.insertImages(layoutInfo, data);
        }
      }).fail(function () {
        handler.invoke('editor.restoreRange', $editable);
      });
    };
    /**
     * show image dialog
     *
     * @param {jQuery} $editable
     * @param {jQuery} $dialog
     * @return {Promise}
     */


    this.showImageDialog = function ($editable, $dialog) {
      return $.Deferred(function (deferred) {
        var $imageDialog = $dialog.find('.note-image-dialog');
        var $imageInput = $dialog.find('.note-image-input'),
            $imageUrl = $dialog.find('.note-image-url'),
            $imageBtn = $dialog.find('.note-image-btn');
        $imageDialog.one('shown.bs.modal', function () {
          // Cloning imageInput to clear element.
          $imageInput.replaceWith($imageInput.clone().on('change', function () {
            deferred.resolve(this.files || this.value);
            $imageDialog.modal('hide');
          }).val(''));
          $imageBtn.click(function (event) {
            event.preventDefault();
            deferred.resolve($imageUrl.val());
            $imageDialog.modal('hide');
          });
          $imageUrl.on('keyup paste', function (event) {
            var url;

            if (event.type === 'paste') {
              url = event.originalEvent.clipboardData.getData('text');
            } else {
              url = $imageUrl.val();
            }

            toggleBtn($imageBtn, url);
          }).val('').trigger('focus');
          bindEnterKey($imageUrl, $imageBtn);
        }).one('hidden.bs.modal', function () {
          $imageInput.off('change');
          $imageUrl.off('keyup paste keypress');
          $imageBtn.off('click');

          if (deferred.state() === 'pending') {
            deferred.reject();
          }
        }).modal('show');
      });
    };
  };

  var HelpDialog = function HelpDialog(handler) {
    /**
     * show help dialog
     *
     * @param {jQuery} $editable
     * @param {jQuery} $dialog
     * @return {Promise}
     */
    this.showHelpDialog = function ($editable, $dialog) {
      return $.Deferred(function (deferred) {
        var $helpDialog = $dialog.find('.note-help-dialog');
        $helpDialog.one('hidden.bs.modal', function () {
          deferred.resolve();
        }).modal('show');
      }).promise();
    };
    /**
     * @param {Object} layoutInfo
     */


    this.show = function (layoutInfo) {
      var $dialog = layoutInfo.dialog(),
          $editable = layoutInfo.editable();
      handler.invoke('editor.saveRange', $editable, true);
      this.showHelpDialog($editable, $dialog).then(function () {
        handler.invoke('editor.restoreRange', $editable);
      });
    };
  };
  /**
   * @class EventHandler
   *
   * EventHandler
   *  - TODO: new instance per a editor
   */


  var EventHandler = function EventHandler() {
    var self = this;
    /**
     * Modules
     */

    var modules = this.modules = {
      editor: new Editor(this),
      toolbar: new Toolbar(this),
      statusbar: new Statusbar(this),
      popover: new Popover(this),
      handle: new Handle(this),
      fullscreen: new Fullscreen(this),
      codeview: new Codeview(this),
      dragAndDrop: new DragAndDrop(this),
      clipboard: new Clipboard(this),
      linkDialog: new LinkDialog(this),
      imageDialog: new ImageDialog(this),
      helpDialog: new HelpDialog(this)
    };
    /**
     * invoke module's method
     *
     * @param {String} moduleAndMethod - ex) 'editor.redo'
     * @param {...*} arguments - arguments of method
     * @return {*}
     */

    this.invoke = function () {
      var moduleAndMethod = list.head(list.from(arguments));
      var args = list.tail(list.from(arguments));
      var splits = moduleAndMethod.split('.');
      var hasSeparator = splits.length > 1;
      var moduleName = hasSeparator && list.head(splits);
      var methodName = hasSeparator ? list.last(splits) : list.head(splits);
      var module = this.getModule(moduleName);
      var method = module[methodName];
      return method && method.apply(module, args);
    };
    /**
     * returns module
     *
     * @param {String} moduleName - name of module
     * @return {Module} - defaults is editor
     */


    this.getModule = function (moduleName) {
      return this.modules[moduleName] || this.modules.editor;
    };
    /**
     * @param {jQuery} $holder
     * @param {Object} callbacks
     * @param {String} eventNamespace
     * @returns {Function}
     */


    var bindCustomEvent = this.bindCustomEvent = function ($holder, callbacks, eventNamespace) {
      return function () {
        var callback = callbacks[func.namespaceToCamel(eventNamespace, 'on')];

        if (callback) {
          callback.apply($holder[0], arguments);
        }

        return $holder.trigger('summernote.' + eventNamespace, arguments);
      };
    };
    /**
     * insert Images from file array.
     *
     * @private
     * @param {Object} layoutInfo
     * @param {File[]} files
     */


    this.insertImages = function (layoutInfo, files) {
      var $editor = layoutInfo.editor(),
          $editable = layoutInfo.editable(),
          $holder = layoutInfo.holder();
      var callbacks = $editable.data('callbacks');
      var options = $editor.data('options'); // If onImageUpload options setted

      if (callbacks.onImageUpload) {
        bindCustomEvent($holder, callbacks, 'image.upload')(files); // else insert Image as dataURL
      } else {
        $.each(files, function (idx, file) {
          var filename = file.name;

          if (options.maximumImageFileSize && options.maximumImageFileSize < file.size) {
            bindCustomEvent($holder, callbacks, 'image.upload.error')(options.langInfo.image.maximumFileSizeError);
          } else {
            async.readFileAsDataURL(file).then(function (sDataURL) {
              modules.editor.insertImage($editable, sDataURL, filename);
            }).fail(function () {
              bindCustomEvent($holder, callbacks, 'image.upload.error')(options.langInfo.image.maximumFileSizeError);
            });
          }
        });
      }
    };

    var commands = {
      /**
       * @param {Object} layoutInfo
       */
      showLinkDialog: function showLinkDialog(layoutInfo) {
        modules.linkDialog.show(layoutInfo);
      },

      /**
       * @param {Object} layoutInfo
       */
      showImageDialog: function showImageDialog(layoutInfo) {
        modules.imageDialog.show(layoutInfo);
      },

      /**
       * @param {Object} layoutInfo
       */
      showHelpDialog: function showHelpDialog(layoutInfo) {
        modules.helpDialog.show(layoutInfo);
      },

      /**
       * @param {Object} layoutInfo
       */
      fullscreen: function fullscreen(layoutInfo) {
        modules.fullscreen.toggle(layoutInfo);
      },

      /**
       * @param {Object} layoutInfo
       */
      codeview: function codeview(layoutInfo) {
        modules.codeview.toggle(layoutInfo);
      }
    };

    var hMousedown = function hMousedown(event) {
      //preventDefault Selection for FF, IE8+
      if (dom.isImg(event.target)) {
        event.preventDefault();
      }
    };

    var hKeyupAndMouseup = function hKeyupAndMouseup(event) {
      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);
      modules.editor.removeBogus(layoutInfo.editable());
      hToolbarAndPopoverUpdate(event);
    };
    /**
     * update sytle info
     * @param {Object} styleInfo
     * @param {Object} layoutInfo
     */


    this.updateStyleInfo = function (styleInfo, layoutInfo) {
      if (!styleInfo) {
        return;
      }

      var isAirMode = layoutInfo.editor().data('options').airMode;

      if (!isAirMode) {
        modules.toolbar.update(layoutInfo.toolbar(), styleInfo);
      }

      modules.popover.update(layoutInfo.popover(), styleInfo, isAirMode);
      modules.handle.update(layoutInfo.handle(), styleInfo, isAirMode);
    };

    var hToolbarAndPopoverUpdate = function hToolbarAndPopoverUpdate(event) {
      var target = event.target; // delay for range after mouseup

      setTimeout(function () {
        var layoutInfo = dom.makeLayoutInfo(target);
        var styleInfo = modules.editor.currentStyle(target);
        self.updateStyleInfo(styleInfo, layoutInfo);
      }, 0);
    };

    var hScroll = function hScroll(event) {
      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target); //hide popover and handle when scrolled

      modules.popover.hide(layoutInfo.popover());
      modules.handle.hide(layoutInfo.handle());
    };

    var hToolbarAndPopoverMousedown = function hToolbarAndPopoverMousedown(event) {
      // prevent default event when insertTable (FF, Webkit)
      var $btn = $(event.target).closest('[data-event]');

      if ($btn.length) {
        event.preventDefault();
      }
    };

    var hToolbarAndPopoverClick = function hToolbarAndPopoverClick(event) {
      var $btn = $(event.target).closest('[data-event]');

      if (!$btn.length) {
        return;
      }

      var eventName = $btn.attr('data-event'),
          value = $btn.attr('data-value'),
          hide = $btn.attr('data-hide');
      var layoutInfo = dom.makeLayoutInfo(event.target); // before command: detect control selection element($target)

      var $target;

      if ($.inArray(eventName, ['resize', 'floatMe', 'removeMedia', 'imageShape']) !== -1) {
        var $selection = layoutInfo.handle().find('.note-control-selection');
        $target = $($selection.data('target'));
      } // If requested, hide the popover when the button is clicked.
      // Useful for things like showHelpDialog.


      if (hide) {
        $btn.parents('.popover').hide();
      }

      if ($.isFunction($.summernote.pluginEvents[eventName])) {
        $.summernote.pluginEvents[eventName](event, modules.editor, layoutInfo, value);
      } else if (modules.editor[eventName]) {
        // on command
        var $editable = layoutInfo.editable();
        $editable.focus();
        modules.editor[eventName]($editable, value, $target);
        event.preventDefault();
      } else if (commands[eventName]) {
        commands[eventName].call(this, layoutInfo);
        event.preventDefault();
      } // after command


      if ($.inArray(eventName, ['backColor', 'foreColor']) !== -1) {
        var options = layoutInfo.editor().data('options', options);
        var module = options.airMode ? modules.popover : modules.toolbar;
        module.updateRecentColor(list.head($btn), eventName, value);
      }

      hToolbarAndPopoverUpdate(event);
    };

    var PX_PER_EM = 18;

    var hDimensionPickerMove = function hDimensionPickerMove(event, options) {
      var $picker = $(event.target.parentNode); // target is mousecatcher

      var $dimensionDisplay = $picker.next();
      var $catcher = $picker.find('.note-dimension-picker-mousecatcher');
      var $highlighted = $picker.find('.note-dimension-picker-highlighted');
      var $unhighlighted = $picker.find('.note-dimension-picker-unhighlighted');
      var posOffset; // HTML5 with jQuery - e.offsetX is undefined in Firefox

      if (event.offsetX === undefined) {
        var posCatcher = $(event.target).offset();
        posOffset = {
          x: event.pageX - posCatcher.left,
          y: event.pageY - posCatcher.top
        };
      } else {
        posOffset = {
          x: event.offsetX,
          y: event.offsetY
        };
      }

      var dim = {
        c: Math.ceil(posOffset.x / PX_PER_EM) || 1,
        r: Math.ceil(posOffset.y / PX_PER_EM) || 1
      };
      $highlighted.css({
        width: dim.c + 'em',
        height: dim.r + 'em'
      });
      $catcher.attr('data-value', dim.c + 'x' + dim.r);

      if (3 < dim.c && dim.c < options.insertTableMaxSize.col) {
        $unhighlighted.css({
          width: dim.c + 1 + 'em'
        });
      }

      if (3 < dim.r && dim.r < options.insertTableMaxSize.row) {
        $unhighlighted.css({
          height: dim.r + 1 + 'em'
        });
      }

      $dimensionDisplay.html(dim.c + ' x ' + dim.r);
    };
    /**
     * bind KeyMap on keydown
     *
     * @param {Object} layoutInfo
     * @param {Object} keyMap
     */


    this.bindKeyMap = function (layoutInfo, keyMap) {
      var $editor = layoutInfo.editor();
      var $editable = layoutInfo.editable();
      $editable.on('keydown', function (event) {
        var keys = []; // modifier

        if (event.metaKey) {
          keys.push('CMD');
        }

        if (event.ctrlKey && !event.altKey) {
          keys.push('CTRL');
        }

        if (event.shiftKey) {
          keys.push('SHIFT');
        } // keycode


        var keyName = key.nameFromCode[event.keyCode];

        if (keyName) {
          keys.push(keyName);
        }

        var pluginEvent;
        var keyString = keys.join('+');
        var eventName = keyMap[keyString];

        if (eventName) {
          // FIXME Summernote doesn't support event pipeline yet.
          //  - Plugin -> Base Code
          pluginEvent = $.summernote.pluginEvents[keyString];

          if ($.isFunction(pluginEvent)) {
            if (pluginEvent(event, modules.editor, layoutInfo)) {
              return false;
            }
          }

          pluginEvent = $.summernote.pluginEvents[eventName];

          if ($.isFunction(pluginEvent)) {
            pluginEvent(event, modules.editor, layoutInfo);
          } else if (modules.editor[eventName]) {
            modules.editor[eventName]($editable, $editor.data('options'));
            event.preventDefault();
          } else if (commands[eventName]) {
            commands[eventName].call(this, layoutInfo);
            event.preventDefault();
          }
        } else if (key.isEdit(event.keyCode)) {
          modules.editor.afterCommand($editable);
        }
      });
    };
    /**
     * attach eventhandler
     *
     * @param {Object} layoutInfo - layout Informations
     * @param {Object} options - user options include custom event handlers
     */


    this.attach = function (layoutInfo, options) {
      // handlers for editable
      if (options.shortcuts) {
        this.bindKeyMap(layoutInfo, options.keyMap[agent.isMac ? 'mac' : 'pc']);
      }

      layoutInfo.editable().on('mousedown', hMousedown);
      layoutInfo.editable().on('keyup mouseup', hKeyupAndMouseup);
      layoutInfo.editable().on('scroll', hScroll); // handler for clipboard

      modules.clipboard.attach(layoutInfo, options); // handler for handle and popover

      modules.handle.attach(layoutInfo, options);
      layoutInfo.popover().on('click', hToolbarAndPopoverClick);
      layoutInfo.popover().on('mousedown', hToolbarAndPopoverMousedown); // handler for drag and drop

      modules.dragAndDrop.attach(layoutInfo, options); // handlers for frame mode (toolbar, statusbar)

      if (!options.airMode) {
        // handler for toolbar
        layoutInfo.toolbar().on('click', hToolbarAndPopoverClick);
        layoutInfo.toolbar().on('mousedown', hToolbarAndPopoverMousedown); // handler for statusbar

        modules.statusbar.attach(layoutInfo, options);
      } // handler for table dimension


      var $catcherContainer = options.airMode ? layoutInfo.popover() : layoutInfo.toolbar();
      var $catcher = $catcherContainer.find('.note-dimension-picker-mousecatcher');
      $catcher.css({
        width: options.insertTableMaxSize.col + 'em',
        height: options.insertTableMaxSize.row + 'em'
      }).on('mousemove', function (event) {
        hDimensionPickerMove(event, options);
      }); // save options on editor

      layoutInfo.editor().data('options', options); // ret styleWithCSS for backColor / foreColor clearing with 'inherit'.

      if (!agent.isMSIE) {
        // [workaround] for Firefox
        //  - protect FF Error: NS_ERROR_FAILURE: Failure
        setTimeout(function () {
          document.execCommand('styleWithCSS', 0, options.styleWithSpan);
        }, 0);
      } // History


      var history = new History(layoutInfo.editable());
      layoutInfo.editable().data('NoteHistory', history); // All editor status will be saved on editable with jquery's data
      // for support multiple editor with singleton object.

      layoutInfo.editable().data('callbacks', {
        onInit: options.onInit,
        onFocus: options.onFocus,
        onBlur: options.onBlur,
        onKeydown: options.onKeydown,
        onKeyup: options.onKeyup,
        onMousedown: options.onMousedown,
        onEnter: options.onEnter,
        onPaste: options.onPaste,
        onBeforeCommand: options.onBeforeCommand,
        onChange: options.onChange,
        onImageUpload: options.onImageUpload,
        onImageUploadError: options.onImageUploadError,
        onMediaDelete: options.onMediaDelete,
        onToolbarClick: options.onToolbarClick
      });
      var styleInfo = modules.editor.styleFromNode(layoutInfo.editable());
      this.updateStyleInfo(styleInfo, layoutInfo);
    };
    /**
     * attach jquery custom event
     *
     * @param {Object} layoutInfo - layout Informations
     */


    this.attachCustomEvent = function (layoutInfo, options) {
      var $holder = layoutInfo.holder();
      var $editable = layoutInfo.editable();
      var callbacks = $editable.data('callbacks');
      $editable.focus(bindCustomEvent($holder, callbacks, 'focus'));
      $editable.blur(bindCustomEvent($holder, callbacks, 'blur'));
      $editable.keydown(function (event) {
        if (event.keyCode === key.code.ENTER) {
          bindCustomEvent($holder, callbacks, 'enter').call(this, event);
        }

        bindCustomEvent($holder, callbacks, 'keydown').call(this, event);
      });
      $editable.keyup(bindCustomEvent($holder, callbacks, 'keyup'));
      $editable.on('mousedown', bindCustomEvent($holder, callbacks, 'mousedown'));
      $editable.on('mouseup', bindCustomEvent($holder, callbacks, 'mouseup'));
      $editable.on('scroll', bindCustomEvent($holder, callbacks, 'scroll'));
      $editable.on('paste', bindCustomEvent($holder, callbacks, 'paste')); // [workaround] IE doesn't have input events for contentEditable
      //  - see: https://goo.gl/4bfIvA

      var changeEventName = agent.isMSIE ? 'DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted' : 'input';
      $editable.on(changeEventName, function () {
        bindCustomEvent($holder, callbacks, 'change')($editable.html(), $editable);
      });

      if (!options.airMode) {
        layoutInfo.toolbar().click(bindCustomEvent($holder, callbacks, 'toolbar.click'));
        layoutInfo.popover().click(bindCustomEvent($holder, callbacks, 'popover.click'));
      } // Textarea: auto filling the code before form submit.


      if (dom.isTextarea(list.head($holder))) {
        $holder.closest('form').submit(function (e) {
          layoutInfo.holder().val(layoutInfo.holder().code());
          bindCustomEvent($holder, callbacks, 'submit').call(this, e, $holder.code());
        });
      } // textarea auto sync


      if (dom.isTextarea(list.head($holder)) && options.textareaAutoSync) {
        $holder.on('summernote.change', function () {
          layoutInfo.holder().val(layoutInfo.holder().code());
        });
      } // fire init event


      bindCustomEvent($holder, callbacks, 'init')(layoutInfo); // fire plugin init event

      for (var i = 0, len = $.summernote.plugins.length; i < len; i++) {
        if ($.isFunction($.summernote.plugins[i].init)) {
          $.summernote.plugins[i].init(layoutInfo);
        }
      }
    };

    this.detach = function (layoutInfo, options) {
      layoutInfo.holder().off();
      layoutInfo.editable().off();
      layoutInfo.popover().off();
      layoutInfo.handle().off();
      layoutInfo.dialog().off();

      if (!options.airMode) {
        layoutInfo.dropzone().off();
        layoutInfo.toolbar().off();
        layoutInfo.statusbar().off();
      }
    };
  };
  /**
   * @class Renderer
   *
   * renderer
   *
   * rendering toolbar and editable
   */


  var Renderer = function Renderer() {
    /**
     * bootstrap button template
     * @private
     * @param {String} label button name
     * @param {Object} [options] button options
     * @param {String} [options.event] data-event
     * @param {String} [options.className] button's class name
     * @param {String} [options.value] data-value
     * @param {String} [options.title] button's title for popup
     * @param {String} [options.dropdown] dropdown html
     * @param {String} [options.hide] data-hide
     */
    var tplButton = function tplButton(label, options) {
      var event = options.event;
      var value = options.value;
      var title = options.title;
      var className = options.className;
      var dropdown = options.dropdown;
      var hide = options.hide;
      return (dropdown ? '<div class="btn-group' + (className ? ' ' + className : '') + '">' : '') + '<button type="button"' + ' class="btn btn-default btn-sm' + (!dropdown && className ? ' ' + className : '') + (dropdown ? ' dropdown-toggle' : '') + '"' + (dropdown ? ' data-toggle="dropdown"' : '') + (title ? ' title="' + title + '"' : '') + (event ? ' data-event="' + event + '"' : '') + (value ? ' data-value=\'' + value + '\'' : '') + (hide ? ' data-hide=\'' + hide + '\'' : '') + ' tabindex="-1">' + label + (dropdown ? ' <span class="caret"></span>' : '') + '</button>' + (dropdown || '') + (dropdown ? '</div>' : '');
    };
    /**
     * bootstrap icon button template
     * @private
     * @param {String} iconClassName
     * @param {Object} [options]
     * @param {String} [options.event]
     * @param {String} [options.value]
     * @param {String} [options.title]
     * @param {String} [options.dropdown]
     */


    var tplIconButton = function tplIconButton(iconClassName, options) {
      var label = '<i class="' + iconClassName + '"></i>';
      return tplButton(label, options);
    };
    /**
     * bootstrap popover template
     * @private
     * @param {String} className
     * @param {String} content
     */


    var tplPopover = function tplPopover(className, content) {
      var $popover = $('<div class="' + className + ' popover bottom in" style="display: none;">' + '<div class="arrow"></div>' + '<div class="popover-content">' + '</div>' + '</div>');
      $popover.find('.popover-content').append(content);
      return $popover;
    };
    /**
     * bootstrap dialog template
     *
     * @param {String} className
     * @param {String} [title='']
     * @param {String} body
     * @param {String} [footer='']
     */


    var tplDialog = function tplDialog(className, title, body, footer) {
      return '<div class="' + className + ' modal" aria-hidden="false">' + '<div class="modal-dialog">' + '<div class="modal-content">' + (title ? '<div class="modal-header">' + '<button type="button" class="close" aria-hidden="true" tabindex="-1">&times;</button>' + '<h4 class="modal-title">' + title + '</h4>' + '</div>' : '') + '<div class="modal-body">' + body + '</div>' + (footer ? '<div class="modal-footer">' + footer + '</div>' : '') + '</div>' + '</div>' + '</div>';
    };
    /**
     * bootstrap dropdown template
     *
     * @param {String|String[]} contents
     * @param {String} [className='']
     * @param {String} [nodeName='']
     */


    var tplDropdown = function tplDropdown(contents, className, nodeName) {
      var classes = 'dropdown-menu' + (className ? ' ' + className : '');
      nodeName = nodeName || 'ul';

      if (contents instanceof Array) {
        contents = contents.join('');
      }

      return '<' + nodeName + ' class="' + classes + '">' + contents + '</' + nodeName + '>';
    };

    var tplButtonInfo = {
      picture: function picture(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.image.image, {
          event: 'showImageDialog',
          title: lang.image.image,
          hide: true
        });
      },
      link: function link(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.link.link, {
          event: 'showLinkDialog',
          title: lang.link.link,
          hide: true
        });
      },
      table: function table(lang, options) {
        var dropdown = ['<div class="note-dimension-picker">', '<div class="note-dimension-picker-mousecatcher" data-event="insertTable" data-value="1x1"></div>', '<div class="note-dimension-picker-highlighted"></div>', '<div class="note-dimension-picker-unhighlighted"></div>', '</div>', '<div class="note-dimension-display"> 1 x 1 </div>'];
        return tplIconButton(options.iconPrefix + options.icons.table.table, {
          title: lang.table.table,
          dropdown: tplDropdown(dropdown, 'note-table')
        });
      },
      style: function style(lang, options) {
        var items = options.styleTags.reduce(function (memo, v) {
          var label = lang.style[v === 'p' ? 'normal' : v];
          return memo + '<li><a data-event="formatBlock" href="#" data-value="' + v + '">' + (v === 'p' || v === 'pre' ? label : '<' + v + '>' + label + '</' + v + '>') + '</a></li>';
        }, '');
        return tplIconButton(options.iconPrefix + options.icons.style.style, {
          title: lang.style.style,
          dropdown: tplDropdown(items)
        });
      },
      fontname: function fontname(lang, options) {
        var realFontList = [];
        var items = options.fontNames.reduce(function (memo, v) {
          if (!agent.isFontInstalled(v) && !list.contains(options.fontNamesIgnoreCheck, v)) {
            return memo;
          }

          realFontList.push(v);
          return memo + '<li><a data-event="fontName" href="#" data-value="' + v + '" style="font-family:\'' + v + '\'">' + '<i class="' + options.iconPrefix + options.icons.misc.check + '"></i> ' + v + '</a></li>';
        }, '');
        var hasDefaultFont = agent.isFontInstalled(options.defaultFontName);
        var defaultFontName = hasDefaultFont ? options.defaultFontName : realFontList[0];
        var label = '<span class="note-current-fontname">' + defaultFontName + '</span>';
        return tplButton(label, {
          title: lang.font.name,
          className: 'note-fontname',
          dropdown: tplDropdown(items, 'note-check')
        });
      },
      fontsize: function fontsize(lang, options) {
        var items = options.fontSizes.reduce(function (memo, v) {
          return memo + '<li><a data-event="fontSize" href="#" data-value="' + v + '">' + '<i class="' + options.iconPrefix + options.icons.misc.check + '"></i> ' + v + '</a></li>';
        }, '');
        var label = '<span class="note-current-fontsize">11</span>';
        return tplButton(label, {
          title: lang.font.size,
          className: 'note-fontsize',
          dropdown: tplDropdown(items, 'note-check')
        });
      },
      color: function color(lang, options) {
        var colorButtonLabel = '<i class="' + options.iconPrefix + options.icons.color.recent + '" style="color:black;background-color:yellow;"></i>';
        var colorButton = tplButton(colorButtonLabel, {
          className: 'note-recent-color',
          title: lang.color.recent,
          event: 'color',
          value: '{"backColor":"yellow"}'
        });
        var items = ['<li><div class="btn-group">', '<div class="note-palette-title">' + lang.color.background + '</div>', '<div class="note-color-reset" data-event="backColor"', ' data-value="inherit" title="' + lang.color.transparent + '">' + lang.color.setTransparent + '</div>', '<div class="note-color-palette" data-target-event="backColor"></div>', '</div><div class="btn-group">', '<div class="note-palette-title">' + lang.color.foreground + '</div>', '<div class="note-color-reset" data-event="foreColor" data-value="inherit" title="' + lang.color.reset + '">', lang.color.resetToDefault, '</div>', '<div class="note-color-palette" data-target-event="foreColor"></div>', '</div></li>'];
        var moreButton = tplButton('', {
          title: lang.color.more,
          dropdown: tplDropdown(items)
        });
        return colorButton + moreButton;
      },
      bold: function bold(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.font.bold, {
          event: 'bold',
          title: lang.font.bold
        });
      },
      italic: function italic(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.font.italic, {
          event: 'italic',
          title: lang.font.italic
        });
      },
      underline: function underline(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.font.underline, {
          event: 'underline',
          title: lang.font.underline
        });
      },
      strikethrough: function strikethrough(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.font.strikethrough, {
          event: 'strikethrough',
          title: lang.font.strikethrough
        });
      },
      superscript: function superscript(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.font.superscript, {
          event: 'superscript',
          title: lang.font.superscript
        });
      },
      subscript: function subscript(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.font.subscript, {
          event: 'subscript',
          title: lang.font.subscript
        });
      },
      clear: function clear(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.font.clear, {
          event: 'removeFormat',
          title: lang.font.clear
        });
      },
      ul: function ul(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.lists.unordered, {
          event: 'insertUnorderedList',
          title: lang.lists.unordered
        });
      },
      ol: function ol(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.lists.ordered, {
          event: 'insertOrderedList',
          title: lang.lists.ordered
        });
      },
      paragraph: function paragraph(lang, options) {
        var leftButton = tplIconButton(options.iconPrefix + options.icons.paragraph.left, {
          title: lang.paragraph.left,
          event: 'justifyLeft'
        });
        var centerButton = tplIconButton(options.iconPrefix + options.icons.paragraph.center, {
          title: lang.paragraph.center,
          event: 'justifyCenter'
        });
        var rightButton = tplIconButton(options.iconPrefix + options.icons.paragraph.right, {
          title: lang.paragraph.right,
          event: 'justifyRight'
        });
        var justifyButton = tplIconButton(options.iconPrefix + options.icons.paragraph.justify, {
          title: lang.paragraph.justify,
          event: 'justifyFull'
        });
        var outdentButton = tplIconButton(options.iconPrefix + options.icons.paragraph.outdent, {
          title: lang.paragraph.outdent,
          event: 'outdent'
        });
        var indentButton = tplIconButton(options.iconPrefix + options.icons.paragraph.indent, {
          title: lang.paragraph.indent,
          event: 'indent'
        });
        var dropdown = ['<div class="note-align btn-group">', leftButton + centerButton + rightButton + justifyButton, '</div><div class="note-list btn-group">', indentButton + outdentButton, '</div>'];
        return tplIconButton(options.iconPrefix + options.icons.paragraph.paragraph, {
          title: lang.paragraph.paragraph,
          dropdown: tplDropdown(dropdown, '', 'div')
        });
      },
      height: function height(lang, options) {
        var items = options.lineHeights.reduce(function (memo, v) {
          return memo + '<li><a data-event="lineHeight" href="#" data-value="' + parseFloat(v) + '">' + '<i class="' + options.iconPrefix + options.icons.misc.check + '"></i> ' + v + '</a></li>';
        }, '');
        return tplIconButton(options.iconPrefix + options.icons.font.height, {
          title: lang.font.height,
          dropdown: tplDropdown(items, 'note-check')
        });
      },
      help: function help(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.options.help, {
          event: 'showHelpDialog',
          title: lang.options.help,
          hide: true
        });
      },
      fullscreen: function fullscreen(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.options.fullscreen, {
          event: 'fullscreen',
          title: lang.options.fullscreen
        });
      },
      codeview: function codeview(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.options.codeview, {
          event: 'codeview',
          title: lang.options.codeview
        });
      },
      undo: function undo(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.history.undo, {
          event: 'undo',
          title: lang.history.undo
        });
      },
      redo: function redo(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.history.redo, {
          event: 'redo',
          title: lang.history.redo
        });
      },
      hr: function hr(lang, options) {
        return tplIconButton(options.iconPrefix + options.icons.hr.insert, {
          event: 'insertHorizontalRule',
          title: lang.hr.insert
        });
      }
    };

    var tplPopovers = function tplPopovers(lang, options) {
      var tplLinkPopover = function tplLinkPopover() {
        var linkButton = tplIconButton(options.iconPrefix + options.icons.link.edit, {
          title: lang.link.edit,
          event: 'showLinkDialog',
          hide: true
        });
        var unlinkButton = tplIconButton(options.iconPrefix + options.icons.link.unlink, {
          title: lang.link.unlink,
          event: 'unlink'
        });
        var content = '<a href="http://www.google.com" target="_blank">www.google.com</a>&nbsp;&nbsp;' + '<div class="note-insert btn-group">' + linkButton + unlinkButton + '</div>';
        return tplPopover('note-link-popover', content);
      };

      var tplImagePopover = function tplImagePopover() {
        var fullButton = tplButton('<span class="note-fontsize-10">100%</span>', {
          title: lang.image.resizeFull,
          event: 'resize',
          value: '1'
        });
        var halfButton = tplButton('<span class="note-fontsize-10">50%</span>', {
          title: lang.image.resizeHalf,
          event: 'resize',
          value: '0.5'
        });
        var quarterButton = tplButton('<span class="note-fontsize-10">25%</span>', {
          title: lang.image.resizeQuarter,
          event: 'resize',
          value: '0.25'
        });
        var leftButton = tplIconButton(options.iconPrefix + options.icons.image.floatLeft, {
          title: lang.image.floatLeft,
          event: 'floatMe',
          value: 'left'
        });
        var rightButton = tplIconButton(options.iconPrefix + options.icons.image.floatRight, {
          title: lang.image.floatRight,
          event: 'floatMe',
          value: 'right'
        });
        var justifyButton = tplIconButton(options.iconPrefix + options.icons.image.floatNone, {
          title: lang.image.floatNone,
          event: 'floatMe',
          value: 'none'
        });
        var roundedButton = tplIconButton(options.iconPrefix + options.icons.image.shapeRounded, {
          title: lang.image.shapeRounded,
          event: 'imageShape',
          value: 'img-rounded'
        });
        var circleButton = tplIconButton(options.iconPrefix + options.icons.image.shapeCircle, {
          title: lang.image.shapeCircle,
          event: 'imageShape',
          value: 'img-circle'
        });
        var thumbnailButton = tplIconButton(options.iconPrefix + options.icons.image.shapeThumbnail, {
          title: lang.image.shapeThumbnail,
          event: 'imageShape',
          value: 'img-thumbnail'
        });
        var noneButton = tplIconButton(options.iconPrefix + options.icons.image.shapeNone, {
          title: lang.image.shapeNone,
          event: 'imageShape',
          value: ''
        });
        var removeButton = tplIconButton(options.iconPrefix + options.icons.image.remove, {
          title: lang.image.remove,
          event: 'removeMedia',
          value: 'none'
        });
        var content = (options.disableResizeImage ? '' : '<div class="btn-group">' + fullButton + halfButton + quarterButton + '</div>') + '<div class="btn-group">' + leftButton + rightButton + justifyButton + '</div><br>' + '<div class="btn-group">' + roundedButton + circleButton + thumbnailButton + noneButton + '</div>' + '<div class="btn-group">' + removeButton + '</div>';
        return tplPopover('note-image-popover', content);
      };

      var tplAirPopover = function tplAirPopover() {
        var $content = $('<div />');

        for (var idx = 0, len = options.airPopover.length; idx < len; idx++) {
          var group = options.airPopover[idx];
          var $group = $('<div class="note-' + group[0] + ' btn-group">');

          for (var i = 0, lenGroup = group[1].length; i < lenGroup; i++) {
            var $button = $(tplButtonInfo[group[1][i]](lang, options));
            $button.attr('data-name', group[1][i]);
            $group.append($button);
          }

          $content.append($group);
        }

        return tplPopover('note-air-popover', $content.children());
      };

      var $notePopover = $('<div class="note-popover" />');
      $notePopover.append(tplLinkPopover());
      $notePopover.append(tplImagePopover());

      if (options.airMode) {
        $notePopover.append(tplAirPopover());
      }

      return $notePopover;
    };

    var tplHandles = function tplHandles(options) {
      return '<div class="note-handle">' + '<div class="note-control-selection">' + '<div class="note-control-selection-bg"></div>' + '<div class="note-control-holder note-control-nw"></div>' + '<div class="note-control-holder note-control-ne"></div>' + '<div class="note-control-holder note-control-sw"></div>' + '<div class="' + (options.disableResizeImage ? 'note-control-holder' : 'note-control-sizing') + ' note-control-se"></div>' + (options.disableResizeImage ? '' : '<div class="note-control-selection-info"></div>') + '</div>' + '</div>';
    };
    /**
     * shortcut table template
     * @param {String} title
     * @param {String} body
     */


    var tplShortcut = function tplShortcut(title, keys) {
      var keyClass = 'note-shortcut-col col-xs-6 note-shortcut-';
      var body = [];

      for (var i in keys) {
        if (keys.hasOwnProperty(i)) {
          body.push('<div class="' + keyClass + 'key">' + keys[i].kbd + '</div>' + '<div class="' + keyClass + 'name">' + keys[i].text + '</div>');
        }
      }

      return '<div class="note-shortcut-row row"><div class="' + keyClass + 'title col-xs-offset-6">' + title + '</div></div>' + '<div class="note-shortcut-row row">' + body.join('</div><div class="note-shortcut-row row">') + '</div>';
    };

    var tplShortcutText = function tplShortcutText(lang) {
      var keys = [{
        kbd: '⌘ + B',
        text: lang.font.bold
      }, {
        kbd: '⌘ + I',
        text: lang.font.italic
      }, {
        kbd: '⌘ + U',
        text: lang.font.underline
      }, {
        kbd: '⌘ + \\',
        text: lang.font.clear
      }];
      return tplShortcut(lang.shortcut.textFormatting, keys);
    };

    var tplShortcutAction = function tplShortcutAction(lang) {
      var keys = [{
        kbd: '⌘ + Z',
        text: lang.history.undo
      }, {
        kbd: '⌘ + ⇧ + Z',
        text: lang.history.redo
      }, {
        kbd: '⌘ + ]',
        text: lang.paragraph.indent
      }, {
        kbd: '⌘ + [',
        text: lang.paragraph.outdent
      }, {
        kbd: '⌘ + ENTER',
        text: lang.hr.insert
      }];
      return tplShortcut(lang.shortcut.action, keys);
    };

    var tplShortcutPara = function tplShortcutPara(lang) {
      var keys = [{
        kbd: '⌘ + ⇧ + L',
        text: lang.paragraph.left
      }, {
        kbd: '⌘ + ⇧ + E',
        text: lang.paragraph.center
      }, {
        kbd: '⌘ + ⇧ + R',
        text: lang.paragraph.right
      }, {
        kbd: '⌘ + ⇧ + J',
        text: lang.paragraph.justify
      }, {
        kbd: '⌘ + ⇧ + NUM7',
        text: lang.lists.ordered
      }, {
        kbd: '⌘ + ⇧ + NUM8',
        text: lang.lists.unordered
      }];
      return tplShortcut(lang.shortcut.paragraphFormatting, keys);
    };

    var tplShortcutStyle = function tplShortcutStyle(lang) {
      var keys = [{
        kbd: '⌘ + NUM0',
        text: lang.style.normal
      }, {
        kbd: '⌘ + NUM1',
        text: lang.style.h1
      }, {
        kbd: '⌘ + NUM2',
        text: lang.style.h2
      }, {
        kbd: '⌘ + NUM3',
        text: lang.style.h3
      }, {
        kbd: '⌘ + NUM4',
        text: lang.style.h4
      }, {
        kbd: '⌘ + NUM5',
        text: lang.style.h5
      }, {
        kbd: '⌘ + NUM6',
        text: lang.style.h6
      }];
      return tplShortcut(lang.shortcut.documentStyle, keys);
    };

    var tplExtraShortcuts = function tplExtraShortcuts(lang, options) {
      var extraKeys = options.extraKeys;
      var keys = [];

      for (var key in extraKeys) {
        if (extraKeys.hasOwnProperty(key)) {
          keys.push({
            kbd: key,
            text: extraKeys[key]
          });
        }
      }

      return tplShortcut(lang.shortcut.extraKeys, keys);
    };

    var tplShortcutTable = function tplShortcutTable(lang, options) {
      var colClass = 'class="note-shortcut note-shortcut-col col-sm-6 col-xs-12"';
      var template = ['<div ' + colClass + '>' + tplShortcutAction(lang, options) + '</div>' + '<div ' + colClass + '>' + tplShortcutText(lang, options) + '</div>', '<div ' + colClass + '>' + tplShortcutStyle(lang, options) + '</div>' + '<div ' + colClass + '>' + tplShortcutPara(lang, options) + '</div>'];

      if (options.extraKeys) {
        template.push('<div ' + colClass + '>' + tplExtraShortcuts(lang, options) + '</div>');
      }

      return '<div class="note-shortcut-row row">' + template.join('</div><div class="note-shortcut-row row">') + '</div>';
    };

    var replaceMacKeys = function replaceMacKeys(sHtml) {
      return sHtml.replace(/⌘/g, 'Ctrl').replace(/⇧/g, 'Shift');
    };

    var tplDialogInfo = {
      image: function image(lang, options) {
        var imageLimitation = '';

        if (options.maximumImageFileSize) {
          var unit = Math.floor(Math.log(options.maximumImageFileSize) / Math.log(1024));
          var readableSize = (options.maximumImageFileSize / Math.pow(1024, unit)).toFixed(2) * 1 + ' ' + ' KMGTP'[unit] + 'B';
          imageLimitation = '<small>' + lang.image.maximumFileSize + ' : ' + readableSize + '</small>';
        }

        var body = '<div class="form-group row note-group-select-from-files">' + '<label>' + lang.image.selectFromFiles + '</label>' + '<input class="note-image-input form-control" type="file" name="files" accept="image/*" multiple="multiple" />' + imageLimitation + '</div>' + '<div class="form-group row">' + '<label>' + lang.image.url + '</label>' + '<input class="note-image-url form-control col-md-12" type="text" />' + '</div>';
        var footer = '<button href="#" class="btn btn-primary note-image-btn disabled" disabled>' + lang.image.insert + '</button>';
        return tplDialog('note-image-dialog', lang.image.insert, body, footer);
      },
      link: function link(lang, options) {
        var body = '<div class="form-group row">' + '<label>' + lang.link.textToDisplay + '</label>' + '<input class="note-link-text form-control col-md-12" type="text" />' + '</div>' + '<div class="form-group row">' + '<label>' + lang.link.url + '</label>' + '<input class="note-link-url form-control col-md-12" type="text" value="http://" />' + '</div>' + (!options.disableLinkTarget ? '<div class="checkbox">' + '<label>' + '<input type="checkbox" checked> ' + lang.link.openInNewWindow + '</label>' + '</div>' : '');
        var footer = '<button href="#" class="btn btn-primary note-link-btn disabled" disabled>' + lang.link.insert + '</button>';
        return tplDialog('note-link-dialog', lang.link.insert, body, footer);
      },
      help: function help(lang, options) {
        var body = '<a class="modal-close pull-right" aria-hidden="true" tabindex="-1">' + lang.shortcut.close + '</a>' + '<div class="title">' + lang.shortcut.shortcuts + '</div>' + (agent.isMac ? tplShortcutTable(lang, options) : replaceMacKeys(tplShortcutTable(lang, options))) + '<p class="text-center">' + '<a href="//summernote.org/" target="_blank">Summernote 0.6.16</a> · ' + '<a href="//github.com/summernote/summernote" target="_blank">Project</a> · ' + '<a href="//github.com/summernote/summernote/issues" target="_blank">Issues</a>' + '</p>';
        return tplDialog('note-help-dialog', '', body, '');
      }
    };

    var tplDialogs = function tplDialogs(lang, options) {
      var dialogs = '';
      $.each(tplDialogInfo, function (idx, tplDialog) {
        dialogs += tplDialog(lang, options);
      });
      return '<div class="note-dialog">' + dialogs + '</div>';
    };

    var tplStatusbar = function tplStatusbar() {
      return '<div class="note-resizebar">' + '<div class="note-icon-bar"></div>' + '<div class="note-icon-bar"></div>' + '<div class="note-icon-bar"></div>' + '</div>';
    };

    var representShortcut = function representShortcut(str) {
      if (agent.isMac) {
        str = str.replace('CMD', '⌘').replace('SHIFT', '⇧');
      }

      return str.replace('BACKSLASH', '\\').replace('SLASH', '/').replace('LEFTBRACKET', '[').replace('RIGHTBRACKET', ']');
    };
    /**
     * createTooltip
     *
     * @param {jQuery} $container
     * @param {Object} keyMap
     * @param {String} [sPlacement]
     */


    var createTooltip = function createTooltip($container, keyMap, sPlacement) {
      var invertedKeyMap = func.invertObject(keyMap);
      var $buttons = $container.find('button');
      $buttons.each(function (i, elBtn) {
        var $btn = $(elBtn);
        var sShortcut = invertedKeyMap[$btn.data('event')];

        if (sShortcut) {
          $btn.attr('title', function (i, v) {
            return v + ' (' + representShortcut(sShortcut) + ')';
          });
        } // bootstrap tooltip on btn-group bug
        // https://github.com/twbs/bootstrap/issues/5687

      }).tooltip({
        container: 'body',
        trigger: 'hover',
        placement: sPlacement || 'top'
      }).on('click', function () {
        $(this).tooltip('hide');
      });
    }; // createPalette


    var createPalette = function createPalette($container, options) {
      var colorInfo = options.colors;
      $container.find('.note-color-palette').each(function () {
        var $palette = $(this),
            eventName = $palette.attr('data-target-event');
        var paletteContents = [];

        for (var row = 0, lenRow = colorInfo.length; row < lenRow; row++) {
          var colors = colorInfo[row];
          var buttons = [];

          for (var col = 0, lenCol = colors.length; col < lenCol; col++) {
            var color = colors[col];
            buttons.push(['<button type="button" class="note-color-btn" style="background-color:', color, ';" data-event="', eventName, '" data-value="', color, '" title="', color, '" data-toggle="button" tabindex="-1"></button>'].join(''));
          }

          paletteContents.push('<div class="note-color-row">' + buttons.join('') + '</div>');
        }

        $palette.html(paletteContents.join(''));
      });
    };
    /**
     * create summernote layout (air mode)
     *
     * @param {jQuery} $holder
     * @param {Object} options
     */


    this.createLayoutByAirMode = function ($holder, options) {
      var langInfo = options.langInfo;
      var keyMap = options.keyMap[agent.isMac ? 'mac' : 'pc'];
      var id = func.uniqueId();
      $holder.addClass('note-air-editor note-editable panel-body');
      $holder.attr({
        'id': 'note-editor-' + id,
        'contentEditable': true
      });
      var body = document.body; // create Popover

      var $popover = $(tplPopovers(langInfo, options));
      $popover.addClass('note-air-layout');
      $popover.attr('id', 'note-popover-' + id);
      $popover.appendTo(body);
      createTooltip($popover, keyMap);
      createPalette($popover, options); // create Handle

      var $handle = $(tplHandles(options));
      $handle.addClass('note-air-layout');
      $handle.attr('id', 'note-handle-' + id);
      $handle.appendTo(body); // create Dialog

      var $dialog = $(tplDialogs(langInfo, options));
      $dialog.addClass('note-air-layout');
      $dialog.attr('id', 'note-dialog-' + id);
      $dialog.find('button.close, a.modal-close').click(function () {
        $(this).closest('.modal').modal('hide');
      });
      $dialog.appendTo(body);
    };
    /**
     * create summernote layout (normal mode)
     *
     * @param {jQuery} $holder
     * @param {Object} options
     */


    this.createLayoutByFrame = function ($holder, options) {
      var langInfo = options.langInfo; //01. create Editor

      var $editor = $('<div class="note-editor panel panel-default" />');

      if (options.width) {
        $editor.width(options.width);
      } //02. statusbar (resizebar)


      if (options.height > 0) {
        $('<div class="note-statusbar">' + (options.disableResizeEditor ? '' : tplStatusbar()) + '</div>').prependTo($editor);
      } //03 editing area


      var $editingArea = $('<div class="note-editing-area" />'); //03. create editable

      var isContentEditable = !$holder.is(':disabled');
      var $editable = $('<div class="note-editable panel-body" contentEditable="' + isContentEditable + '"></div>').prependTo($editingArea);

      if (options.height) {
        $editable.height(options.height);
      }

      if (options.direction) {
        $editable.attr('dir', options.direction);
      }

      var placeholder = $holder.attr('placeholder') || options.placeholder;

      if (placeholder) {
        $editable.attr('data-placeholder', placeholder);
      }

      $editable.html(dom.html($holder) || dom.emptyPara); //031. create codable

      $('<textarea class="note-codable"></textarea>').prependTo($editingArea); //04. create Popover

      var $popover = $(tplPopovers(langInfo, options)).prependTo($editingArea);
      createPalette($popover, options);
      createTooltip($popover, keyMap); //05. handle(control selection, ...)

      $(tplHandles(options)).prependTo($editingArea);
      $editingArea.prependTo($editor); //06. create Toolbar

      var $toolbar = $('<div class="note-toolbar panel-heading" />');

      for (var idx = 0, len = options.toolbar.length; idx < len; idx++) {
        var groupName = options.toolbar[idx][0];
        var groupButtons = options.toolbar[idx][1];
        var $group = $('<div class="note-' + groupName + ' btn-group" />');

        for (var i = 0, btnLength = groupButtons.length; i < btnLength; i++) {
          var buttonInfo = tplButtonInfo[groupButtons[i]]; // continue creating toolbar even if a button doesn't exist

          if (!$.isFunction(buttonInfo)) {
            continue;
          }

          var $button = $(buttonInfo(langInfo, options));
          $button.attr('data-name', groupButtons[i]); // set button's alias, becuase to get button element from $toolbar

          $group.append($button);
        }

        $toolbar.append($group);
      }

      var keyMap = options.keyMap[agent.isMac ? 'mac' : 'pc'];
      createPalette($toolbar, options);
      createTooltip($toolbar, keyMap, 'bottom');
      $toolbar.prependTo($editor); //07. create Dropzone

      $('<div class="note-dropzone"><div class="note-dropzone-message"></div></div>').prependTo($editor); //08. create Dialog

      var $dialogContainer = options.dialogsInBody ? $(document.body) : $editor;
      var $dialog = $(tplDialogs(langInfo, options)).prependTo($dialogContainer);
      $dialog.find('button.close, a.modal-close').click(function () {
        $(this).closest('.modal').modal('hide');
      }); //09. Editor/Holder switch

      $editor.insertAfter($holder);
      $holder.hide();
    };

    this.hasNoteEditor = function ($holder) {
      return this.noteEditorFromHolder($holder).length > 0;
    };

    this.noteEditorFromHolder = function ($holder) {
      if ($holder.hasClass('note-air-editor')) {
        return $holder;
      } else if ($holder.next().hasClass('note-editor')) {
        return $holder.next();
      } else {
        return $();
      }
    };
    /**
     * create summernote layout
     *
     * @param {jQuery} $holder
     * @param {Object} options
     */


    this.createLayout = function ($holder, options) {
      if (options.airMode) {
        this.createLayoutByAirMode($holder, options);
      } else {
        this.createLayoutByFrame($holder, options);
      }
    };
    /**
     * returns layoutInfo from holder
     *
     * @param {jQuery} $holder - placeholder
     * @return {Object}
     */


    this.layoutInfoFromHolder = function ($holder) {
      var $editor = this.noteEditorFromHolder($holder);

      if (!$editor.length) {
        return;
      } // connect $holder to $editor


      $editor.data('holder', $holder);
      return dom.buildLayoutInfo($editor);
    };
    /**
     * removeLayout
     *
     * @param {jQuery} $holder - placeholder
     * @param {Object} layoutInfo
     * @param {Object} options
     *
     */


    this.removeLayout = function ($holder, layoutInfo, options) {
      if (options.airMode) {
        $holder.removeClass('note-air-editor note-editable').removeAttr('id contentEditable');
        layoutInfo.popover().remove();
        layoutInfo.handle().remove();
        layoutInfo.dialog().remove();
      } else {
        $holder.html(layoutInfo.editable().html());

        if (options.dialogsInBody) {
          layoutInfo.dialog().remove();
        }

        layoutInfo.editor().remove();
        $holder.show();
      }
    };
    /**
     *
     * @return {Object}
     * @return {function(label, options=):string} return.button {@link #tplButton function to make text button}
     * @return {function(iconClass, options=):string} return.iconButton {@link #tplIconButton function to make icon button}
     * @return {function(className, title=, body=, footer=):string} return.dialog {@link #tplDialog function to make dialog}
     */


    this.getTemplate = function () {
      return {
        button: tplButton,
        iconButton: tplIconButton,
        dialog: tplDialog
      };
    };
    /**
     * add button information
     *
     * @param {String} name button name
     * @param {Function} buttonInfo function to make button, reference to {@link #tplButton},{@link #tplIconButton}
     */


    this.addButtonInfo = function (name, buttonInfo) {
      tplButtonInfo[name] = buttonInfo;
    };
    /**
     *
     * @param {String} name
     * @param {Function} dialogInfo function to make dialog, reference to {@link #tplDialog}
     */


    this.addDialogInfo = function (name, dialogInfo) {
      tplDialogInfo[name] = dialogInfo;
    };
  }; // jQuery namespace for summernote

  /**
   * @class $.summernote
   *
   * summernote attribute
   *
   * @mixin defaults
   * @singleton
   *
   */


  $.summernote = $.summernote || {}; // extends default settings
  //  - $.summernote.version
  //  - $.summernote.options
  //  - $.summernote.lang

  $.extend($.summernote, defaults);
  var renderer = new Renderer();
  var eventHandler = new EventHandler();
  $.extend($.summernote, {
    /** @property {Renderer} */
    renderer: renderer,

    /** @property {EventHandler} */
    eventHandler: eventHandler,

    /**
     * @property {Object} core
     * @property {core.agent} core.agent
     * @property {core.dom} core.dom
     * @property {core.range} core.range
     */
    core: {
      agent: agent,
      list: list,
      dom: dom,
      range: range
    },

    /**
     * @property {Object}
     * pluginEvents event list for plugins
     * event has name and callback function.
     *
     * ```
     * $.summernote.addPlugin({
     *     events : {
     *          'hello' : function(layoutInfo, value, $target) {
     *              console.log('event name is hello, value is ' + value );
     *          }
     *     }
     * })
     * ```
     *
     * * event name is data-event property.
     * * layoutInfo is a summernote layout information.
     * * value is data-value property.
     */
    pluginEvents: {},
    plugins: []
  });
  /**
   * @method addPlugin
   *
   * add Plugin in Summernote
   *
   * Summernote can make a own plugin.
   *
   * ### Define plugin
   * ```
   * // get template function
   * var tmpl = $.summernote.renderer.getTemplate();
   *
   * // add a button
   * $.summernote.addPlugin({
   *     buttons : {
   *        // "hello"  is button's namespace.
   *        "hello" : function(lang, options) {
   *            // make icon button by template function
   *            return tmpl.iconButton(options.iconPrefix + 'header', {
   *                // callback function name when button clicked
   *                event : 'hello',
   *                // set data-value property
   *                value : 'hello',
   *                hide : true
   *            });
   *        }
   *
   *     },
   *
   *     events : {
   *        "hello" : function(layoutInfo, value) {
   *            // here is event code
   *        }
   *     }
   * });
   * ```
   * ### Use a plugin in toolbar
   *
   * ```
   *    $("#editor").summernote({
   *    ...
   *    toolbar : [
   *        // display hello plugin in toolbar
   *        ['group', [ 'hello' ]]
   *    ]
   *    ...
   *    });
   * ```
   *
   *
   * @param {Object} plugin
   * @param {Object} [plugin.buttons] define plugin button. for detail, see to Renderer.addButtonInfo
   * @param {Object} [plugin.dialogs] define plugin dialog. for detail, see to Renderer.addDialogInfo
   * @param {Object} [plugin.events] add event in $.summernote.pluginEvents
   * @param {Object} [plugin.langs] update $.summernote.lang
   * @param {Object} [plugin.options] update $.summernote.options
   */

  $.summernote.addPlugin = function (plugin) {
    // save plugin list
    $.summernote.plugins.push(plugin);

    if (plugin.buttons) {
      $.each(plugin.buttons, function (name, button) {
        renderer.addButtonInfo(name, button);
      });
    }

    if (plugin.dialogs) {
      $.each(plugin.dialogs, function (name, dialog) {
        renderer.addDialogInfo(name, dialog);
      });
    }

    if (plugin.events) {
      $.each(plugin.events, function (name, event) {
        $.summernote.pluginEvents[name] = event;
      });
    }

    if (plugin.langs) {
      $.each(plugin.langs, function (locale, lang) {
        if ($.summernote.lang[locale]) {
          $.extend($.summernote.lang[locale], lang);
        }
      });
    }

    if (plugin.options) {
      $.extend($.summernote.options, plugin.options);
    }
  };
  /*
   * extend $.fn
   */


  $.fn.extend({
    /**
     * @method
     * Initialize summernote
     *  - create editor layout and attach Mouse and keyboard events.
     *
     * ```
     * $("#summernote").summernote( { options ..} );
     * ```
     *
     * @member $.fn
     * @param {Object|String} options reference to $.summernote.options
     * @return {this}
     */
    summernote: function summernote() {
      // check first argument's type
      //  - {String}: External API call {{module}}.{{method}}
      //  - {Object}: init options
      var type = $.type(list.head(arguments));
      var isExternalAPICalled = type === 'string';
      var hasInitOptions = type === 'object'; // extend default options with custom user options

      var options = hasInitOptions ? list.head(arguments) : {};
      options = $.extend({}, $.summernote.options, options);
      options.icons = $.extend({}, $.summernote.options.icons, options.icons); // Include langInfo in options for later use, e.g. for image drag-n-drop
      // Setup language info with en-US as default

      options.langInfo = $.extend(true, {}, $.summernote.lang['en-US'], $.summernote.lang[options.lang]); // override plugin options

      if (!isExternalAPICalled && hasInitOptions) {
        for (var i = 0, len = $.summernote.plugins.length; i < len; i++) {
          var plugin = $.summernote.plugins[i];

          if (options.plugin[plugin.name]) {
            $.summernote.plugins[i] = $.extend(true, plugin, options.plugin[plugin.name]);
          }
        }
      }

      this.each(function (idx, holder) {
        var $holder = $(holder); // if layout isn't created yet, createLayout and attach events

        if (!renderer.hasNoteEditor($holder)) {
          renderer.createLayout($holder, options);
          var layoutInfo = renderer.layoutInfoFromHolder($holder);
          $holder.data('layoutInfo', layoutInfo);
          eventHandler.attach(layoutInfo, options);
          eventHandler.attachCustomEvent(layoutInfo, options);
        }
      });
      var $first = this.first();

      if ($first.length) {
        var layoutInfo = renderer.layoutInfoFromHolder($first); // external API

        if (isExternalAPICalled) {
          var moduleAndMethod = list.head(list.from(arguments));
          var args = list.tail(list.from(arguments)); // TODO now external API only works for editor

          var params = [moduleAndMethod, layoutInfo.editable()].concat(args);
          return eventHandler.invoke.apply(eventHandler, params);
        } else if (options.focus) {
          // focus on first editable element for initialize editor
          layoutInfo.editable().focus();
        }
      }

      return this;
    },

    /**
     * @method
     *
     * get the HTML contents of note or set the HTML contents of note.
     *
     * * get contents
     * ```
     * var content = $("#summernote").code();
     * ```
     * * set contents
     *
     * ```
     * $("#summernote").code(html);
     * ```
     *
     * @member $.fn
     * @param {String} [html] - HTML contents(optional, set)
     * @return {this|String} - context(set) or HTML contents of note(get).
     */
    code: function code(html) {
      // get the HTML contents of note
      if (html === undefined) {
        var $holder = this.first();

        if (!$holder.length) {
          return;
        }

        var layoutInfo = renderer.layoutInfoFromHolder($holder);
        var $editable = layoutInfo && layoutInfo.editable();

        if ($editable && $editable.length) {
          var isCodeview = eventHandler.invoke('codeview.isActivated', layoutInfo);
          eventHandler.invoke('codeview.sync', layoutInfo);
          return isCodeview ? layoutInfo.codable().val() : layoutInfo.editable().html();
        }

        return dom.value($holder);
      } // set the HTML contents of note


      this.each(function (i, holder) {
        var layoutInfo = renderer.layoutInfoFromHolder($(holder));
        var $editable = layoutInfo && layoutInfo.editable();

        if ($editable) {
          $editable.html(html);
        }
      });
      return this;
    },

    /**
     * @method
     *
     * destroy Editor Layout and detach Key and Mouse Event
     *
     * @member $.fn
     * @return {this}
     */
    destroy: function destroy() {
      this.each(function (idx, holder) {
        var $holder = $(holder);

        if (!renderer.hasNoteEditor($holder)) {
          return;
        }

        var info = renderer.layoutInfoFromHolder($holder);
        var options = info.editor().data('options');
        eventHandler.detach(info, options);
        renderer.removeLayout($holder, info, options);
      });
      return this;
    }
  });
});

/***/ }),

/***/ 96422:
/*!*********************************************************************************************!*\
  !*** ./public/bundles/akeneopimenrichment/js/product/field/reference-multi-select-field.js ***!
  \*********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/multi-select-field */ 22088), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, MultiselectField, Routing, FetcherRegistry) {
  return MultiselectField.extend({
    fieldType: 'reference-multi-select',
    getTemplateContext: function getTemplateContext() {
      return MultiselectField.prototype.getTemplateContext.apply(this, arguments).then(function (templateContext) {
        templateContext.userCanAddOption = false;
        return templateContext;
      });
    },
    getChoiceUrl: function getChoiceUrl() {
      return FetcherRegistry.getFetcher('reference-data-configuration').fetchAll().then(_.bind(function (config) {
        return Routing.generate('pim_ui_ajaxentity_list', {
          "class": config[this.attribute.reference_data_name]["class"],
          dataLocale: this.context.locale,
          collectionId: this.attribute.meta.id,
          options: {
            type: 'code'
          }
        });
      }, this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 45594:
/*!**********************************************************************************************!*\
  !*** ./public/bundles/akeneopimenrichment/js/product/field/reference-simple-select-field.js ***!
  \**********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/simple-select-field */ 29576), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, SimpleselectField, Routing, FetcherRegistry) {
  return SimpleselectField.extend({
    fieldType: 'reference-simple-select',
    getTemplateContext: function getTemplateContext() {
      return SimpleselectField.prototype.getTemplateContext.apply(this, arguments).then(function (templateContext) {
        templateContext.userCanAddOption = false;
        return templateContext;
      });
    },
    getChoiceUrl: function getChoiceUrl() {
      return FetcherRegistry.getFetcher('reference-data-configuration').fetchAll().then(_.bind(function (config) {
        return Routing.generate('pim_ui_ajaxentity_list', {
          "class": config[this.attribute.reference_data_name]["class"],
          dataLocale: this.context.locale,
          collectionId: this.attribute.meta.id,
          options: {
            type: 'code'
          }
        });
      }, this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 63861:
/*!*****************************************************************************************!*\
  !*** ./public/bundles/akeneopimstructure/js/attribute/form/properties/ref-data-name.js ***!
  \*****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/form/common/fields/select */ 60191)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseField, fetcherRegistry, __, template) {
  return BaseField.extend({
    events: {
      'change select': function changeSelect(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
        this.getRoot().render();
      }
    },
    template: _.template(template),
    refData: [],

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return $.when(BaseField.prototype.configure.apply(this, arguments), fetcherRegistry.getFetcher('reference-data-configuration').fetchAll().then(function (refData) {
        this.refData = _.pick(refData, function (refDataItem) {
          return this.config.refDataType === refDataItem.type;
        }.bind(this));
      }.bind(this)));
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      if (!_.has(this.getFormData(), this.fieldName) && _.has(this.config, 'defaultValue')) {
        this.updateModel(this.config.defaultValue);
      }

      return this.template(_.extend(templateContext, {
        value: this.getFormData()[this.fieldName],
        choices: this.formatChoices(this.refData),
        multiple: false,
        labels: {
          defaultLabel: __('pim_enrich.entity.attribute.property.reference_data_name.choose')
        }
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('select.select2').select2({
        allowClear: true
      });
    },

    /**
     * @param {Object} refData
     */
    formatChoices: function formatChoices(refData) {
      return _.mapObject(refData, function (refDataItem) {
        return refDataItem.name;
      });
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      return $(field).val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 60063:
/*!**********************************************************!*\
  !*** ./public/bundles/pimanalytics/js/data-collector.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Routing) {
  'use strict';
  /**
   * @return {Object}
   */

  return {
    collect: function collect(route) {
      return $.getJSON(Routing.generate(route));
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 99096:
/*!*********************************************************!*\
  !*** ./public/bundles/pimanalytics/js/patch-fetcher.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/data-collector */ 60063)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, DataCollector) {
  'use strict';

  return {
    /**
     * @return {Promise}
     */
    fetch: function fetch(updateServerUrl) {
      var storageEnabled = typeof Storage !== 'undefined' && sessionStorage;
      var lastPatchKey = 'last-patch-available';

      if (storageEnabled && null !== sessionStorage.getItem(lastPatchKey)) {
        var deferred = $.Deferred();
        deferred.resolve(sessionStorage.getItem(lastPatchKey));
        return deferred.promise();
      } else {
        return DataCollector.collect('pim_analytics_data_collect').then(function (collectedData) {
          var version = collectedData.pim_version;

          var minorVersion = _.first(version.match(/^\d+.\d+/g));

          var page = collectedData.pim_edition + '-' + minorVersion + '.json';
          var lastPatchUrl = updateServerUrl + '/' + page;
          return $.ajax({
            dataType: 'json',
            url: lastPatchUrl,
            data: collectedData,
            timeout: 10000
          }).then(function (patchData) {
            var patch = patchData.last_patch.name;
            var cleanedPatch = patch.replace(/^v/g, '');
            sessionStorage.setItem(lastPatchKey, cleanedPatch);
            return cleanedPatch;
          });
        });
      }
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 34287:
/*!*************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter-builder.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/tools */ 24998), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/datafilter/collection-filters-manager */ 91902), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, tools, mediator, FiltersManager, BaseForm) {
  var DataFilterBuilder = BaseForm.extend({
    initialized: false,
    config: {
      filterModuleName: 'oro/datafilter/{{type}}-filter',
      filterTypes: {
        identifier: 'identifier',
        string: 'choice',
        choice: 'select',
        selectrow: 'select-row',
        multichoice: 'multiselect',
        "boolean": 'select'
      }
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.config = Object.assign(this.config, options.config || {});
      mediator.once('datagrid_collection_set_after', this.initHandler.bind(this));
      mediator.once('hash_navigation_request:start', function () {
        if (!this.initialized) {
          mediator.off('datagrid_collection_set_after', this.initHandler.bind(this));
        }
      });
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Sets the element and collection, starts the builder
     * @param  {Object} collection Data collection
     * @param  {Object} $el        Element
     */
    initHandler: function initHandler(collection, $el) {
      this.collection = collection;
      this.$el = $el;
      this.initBuilder();
      this.initialized = true;
    },

    /**
     * Collect and load the filter modules
     */
    initBuilder: function initBuilder() {
      this.metadata = Object.assign({
        filters: {},
        options: {}
      }, this.$el.data('metadata'));
      this.modules = {};
      this.collectModules.call(this);
      tools.loadModules(this.modules, this.build.bind(this));
    },

    /**
     * Collects required modules
     */
    collectModules: function collectModules() {
      var _this = this;

      var modules = this.modules;

      _.each(this.metadata.filters, function (filter) {
        var type = filter.type;
        modules[type] = _this.config.filterModuleName.replace('{{type}}', _this.config.filterTypes[type] || type);
      });
    },

    /**
     * Renders the filters
     */
    build: function build() {
      var options = this.combineOptions.call(this);
      options.collection = this.collection;
      options.renderFilterList = true;
      options.displayManageFilters = _.result(this.metadata.options, 'manageFilters', true);
      options.filtersAsColumn = _.result(this.metadata.options, 'filtersAsColumn', false);
      var filtersList = new FiltersManager(options);
      this.$el.prepend(filtersList.render().$el);
      mediator.trigger('datagrid_filters:rendered', this.collection);

      if (this.collection.length === 0) {
        filtersList.$el.hide();
      }

      mediator.trigger('datagrid_filters:build.post', filtersList);
    },

    /**
     * Process metadata and combines options for filters
     *
     * @returns {Object}
     */
    combineOptions: function combineOptions() {
      var filters = {};
      var modules = this.modules;
      var collection = this.collection;

      _.each(this.metadata.filters, function (options) {
        if (_.has(options, 'name') && _.has(options, 'type')) {
          // @TODO pass collection only for specific filters
          if (options.type === 'selectrow') {
            options.collection = collection;
          }

          filters[options.name] = new (modules[options.type].extend(options))(options);
        }
      });

      return {
        filters: filters
      };
    }
  }); // Drop in TIP-733-2

  DataFilterBuilder.init = function () {
    return new DataFilterBuilder();
  };

  return DataFilterBuilder;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 91902:
/*!********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/collection-filters-manager.js ***!
  \********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */

/**
 * View that represents all grid filters
 *
 * @export  oro/datafilter/collection-filters-manager
 * @class   oro.datafilter.CollectionFiltersManager
 * @extends oro.datafilter.FiltersManager
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datafilter/filters-manager */ 94449)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, FiltersManager) {
  'use strict';

  return FiltersManager.extend({
    /**
     * Initialize filter list options
     *
     * @param {Object} options
     * @param {oro.PageableCollection} [options.collection]
     * @param {Object} [options.filters]
     * @param {String} [options.addButtonHint]
     */
    initialize: function initialize(options) {
      this.collection = options.collection;
      this.collection.on('beforeFetch', this._beforeCollectionFetch, this);
      this.collection.on('updateState', this._onUpdateCollectionState, this);
      this.collection.on('reset', this._onCollectionReset, this);
      FiltersManager.prototype.initialize.apply(this, arguments);
    },

    /**
     * Triggers when filter is updated
     *
     * @param {oro.filter.AbstractFilter} filter
     * @protected
     */
    _onFilterUpdated: function _onFilterUpdated(filter) {
      if (this.ignoreFiltersUpdateEvents) {
        return;
      }

      this.collection.state.currentPage = 1;
      this.collection.fetch();

      FiltersManager.prototype._onFilterUpdated.apply(this, arguments);
    },

    /**
     * Triggers before collection fetch it's data
     *
     * @protected
     */
    _beforeCollectionFetch: function _beforeCollectionFetch(collection) {
      collection.state.filters = this._createState();
    },

    /**
     * Triggers when collection state is updated
     *
     * @param {oro.PageableCollection} collection
     */
    _onUpdateCollectionState: function _onUpdateCollectionState(collection) {
      this.ignoreFiltersUpdateEvents = true;

      this._applyState(collection.state.filters || {});

      this.ignoreFiltersUpdateEvents = false;
    },

    /**
     * Triggers after collection resets it's data
     *
     * @protected
     */
    _onCollectionReset: function _onCollectionReset(collection) {
      if (collection.state.totalRecords > 0 && this.$el.children().length > 0) {
        this.$el.show();
      }
    },

    /**
     * Create state according to filters parameters
     *
     * @return {Object}
     * @protected
     */
    _createState: function _createState() {
      var state = {};

      _.each(this.filters, function (filter, name) {
        var shortName = '__' + name;

        if (filter.enabled) {
          if (!filter.isEmpty()) {
            state[name] = filter.getValue();
          } else if (!filter.defaultEnabled) {
            state[shortName] = 1;
          }
        } else if (filter.defaultEnabled) {
          state[shortName] = 0;
        }
      }, this);

      this.trigger('collection-filters:createState.post', state);
      return state;
    },

    /**
     * Apply filter values from state
     *
     * @param {Object} state
     * @protected
     * @return {*}
     */
    _applyState: function _applyState(state) {
      var toEnable = [],
          toDisable = [];

      _.each(this.filters, function (filter, name) {
        var shortName = '__' + name,
            filterState;

        if (_.has(state, name) && 0 !== _.size(state)) {
          filterState = state[name];

          if (!_.isObject(filterState)) {
            filterState = {
              value: filterState
            };
          }

          filter.setValue(filterState);
          toEnable.push(filter);
        } else if (_.has(state, shortName)) {
          filter.reset();

          if (Number(state[shortName])) {
            toEnable.push(filter);
          } else {
            toDisable.push(filter);
          }
        } else {
          filter.reset();

          if (filter.defaultEnabled) {
            toEnable.push(filter);
          } else {
            toDisable.push(filter);
          }
        }
      }, this);

      this.enableFilters(toEnable);
      this.disableFilters(toDisable);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 38510:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/abstract-filter.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/app */ 10501)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, app) {
  'use strict';
  /**
   * Basic grid filter
   *
   * Inheritance schema:
   *
   * - abstract-filter (abstract)
   *   - none-filter (unused?)
   *   - search-filter (Displays a search box)
   *   - select-filter (Displays a list of choices with a search box. "Status", only boolean)
   *     - multiselect-filter (Displays a multiselect with checkboxes (no ajax). "Job type"...
   *       - ajax-choice-filter (unused?)
   *     - product_completeness-filter (Displays the completeness like a select)
   *     - product_scope-filter (Displays the scope like a select)
   *     - select-row-filter (unused?)
   *   - text-filter (Displays a choice contains/does not contains... Only on process tracker "Type", "User")
   *     - choice-filter (Displays a choice contains/does not contains/equals... and 1 text field. "SKU", all text fields)
   *       - date-filter (Displays a choice between/not between/more/less and 2 datepickers. "Created at", "Release date")
   *         - datetime-filter (unused?)
   *       - number-filter (Displays choice =/>/</empty... and 1 text field. "Optical zoom", all number fields)
   *         - metric-filter (Displays choice =/</empty..., a text field and a unit. All metric fields)
   *         - price-filter (Displays choice =/>..., a text field and a currency field. All prices fields)
   *         - product_category-filter (For category filter, special one)
   *     - select2-choice-filter (Displays a multiple select2. "Group", "Brand"...)
   *     - select2-rest-choice-filter (multiple select2 with ajax calls. Only "Family")
   *
   * @export  oro/datafilter/abstract-filter
   * @class   oro.datafilter.AbstractFilter
   * @extends Backbone.View
   */

  return Backbone.View.extend({
    /**
     * Filter container tag
     *
     * @property {String}
     */
    tagName: 'div',

    /**
     * Filter container class name
     *
     * @property {String}
     */
    className: 'AknFilterBox-filterContainer filter-item oro-drop',

    /**
     * Is filter can be disabled
     *
     * @property {Boolean}
     */
    canDisable: true,

    /**
     * Is filter enabled
     *
     * @property {Boolean}
     */
    enabled: false,

    /**
     * Is filter enabled by default
     *
     * @property {Boolean}
     */
    defaultEnabled: false,

    /**
     * Name of filter field
     *
     * @property {String}
     */
    name: 'input_name',

    /**
     * Placeholder for default value
     *
     * @property
     */
    placeholder: _.__('pim_common.all'),

    /**
     * Label of filter
     *
     * @property {String}
     */
    label: 'Input Label',

    /**
     * Is filter label visible
     *
     * @property {Boolean}
     */
    showLabel: true,

    /**
     * Parent element active class
     *
     * @property {String}
     */
    buttonActiveClass: 'open-filter',

    /**
     * Null link value
     *
     * @property {String}
     */
    nullLink: 'javascript:void(0);',

    /**
     * Initialize.
     *
     * @param {Object} options
     * @param {Boolean} [options.enabled]
     */
    initialize: function initialize(options) {
      options = options || {};

      if (_.has(options, 'enabled')) {
        this.enabled = options.enabled;
      }

      if (_.has(options, 'canDisable')) {
        this.canDisable = options.canDisable;
      }

      if (_.has(options, 'placeholder')) {
        this.placeholder = options.placeholder;
      }

      if (_.has(options, 'showLabel')) {
        this.showLabel = options.showLabel;
      }

      if (_.has(options, 'name')) {
        this.$el.attr('data-name', options.name);
      }

      if (_.has(options, 'type')) {
        this.$el.attr('data-type', options.type);
      }

      this.defaultEnabled = this.enabled; // init empty value object if it was not initialized so far

      if (_.isUndefined(this.emptyValue)) {
        this.emptyValue = {};
      } // init raw value of filter


      this.value = _.clone(this.emptyValue);
      Backbone.View.prototype.initialize.apply(this, arguments);
    },

    /**
     * Enable filter
     *
     * @return {*}
     */
    enable: function enable() {
      if (!this.enabled) {
        this.render();
        this.enabled = true;
        this.show();
        this.trigger('enable', this);
      }

      return this;
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      $('.column-inner').scroll(this._updateCriteriaSelectorPosition.bind(this));
    },

    /**
     * Disable filter
     *
     * @return {*}
     */
    disable: function disable() {
      if (this.enabled) {
        this.enabled = false;
        this.hide();
        this.trigger('disable', this);
        this.reset();
      }

      return this;
    },

    /**
     * Show filter
     *
     * @return {*}
     */
    show: function show() {
      this.$el.css('display', 'block');
      return this;
    },

    /**
     * Hide filter
     *
     * @return {*}
     */
    hide: function hide() {
      this.$el.hide();
      return this;
    },

    /**
     * Reset filter elements
     *
     * @return {*}
     */
    reset: function reset() {
      this.setValue(this.emptyValue);
      return this;
    },

    /**
     * Get clone of current raw value
     *
     * @return {Object}
     */
    getValue: function getValue() {
      return app.deepClone(this.value);
    },

    /**
     * Set raw value to filter
     *
     * @param value
     * @return {*}
     */
    setValue: function setValue(value) {
      if (this._isNewValueUpdated(value)) {
        var oldValue = this.value;
        this.value = app.deepClone(value);

        this._updateDOMValue();

        this._onValueUpdated(this.value, oldValue);
      }

      return this;
    },

    /**
     * Converts a display value to raw format, e.g. decimal value can be displayed as "5,000,000.00"
     * but raw value is 5000000.0
     *
     * @param {*} value
     * @return {*}
     * @protected
     */
    _formatRawValue: function _formatRawValue(value) {
      return value;
    },

    /**
     * Converts a raw value to display format, opposite to _formatRawValue
     *
     * @param {*} value
     * @return {*}
     * @protected
     */
    _formatDisplayValue: function _formatDisplayValue(value) {
      return value;
    },

    /**
     * Checks if new value differs from current value
     *
     * @param {*} newValue
     * @return {Boolean}
     * @protected
     */
    _isNewValueUpdated: function _isNewValueUpdated(newValue) {
      return !app.isEqualsLoosely(this.value, newValue);
    },

    /**
     * Triggers when filter value is updated
     *
     * @param {*} newValue
     * @param {*} oldValue
     * @protected
     */
    _onValueUpdated: function _onValueUpdated(newValue, oldValue) {
      this._triggerUpdate(newValue, oldValue);
    },

    /**
     * Triggers update event
     *
     * @param {*} newValue
     * @param {*} oldValue
     * @protected
     */
    _triggerUpdate: function _triggerUpdate(newValue, oldValue) {
      this.trigger('update');
    },

    /**
     * Compares current value with empty value
     *
     * @return {Boolean}
     */
    isEmpty: function isEmpty() {
      return app.isEqualsLoosely(this.getValue(), this.emptyValue);
    },

    /**
     * Determines whether a filter value is empty or not
     * Unlike isEmpty method this method should take in account only data values.
     * For example if a filter has a string value and comparison type, the comparison type
     * should be ignored in this method.
     *
     * @return {Boolean}
     */
    isEmptyValue: function isEmptyValue() {
      if (_.has(this.emptyValue, 'value') && _.has(this.value, 'value')) {
        return app.isEqualsLoosely(this.value.value, this.emptyValue.value);
      }

      return true;
    },

    /**
     * Gets input value. Radio inputs are supported.
     *
     * @param {String|Object} input
     * @return {*}
     * @protected
     */
    _getInputValue: function _getInputValue(input) {
      var result = undefined;
      var $input = this.$(input);

      switch ($input.attr('type')) {
        case 'radio':
          $input.each(function () {
            if ($(this).is(':checked')) {
              result = $(this).val();
            }
          });
          break;

        default:
          result = $input.val();
      }

      return result;
    },

    /**
     * Sets input value. Radio inputs are supported.
     *
     * @param {String|Object} input
     * @param {String} value
     * @protected
     * @return {*}
     */
    _setInputValue: function _setInputValue(input, value) {
      var $input = this.$(input);

      switch ($input.attr('type')) {
        case 'radio':
          $input.each(function () {
            var $input = $(this);

            if ($input.val() == value) {
              $input.prop('checked', true);
              $input.click();
            } else {
              $(this).removeAttr('checked');
            }
          });
          break;

        default:
          $input.val(value);
      }

      return this;
    },

    /**
     * Updated DOM value with current display value
     *
     * @return {*}
     * @protected
     */
    _updateDOMValue: function _updateDOMValue() {
      return this._writeDOMValue(this._getDisplayValue());
    },

    /**
     * Get criteria hint value
     *
     * @return {String}
     */
    _getCriteriaHint: function _getCriteriaHint() {
      return '';
    },

    /**
     * Get current value formatted to display format
     *
     * @return {*}
     * @protected
     */
    _getDisplayValue: function _getDisplayValue() {
      var value = arguments.length > 0 ? arguments[0] : this.getValue();
      return this._formatDisplayValue(value);
    },

    /**
     * Writes values from object into DOM elements
     *
     * @param {Object} value
     * @abstract
     * @protected
     * @return {*}
     */
    _writeDOMValue: function _writeDOMValue(value) {
      throw new Error('Method _writeDOMValue is abstract and must be implemented'); //this._setInputValue(inputValueSelector, value.value);
      //return this
    },

    /**
     * Reads value of DOM elements into object
     *
     * @return {Object}
     * @protected
     */
    _readDOMValue: function _readDOMValue() {
      throw new Error('Method _readDOMValue is abstract and must be implemented'); //return { value: this._getInputValue(this.inputValueSelector) }
    },

    /**
     * Set filter button class
     *
     * @param {Object} element
     * @param {Boolean} status
     * @protected
     */
    _setButtonPressed: function _setButtonPressed(element, status) {
      var $element = $(element);
      var rightOffset = $(window).width() - ($element.offset().left + $element.outerWidth());

      if (status) {
        element.parent().addClass(this.buttonActiveClass);
      } else {
        element.parent().removeClass(this.buttonActiveClass);
      }
    },

    /**
     * Prevent submit of parent form if any.
     *
     * @param {Event} e
     * @private
     */
    _preventEnterProcessing: function _preventEnterProcessing(e) {
      if (e.keyCode == 13) {
        e.preventDefault();
        e.stopPropagation();
      }
    },

    /**
     * There is a well known bug on browsers, forced us to not use the overflow-x and overflow-y with different
     * values. With the design in columns, the criteria popups are not displayed correctly with the dropdown or
     * multiselect libraries. So we sadly have to change the position of the popup to "fixed" and set manually
     * their position.
     *
     * This next function will find the best position to display then (aligned with the current filter).
     */
    _updateCriteriaSelectorPosition: function _updateCriteriaSelectorPosition() {
      var body = $('body');
      var criteria = this.getCriteria();

      if (criteria.is(':visible')) {
        criteria.css({
          position: 'fixed'
        });
        var expectedLeft = this.$el.offset().left;

        if (expectedLeft + criteria.outerWidth() > body.width() && expectedLeft + this.$el.width() - criteria.outerWidth() > 0) {
          criteria.css({
            left: expectedLeft + this.$el.width() - criteria.outerWidth()
          });
        } else {
          criteria.css({
            left: expectedLeft
          });
        }

        var expectedTop = this.$el.offset().top;

        if (expectedTop + criteria.outerHeight() <= body.height()) {
          criteria.css({
            top: expectedTop
          });
        } else if (expectedTop + this.$el.height() - criteria.outerHeight() > 0) {
          criteria.css({
            top: expectedTop + this.$el.height() - criteria.outerHeight()
          });
        } else {
          criteria.css({
            top: 0
          });
        }
      }
    },

    /**
     * Returns the DOM element of the criteria
     *
     * @returns {*}
     */
    getCriteria: function getCriteria() {
      return this.$(this.criteriaSelector);
    },

    /**
     * Highlights the current dropdown
     *
     * @param {String} value
     * @param {String} selector (ex: '.operator')
     */
    _highlightDropdown: function _highlightDropdown(value, selector) {
      this.$el.find(selector + ' .AknDropdown-menuLink').removeClass('AknDropdown-menuLink--active').removeClass('active');
      var currentChoice = this.$el.find(selector + ' *[data-value="' + value + '"]');
      currentChoice.parent().addClass('AknDropdown-menuLink--active').addClass('active');
      this.$el.find(selector + ' .AknActionButton-highlight').html(currentChoice.text());
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71306:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/ajax-choice-filter.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datafilter/multiselect-filter */ 40460), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, MultiSelectFilter, Routing) {
  'use strict';

  return MultiSelectFilter.extend({
    choicesFetched: false,
    choiceUrl: null,
    choiceUrlParams: {},
    initialize: function initialize(options) {
      options = options || {};

      if (_.has(options, 'choiceUrl')) {
        this.choiceUrl = options.choiceUrl;
      }

      if (_.has(options, 'choiceUrlParams')) {
        this.choiceUrlParams = options.choiceUrlParams;
      }

      MultiSelectFilter.prototype.initialize.apply(this, arguments);
    },
    render: function render() {
      var options = this.choices.slice(0);
      this.$el.empty();

      if (this.populateDefault) {
        options.unshift({
          value: '',
          label: this.placeholder
        });
      }

      this.$el.append(this.template({
        label: this.label,
        showLabel: this.showLabel,
        options: options,
        placeholder: this.placeholder,
        nullLink: this.nullLink,
        canDisable: this.canDisable,
        emptyValue: this.emptyValue
      }));

      if (this.value.value) {
        _.each(this.value.value, function (item) {
          this.$(this.inputSelector).find('option[value="' + item + '"]').prop('selected', true);
        }, this);
      }

      this._initializeSelectWidget();

      return this;
    },
    show: function show() {
      if (!this.choicesFetched && !this.choices.length && this.choiceUrl) {
        var url = Routing.generate(this.choiceUrl, this.choiceUrlParams);
        $.get(url, _.bind(function (data) {
          this._updateChoices(data.results);

          this.render();
          MultiSelectFilter.prototype.show.apply(this, arguments);
        }, this));
      } else {
        MultiSelectFilter.prototype.show.apply(this, arguments);
      }
    },
    _updateChoices: function _updateChoices(results) {
      var choices = [];

      _.each(results, function (result) {
        choices.push({
          value: result.id,
          label: result.text
        });
      });

      choices.push({
        value: 'empty',
        label: _.__('pim_datagrid.filters.common.empty')
      });
      choices.push({
        value: 'not empty',
        label: _.__('pim_datagrid.filters.common.not_empty')
      });
      this.choices = choices;
      this.choicesFetched = true;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 81398:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/choice-filter.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/app */ 10501), __webpack_require__(/*! oro/datafilter/text-filter */ 57796), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, app, TextFilter, initSelect2) {
  'use strict';
  /**
   * Choice filter: filter type as option + filter value as string
   *
   * @export  oro/datafilter/choice-filter
   * @class   oro.datafilter.ChoiceFilter
   * @extends oro.datafilter.TextFilter
   */

  return TextFilter.extend({
    /**
     * Selectors for filter criteria elements
     *
     * @property {Object}
     */
    criteriaValueSelectors: {
      value: 'input[name="value"]',
      type: 'input[type="hidden"]'
    },
    emptyChoice: true,

    /**
     * Filter events
     *
     * @property
     */
    events: {
      'keyup input': '_onReadCriteriaInputKey',
      'keydown [type="text"]': '_preventEnterProcessing',
      'click .filter-update': '_onClickUpdateCriteria',
      'click .filter-criteria-selector': '_onClickCriteriaSelector',
      'click .AknDropdown-menuLink': '_onSelectOperator',
      'click .disable-filter': '_onClickDisableFilter'
    },

    /**
     * Initialize.
     *
     * @param {Object} options
     */
    initialize: function initialize() {
      // init filter content options if it was not initialized so far
      if (_.isUndefined(this.choices)) {
        this.choices = [];
      } // temp code to keep backward compatible


      if ($.isPlainObject(this.choices)) {
        this.choices = _.map(this.choices, function (option, i) {
          return {
            value: i.toString(),
            label: option
          };
        });
      } // init empty value object if it was not initialized so far


      if (_.isUndefined(this.emptyValue)) {
        this.emptyValue = {
          type: _.isEmpty(this.choices) ? '' : _.first(this.choices).value,
          value: ''
        };
      }

      TextFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * @inheritDoc
     */
    _getCriteriaHint: function _getCriteriaHint() {
      var option,
          hint,
          value = arguments.length > 0 ? this._getDisplayValue(arguments[0]) : this._getDisplayValue();

      if (_.contains(['empty', 'not empty'], value.type)) {
        return this._getChoiceOption(value.type).label;
      }

      if (!value.value) {
        hint = this.placeholder;
      } else {
        option = this._getChoiceOption(value.type);
        hint = (option ? option.label + ' ' : '') + '"' + value.value + '"';
      }

      return hint;
    },

    /**
     * Fetches option object for corresponded value type
     *
     * @param {*|string} valueType
     * @returns {{value: string, label: string}}
     * @private
     */
    _getChoiceOption: function _getChoiceOption(valueType) {
      return _.findWhere(this.choices, {
        value: valueType.toString()
      });
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      this._setInputValue(this.criteriaValueSelectors.value, value.value);

      this._setInputValue(this.criteriaValueSelectors.type, value.type);

      this._highlightDropdown(value.type, '.operator');

      this._toggleListSelection('in' === value.type);

      this._toggleInput(_.contains(['empty', 'not empty'], value.type));

      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      var operator = this.emptyChoice ? this.$('.active .operator_choice').data('value') : 'in';
      return {
        value: _.contains(['empty', 'not empty'], operator) ? '' : this._getInputValue(this.criteriaValueSelectors.value),
        type: operator
      };
    },

    /**
     * @inheritDoc
     */
    _triggerUpdate: function _triggerUpdate(newValue, oldValue) {
      if (!app.isEqualsLoosely(newValue.value, oldValue.value) || !app.isEqualsLoosely(newValue.type, oldValue.type)) {
        this.trigger('update');
      }
    },

    /**
     * @inheritDoc
     */
    _onValueUpdated: function _onValueUpdated(newValue, oldValue) {
      // synchronize choice selector with new value
      var menu = this.$('.choicefilter .dropdown-menu');
      menu.find('li a').each(function () {
        var item = $(this);

        if (item.data('value') == oldValue.type && item.parent().hasClass('active')) {
          item.parent().removeClass('active');
        } else if (item.data('value') == newValue.type && !item.parent().hasClass('active')) {
          item.parent().addClass('active');
          item.closest('.AknDropdown').find('AknActionButton').html(item.html() + '<span class="AknActionButton-caret AknCaret"></span>');
        }
      });

      if (_.contains(['empty', 'not empty'], newValue.type)) {
        this.$(this.criteriaValueSelectors.value).hide();
      } else {
        this.$(this.criteriaValueSelectors.value).show();
      }

      TextFilter.prototype._onValueUpdated.apply(this, arguments);
    },

    /**
     * @inheritDoc
     */
    _renderCriteria: function _renderCriteria(el) {
      TextFilter.prototype._renderCriteria.apply(this, arguments);

      var defaultOperator = this.emptyValue.type;

      this._toggleListSelection('in' === defaultOperator);

      this._toggleInput(_.contains(['empty', 'not empty'], defaultOperator));

      return this;
    },

    /**
     * Updates the select classes and hide/show sub-elements
     *
     * @param {Event} e
     * @protected
     */
    _onSelectOperator: function _onSelectOperator(e) {
      var value = $(e.currentTarget).find('.operator_choice').attr('data-value');

      this._highlightDropdown(value, '.operator');

      this._toggleListSelection('in' === value);

      this._toggleInput(_.contains(['empty', 'not empty'], value));

      e.preventDefault();
    },
    _toggleListSelection: function _toggleListSelection(enableList) {
      enableList ? this._enableListSelection() : this._disableListSelection();
    },
    _toggleInput: function _toggleInput(enableInput) {
      enableInput ? this._disableInput() : this._enableInput();
    },
    _enableListSelection: function _enableListSelection() {
      var _this = this;

      initSelect2.init(this.$(this.criteriaValueSelectors.value), {
        multiple: true,
        tokenSeparators: [',', ' ', ';'],
        tokenizer: function tokenizer(input, selection, callback) {
          if (![',', ' ', ';'].some(function (separator) {
            return input.includes(separator);
          })) {
            return;
          }

          input.split(/,| |;/).forEach(function (part) {
            if ('' === part) {
              return;
            }

            callback({
              id: part,
              text: part
            });
          });
        },
        tags: [],
        width: '290px',
        formatNoMatches: function formatNoMatches() {
          return '';
        }
      });
      this.$(this.criteriaValueSelectors.value).on('change', function () {
        _this._updateCriteriaSelectorPosition();
      });
      this.$(this.criteriaValueSelectors.value).addClass('AknTextField--select2');
    },
    _disableListSelection: function _disableListSelection() {
      this.$(this.criteriaValueSelectors.value).select2('destroy').removeClass('AknTextField--select2');
    },

    /**
     * {@inheritdoc}
     */
    _getOperatorChoices: function _getOperatorChoices() {
      var formattedChoices = {};

      _.each(this.choices, function (choice) {
        formattedChoices[choice.value] = choice.label;
      });

      return formattedChoices;
    },

    /**
     * {@inheritdoc}
     */
    _hideCriteria: function _hideCriteria() {
      TextFilter.prototype._hideCriteria.apply(this, arguments);

      this.$(this.criteriaValueSelectors.value).select2('close');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 43305:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/date-filter.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/choice-filter */ 81398), __webpack_require__(/*! datepicker */ 83586), __webpack_require__(/*! pim/date-context */ 24846), __webpack_require__(/*! pim/formatter/date */ 54555), __webpack_require__(/*! pim/template/datagrid/filter/date-filter */ 18779)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, ChoiceFilter, Datepicker, DateContext, DateFormatter, template) {
  'use strict';
  /**
   * Date filter: filter type as option + interval begin and end dates
   *
   * @export  oro/datafilter/date-filter
   * @class   oro.datafilter.DateFilter
   * @extends oro.datafilter.ChoiceFilter
   */

  return ChoiceFilter.extend({
    /**
     * Template for filter criteria
     *
     * @property {function(Object, ?Object=): String}
     */
    popupCriteriaTemplate: _.template(template),

    /**
     * Selectors for filter data
     *
     * @property
     */
    criteriaValueSelectors: {
      type: '.AknActionButton-highlight',
      value: {
        start: '.from',
        end: '.to'
      }
    },

    /**
     * CSS class for visual date input elements
     *
     * @property
     */
    inputClass: 'AknTextField',

    /**
     * Date widget options
     *
     * @property
     */
    datetimepickerOptions: {
      format: DateContext.get('date').format,
      defaultFormat: DateContext.get('date').defaultFormat,
      language: DateContext.get('language')
    },

    /**
     * References to date widgets
     *
     * @property
     */
    dateWidgets: {
      start: null,
      end: null
    },

    /**
     * Date filter type values
     *
     * @property
     */
    typeValues: {
      between: 1,
      notBetween: 2,
      moreThan: 3,
      lessThan: 4
    },

    /**
     * Date widget selector
     *
     * @property
     */
    dateWidgetSelector: 'datepicker',
    events: {
      'click .filter-update': '_onClickUpdateCriteria',
      'click .filter-criteria-selector': '_onClickCriteriaSelector',
      'click .AknDropdown-menuLink': '_onSelectOperator',
      'click .disable-filter': '_onClickDisableFilter'
    },

    /**
     * @inheritDoc
     */
    initialize: function initialize() {
      // init empty value object if it was not initialized so far
      if (_.isUndefined(this.emptyValue)) {
        this.emptyValue = {
          type: _.isEmpty(this.choices) ? '' : _.first(this.choices).value,
          value: {
            start: '',
            end: ''
          }
        };
      }

      ChoiceFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * @param {Event} e
     */
    _onSelectOperator: function _onSelectOperator(e) {
      var value = $(e.currentTarget).find('.operator_choice').attr('data-value');

      this._highlightDropdown(value, '.operator');

      this._displayFilterType(value);

      e.preventDefault();
    },

    /**
     * Manage how to display a filter type
     *
     * @param {String} type
     * @protected
     */
    _displayFilterType: function _displayFilterType(type) {
      this.$el.find('.AknFilterChoice-separator').show();
      this.$el.find(this.criteriaValueSelectors.value.end).show();
      this.$el.find(this.criteriaValueSelectors.value.start).show();

      if (this.typeValues.moreThan == parseInt(type)) {
        this.$el.find('.AknFilterChoice-separator').hide();
        this.$el.find(this.criteriaValueSelectors.value.end).hide();
      } else if (this.typeValues.lessThan == parseInt(type)) {
        this.$el.find('.AknFilterChoice-separator').hide();
        this.$el.find(this.criteriaValueSelectors.value.start).hide();
      } else if (_.contains(['empty', 'not empty'], type)) {
        this.$el.find('.AknFilterChoice-separator').hide();
        this.$el.find(this.criteriaValueSelectors.value.end).hide();
        this.$el.find(this.criteriaValueSelectors.value.start).hide();
      }
    },

    /**
     * @inheritDoc
     */
    _renderCriteria: function _renderCriteria(el) {
      var value = this._getDisplayValue();

      $(el).empty().append(this.popupCriteriaTemplate({
        label: this.label,
        name: this.name,
        choices: this.choices,
        selectedChoice: value.type,
        inputClass: this.inputClass,
        selectedOperatorLabel: _.findWhere(this.choices, {
          value: value.type + ''
        }).label,
        operatorLabel: __('pim_datagrid.filters.common.operator'),
        updateLabel: __('pim_common.update'),
        fromLabel: __('pim_common.from'),
        toLabel: __('pim_common.to'),
        from: value.value.start,
        to: value.value.end
      }));

      _.each(this.criteriaValueSelectors.value, function (selector, name) {
        this.dateWidgets[name] = Datepicker.init(this.$(selector), this.datetimepickerOptions);
      }, this);

      this._displayFilterType(value.type);

      return this;
    },

    /**
     * @inheritDoc
     */
    _getCriteriaHint: function _getCriteriaHint() {
      var hint = '',
          option,
          start,
          end,
          type,
          value = arguments.length > 0 ? this._getDisplayValue(arguments[0]) : this._getDisplayValue();

      if (_.contains(['empty', 'not empty'], value.type)) {
        return this._getChoiceOption(value.type).label;
      }

      if (value.value) {
        start = value.value.start;
        end = value.value.end;
        type = value.type ? value.type.toString() : '';

        switch (type) {
          case this.typeValues.moreThan.toString():
            hint += [__('pim_common.more_than'), start].join(' ');
            break;

          case this.typeValues.lessThan.toString():
            hint += [__('pim_common.less_than'), end].join(' ');
            break;

          case this.typeValues.notBetween.toString():
            if (start && end) {
              option = this._getChoiceOption(this.typeValues.notBetween);
              hint += [option.label, start, __('pim_common.and'), end].join(' ');
            } else if (start) {
              hint += [__('pim_common.before'), start].join(' ');
            } else if (end) {
              hint += [__('pim_common.after'), end].join(' ');
            }

            break;

          case this.typeValues.between.toString():
          default:
            if (start && end) {
              option = this._getChoiceOption(this.typeValues.between);
              hint += [option.label, start, __('pim_common.and'), end].join(' ');
            } else if (start) {
              hint += [__('pim_common.from'), start].join(' ');
            } else if (end) {
              hint += [__('pim_common.to'), end].join(' ');
            }

            break;
        }

        if (hint) {
          return hint;
        }
      }

      return this.placeholder;
    },

    /**
     * @inheritDoc
     */
    _formatDisplayValue: function _formatDisplayValue(value) {
      _.each(value.value, function (dateValue, name) {
        if (dateValue) {
          value.value[name] = DateFormatter.format(dateValue, this.datetimepickerOptions.defaultFormat, this.datetimepickerOptions.format);
        }
      }, this);

      return value;
    },

    /**
     * @inheritDoc
     */
    _formatRawValue: function _formatRawValue(value) {
      _.each(value.value, function (dateValue, name) {
        if (dateValue) {
          value.value[name] = DateFormatter.format(dateValue, this.datetimepickerOptions.format, this.datetimepickerOptions.defaultFormat);
        }
      }, this);

      return value;
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      this._setInputValue(this.criteriaValueSelectors.value.start + ' input', value.value.start);

      this._setInputValue(this.criteriaValueSelectors.value.end + ' input', value.value.end);

      this._setInputValue(this.criteriaValueSelectors.type, value.type);

      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      var operator = this.$('.active .operator_choice').data('value');
      return {
        type: operator,
        value: {
          start: this._getInputValue(this.criteriaValueSelectors.value.start + ' input'),
          end: this._getInputValue(this.criteriaValueSelectors.value.end + ' input')
        }
      };
    },

    /**
     * @inheritDoc
     */
    _focusCriteria: function _focusCriteria() {},

    /**
     * @inheritDoc
     */
    _hideCriteria: function _hideCriteria() {
      ChoiceFilter.prototype._hideCriteria.apply(this, arguments);
    },

    /**
     * @inheritDoc
     */
    _triggerUpdate: function _triggerUpdate(newValue, oldValue) {},

    /**
     * @inheritDoc
     */
    _onValueUpdated: function _onValueUpdated(newValue, oldValue) {
      ChoiceFilter.prototype._onValueUpdated.apply(this, arguments);

      if (_.contains(['empty', 'not empty'], newValue.type)) {
        this.$el.find('.AknFilterChoice-separator').hide().end().find(this.criteriaValueSelectors.value.end).hide().end().find(this.criteriaValueSelectors.value.start).hide();
      } else {
        this._displayFilterType(newValue.type);
      }
    },

    /**
     * @inheritDoc
     */
    _onClickUpdateCriteria: function _onClickUpdateCriteria(e) {
      this._hideCriteria();

      this.setValue(this._formatRawValue(this._readDOMValue()));
      this.trigger('update');
    },

    /**
     * @inheritDoc
     */
    reset: function reset() {
      this.setValue(this.emptyValue);
      this.trigger('update');
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 38712:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/datetime-filter.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datafilter/date-filter */ 43305), __webpack_require__(/*! pim/date-context */ 24846)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, DateFilter, DateContext) {
  'use strict';
  /**
   * Datetime filter: filter type as option + interval begin and end dates
   *
   * @export  oro/datafilter/datetime-filter
   * @class   oro.datafilter.DatetimeFilter
   * @extends oro.datafilter.DateFilter
   */

  return DateFilter.extend({
    /**
     * CSS class for visual datetime input elements
     *
     * @property
     */
    inputClass: 'AknTextField',

    /**
     * Date widget options
     *
     * @property
     */
    datetimepickerOptions: {
      format: DateContext.get('time').format,
      defaultFormat: DateContext.get('time').defaultFormat,
      language: DateContext.get('language'),
      pickTime: true,
      pickSeconds: false,
      pick12HourFormat: DateContext.get('12_hour_format')
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 65664:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/grouped-variant-filter.js ***!
  \***********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var _ = __webpack_require__(/*! underscore */ 13469);
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/select-filter */ 92879), __webpack_require__(/*! pim/template/datagrid/filter-grouped-variant */ 26131)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, __, SelectFilter, template) {
  'use strict';

  return SelectFilter.extend({
    template: _.template(template),
    className: 'AknDropdown AknDropdown--left AknTitleContainer-variantSelector',
    events: {
      'click .AknDropdown-menuLink': '_onValueChange'
    },
    placeholder: __('pim_datagrid.filters.entity_type.grouped'),
    _onValueChange: function _onValueChange(event) {
      var value = this.$(event.currentTarget).find('.display-grouped-item').data('value');
      this.setValue({
        value: value
      });
    },
    _onValueUpdated: function _onValueUpdated() {
      SelectFilter.prototype._onValueUpdated.apply(this, arguments);

      this._updateHighlight();
    },
    render: function render() {
      SelectFilter.prototype.render.apply(this, arguments);

      this._updateHighlight();

      return this;
    },
    moveFilter: function moveFilter(collection, element) {
      if (element.$('.search-zone').length !== 0) {
        element.$('.search-zone').append(this.$el.get(0));
      } else if ($('.edit-form .search-zone').length !== 0) {
        $('.edit-form .search-zone').append(this.$el.get(0));
      }

      this._updateHighlight();
    },
    _updateHighlight: function _updateHighlight() {
      this._highlightDropdown(this.getValue().value || '', '');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 8339:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/identifier-filter.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/choice-filter */ 81398)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, ChoiceFilter) {
  'use strict';
  /**
   * @export  oro/datafilter/identifierFilter
   * @class   oro.datafilter.identifierFilter
   * @extends oro.datafilter.ChoiceFilter
   */

  return ChoiceFilter.extend({
    initialize: function initialize() {
      this.choices = [{
        label: __('pim_datagrid.filters.common.contains'),
        value: '1'
      }, {
        label: __('pim_datagrid.filters.common.does_not_contain'),
        value: '2'
      }, {
        label: __('pim_datagrid.filters.common.equal'),
        value: '3'
      }, {
        label: __('pim_datagrid.filters.common.start_with'),
        value: '4'
      }, {
        label: __('pim_datagrid.filters.common.in_list'),
        value: 'in'
      }, {
        label: __('pim_datagrid.filters.common.empty'),
        value: 'empty'
      }, {
        label: __('pim_datagrid.filters.common.not_empty'),
        value: 'not empty'
      }];
      this.emptyValue = {
        type: 'in',
        value: ''
      };
      ChoiceFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    _getOperatorChoices: function _getOperatorChoices() {
      return {
        '1': __('pim_datagrid.filters.common.contains'),
        '2': __('pim_datagrid.filters.common.does_not_contain'),
        '3': __('pim_datagrid.filters.common.equal'),
        '4': __('pim_datagrid.filters.common.start_with'),
        "in": __('pim_datagrid.filters.common.in_list'),
        empty: __('pim_datagrid.filters.common.empty'),
        'not empty': __('pim_datagrid.filters.common.not_empty')
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 81297:
/*!***************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/label_or_identifier-filter.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/abstract-filter */ 38510), __webpack_require__(/*! pim/template/datagrid/filter/search-filter */ 37636)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, AbstractFilter, template) {
  return AbstractFilter.extend({
    inputValueSelector: 'input[name="value"]',
    events: {
      'keydown input[name=value]': 'runTimeout',
      'keypress input[name=value]': 'runTimeout'
    },
    emptyValue: {
      value: ''
    },
    timer: null,
    isSearch: true,
    timeoutDelay: 500,
    className: 'AknFilterBox-searchContainer filter-item search-filter',
    template: _.template(template),

    /**
     * {@inheritDoc}
     */
    render: function render() {
      this.$el.html(this.template({
        label: __('pim_datagrid.search', {
          label: __(this.label.toLowerCase())
        })
      }));
      this.delegateEvents();
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      this._setInputValue(this.inputValueSelector, value.value);

      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      return {
        value: this._getInputValue(this.inputValueSelector)
      };
    },

    /**
     * Runs a timer to wait some time. When the time is done, it execute the search.
     * If the user types another time in the search box, it resets the timer and restart one.
     *
     * @param {Event} event
     */
    runTimeout: function runTimeout(event) {
      if (null !== this.timer) {
        clearTimeout(this.timer);
      }

      if (13 === event.keyCode) {
        // Enter key
        this.doSearch();
      } else {
        this.timer = setTimeout(this.doSearch.bind(this), this.timeoutDelay);
      }
    },

    /**
     * Executes the search by setting the value.
     */
    doSearch: function doSearch() {
      this.setValue(this._readDOMValue());
    },

    /**
     * Appends filter to a grid
     * If .search-zone is not in the element that is to say it could be somewhere in the page.
     */
    moveFilter: function moveFilter(collection, element) {
      if (element.$('.search-zone').length !== 0) {
        element.$('.search-zone').append(this.$el.get(0));
      } else if ($('.edit-form .search-zone').length !== 0) {
        $('.edit-form .search-zone').empty().append(this.$el.get(0));
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 23269:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/metric-filter.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/number-filter */ 5434), __webpack_require__(/*! oro/app */ 10501), __webpack_require__(/*! pim/template/datagrid/filter/metric-filter */ 20694), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, NumberFilter, app, template, i18n, UserContext, FetcherRegistry) {
  'use strict';
  /**
   * Metric filter
   *
   * @author    Romain Monceau <romain@akeneo.com>
   * @copyright 2013 Akeneo SAS (http://www.akeneo.com)
   * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
   *
   * @export  oro/datafilter/metric-filter
   * @class   oro.datafilter.MetricFilter
   * @extends oro.datafilter.NumberFilter
   */

  return NumberFilter.extend({
    events: {
      'keyup input': '_onReadCriteriaInputKey',
      'keydown [type="text"]': '_preventEnterProcessing',
      'click .filter-update': '_onClickUpdateCriteria',
      'click .filter-criteria-selector': '_onClickCriteriaSelector',
      'click .operator .AknDropdown-menuLink': '_onSelectOperator',
      'click .unit .AknDropdown-menuLink': '_onSelectUnit',
      'click .disable-filter': '_onClickDisableFilter'
    },
    units: [],

    /**
     * @inheritDoc
     */
    initialize: function initialize() {
      NumberFilter.prototype.initialize.apply(this, arguments);
      this.emptyValue = {
        unit: _.first(_.keys(this.units)),
        type: _.findWhere(this.choices, {
          label: '='
        }).data,
        value: ''
      };
      this.on('disable', this._onDisable, this);
      FetcherRegistry.getFetcher('measure').fetchAll().then(function (measures) {
        var _this = this;

        this.measurementFamily = measures.find(function (family) {
          return family.code === _this.family;
        });
        this.render();
      }.bind(this));
    },
    _onDisable: function _onDisable() {
      this.$('.choicefilter button.dropdown-toggle').first().html(_.__('Action') + '<span class="caret"></span>');
      this.$('.choicefilter button.dropdown-toggle').last().html(_.__('Unit') + '<span class="caret"></span>');
    },

    /**
     * @inheritDoc
     */
    _renderCriteria: function _renderCriteria(el) {
      var _this2 = this;

      if (!this.measurementFamily) return this;
      $(el).append(this.popupCriteriaTemplate({
        __: __,
        label: this.label,
        operatorChoices: this._getOperatorChoices(),
        selectedOperator: this._getDisplayValueOrDefault().type,
        emptyChoice: this.emptyChoice,
        selectedOperatorLabel: this._getOperatorChoices()[this._getDisplayValueOrDefault().type],
        operatorLabel: __('pim_common.operator'),
        updateLabel: __('pim_common.update'),
        units: this.measurementFamily.units,
        unitLabel: __('pim_datagrid.filters.metric_filter.label'),
        selectedUnit: this.measurementFamily.units.find(function (unit) {
          return unit.code === _this2._getDisplayValueOrDefault().unit;
        }),
        value: this._getDisplayValueOrDefault().value,
        i18n: i18n,
        locale: UserContext.get('uiLocale')
      }));
      return this;
    },

    /**
     * Returns the default values just for display
     */
    _getDisplayValueOrDefault: function _getDisplayValueOrDefault() {
      var value = this._getDisplayValue();

      if ('' === value.unit) {
        value.unit = this.emptyValue.unit;
      }

      if ('' === value.type) {
        value.type = this.emptyValue.type;
      }

      return value;
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      NumberFilter.prototype._writeDOMValue.apply(this, arguments);

      this._setInputValue(this.criteriaValueSelectors.unit, value.unit);

      this._highlightDropdown(value.unit, '.unit');

      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      var value = NumberFilter.prototype._readDOMValue.apply(this, arguments);

      value.unit = this._getInputValue(this.criteriaValueSelectors.unit);
      return value;
    },

    /**
     * @inheritDoc
     */
    _getCriteriaHint: function _getCriteriaHint() {
      var value = arguments.length > 0 ? this._getDisplayValue(arguments[0]) : this._getDisplayValue();

      if (_.contains(['empty', 'not empty'], value.type)) {
        return this._getChoiceOption(value.type).label;
      }

      if (!value.value || !this.measurementFamily) {
        return this.placeholder;
      } else {
        var option = this._getChoiceOption(value.type);

        var unit = this.measurementFamily.units.find(function (unit) {
          return unit.code === value.unit;
        });
        return "".concat(option.label, " ").concat(value.value, " ").concat(i18n.getLabel(unit.labels, UserContext.get('uiLocale'), value.unit));
      }
    },

    /**
     * @inheritDoc
     */
    popupCriteriaTemplate: _.template(template),

    /**
     * Selectors for filter criteria elements
     *
     * @property {Object}
     */
    criteriaValueSelectors: {
      unit: 'input[name="metric_unit"]',
      type: 'input[name="metric_type"]',
      value: 'input[name="value"]'
    },

    /**
     * Empty value object
     *
     * @property {Object}
     */
    emptyValue: {
      unit: '',
      type: '',
      value: ''
    },

    /**
     * @inheritDoc
     */
    _triggerUpdate: function _triggerUpdate(newValue, oldValue) {
      if (!app.isEqualsLoosely(newValue, oldValue)) {
        this.trigger('update');
      }
    },

    /**
     * @inheritDoc
     */
    _onValueUpdated: function _onValueUpdated(newValue, oldValue) {
      this._highlightDropdown(newValue.unit, '.unit');

      if (_.contains(['empty', 'not empty'], newValue.type)) {
        this.$(this.criteriaValueSelectors.value).hide();
        this.$('.AknFilterChoice-unit').hide();
      } else {
        this.$(this.criteriaValueSelectors.value).show();
        this.$('.AknFilterChoice-unit').show();
      }

      this._triggerUpdate(newValue, oldValue);

      this._updateCriteriaHint();
    },

    /**
     * @inheritDoc
     */
    setValue: function setValue(value) {
      value = this._formatRawValue(value);

      if (this._isNewValueUpdated(value)) {
        var oldValue = this.value;
        this.value = app.deepClone(value);

        this._updateDOMValue();

        this._onValueUpdated(this.value, oldValue);
      }

      return this;
    },

    /**
     * @inheritDoc
     */
    _onClickChoiceValue: function _onClickChoiceValue(e) {
      NumberFilter.prototype._onClickChoiceValue.apply(this, arguments);

      var filterContainer = $(e.currentTarget).closest('.filter-item');

      if (_.contains(['empty', 'not empty'], $(e.currentTarget).attr('data-value'))) {
        filterContainer.find(this.criteriaValueSelectors.value).hide();
        filterContainer.find('.AknFilterChoice-unit').hide();
      } else {
        filterContainer.find(this.criteriaValueSelectors.value).show();
        filterContainer.find('.AknFilterChoice-unit').show();
      }
    },

    /**
     * @inheritDoc
     */
    reset: function reset() {
      this.setValue(this.emptyValue);
      this.trigger('update');
      return this;
    },

    /**
     * Update the unit after clicking in the dropdown
     *
     * @param {Event} e
     */
    _onSelectUnit: function _onSelectUnit(e) {
      var value = $(e.currentTarget).find('.unit_choice').attr('data-value');
      $(this.criteriaValueSelectors.unit).val(value);

      this._highlightDropdown(value, '.unit');

      e.preventDefault();
    },
    _enableInput: function _enableInput() {
      NumberFilter.prototype._enableInput.apply(this, arguments);

      this.$('.AknFilterChoice-inputContainer').show();
      this.$('.AknFilterChoice-unit').show();

      this._updateCriteriaSelectorPosition();
    },
    _disableInput: function _disableInput() {
      NumberFilter.prototype._disableInput.apply(this, arguments);

      this.$('.AknFilterChoice-inputContainer').hide();
      this.$('.AknFilterChoice-unit').hide();

      this._updateCriteriaSelectorPosition();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 40460:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/multiselect-filter.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/select-filter */ 92879)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, SelectFilter) {
  'use strict';
  /**
   * Multiple select filter: filter values as multiple select options
   *
   * @export  oro/datafilter/multiselect-filter
   * @class   oro.datafilter.MultiSelectFilter
   * @extends oro.datafilter.SelectFilter
   */

  return SelectFilter.extend({
    /**
     * Multiselect filter template
     *
     * @property
     */
    template: _.template('<div class="AknFilterBox-filter filter-select filter-criteria-selector">' + '<% if (showLabel) { %>' + '<span class="AknFilterBox-filterLabel"><%= label %></span>' + '<% } %>' + '<select multiple>' + '<% _.each(options, function (option) { %>' + '<% if(_.isObject(option.value)) { %>' + '<optgroup label="<%= option.label %>">' + '<% _.each(option.value, function (value) { %>' + '<option value="<%= value.value %>"><%= _.__(value.label) %></option>' + '<% }); %>' + '</optgroup>' + '<% } else { %>' + '<option value="<%= option.value %>"><%= _.__(option.label) %></option>' + '<% } %>' + '<% }); %>' + '</select>' + '</div>' + '<% if (canDisable) { %><a href="<%= nullLink %>" class="AknFilterBox-disableFilter AknIconButton AknIconButton--remove disable-filter"></a><% } %>'),

    /**
     * Select widget options
     *
     * @property
     */
    widgetOptions: {
      multiple: true,
      classes: 'AknFilterBox-filterCriteria select-filter-widget multiselect-filter-widget'
    },
    _onSelectChange: function _onSelectChange() {
      var data = this._readDOMValue(); // At initialization, the value is `''` which mean 'All' but it should be `['']`


      var previousValue = '' === this.getValue().value ? [''] : this.getValue().value; // We try to guess if the user added 'All' to remove all previous selection

      var addAll = _.contains(_.difference(data.value, previousValue), '');

      data.value = _.contains(data.value, '') ? _.without(data.value, '') : data.value;
      data.value = _.isEmpty(data.value) ? [''] : data.value;
      data.value = addAll ? [''] : data.value; // set value

      this.setValue(this._formatRawValue(data)); // update dropdown

      this._setDropdownWidth();

      this._updateCriteriaSelectorPosition();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 78024:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/none-filter.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/abstract-filter */ 38510)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, AbstractFilter) {
  'use strict';
  /**
   * None filter: an empty filter implements 'null object' pattern
   *
   * Triggers events:
   *  - "disable" when filter is disabled
   *
   * @export  oro/datafilter/none-filter
   * @class   oro.datafilter.NoneFilter
   * @extends oro.datafilter.AbstractFilter
   */

  return AbstractFilter.extend({
    /**
     * Template for filter criteria
     *
     * @property
     */
    popupCriteriaTemplate: _.template('<div>' + '<%= popupHint %>' + '</div>'),

    /**
     * @property {Boolean}
     */
    popupCriteriaShowed: false,

    /**
     * Selector to element of criteria hint
     *
     * @property {String}
     */
    criteriaHintSelector: '.filter-criteria-hint',

    /**
     * Selector to criteria popup container
     *
     * @property {String}
     */
    criteriaSelector: '.filter-criteria',

    /**
     * A value showed as filter's popup hint
     *
     * @property {String}
     */
    popupHint: 'Choose a value first',

    /**
     * View events
     *
     * @property {Object}
     */
    events: {
      'click .filter-criteria-selector': '_onClickCriteriaSelector',
      'click .filter-criteria .filter-criteria-hide': '_onClickCloseCriteria',
      'click .disable-filter': '_onClickDisableFilter'
    },

    /**
     * Initialize.
     *
     * @param {Object} options
     */
    initialize: function initialize(options) {
      options = options || {};

      if (_.has(options, 'popupHint')) {
        this.popupHint = options.popupHint;
      }

      this.label = 'None';
      AbstractFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * Handle click on criteria selector
     *
     * @param {Event} e
     * @protected
     */
    _onClickCriteriaSelector: function _onClickCriteriaSelector(e) {
      e.stopPropagation();
      $('body').trigger('click');

      if (!this.popupCriteriaShowed) {
        this._showCriteria();
      } else {
        this._hideCriteria();
      }
    },

    /**
     * Handle click on criteria close button
     *
     * @private
     */
    _onClickCloseCriteria: function _onClickCloseCriteria() {
      this._hideCriteria();

      this._updateDOMValue();
    },

    /**
     * Handle click on filter disabler
     *
     * @param {Event} e
     */
    _onClickDisableFilter: function _onClickDisableFilter(e) {
      e.preventDefault();
      this.disable();
    },

    /**
     * Handle click outside of criteria popup to hide it
     *
     * @param {Event} e
     * @protected
     */
    _onClickOutsideCriteria: function _onClickOutsideCriteria(e) {
      var elem = this.$(this.criteriaSelector);

      if (elem.get(0) !== e.target && !elem.has(e.target).length) {
        this._hideCriteria();

        e.stopPropagation();
      }
    },

    /**
     * Render filter view
     *
     * @return {*}
     */
    render: function render() {
      this.$el.empty();
      this.$el.append(this.template({
        label: this.label,
        showLabel: this.showLabel,
        criteriaHint: this._getCriteriaHint(),
        nullLink: this.nullLink,
        canDisable: this.canDisable
      }));

      this._renderCriteria(this.$(this.criteriaSelector));

      this._clickOutsideCriteriaCallback = _.bind(function (e) {
        if (this.popupCriteriaShowed) {
          this._onClickOutsideCriteria(e);
        }
      }, this);
      $('body').on('click', this._clickOutsideCriteriaCallback);
      return this;
    },

    /**
     * Render filter criteria popup
     *
     * @param {Object} el
     * @protected
     * @return {*}
     */
    _renderCriteria: function _renderCriteria(el) {
      $(el).append(this.popupCriteriaTemplate({
        popupHint: this._getPopupHint()
      }));
      return this;
    },

    /**
     * Unsubscribe from click on body event
     *
     * @return {*}
     */
    remove: function remove() {
      $('body').off('click', this._clickOutsideCriteriaCallback);
      AbstractFilter.prototype.remove.call(this);
      return this;
    },

    /**
     * Show criteria popup
     *
     * @protected
     */
    _showCriteria: function _showCriteria() {
      this.$(this.criteriaSelector).show();

      this._setButtonPressed(this.$(this.criteriaSelector), true);

      setTimeout(_.bind(function () {
        this.popupCriteriaShowed = true;
      }, this), 100);
    },

    /**
     * Hide criteria popup
     *
     * @protected
     */
    _hideCriteria: function _hideCriteria() {
      this.$(this.criteriaSelector).hide();

      this._setButtonPressed(this.$(this.criteriaSelector), false);

      setTimeout(_.bind(function () {
        this.popupCriteriaShowed = false;
      }, this), 100);
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      return {};
    },

    /**
     * Get popup hint value
     *
     * @return {String}
     * @protected
     */
    _getPopupHint: function _getPopupHint() {
      return this.popupHint ? this.popupHint : this.popupHint;
    },

    /**
     * Get criteria hint value
     *
     * @return {String}
     * @protected
     */
    _getCriteriaHint: function _getCriteriaHint() {
      return this.criteriaHint ? this.criteriaHint : this.placeholder;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 5434:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/number-filter.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datafilter/choice-filter */ 81398)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (ChoiceFilter) {
  'use strict';
  /**
   * Number filter: formats value as a number
   *
   * @export  oro/datafilter/number-filter
   * @class   oro.datafilter.NumberFilter
   * @extends oro.datafilter.ChoiceFilter
   */

  return ChoiceFilter.extend({
    /**
     * {@inheritdoc}
     */
    _onClickUpdateCriteria: function _onClickUpdateCriteria() {
      var numberValue = Number(this._getInputValue(this.criteriaValueSelectors.value));

      if (isNaN(numberValue)) {
        this._setInputValue(this.criteriaValueSelectors.value, '');

        this._focusCriteria();
      } else {
        this._hideCriteria();

        this.setValue(this._formatRawValue(this._readDOMValue()));
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 84886:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/parent-filter.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/choice-filter */ 81398)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, ChoiceFilter) {
  'use strict';
  /**
   * @export  oro/datafilter/parentFilter
   * @class   oro.datafilter.parentFilter
   * @extends oro.datafilter.ChoiceFilter
   */

  return ChoiceFilter.extend({
    initialize: function initialize() {
      this.choices = [{
        label: __('pim_datagrid.filters.common.in_list'),
        value: 'in'
      }, {
        label: __('pim_datagrid.filters.common.empty'),
        value: 'empty'
      }];
      this.emptyValue = {
        type: 'in',
        value: ''
      };
      ChoiceFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    _getOperatorChoices: function _getOperatorChoices() {
      return {
        "in": __('pim_datagrid.filters.common.in_list'),
        empty: __('pim_datagrid.filters.common.empty')
      };
    },

    /**
     * {@inheritDoc}
     */
    _showCriteria: function _showCriteria() {
      ChoiceFilter.prototype._showCriteria.apply(this, arguments);

      var operator = this._readDOMValue()['type'];

      if (operator === 'in') {
        this._enableListSelection();
      } else {
        this._disableListSelection();
      }

      this._focusCriteria();
    },

    /**
     * {@inheritDoc}
     */
    _focusCriteria: function _focusCriteria() {
      this.$(this.criteriaSelector + ' input.select2-input').focus().select();
    },

    /**
     * {@inheritDoc}
     */
    _readDOMValue: function _readDOMValue() {
      var operator = this.emptyChoice ? this.$('.active .operator_choice').data('value') : 'in';
      return {
        value: ['empty', 'not empty'].includes(operator) ? '' : this._getInputValue(this.criteriaValueSelectors.value),
        type: operator
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 74351:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/price-filter.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/number-filter */ 5434), __webpack_require__(/*! oro/app */ 10501), __webpack_require__(/*! pim/template/datagrid/filter/price-filter */ 87732)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, NumberFilter, app, popupCriteriaTemplate) {
  'use strict';
  /**
   * Price filter
   *
   * @author    Romain Monceau <romain@akeneo.com>
   * @copyright 2013 Akeneo SAS (http://www.akeneo.com)
   * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
   *
   * @export  pim/datafilter/price-filter
   * @class   pim.datafilter.PriceFilter
   * @extends oro.datafilter.NumberFilter
   */

  return NumberFilter.extend({
    popupCriteriaTemplate: _.template(popupCriteriaTemplate),
    currencies: [],
    criteriaValueSelectors: {
      currency: 'input[name="currency_currency"]',
      type: 'input[name="currency_type"]',
      value: 'input[name="value"]'
    },
    events: {
      'keyup input': '_onReadCriteriaInputKey',
      'keydown [type="text"]': '_preventEnterProcessing',
      'click .filter-update': '_onClickUpdateCriteria',
      'click .filter-criteria-selector': '_onClickCriteriaSelector',
      'click .operator .AknDropdown-menuLink': '_onSelectOperator',
      'click .currency .AknDropdown-menuLink': '_onSelectCurrency',
      'click .disable-filter': '_onClickDisableFilter'
    },

    /**
     * @inheritDoc
     */
    initialize: function initialize() {
      NumberFilter.prototype.initialize.apply(this, arguments);
      this.emptyValue = {
        currency: this._firstCurrency(),
        type: _.findWhere(this.choices, {
          label: '='
        }).data,
        value: ''
      };
      this.on('disable', this._onDisable, this);
    },
    _onDisable: function _onDisable() {
      this.$('.choicefilter button.dropdown-toggle').first().html(__('Action') + '<span class="AknActionButton-caret AknCaret"></span>');
      this.$('.choicefilter button.dropdown-toggle').last().html(__('Currency') + '<span class="AknActionButton-caret AknCaret"></span>');
    },

    /**
     * @inheritDoc
     */
    _renderCriteria: function _renderCriteria(el) {
      $(el).empty().append(this.popupCriteriaTemplate({
        label: this.label,
        operatorChoices: this._getOperatorChoices(),
        selectedOperator: this._getDisplayValue().type,
        emptyChoice: this.emptyChoice,
        selectedOperatorLabel: this._getOperatorChoices()[this._getDisplayValue().type],
        operatorLabel: __('pim_common.operator'),
        updateLabel: __('pim_common.update'),
        currencies: this.currencies,
        currencyLabel: __('pim_datagrid.filters.price_filter.label'),
        selectedCurrency: this._getDisplayValue().currency || this._firstCurrency(),
        value: this._getDisplayValue().value
      }));

      if (true === _.contains(['empty', 'not empty'], this._getDisplayValue().type)) {
        this._disableInput();
      } else {
        this._enableInput();
      }

      return this;
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      NumberFilter.prototype._writeDOMValue.apply(this, arguments);

      if (_typeof(value.value) === 'object') {
        this._setInputValue(this.criteriaValueSelectors.value, '');
      }

      this._setInputValue(this.criteriaValueSelectors.currency, value.currency);

      this._highlightDropdown(value.currency, '.currency');

      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      var value = NumberFilter.prototype._readDOMValue.apply(this, arguments);

      value.currency = this._getInputValue(this.criteriaValueSelectors.currency);
      return value;
    },

    /**
     * @inheritDoc
     */
    _getCriteriaHint: function _getCriteriaHint() {
      var value = this._getDisplayValue();

      if (_.contains(['empty', 'not empty'], value.type)) {
        return this._getChoiceOption(value.type).label;
      }

      if (!value.value) {
        return this.placeholder;
      } else {
        var option = this._getChoiceOption(value.type);

        return option.label + ' ' + value.value + ' ' + value.currency;
      }
    },

    /**
     * @inheritDoc
     */
    _triggerUpdate: function _triggerUpdate(newValue, oldValue) {
      if (!app.isEqualsLoosely(newValue, oldValue)) {
        this.trigger('update');
      }
    },

    /**
     * @inheritDoc
     */
    _onValueUpdated: function _onValueUpdated(newValue, oldValue) {
      this._highlightDropdown(newValue.currency, '.currency');

      this._triggerUpdate(newValue, oldValue);

      this._updateCriteriaHint();
    },

    /**
     * @inheritDoc
     */
    setValue: function setValue(value) {
      value = this._formatRawValue(value);

      if (this._isNewValueUpdated(value)) {
        var oldValue = this.value;
        this.value = app.deepClone(value);

        this._updateDOMValue();

        this._onValueUpdated(this.value, oldValue);
      }

      return this;
    },

    /**
     * @inheritDoc
     */
    reset: function reset() {
      this.setValue(this.emptyValue);
      this.trigger('update');
      return this;
    },

    /**
     * Update the currency after clicking in the dropdown
     *
     * @param {Event} e
     */
    _onSelectCurrency: function _onSelectCurrency(e) {
      var value = $(e.currentTarget).find('.currency_choice').attr('data-value');
      $(this.criteriaValueSelectors.currency).val(value);

      this._highlightDropdown(value, '.currency');

      e.preventDefault();
    },
    _firstCurrency: function _firstCurrency() {
      return _.first(_.keys(this.currencies));
    },

    /**
     * {@inheritdoc}
     */
    _disableInput: function _disableInput() {
      this.$el.find('.AknFilterChoice-inputContainer').hide();

      this._updateCriteriaSelectorPosition();
    },

    /**
     * {@inheritdoc}
     */
    _enableInput: function _enableInput() {
      this.$el.find('.AknFilterChoice-inputContainer').show();

      this._updateCriteriaSelectorPosition();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 54688:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/product_category-filter.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datafilter/number-filter */ 5434), __webpack_require__(/*! pim/tree/view */ 32906), __webpack_require__(/*! oro/mediator */ 27615)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, NumberFilter, TreeView, mediator) {
  'use strict';
  /**
   * Category filter
   *
   * @author    Filips Alpe <filips@akeneo.com>
   * @copyright 2013 Akeneo SAS (http://www.akeneo.com)
   * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
   *
   * @export  oro/datafilter/product_category-filter
   * @class   oro.datafilter.CategoryFilter
   * @extends oro.datafilter.NumberFilter
   */

  return NumberFilter.extend({
    /**
     * @inheritDoc
     */
    value: {},
    treeView: null,

    /**
     * @inheritDoc
     */
    initialize: function initialize(urlParams, gridName, categoryBaseRoute, container, updateCallback) {
      var _this = this;

      this.$el.remove();
      this.$el = $(container);
      this.emptyValue = {
        value: {
          treeId: 0,
          categoryId: -2
        },
        type: 1
      };
      this.value = $.extend(true, {}, this.emptyValue);
      NumberFilter.prototype.initialize.apply(this, arguments);

      if (urlParams && urlParams[gridName + '[_filter][category][value][treeId]']) {
        this.value.value.treeId = parseInt(urlParams[gridName + '[_filter][category][value][treeId]']);
      }

      if (urlParams && urlParams[gridName + '[_filter][category][value][categoryId]']) {
        this.value.value.categoryId = parseInt(urlParams[gridName + '[_filter][category][value][categoryId]']);
      }

      var onTreeUpdated = function onTreeUpdated(treeLabel, categoryLabel) {
        _this.trigger('update_label', treeLabel, categoryLabel);
      };

      this.$el[0].addEventListener('tree.updated', function (event) {
        _this._onTreeUpdated();

        event.preventDefault();
      });
      this.treeView = new TreeView(this.$el[0], this._getInitialState(), {
        listTree: "".concat(categoryBaseRoute, "_listtree"),
        children: "".concat(categoryBaseRoute, "_children")
      }, onTreeUpdated);
      this.listenTo(mediator, 'datagrid_filters:build.post', function (filtersManager) {
        this.listenTo(filtersManager, 'collection-filters:createState.post', function (filtersState) {
          _.extend(filtersState, {
            category: this._getTreeState()
          });
        });
        filtersManager.listenTo(this, 'update', filtersManager._onFilterUpdated);
      });
      this.listenTo(mediator, 'filters-column:init', function () {
        mediator.trigger('filters-column:update-filter', {
          category: _this._getTreeState()
        }, true);

        _this.listenTo(_this, 'update', function () {
          mediator.trigger('filters-column:update-filter', {
            category: _this._getTreeState()
          });
        });
      });
      mediator.on('grid_action_execute:product-grid:delete', function () {
        _this.treeView.refresh();
      });

      if (undefined !== updateCallback) {
        updateCallback(this.value);
      }
    },

    /**
     * Get the current tree state
     */
    _getTreeState: function _getTreeState() {
      if (!this.$el.is(':visible')) {
        return this.emptyValue;
      }

      var state = this.treeView.getState();
      return {
        value: {
          treeId: state.selectedTree,
          categoryId: state.selectedNode
        },
        type: +state.includeSub
      };
    },
    getValue: function getValue() {
      if (!this.$el.is(':visible')) {
        return this.emptyValue;
      }

      return NumberFilter.prototype.getValue.apply(this, arguments);
    },

    /**
     * Get initial state for the tree
     */
    _getInitialState: function _getInitialState() {
      return {
        selectedNode: +this.value.value.categoryId,
        selectedTree: +this.value.value.treeId,
        includeSub: !!this.value.type
      };
    },

    /**
     * Sync the tree state with the filter value
     */
    _updateState: function _updateState() {
      this.value = this._getTreeState();
    },

    /**
     * On tree updated
     */
    _onTreeUpdated: function _onTreeUpdated() {
      if (!_.isEqual(this.value, this._getTreeState())) {
        this._updateState();

        this._triggerUpdate();
      }
    },

    /**
     * @inheritDoc
     */
    _triggerUpdate: function _triggerUpdate() {
      this.trigger('update', this.value);
    },

    /**
     * @inheritDoc
     */
    isEmpty: function isEmpty() {
      return _.isEqual(this.emptyValue, this._getTreeState());
    },

    /**
     * @inheritDoc
     */
    reset: function reset() {
      NumberFilter.prototype.reset.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 99283:
/*!****************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/product_completeness-filter.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datafilter/select-filter */ 92879)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, SelectFilter) {
  'use strict';
  /**
   * Scope filter
   *
   * @author    Nicolas Dupont <nicolas@akeneo.com>
   * @copyright 2013 Akeneo SAS (http://www.akeneo.com)
   * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
   *
   * @export  oro/datafilter/product_completeness-filter
   * @class   oro.datafilter.ProductCompletenessFilter
   * @extends oro.datafilter.SelectFilter
   */

  return SelectFilter.extend({});
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 10307:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/product_scope-filter.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Scope filter
 *
 * @author    Romain Monceau <romain@akeneo.com>
 * @copyright 2013 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 *
 * @export  oro/datafilter/product_scope-filter
 * @class   oro.datafilter.ScopeFilter
 * @extends oro.datafilter.SelectFilter
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/datafilter/select-filter */ 92879), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/datagrid/state */ 30138), __webpack_require__(/*! oro/app */ 10501), __webpack_require__(/*! pim/template/datagrid/filter/scope-filter */ 31269)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, mediator, SelectFilter, UserContext, DatagridState, app, template) {
  'use strict';

  return SelectFilter.extend({
    template: _.template(template),
    className: 'AknDropdown AknFilterBox-filterContainer filter-select filter-criteria-selector scope-switcher',
    events: {
      'keydown select': '_preventEnterProcessing',
      'click .AknDropdown-menuLink': '_onSelectChange'
    },

    /**
     * @override
     * @property {Boolean}
     * @see Oro.Filter.SelectFilter
     */
    contextSearch: false,
    catalogScope: null,
    initialize: function initialize() {
      SelectFilter.prototype.initialize.apply(this, arguments);
      this.catalogScope = UserContext.get('catalogScope');
      mediator.once('datagrid_filters:rendered', this.resetValue.bind(this));
      mediator.once('datagrid_filters:rendered', this.moveFilter.bind(this));
      mediator.bind('grid_load:complete', function (collection) {
        $('#grid-' + collection.inputName).find('div.toolbar').show();
      });
    },

    /**
     * Move the filter to its proper position
     *
     * @param {Array} collection
     */
    moveFilter: function moveFilter(collection) {
      // Fix the issue that it display the filter on each switch from published and products
      // @see PIM-10218
      // @todo Handle the scope as the locale/category filters modules
      var $previousScopeFilter = $('[data-drop-zone="column-context-switcher"] [data-type="product_scope"]');

      if ($previousScopeFilter.length > 0) {
        $previousScopeFilter.detach();
      }

      this.$el.prependTo($('[data-drop-zone="column-context-switcher"]'));
      var $grid = $('#grid-' + collection.inputName);

      if (0 === $grid.length) {
        $grid = $('[data-type="datagrid"]:first');
      }

      var $filterChoices = $grid.find('#add-filter-select');
      $filterChoices.find('option[value="scope"]').remove();
      $filterChoices.multiselect('refresh');
    },

    /**
     * Update the current filter value using the UserContext.
     */
    resetValue: function resetValue() {
      var scope = DatagridState.get('product-grid', 'scope');

      if (!scope) {
        scope = this.catalogScope;
        this.setValue({
          value: scope
        });
      }

      UserContext.set('catalogScope', scope);
      this.selectWidget.multiselect('refresh');
      this.render();
    },

    /**
     * Updates the current scope without refreshing the datagrid
     */
    setValueSilent: function setValueSilent(value) {
      if (this._isNewValueUpdated(value)) {
        this.value = app.deepClone(value);

        this._updateDOMValue();
      }

      return this;
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      SelectFilter.prototype.render.apply(this, arguments);
      this.highlightScope(this.catalogScope);
    },

    /**
     * @inheritDoc
     */
    disable: function disable() {
      return this;
    },

    /**
     * @inheritDoc
     */
    hide: function hide() {
      return this;
    },

    /**
     * @inheritDoc
     */
    _onValueUpdated: function _onValueUpdated(newValue) {
      if ('' === newValue.value) {
        return;
      }

      UserContext.set('catalogScope', newValue.value);
      this.catalogScope = newValue.value;
      return SelectFilter.prototype._onValueUpdated.apply(this, arguments);
    },

    /**
     * @inheritDoc
     *
     * Override to save the scope into the product grid state.
     *
     * We don't put this logic in the setValue method because we want this behavior only when the value
     * comes from a change of the select element, not from a view/url for example.
     */
    _onSelectChange: function _onSelectChange(event) {
      var value = $(event.target).closest('.AknDropdown-menuLink').attr('data-value');
      this.highlightScope(value);

      SelectFilter.prototype._onSelectChange.apply(this, arguments);

      DatagridState.set('product-grid', 'scope', value);
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      var currentScope = this.$el.find('.AknDropdown-menuLink--active').attr('data-value');
      return {
        value: currentScope
      };
    },

    /**
     * Highlight the current scope
     *
     * @param scope
     */
    highlightScope: function highlightScope(scope) {
      var currentOption = _.findWhere(this.options.choices, {
        value: scope
      });

      if (undefined !== currentOption) {
        this.$el.find('.value').html(currentOption.label);
        this.$el.find('.AknDropdown-menuLink').removeClass('AknDropdown-menuLink--active');
        this.$el.find('.AknDropdown-menuLink[data-value="' + scope + '"]').addClass('AknDropdown-menuLink--active');
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 1265:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/search-filter.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/abstract-filter */ 38510), __webpack_require__(/*! pim/template/datagrid/filter/search-filter */ 37636)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, AbstractFilter, template) {
  return AbstractFilter.extend({
    inputValueSelector: 'input[name="value"]',
    events: {
      'keydown input[name="value"]': 'runTimeout',
      'keypress input[name="value"]': 'runTimeout',
      'focusin input[name="value"]': 'disableReadonly',
      'focusout input[name="value"]': 'enableReadonly'
    },
    emptyValue: {
      value: ''
    },
    timer: null,
    isSearch: true,
    timeoutDelay: 500,
    className: 'AknFilterBox-searchContainer filter-item search-filter',
    template: _.template(template),

    /**
     * {@inheritDoc}
     */
    render: function render() {
      this.$el.html(this.template({
        label: __('pim_datagrid.search', {
          label: this.label
        })
      }));
      this.enableReadonly();
    },

    /**
     * There is a bug in the autocomplete="off" attribute in several browser. This attribute is not taken in
     * account in the case of autocomplete username/password fields.
     * In some screens, the search input is mixed up with username field, and the panel for password
     * autocomplete opens.
     * Another bug is if you select a password combination in the User creation modal, it will fill the search
     * input instead of the username field in the modal.
     * The solution is to set this field as readonly if the user has no focus on it.
     *
     * @see https://bugs.chromium.org/p/chromium/issues/detail?id=468153
     * @see https://stackoverflow.com/questions/12374442/chrome-ignores-autocomplete-off
     */
    disableReadonly: function disableReadonly() {
      this.$el.find(this.inputValueSelector).attr('readonly', null);
    },
    enableReadonly: function enableReadonly() {
      this.$el.find(this.inputValueSelector).attr('readonly', true);
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      this._setInputValue(this.inputValueSelector, value.value);

      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      return {
        value: this._getInputValue(this.inputValueSelector)
      };
    },

    /**
     * Runs a timer to wait some time. When the time is done, it execute the search.
     * If the user types another time in the search box, it resets the timer and restart one.
     *
     * @param {Event} event
     */
    runTimeout: function runTimeout(event) {
      if (null !== this.timer) {
        clearTimeout(this.timer);
      }

      if (13 === event.keyCode) {
        // Enter key
        this.doSearch();
      } else {
        this.timer = setTimeout(this.doSearch.bind(this), this.timeoutDelay);
      }
    },

    /**
     * Executes the search by setting the value.
     */
    doSearch: function doSearch() {
      this.setValue(this._readDOMValue());
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 92879:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/select-filter.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/abstract-filter */ 38510), __webpack_require__(/*! oro/multiselect-decorator */ 1157)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, AbstractFilter, MultiselectDecorator) {
  'use strict';
  /**
   * Select filter: filter value as select option
   *
   * @export  oro/datafilter/select-filter
   * @class   oro.datafilter.SelectFilter
   * @extends oro.datafilter.AbstractFilter
   */

  return AbstractFilter.extend({
    /**
     * Filter template
     *
     * @property
     */
    template: _.template('<div class="AknFilterBox-filter filter-select filter-criteria-selector">' + '<% if (showLabel) { %>' + '<span class="AknFilterBox-filterLabel"><%= label %></span>' + '<% } %>' + '<select>' + '<% _.each(options, function (option) { %>' + '<option value="<%= option.value %>"<% if (option.value == emptyValue.type) { %> selected="selected"<% } %>><%= _.__(option.label) %></option>' + '<% }); %>' + '</select>' + '</div>' + '<% if (canDisable) { %><a href="<%= nullLink %>" class="AknFilterBox-disableFilter AknIconButton AknIconButton--remove disable-filter"></a><% } %>'),

    /**
     * Should default value be added to options list
     *
     * @property
     */
    populateDefault: true,

    /**
     * Selector for filter area
     *
     * @property
     */
    containerSelector: '.filter-select',

    /**
     * Selector for close button
     *
     * @property
     */
    disableSelector: '.disable-filter',

    /**
     * Selector for widget button
     *
     * @property
     */
    buttonSelector: '.select-filter-widget.ui-multiselect:first',

    /**
     * Selector for select input element
     *
     * @property
     */
    inputSelector: 'select',

    /**
     * Select widget object
     *
     * @property
     */
    selectWidget: null,

    /**
     * Minimum widget menu width, calculated depends on filter options
     *
     * @property
     */
    minimumWidth: null,

    /**
     * Select widget options
     *
     * @property
     */
    widgetOptions: {
      multiple: false,
      classes: 'AknFilterBox-filterCriteria select-filter-widget'
    },

    /**
     * Select widget menu opened flag
     *
     * @property
     */
    selectDropdownOpened: false,

    /**
     * @property {Boolean}
     */
    contextSearch: true,

    /**
     * Filter events
     *
     * @property
     */
    events: {
      'keydown select': '_preventEnterProcessing',
      'click .filter-select': '_onClickFilterArea',
      'click .disable-filter': '_onClickDisableFilter',
      'change select': '_onSelectChange'
    },

    /**
     * Initialize.
     *
     * @param {Object} options
     */
    initialize: function initialize() {
      // init filter content options if it was not initialized so far
      if (_.isUndefined(this.choices)) {
        this.choices = [];
      } // temp code to keep backward compatible


      this.choices = _.map(this.choices, function (option, i) {
        return _.isString(option) ? {
          value: i,
          label: option
        } : option;
      }); // init empty value object if it was not initialized so far

      if (_.isUndefined(this.emptyValue)) {
        this.emptyValue = {
          value: ''
        };
      }

      AbstractFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * Render filter template
     *
     * @return {*}
     */
    render: function render() {
      AbstractFilter.prototype.render.apply(this, arguments);
      var options = this.choices.slice(0);
      options = options.map(function (option) {
        option.__translation = _.__(option.label);
        return option;
      });
      options.sort(function (a, b) {
        return a.__translation.toString().localeCompare(b.__translation);
      });
      this.$el.empty();

      if (this.populateDefault) {
        options.unshift({
          value: '',
          label: this.placeholder
        });
      }

      this.$el.append(this.template({
        __: __,
        label: __(this.label),
        showLabel: this.showLabel,
        options: options,
        placeholder: this.placeholder,
        nullLink: this.nullLink,
        canDisable: this.canDisable,
        emptyValue: this.emptyValue
      }));

      this._updateDOMValue();

      this._initializeSelectWidget();

      return this;
    },

    /**
     * Initialize multiselect widget
     *
     * @protected
     */
    _initializeSelectWidget: function _initializeSelectWidget() {
      this.selectWidget = new MultiselectDecorator({
        element: this.$(this.inputSelector),
        parameters: _.extend({
          noneSelectedText: this.placeholder,
          selectedText: _.bind(function (numChecked, numTotal, checkedItems) {
            return this._getSelectedText(checkedItems);
          }, this),
          open: _.bind(function () {
            this.selectWidget.onOpenDropdown();

            this._setDropdownWidth();

            this.selectWidget.getWidget().find('input[type="search"]').attr('placeholder', __(this.label));

            this._updateCriteriaSelectorPosition();

            this._setButtonPressed(this.$(this.containerSelector), true);

            this.selectDropdownOpened = true;
          }, this),
          close: _.bind(function () {
            this._setButtonPressed(this.$(this.containerSelector), false);

            setTimeout(_.bind(function () {
              this.selectDropdownOpened = false;
            }, this), 100);
          }, this)
        }, this.widgetOptions),
        contextSearch: this.contextSearch
      });
      this.selectWidget.setViewDesign(this);
      this.$(this.buttonSelector).append('<span class="AknFilterBox-filterCaret"></span>').find('span:first-child').addClass('filter-criteria-hint');
    },
    getCriteria: function getCriteria() {
      return this.selectWidget.getWidget();
    },

    /**
     * Get text for filter hint
     *
     * @param {Array} checkedItems
     * @protected
     */
    _getSelectedText: function _getSelectedText(checkedItems) {
      if (_.isEmpty(checkedItems)) {
        return this.placeholder;
      }

      var elements = [];

      _.each(checkedItems, function (element) {
        var title = element.getAttribute('title');

        if (title) {
          elements.push(title);
        }
      });

      return elements.join(', ');
    },

    /**
     * Get criteria hint value
     *
     * @return {String}
     */
    _getCriteriaHint: function _getCriteriaHint() {
      var value = arguments.length > 0 ? this._getDisplayValue(arguments[0]) : this._getDisplayValue();

      var choice = _.find(this.choices, function (c) {
        return c.value == value.value;
      });

      return !_.isUndefined(choice) ? choice.label : this.placeholder;
    },

    /**
     * Set design for select dropdown
     *
     * @protected
     */
    _setDropdownWidth: function _setDropdownWidth() {
      if (!this.minimumWidth) {
        this.minimumWidth = this.selectWidget.getMinimumDropdownWidth() + 22;
      }

      var widget = this.selectWidget.getWidget(),
          filterWidth = this.$(this.containerSelector).width(),
          requiredWidth = Math.max(filterWidth + 10, this.minimumWidth);
      widget.width(requiredWidth).css('min-width', requiredWidth + 'px');
      widget.find('input[type="search"]').width(requiredWidth - 22);
    },

    /**
     * Open/close select dropdown
     *
     * @param {Event} e
     * @protected
     */
    _onClickFilterArea: function _onClickFilterArea(e) {
      if (!this.selectDropdownOpened) {
        setTimeout(_.bind(function () {
          this.selectWidget.multiselect('open');
        }, this), 50);
      } else {
        setTimeout(_.bind(function () {
          this.selectWidget.multiselect('close');
        }, this), 50);
      }

      e.stopPropagation();
    },

    /**
     * Triggers change data event
     *
     * @protected
     */
    _onSelectChange: function _onSelectChange() {
      // set value
      this.setValue(this._formatRawValue(this._readDOMValue())); // update dropdown

      if (null !== this.selectWidget) {
        this._updateCriteriaSelectorPosition();
      }
    },

    /**
     * Handle click on filter disabler
     *
     * @param {Event} e
     */
    _onClickDisableFilter: function _onClickDisableFilter(e) {
      e.preventDefault();
      this.disable();
    },

    /**
     * @inheritDoc
     */
    _isNewValueUpdated: function _isNewValueUpdated(newValue) {
      return !_.isEqual(this.getValue().value || '', newValue.value);
    },

    /**
     * @inheritDoc
     */
    _onValueUpdated: function _onValueUpdated(newValue, oldValue) {
      AbstractFilter.prototype._onValueUpdated.apply(this, arguments);

      if (this.selectWidget) {
        this._updateCriteriaSelectorPosition();

        this.selectWidget.multiselect('refresh');
      }

      var label = this.$(this.buttonSelector).find('.filter-criteria-hint');
      label.attr('title', label.html());
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      this._setInputValue(this.inputSelector, value.value);

      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      return {
        value: this._getInputValue(this.inputSelector)
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 86689:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/select-row-filter.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/datafilter/select-filter */ 92879)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, SelectFilter) {
  'use strict';
  /**
   * Fetches information of rows selection
   * and implements filter by selected/Not selected rows
   *
   * @export  oro/datafilter/select-row-filter
   * @class   oro.datafilter.SelectRowFilter
   * @extends oro.datafilter.SelectFilter
   */

  return SelectFilter.extend({
    /**
     * Fetches raw format value on getting current value
     * in order to give always actual information about selected rows
     *
     * @return {Object}
     */
    getValue: function getValue() {
      return this._formatRawValue(_.omit(this.value, 'in', 'out'));
    },

    /**
     * Converts a display value into raw format. Adds to value 'in' or 'out' property
     * with comma-separated string of ids, e.g. {'in': '4,35,23,65'} or {'out': '7,31,63,12'}
     *
     * @param {Object} value
     * @return {Object}
     * @protected
     */
    _formatRawValue: function _formatRawValue(value) {
      // if a display value already contains raw information assume it's an initialization
      if (_.has(value, 'in') || _.has(value, 'out')) {
        this._initialSelection(value);
      }

      if (value.value !== '') {
        var ids = this._getSelection(),
            scope;

        if (_.isArray(ids.selected)) {
          scope = ids.inset === Boolean(parseInt(value.value, 10)) ? 'in' : 'out';
          value[scope] = ids.selected.join(',');
        }
      }

      return value;
    },

    /**
     * Converts a raw value into display format, opposite to _formatRawValue.
     * Removes extra properties of raw value representation.
     *
     * @param {Object} value
     * @return {Object}
     * @protected
     */
    _formatDisplayValue: function _formatDisplayValue(value) {
      return _.omit(value, 'in', 'out');
    },

    /**
     * Fetches selection of grid rows
     * Triggers an event 'backgrid:getSelected' on collection to get selected rows.
     * oro.datagrid.SelectAllHeaderCell is listening to this event and
     * fills in a passes flat object with selection information
     *
     * @returns {Object}
     * @protected
     */
    _getSelection: function _getSelection() {
      var selection = {};
      this.collection.trigger('backgrid:getSelected', selection);
      return _.defaults(selection, {
        inset: true,
        selected: []
      });
    },

    /**
     * Triggers selection events for models on grid's initial stage
     * (if display value has raw data, it's initial stage)
     *
     * @param {Object} value
     * @param {string} value.value "0" - not selected, "1" - selected
     * @param {string} value.in comma-separated ids
     * @param {string} value.out comma-separated ids
     * @protected
     */
    _initialSelection: function _initialSelection(value) {
      var checked = true;

      if (Boolean(parseInt(value.value, 10)) !== _.has(value, 'in')) {
        this.collection.trigger('backgrid:selectAll');
        checked = false;
      }

      _.each(_.values(_.pick(value, 'in', 'out'))[0].split(',') || [], _.partial(function (collection, id) {
        var model = collection.get(id);

        if (model instanceof Backbone.Model) {
          model.trigger('backgrid:select', model, checked);
        }
      }, this.collection));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 78158:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/select2-choice-filter.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/text-filter */ 57796), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, TextFilter, Routing, initSelect2, UserContext) {
  'use strict';

  return TextFilter.extend({
    operatorChoices: [],
    choiceUrl: null,
    choiceUrlParams: {},
    emptyChoice: false,
    resultCache: {},
    resultsPerPage: 20,
    choices: [],
    events: {
      'click .AknDropdown-menuLink': '_onSelectOperator'
    },
    initialize: function initialize(options) {
      _.extend(this.events, TextFilter.prototype.events);

      options = options || {};

      if (_.has(options, 'choiceUrl')) {
        this.choiceUrl = options.choiceUrl;
      }

      if (_.has(options, 'choiceUrlParams')) {
        this.choiceUrlParams = options.choiceUrlParams;
      }

      if (_.has(options, 'emptyChoice')) {
        this.emptyChoice = options.emptyChoice;
      }

      if (_.isUndefined(this.emptyValue)) {
        this.emptyValue = {
          type: 'in',
          value: ''
        };
      }

      this.operatorChoices = {
        "in": __('pim_datagrid.filters.common.in_list'),
        empty: __('pim_datagrid.filters.common.empty'),
        'not empty': __('pim_datagrid.filters.common.not_empty')
      };
      this.resultCache = {};
      TextFilter.prototype.initialize.apply(this, arguments);
    },
    _onSelectOperator: function _onSelectOperator(e) {
      var value = $(e.currentTarget).find('.operator_choice').attr('data-value');

      this._highlightDropdown(value, '.operator');

      if (_.contains(['empty', 'not empty'], value)) {
        this._disableInput();
      } else {
        this._enableInput();
      }

      e.preventDefault();
    },
    _getSelect2Config: function _getSelect2Config() {
      var config = {
        multiple: true,
        width: '290px',
        minimumInputLength: 0,
        formatSelection: function (data, container, escapeMarkup) {
          var result = $.fn.select2.defaults.formatSelection(data, container, escapeMarkup);

          if (result !== undefined) {
            return '<div title="' + result + '">' + result + '</div>';
          }

          return result;
        }.bind(this),
        formatResult: function (result, container, query, escapeMarkup) {
          var formerResult = $.fn.select2.defaults.formatResult(result, container, query, escapeMarkup);
          container.attr('title', result.text);
          return formerResult;
        }.bind(this)
      };

      if (this.choiceUrl) {
        config.ajax = {
          url: Routing.generate(this.choiceUrl, this.choiceUrlParams),
          cache: true,
          data: _.bind(function (term, page) {
            return {
              search: term,
              options: {
                limit: this.resultsPerPage,
                page: page,
                locale: UserContext.get('catalogLocale')
              }
            };
          }, this),
          results: _.bind(function (data) {
            this._cacheResults(data.results);

            data.more = this.resultsPerPage === data.results.length;
            return data;
          }, this)
        };
      } else {
        config.data = _.map(this.choices, function (choice) {
          return {
            id: choice.value,
            text: choice.label
          };
        });
      }

      return config;
    },
    _writeDOMValue: function _writeDOMValue(value) {
      if (_.contains(['empty', 'not empty'], value.type)) {
        this._setInputValue(this.criteriaValueSelectors.value, []);
      } else {
        this._setInputValue(this.criteriaValueSelectors.value, value.value);
      }

      this._highlightDropdown(value.type, '.operator');

      return this;
    },
    _readDOMValue: function _readDOMValue() {
      var operator = this.emptyChoice ? this.$('.active .operator_choice').data('value') : 'in';
      return {
        value: _.contains(['empty', 'not empty'], operator) ? {} : this._getInputValue(this.criteriaValueSelectors.value),
        type: operator
      };
    },

    /**
     * {@inheritdoc}
     */
    _renderCriteria: function _renderCriteria(el) {
      TextFilter.prototype._renderCriteria.apply(this, arguments);

      this.$(this.criteriaValueSelectors.value).addClass('AknTextField--select2');
      initSelect2.init(this.$(this.criteriaValueSelectors.value), this._getSelect2Config());

      this._updateCriteriaHint();
    },
    _onClickCriteriaSelector: function _onClickCriteriaSelector(e) {
      if (!this.popupCriteriaShowed) {
        this._showCriteria();

        if (_.contains(['empty', 'not empty'], this.getValue().type)) {
          this._disableInput();
        } else {
          initSelect2.init(this.$(this.criteriaValueSelectors.value), this._getSelect2Config()).select2('data', this._getCachedResults(this.getValue().value)).select2('open');
        }
      } else {
        this._hideCriteria();
      }
    },
    _onClickCloseCriteria: function _onClickCloseCriteria() {
      TextFilter.prototype._onClickCloseCriteria.apply(this, arguments);

      this.$(this.criteriaValueSelectors.value).select2('close');
    },
    _onClickOutsideCriteria: function _onClickOutsideCriteria(e) {
      var elem = this.$(this.criteriaSelector);

      if (e.target != $('body').get(0) && e.target !== elem.get(0) && !elem.has(e.target).length) {
        this._hideCriteria();

        this.setValue(this._formatRawValue(this._readDOMValue()));
        e.stopPropagation();
      }
    },
    _onReadCriteriaInputKey: function _onReadCriteriaInputKey(e) {
      if (e.which == 13) {
        this.$(this.criteriaValueSelectors.value).select2('close');

        this._hideCriteria();

        this.setValue(this._formatRawValue(this._readDOMValue()));
      }
    },
    _cacheResults: function _cacheResults(results) {
      _.each(results, function (result) {
        this.resultCache[result.id] = result.text;
      }, this);
    },
    _getCachedResults: function _getCachedResults(ids) {
      var results = [],
          missingResults = [];

      _.each(ids, function (id) {
        if (_.isUndefined(this.resultCache[id])) {
          if (_.isEmpty(this.choices)) {
            missingResults.push(id);
          } else {
            var choice = _.findWhere(this.choices, {
              value: id
            });

            if (_.isUndefined(choice)) {
              missingResults.push(id);
            } else {
              results.push({
                id: choice.value,
                text: choice.label
              });
            }
          }
        } else {
          results.push({
            id: id,
            text: this.resultCache[id]
          });
        }
      }, this);

      if (missingResults.length) {
        var params = {
          options: {
            identifiers: missingResults
          }
        };
        $.ajax({
          url: Routing.generate(this.choiceUrl, this.choiceUrlParams) + '&' + $.param(params),
          success: _.bind(function (data) {
            this._cacheResults(data.results);

            results = _.union(results, data.results);
          }, this),
          async: false
        });
      }

      return results;
    },
    _getInputValue: function _getInputValue(input) {
      return this.$(input).select2('val');
    },
    _setInputValue: function _setInputValue(input, value) {
      this.$(input).select2('data', this._getCachedResults(value));
      return this;
    },
    _updateDOMValue: function _updateDOMValue() {
      return this._writeDOMValue(this.getValue());
    },
    _formatDisplayValue: function _formatDisplayValue(value) {
      if (_.isEmpty(value.value)) {
        return value;
      }

      return {
        value: _.pluck(this._getCachedResults(value.value), 'text').join(', ')
      };
    },
    _getCriteriaHint: function _getCriteriaHint() {
      var operator = this.$('.active .operator_choice').data('value');
      var type = this.getValue().type;

      if (_.contains(['empty', 'not empty'], operator)) {
        return this.operatorChoices[operator];
      }

      if (_.contains(['empty', 'not empty'], type)) {
        return this.operatorChoices[type];
      }

      var value = arguments.length > 0 ? this._getDisplayValue(arguments[0]) : this._getDisplayValue();
      return !_.isEmpty(value.value) ? '"' + value.value + '"' : this.placeholder;
    },

    /**
     * {@inheritdoc}
     */
    _enableInput: function _enableInput() {
      this.$(this.criteriaValueSelectors.value).select2(this._getSelect2Config());

      TextFilter.prototype._enableInput.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    _disableInput: function _disableInput() {
      this.$(this.criteriaValueSelectors.value).val('').select2('destroy');

      TextFilter.prototype._disableInput.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 72951:
/*!***************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/select2-rest-choice-filter.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/datafilter/text-filter */ 57796), __webpack_require__(/*! pim/formatter/choices/base */ 78464), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Routing, TextFilter, ChoicesFormatter, UserContext, initSelect2) {
  return TextFilter.extend({
    operatorChoices: [],
    choiceUrl: null,
    choiceUrlParams: {},
    emptyChoice: false,
    resultsPerPage: 20,
    events: {
      'click .AknDropdown-menuLink': '_onSelectOperator'
    },
    criteriaValueSelectors: {
      value: 'input[name="value"]',
      operator: '.active .operator_choice'
    },
    initialize: function initialize(options) {
      _.extend(this.events, TextFilter.prototype.events);

      if (!_.isUndefined(options)) {
        _.extend(this, _.pick(options, 'choiceUrl', 'choiceUrlParams', 'emptyChoice'));
      }

      if (_.isUndefined(this.emptyValue)) {
        this.emptyValue = {
          type: 'in',
          value: ''
        };
      }

      var operatorChoices = {
        "in": __('pim_datagrid.filters.common.in_list'),
        empty: __('pim_datagrid.filters.common.empty'),
        'not empty': __('pim_datagrid.filters.common.not_empty')
      };

      if (undefined !== this.options.onlyOperators) {
        for (var operatorChoice in operatorChoices) {
          if (-1 === this.options.onlyOperators.indexOf(operatorChoice)) {
            delete operatorChoices[operatorChoice];
          }
        }
      }

      this.operatorChoices = operatorChoices;
      TextFilter.prototype.initialize.apply(this, arguments);
    },
    _onSelectOperator: function _onSelectOperator(e) {
      var value = $(e.currentTarget).find('.operator_choice').attr('data-value');

      this._highlightDropdown(value, '.operator');

      if (_.contains(['empty', 'not empty'], value)) {
        this._disableInput();
      } else {
        this._enableInput();
      }

      e.preventDefault();
    },
    _getSelect2Config: function _getSelect2Config() {
      var config = {
        multiple: true,
        width: '290px',
        minimumInputLength: 0,
        formatSelection: function (data, container, escapeMarkup) {
          var result = $.fn.select2.defaults.formatSelection(data, container, escapeMarkup);

          if (result !== undefined) {
            return '<div title="' + result + '">' + result + '</div>';
          }

          return result;
        }.bind(this),
        formatResult: function (result, container, query, escapeMarkup) {
          var formerResult = $.fn.select2.defaults.formatResult(result, container, query, escapeMarkup);
          container.attr('title', result.text);
          return formerResult;
        }.bind(this)
      };

      if (null !== this.choiceUrl) {
        config.ajax = {
          url: Routing.generate(this.choiceUrl, this.choiceUrlParams),
          cache: true,
          data: function (term, page) {
            return {
              search: term,
              options: {
                limit: this.resultsPerPage,
                page: page,
                locale: UserContext.get('catalogLocale')
              }
            };
          }.bind(this),
          results: function (data) {
            data.results = ChoicesFormatter.format(data);
            data.more = this.resultsPerPage === data.results.length;
            return data;
          }.bind(this)
        };
      }

      return config;
    },
    _writeDOMValue: function _writeDOMValue(value) {
      if (_.contains(['empty', 'not empty'], value.type)) {
        this._setInputValue(this.criteriaValueSelectors.value, []);
      } else {
        this._setInputValue(this.criteriaValueSelectors.value, value.value);
      }

      this.$(this.criteriaValueSelectors.operator).data('value', value.type);

      this._highlightDropdown(value.type, '.operator');

      return this;
    },
    _readDOMValue: function _readDOMValue() {
      var operator = this.emptyChoice ? this.$(this.criteriaValueSelectors.operator).data('value') : 'in';
      return {
        value: _.contains(['empty', 'not empty'], operator) ? {} : this._getInputValue(this.criteriaValueSelectors.value),
        type: operator
      };
    },

    /**
     * {@inheritdoc}
     */
    _renderCriteria: function _renderCriteria(el) {
      TextFilter.prototype._renderCriteria.apply(this, arguments);

      this.$(this.criteriaValueSelectors.value).addClass('AknTextField--select2');
      initSelect2.init(this.$(this.criteriaValueSelectors.value), this._getSelect2Config());

      this._updateCriteriaHint();
    },
    _onClickCriteriaSelector: function _onClickCriteriaSelector(e) {
      if (!this.popupCriteriaShowed) {
        this._showCriteria();

        this.$(this.criteriaValueSelectors.value).select2('open');
      } else {
        this._hideCriteria();
      }
    },
    _onReadCriteriaInputKey: function _onReadCriteriaInputKey(e) {
      if (e.which == 13) {
        this.$(this.criteriaValueSelectors.value).select2('close');

        this._hideCriteria();

        this.setValue(this._formatRawValue(this._readDOMValue()));
      }
    },
    _getResults: function _getResults(identifiers) {
      var results = [];
      var params = {
        options: {
          identifiers: identifiers
        }
      };
      $.ajax({
        url: Routing.generate(this.choiceUrl, $.extend({}, this.choiceUrlParams, params)),
        success: function success(data) {
          results = ChoicesFormatter.format(data);
        },
        async: false
      });
      return results;
    },
    _getInputValue: function _getInputValue(input) {
      return this.$(input).select2('val');
    },
    _setInputValue: function _setInputValue(input, value) {
      this.$(input).select2('data', this._getResults(value));
      return this;
    },
    _updateDOMValue: function _updateDOMValue() {
      var currentValue = this.getValue();
      var data = this.$(this.criteriaValueSelectors.value).select2('data');

      if (0 === _.difference(currentValue.value, _.pluck(data, 'id')).length) {
        return;
      }

      return this._writeDOMValue(currentValue);
    },
    _formatDisplayValue: function _formatDisplayValue(value) {
      if (_.isEmpty(value.value)) {
        return value;
      }

      return {
        value: _.pluck(this.$(this.criteriaValueSelectors.value).select2('data'), 'text').join(', ')
      };
    },
    _getCriteriaHint: function _getCriteriaHint() {
      var operator = this.$('.active .operator_choice').data('value');
      var type = this.getValue().type;

      if (_.contains(['empty', 'not empty'], operator)) {
        return this.operatorChoices[operator];
      }

      if (_.contains(['empty', 'not empty'], type)) {
        return this.operatorChoices[type];
      }

      var value = arguments.length > 0 ? this._getDisplayValue(arguments[0]) : this._getDisplayValue();
      return !_.isEmpty(value.value) ? '"' + value.value + '"' : this.placeholder;
    },

    /**
     * {@inheritdoc}
     */
    _enableInput: function _enableInput() {
      this.$(this.criteriaValueSelectors.value).select2(this._getSelect2Config());

      TextFilter.prototype._enableInput.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    _disableInput: function _disableInput() {
      this.$(this.criteriaValueSelectors.value).val('').select2('destroy');

      TextFilter.prototype._disableInput.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 57796:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/text-filter.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/abstract-filter */ 38510), __webpack_require__(/*! pim/template/datagrid/filter/text-filter */ 32220)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, AbstractFilter, criteriaTemplate) {
  'use strict';
  /**
   * Text grid filter.
   *
   * Triggers events:
   *  - "disable" when filter is disabled
   *  - "update" when filter criteria is changed
   *
   * @export  oro/datafilter/text-filter
   * @class   oro.datafilter.TextFilter
   * @extends oro.datafilter.AbstractFilter
   */

  return AbstractFilter.extend({
    outsideEventListener: null,

    /** @property */
    template: _.template('<div class="AknFilterBox-filter filter-criteria-selector oro-drop-opener">' + '<% if (showLabel) { %>' + '<span class="AknFilterBox-filterLabel"><%= label %></span>' + '<% } %>' + '<span class="AknFilterBox-filterCriteria AknFilterBox-filterCriteria--limited filter-criteria-hint"><%= criteriaHint %></span>' + '<span class="AknFilterBox-filterCaret"></span>' + '</div>' + '<div class="filter-criteria dropdown-menu"></div>' + '<% if (canDisable) { %><div class="AknFilterBox-disableFilter AknIconButton AknIconButton--remove disable-filter"></div><% } %>'),

    /**
     * Template for filter criteria
     *
     * @property
     */
    popupCriteriaTemplate: _.template(criteriaTemplate),

    /**
     * @property {Boolean}
     */
    popupCriteriaShowed: false,

    /**
     * Selector to element of criteria hint
     *
     * @property {String}
     */
    criteriaHintSelector: '.filter-criteria-hint',

    /**
     * Selector to criteria popup container
     *
     * @property {String}
     */
    criteriaSelector: '.filter-criteria',

    /**
     * Selectors for filter criteria elements
     *
     * @property {Object}
     */
    criteriaValueSelectors: {
      value: 'input[name="value"]',
      nested: {
        end: 'input'
      }
    },
    operatorChoices: [],

    /**
     * View events
     *
     * @property {Object}
     */
    events: {
      'keyup input': '_onReadCriteriaInputKey',
      'keydown [type="text"]': '_preventEnterProcessing',
      'click .filter-update': '_onClickUpdateCriteria',
      'click .filter-criteria-selector': '_onClickCriteriaSelector',
      'click .filter-criteria .filter-criteria-hide': '_onClickCloseCriteria',
      'click .disable-filter': '_onClickDisableFilter'
    },

    /**
     * Initialize.
     *
     * @param {Object} options
     */
    initialize: function initialize() {
      // init empty value object if it was not initialized so far
      if (_.isUndefined(this.emptyValue)) {
        this.emptyValue = {
          value: ''
        };
      }

      AbstractFilter.prototype.initialize.apply(this, arguments);
      document.addEventListener('mousedown', this._onClickOutsideCloseCriteria.bind(this));
    },

    /**
     * Handle key press on criteria input elements
     *
     * @param {Event} e
     * @protected
     */
    _onReadCriteriaInputKey: function _onReadCriteriaInputKey(e) {
      if (e.which == 13) {
        this._onClickUpdateCriteria();
      }
    },

    /**
     * Handle click on criteria update button
     *
     * @param {Event} e
     * @private
     */
    _onClickUpdateCriteria: function _onClickUpdateCriteria(e) {
      this._hideCriteria();

      this.setValue(this._formatRawValue(this._readDOMValue()));
    },

    /**
     * Handle click on criteria selector
     *
     * @protected
     */
    _onClickCriteriaSelector: function _onClickCriteriaSelector() {
      if (!this.popupCriteriaShowed) {
        this._showCriteria();
      } else {
        this._hideCriteria();
      }
    },

    /**
     * Handle click on criteria close button
     *
     * @private
     */
    _onClickCloseCriteria: function _onClickCloseCriteria() {
      this._hideCriteria();

      this._updateDOMValue();
    },

    /**
     * Handle click on filter disabler
     *
     * @param {Event} e
     */
    _onClickDisableFilter: function _onClickDisableFilter(e) {
      e.preventDefault();
      this.disable();
    },

    /**
     * Closes the criteria if the user clicks on the rest of the document.
     *
     * @param {Event} event
     */
    _onClickOutsideCloseCriteria: function _onClickOutsideCloseCriteria(event) {
      if (false === this.popupCriteriaShowed) {
        return;
      }

      if (true === this.el.contains(event.target)) {
        return;
      }

      this._hideCriteria();

      this.setValue(this._formatRawValue(this._readDOMValue()));
    },

    /**
     * Render filter view
     *
     * @return {*}
     */
    render: function render() {
      var _this = this;

      AbstractFilter.prototype.render.apply(this, arguments);
      this.$el.empty();
      this.$el.append(this.template({
        label: this.label,
        showLabel: this.showLabel,
        criteriaHint: this._getCriteriaHint(),
        nullLink: this.nullLink,
        canDisable: this.canDisable
      }));

      this._renderCriteria(this.$(this.criteriaSelector));

      this.$el.on('change', function () {
        _this._updateCriteriaSelectorPosition();
      });
      return this;
    },

    /**
     * Render filter criteria popup
     *
     * @param {Object} el
     * @protected
     * @return {*}
     */
    _renderCriteria: function _renderCriteria(el) {
      $(el).append(this.popupCriteriaTemplate({
        label: this.label,
        operatorChoices: this._getOperatorChoices(),
        selectedOperator: this.emptyValue.type,
        emptyChoice: this.emptyChoice,
        selectedOperatorLabel: this._getOperatorChoices()[this.emptyValue.type],
        operatorLabel: __('pim_common.operator'),
        updateLabel: __('pim_common.update')
      }));
      return this;
    },

    /**
     * Returns a list of operator { key: label }
     *
     * @returns {Object}
     */
    _getOperatorChoices: function _getOperatorChoices() {
      return this.operatorChoices;
    },

    /**
     * Unsubscribe from click on body event
     *
     * @return {*}
     */
    remove: function remove() {
      AbstractFilter.prototype.remove.call(this);
      return this;
    },

    /**
     * Show criteria popup
     *
     * @protected
     */
    _showCriteria: function _showCriteria() {
      this.$(this.criteriaSelector).show();

      this._updateCriteriaSelectorPosition();

      this._focusCriteria();

      this._setButtonPressed(this.$(this.criteriaSelector), true);

      this.popupCriteriaShowed = true;
    },

    /**
     * Hide criteria popup
     *
     * @protected
     */
    _hideCriteria: function _hideCriteria() {
      this.$(this.criteriaSelector).hide();

      this._setButtonPressed(this.$(this.criteriaSelector), false);

      this.popupCriteriaShowed = false;
    },

    /**
     * Focus filter criteria input
     *
     * @protected
     */
    _focusCriteria: function _focusCriteria() {
      this.$(this.criteriaSelector + ' input').trigger('focus').trigger('select');
    },

    /**
     * @inheritDoc
     */
    _writeDOMValue: function _writeDOMValue(value) {
      this._setInputValue(this.criteriaValueSelectors.value, value.value);

      return this;
    },

    /**
     * @inheritDoc
     */
    _readDOMValue: function _readDOMValue() {
      return {
        value: this._getInputValue(this.criteriaValueSelectors.value)
      };
    },

    /**
     * @inheritDoc
     */
    _onValueUpdated: function _onValueUpdated(newValue, oldValue) {
      AbstractFilter.prototype._onValueUpdated.apply(this, arguments);

      this._updateCriteriaHint();
    },

    /**
     * Updates criteria hint element with actual criteria hint value
     *
     * @protected
     * @return {*}
     */
    _updateCriteriaHint: function _updateCriteriaHint() {
      this.$(this.criteriaHintSelector).html(_.escape(this._getCriteriaHint()));
      return this;
    },

    /**
     * Get criteria hint value
     *
     * @return {String}
     * @protected
     */
    _getCriteriaHint: function _getCriteriaHint() {
      var value = arguments.length > 0 ? this._getDisplayValue(arguments[0]) : this._getDisplayValue();
      return value.value ? '"' + value.value + '"' : this.placeholder;
    },

    /**
     * Enables text input
     *
     * @protected
     */
    _enableInput: function _enableInput() {
      this.$(this.criteriaValueSelectors.value).show();
    },

    /**
     * Disables text input
     *
     * @protected
     */
    _disableInput: function _disableInput() {
      this.$(this.criteriaValueSelectors.value).hide();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 82886:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filter/uuid-filter.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datafilter/choice-filter */ 81398)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, ChoiceFilter) {
  'use strict';
  /**
   * @export  oro/datafilter/uuidFilter
   * @class   oro.datafilter.uuidFilter
   * @extends oro.datafilter.ChoiceFilter
   */

  return ChoiceFilter.extend({
    initialize: function initialize() {
      this.choices = [{
        label: __('pim_datagrid.filters.common.in_list'),
        value: 'in'
      }];
      this.emptyValue = {
        type: 'in',
        value: ''
      };
      ChoiceFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    _getOperatorChoices: function _getOperatorChoices() {
      return {
        "in": __('pim_datagrid.filters.common.in_list')
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 41518:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filters-button.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/datafilter/collection-filters-manager */ 91902)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, mediator, FiltersManager) {
  return BaseForm.extend({
    displayAsPanel: false,
    isLoaded: false,

    /**
     * @inheritdoc
     */
    initialize: function initialize(meta) {
      this.displayAsPanel = undefined === meta.config.displayAsPanel ? false : meta.config.displayAsPanel;
      this.listenTo(mediator, 'datagrid_filters:loaded', this.showFilterManager.bind(this));
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Creates a new FiltersManager and renders it
     *
     * @param {Object} options
     */
    showFilterManager: function showFilterManager(options) {
      options.displayAsPanel = this.displayAsPanel;

      if (this.isLoaded) {
        return;
      }

      this.isLoaded = true;
      var filtersList = new FiltersManager(options);
      this.$el.append(filtersList.render().$el);
      mediator.trigger('datagrid_filters:build.post', filtersList);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 81520:
/*!******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filters-list.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/tools */ 24998)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, mediator, tools) {
  return BaseForm.extend({
    options: {},
    filters: [],
    isLoaded: false,
    className: 'AknFilterBox-list filter-box',
    config: {
      filterModuleName: 'oro/datafilter/{{type}}-filter',
      filterTypes: {
        string: 'choice',
        choice: 'select',
        selectrow: 'select-row',
        multichoice: 'multiselect',
        "boolean": 'select'
      }
    },

    /**
     * @inheritdoc
     */
    initialize: function initialize(options) {
      this.options = options.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(mediator, 'datagrid_collection_set_after', this.loadFilterModules.bind(this));
      BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Load the filter modules given a datagrid collection and grid metadata
     * @param  {Object} collection  Backbone collection for a datagrid
     * @param  {HTMLElement} gridElement Grid element
     */
    loadFilterModules: function loadFilterModules(collection, gridElement) {
      var _this = this;

      if (this.isLoaded) {
        return;
      }

      this.isLoaded = true;
      this.collection = collection;
      this.gridElement = gridElement;
      this.metadata = this.gridElement.data('metadata') || {};
      this.filters = this.metadata.filters;
      this.modules = this.collectModules();
      tools.loadModules(this.modules, function () {
        var options = _this.combineOptions.call(_this);

        options.collection = _this.collection;
        options.displayManageFilters = _.result(_this.metadata.options, 'manageFilters', true);
        _this.filters = options.filters || [];

        _this.render();

        mediator.trigger('datagrid_filters:loaded', options);
        mediator.trigger('datagrid_filters:rendered', _this.collection, _this.filters);
      });
    },

    /**
     * Returns the filter module names
     */
    collectModules: function collectModules() {
      var _this2 = this;

      var modules = {};

      _.each(this.filters, function (filter) {
        var type = filter.type;
        modules[type] = _this2.config.filterModuleName.replace('{{type}}', _this2.config.filterTypes[type] || type);
      });

      return modules;
    },

    /**
     * Passes data to and creates new instances of filter modules
     * @return {Object} The filter modules
     */
    combineOptions: function combineOptions() {
      var _this3 = this;

      var filters = {};

      _.each(this.metadata.filters, function (options) {
        if (_.has(options, 'name') && _.has(options, 'type')) {
          if (options.type === 'selectrow') {
            options.collection = _this3.collection;
          }

          filters[options.name] = new (_this3.modules[options.type].extend(options))(options);
        }
      });

      return {
        filters: filters
      };
    },

    /**
     * Render filters
     */
    render: function render() {
      _.each(this.filters, function (filter) {
        if (!filter.enabled) {
          filter.hide();
        }

        if (filter.enabled) {
          filter.render();
        }

        if (filter.$el.length > 0) {
          if (filter.isSearch && this.options.displayedAsColumn === true) {
            this.getRoot().$('.search-zone').append(filter.$el.get(0));
          } else {
            this.$el.append(filter.$el.get(0));
          }
        }
      }, this);

      BaseForm.prototype.render.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 94449:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/filters-manager.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/multiselect-decorator */ 1157), __webpack_require__(/*! pim/template/datagrid/add-filter-select */ 85125), __webpack_require__(/*! pim/template/datagrid/add-filter-button */ 30714), __webpack_require__(/*! pim/template/datagrid/done-container */ 47932), __webpack_require__(/*! pim/template/datagrid/done-button */ 83961)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, $, _, Backbone, mediator, MultiselectDecorator, addFilterSelectTemplate, addFilterButtonTemplate, doneContainerTemplate, doneButtonTemplate) {
  /**
   * View that represents all grid filters
   *
   * @export  oro/datafilter/filters-manager
   * @class   oro.datafilter.FiltersManager
   * @extends Backbone.View
   *
   * @event updateList    on update of filter list
   * @event updateFilter  on update data of specific filter
   * @event disableFilter on disable specific filter
   */
  return Backbone.View.extend({
    displayAsPanel: false,

    /**
     * List of filter objects
     *
     * @property
     */
    filters: {},

    /**
     * Display the 'manage filters' button or not
     *
     * @property
     */
    displayManageFilters: function displayManageFilters() {
      return _.result(this.options, 'displayManageFilters', true);
    },

    /**
     * Displays the filters as column or not
     *
     * @property
     */
    filtersAsColumn: function filtersAsColumn() {
      return _.result(this.options, 'filtersAsColumn', false);
    },
    addButtonTemplate: _.template(addFilterSelectTemplate),
    addFilterButtonTemplate: _.template(addFilterButtonTemplate),
    doneContainerTemplate: _.template(doneContainerTemplate),
    doneButtonTemplate: _.template(doneButtonTemplate),

    /**
     * Filter list input selector
     *
     * @property
     */
    filterSelector: '#add-filter-select',

    /**
     * Select widget object
     *
     * @property {oro.MultiselectDecorator}
     */
    selectWidget: null,

    /**
     * ImportExport button selector
     *
     * @property
     */
    buttonSelector: '.ui-multiselect.filter-list',

    /** @property */
    events: {
      'change #add-filter-select': '_onChangeFilterSelect'
    },

    /**
     * Initialize filter list options
     *
     * @param {Object} options
     * @param {Object} [options.filters]
     * @param {Boolean} [options.displayManageFilters]
     */
    initialize: function initialize(options) {
      if (options.filters) {
        this.filters = options.filters;
      }

      this.displayAsPanel = options.displayAsPanel;

      _.each(this.filters, function (filter) {
        this.listenTo(filter, 'update', this._onFilterUpdated);
        this.listenTo(filter, 'disable', this._onFilterDisabled);
      }, this);

      Backbone.View.prototype.initialize.apply(this, arguments); // destroy events bindings

      mediator.once('hash_navigation_request:start', function () {
        _.each(this.filters, function (filter) {
          this.stopListening(filter, 'update', this._onFilterUpdated);
          this.stopListening(filter, 'disable', this._onFilterDisabled);
        }, this);
      }, this);
    },

    /**
     * Triggers when filter is updated
     *
     * @param {oro.datafilter.AbstractFilter} filter
     * @protected
     */
    _onFilterUpdated: function _onFilterUpdated(filter) {
      this.trigger('updateFilter', filter);
    },

    /**
     * Triggers when filter is disabled
     *
     * @param {oro.datafilter.AbstractFilter} filter
     * @protected
     */
    _onFilterDisabled: function _onFilterDisabled(filter) {
      this.trigger('disableFilter', filter);
      this.disableFilter(filter);
    },

    /**
     * Returns list of filter raw values
     */
    getValues: function getValues() {
      var values = {};

      _.each(this.filters, function (filter) {
        if (filter.enabled) {
          values[filter.name] = filter.getValue();
        }
      }, this);

      return values;
    },

    /**
     * Sets raw values for filters
     */
    setValues: function setValues(values) {
      _.each(values, function (value, name) {
        if (_.has(this.filters, name)) {
          this.filters[name].setValue(value);
        }
      }, this);
    },

    /**
     * Triggers when filter select is changed
     *
     * @protected
     */
    _onChangeFilterSelect: function _onChangeFilterSelect() {
      this.trigger('updateList', this);

      this._processFilterStatus();
    },

    /**
     * Closes the panel when the user clicks on Done button
     */
    _onClose: function _onClose() {
      this.selectWidget.multiselect('close');
    },

    /**
     * Enable filter
     *
     * @param {oro.datafilter.AbstractFilter} filter
     * @return {*}
     */
    enableFilter: function enableFilter(filter) {
      return this.enableFilters([filter]);
    },

    /**
     * Disable filter
     *
     * @param {oro.datafilter.AbstractFilter} filter
     * @return {*}
     */
    disableFilter: function disableFilter(filter) {
      return this.disableFilters([filter]);
    },

    /**
     * Enable filters
     *
     * @param filters []
     * @return {*}
     */
    enableFilters: function enableFilters(filters) {
      if (_.isEmpty(filters)) {
        return this;
      }

      var optionsSelectors = [];

      _.each(filters, function (filter) {
        filter.enable();
        optionsSelectors.push("option[value=\"".concat(filter.name, "\"]:not(:selected)"));
      }, this);

      var options = this.$(this.filterSelector).find(optionsSelectors.join(','));

      if (options.length) {
        options.prop('selected', true);
      }

      if (this.displayManageFilters() && optionsSelectors.length) {
        this.selectWidget.multiselect('refresh');
      }

      return this;
    },

    /**
     * Disable filters
     *
     * @param filters []
     * @return {*}
     */
    disableFilters: function disableFilters(filters) {
      if (_.isEmpty(filters)) {
        return this;
      }

      var optionsSelectors = [];

      _.each(filters, function (filter) {
        filter.disable();
        optionsSelectors.push("option[value=\"".concat(filter.name, "\"]:selected"));
      }, this);

      var options = this.$(this.filterSelector).find(optionsSelectors.join(','));

      if (options.length) {
        options.removeAttr('selected');
      }

      if (this.displayManageFilters() && optionsSelectors.length) {
        this.selectWidget.multiselect('refresh');
      }

      return this;
    },

    /**
     * Container classes
     *
     * @property
     */
    className: function className() {
      if (this.options.renderFilterList) {
        return 'AknFilterBox filter-box oro-clearfix-width AknFilterBox--search';
      }
    },

    /**
     * Render filter list
     *
     * @return {*}
     */
    render: function render() {
      this.$el.empty();
      var fragment = document.createDocumentFragment(); // Only used for grids within tabs

      if (this.options.renderFilterList) {
        _.each(this.filters, function (filter) {
          if (!filter.enabled) {
            filter.hide();
          }

          if (filter.enabled) {
            filter.render();
          }

          if (filter.$el.length > 0) {
            fragment.appendChild(filter.$el.get(0));
          }
        }, this);
      }

      this.trigger('rendered');

      if (_.isEmpty(this.filters)) {
        this.$el.hide();
      } else {
        this._fillEmptyGroupFilters();

        this.$el.append(fragment);

        if (this.displayManageFilters()) {
          this.$el.append(this.addButtonTemplate({
            filters: this.filters,
            groups: this._getSortedGroups()
          }));
        }

        this._initializeSelectWidget();
      }

      return this;
    },

    /**
     * Returns the groups belonging to the set of filters.
     * It returns an array beginning with the system one (containing filters without group), then the groups
     * having an sort order, and finally the groups without any sort order.
     */
    _getSortedGroups: function _getSortedGroups() {
      var groups = [];
      var unsortedGroups = [];
      Object.values(this.filters).forEach(function (filter) {
        if (filter.group !== __('pim_datagrid.column_configurator.system_group')) {
          if (filter.groupOrder !== null) {
            if (groups.filter(function (group) {
              return group.label === filter.group;
            }).length === 0) {
              groups.push({
                label: filter.group,
                order: filter.groupOrder
              });
            }
          } else {
            if (unsortedGroups.indexOf(filter.group) <= -1) {
              unsortedGroups.push(filter.group);
            }
          }
        }
      });
      return [__('pim_datagrid.filters.system')].concat(groups.sort(function (group1, group2) {
        return group1.order - group2.order;
      }).map(function (group) {
        return group.label;
      })).concat(unsortedGroups);
    },

    /**
     * Fills the filters having no group to put it into the "System" one.
     * This method is just for display, it's not registered in database, as the "system" group does not exist.
     */
    _fillEmptyGroupFilters: function _fillEmptyGroupFilters() {
      var _this = this;

      Object.keys(this.filters).forEach(function (filterKey) {
        if (_this.filters[filterKey].group === '' || _this.filters[filterKey].group === null || _this.filters[filterKey].group === undefined) {
          _this.filters[filterKey].group = __('pim_datagrid.filters.system');
        }
      });
    },

    /**
     * Initialize multiselect widget
     *
     * @protected
     */
    _initializeSelectWidget: function _initializeSelectWidget() {
      var _this2 = this;

      if (!this.displayManageFilters()) {
        return;
      }

      var multiselectParameters = {
        multiple: true,
        selectedList: 0,
        classes: 'AknFilterBox-addFilterButton AknFilterBox-addFilterButton--asPanel filter-list select-filter-widget',
        position: {
          at: 'right top',
          my: 'right top'
        }
      };

      if (!this.displayAsPanel) {
        multiselectParameters.classes = 'AknFilterBox-addFilterButton filter-list select-filter-widget';

        multiselectParameters.beforeopen = function () {
          _this2.selectWidget.getWidget().css({
            left: _this2._getLeftStartPosition()
          });

          _this2._addDoneButton();

          return true;
        };

        multiselectParameters.open = function () {
          if (_this2.$el.is(':visible')) {
            _this2.selectWidget.onOpenDropdown();

            _this2._updateDropdownPosition();
          }
        };

        multiselectParameters.beforeclose = function () {
          if (null === _this2.selectWidget.getWidget() || 0 === _this2.selectWidget.getWidget().length || _this2.selectWidget.getWidget().position().left <= _this2._getLeftStartPosition()) {
            return true;
          }

          _this2.selectWidget.getWidget().css({
            left: _this2._getLeftEndPosition() + 'px'
          });

          _this2.selectWidget.getWidget().css({
            left: _this2._getLeftStartPosition() + 'px'
          });

          setTimeout(function () {
            return _this2.selectWidget.multiselect('close');
          }, 500);
          return false;
        };

        multiselectParameters.position = {
          left: this._getLeftStartPosition()
        };
      }

      this.selectWidget = new MultiselectDecorator({
        element: this.$(this.filterSelector),
        parameters: multiselectParameters
      });
      this.selectWidget.setViewDesign(this);
      this.selectWidget.getWidget().addClass('pimmultiselect');
      this.$('.filter-list span:first').replaceWith(this.addFilterButtonTemplate({
        label: __('pim_datagrid.filters.label')
      }));
    },

    /**
     * Adds a done button in the bottom of the multiselect
     */
    _addDoneButton: function _addDoneButton() {
      var _this3 = this;

      if (!this.selectWidget.getWidget().find('.close').length) {
        var button = $(this.doneButtonTemplate({
          label: __('pim_common.done')
        }));
        button.on('click', function () {
          return _this3._onClose();
        });
        var container = $(this.doneContainerTemplate());
        container.append(button);
        this.selectWidget.getWidget().append(container);
      }
    },

    /**
     * Activate/deactivate all filter depends on its status
     *
     * @protected
     */
    _processFilterStatus: function _processFilterStatus() {
      var activeFilters = this.$(this.filterSelector).val();

      _.each(this.filters, function (filter, name) {
        if (!filter.enabled && _.indexOf(activeFilters, name) !== -1) {
          this.enableFilter(filter);
        } else if (filter.enabled && _.indexOf(activeFilters, name) === -1) {
          this.disableFilter(filter);
        }
      }, this);
    },

    /**
     * Set dropdown position according to current element. This methods animates the panel to be displayed
     * like the other columns.
     */
    _updateDropdownPosition: function _updateDropdownPosition() {
      this.selectWidget.getWidget().css({
        left: this._getLeftStartPosition() + 'px'
      });
      this.selectWidget.getWidget().css({
        left: this._getLeftEndPosition() + 'px'
      });
    },

    /**
     * Get the width of the main column and the header
     * @return {number}
     */
    _getOffsetWidth: function _getOffsetWidth() {
      var headerWidth = $('.AknHeader').width();
      var mainColumn = $('.AknDefault-contentWithColumn .AknColumn');
      var mainColumnWidth = 0 !== mainColumn.length ? mainColumn.width() : 0;
      return headerWidth + mainColumnWidth;
    },

    /**
     * Returns the left absolute position for the animation start
     *
     * @returns {number}
     */
    _getLeftStartPosition: function _getLeftStartPosition() {
      return this._getOffsetWidth() - 300;
    },

    /**
     * Returns the left absolute position for the animation end
     *
     * @returns {number}
     */
    _getLeftEndPosition: function _getLeftEndPosition() {
      return this._getOffsetWidth();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 42182:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datafilter/formatter/abstract-formatter.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
  'use strict';
  /**
   * Just a convenient class for interested parties to subclass.
   *
   * The default Cell classes don't require the formatter to be a subclass of
   * Formatter as long as the fromRaw(rawData) and toRaw(formattedData) methods
   * are defined.
   *
   * @abstract
   * @export  oro/datafilter/abstract-formatter
   * @class   oro.datafilter.AbstractFormatter
   */

  var AbstractFormatter = function AbstractFormatter() {};

  AbstractFormatter.prototype = {
    /**
     * Takes a raw value from a model and returns a formatted string for display.
     *
     * @memberOf oro.datafilter.AbstractFormatter
     * @param {*} rawData
     * @return {string}
     */
    fromRaw: function fromRaw(rawData) {
      return rawData;
    },

    /**
     * Takes a formatted string, usually from user input, and returns a
     * appropriately typed value for persistence in the model.
     *
     * If the user input is invalid or unable to be converted to a raw value
     * suitable for persistence in the model, toRaw must return `undefined`.
     *
     * @memberOf oro.datafilter.AbstractFormatter
     * @param {string} formattedData
     * @return {*|undefined}
     */
    toRaw: function toRaw(formattedData) {
      return formattedData;
    }
  };
  return AbstractFormatter;
}).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 10488:
/*!***********************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid-builder.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/tools */ 24998), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/pageable-collection */ 3110), __webpack_require__(/*! oro/datagrid/grid */ 40319), __webpack_require__(/*! oro/datagrid/grid-views/view */ 76735), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, tools, mediator, PageableCollection, Grid, GridViewsView, requireContext) {
  var gridSelector = '[data-type="datagrid"]:not([data-rendered])',
      gridGridViewsSelector = '.page-title > .AknTitleContainer .span10:last',
      headerCellModuleName = 'oro/datagrid/{{type}}-header-cell',
      cellModuleName = 'oro/datagrid/{{type}}-cell',
      actionModuleName = 'oro/datagrid/{{type}}-action',
      cellTypes = {
    integer: 'integer',
    decimal: 'number',
    percent: 'number'
  },
      reservedActions = ['export', 'ajax', 'redirect', 'edit', 'delete'],
      helpers = {
    headerCellType: function headerCellType(type) {
      return type + 'HeaderCell';
    },
    cellType: function cellType(type) {
      return type + 'Cell';
    },
    actionType: function actionType(type) {
      return type + 'Action';
    }
  },
      methods = {
    /**
     * Reads data from grid container, collects required modules and runs grid builder
     *
     * @param {Function} initBuilders
     */
    initBuilder: function initBuilder(initBuilders) {
      var self = this;
      self.metadata = _.extend({
        columns: [],
        options: {},
        state: {},
        rowActions: {},
        massActionsGroups: [],
        massActions: {}
      }, self.$el.data('metadata'));
      self.modules = {};
      methods.collectModules.call(self); // load all dependencies and build grid

      tools.loadModules(self.modules, function () {
        methods.buildGrid.call(self);
        initBuilders();
        methods.afterBuild.call(self);
      });
    },

    /**
     * Collects required modules
     */
    collectModules: function collectModules() {
      var modules = this.modules,
          metadata = this.metadata,
          moduleName = function moduleName(template, type) {
        return template.replace('{{type}}', type);
      }; // header cells & cells


      _.each(metadata.columns, function (column) {
        var headerCellType = column.headerCell;

        if (undefined !== headerCellType) {
          modules[helpers.headerCellType(headerCellType)] = moduleName(headerCellModuleName, headerCellType);
        }

        var type = column.type;
        modules[helpers.cellType(type)] = moduleName(cellModuleName, cellTypes[type] || type);
      }); // row actions


      _.each(_.values(metadata.rowActions), function (action) {
        modules[helpers.actionType(action.type)] = moduleName(actionModuleName, action.type);
      }); // default mass actions


      if (!$.isEmptyObject(metadata.massActions)) {
        modules[helpers.actionType('mass')] = moduleName(actionModuleName, 'mass');
      } // mass actions


      _.each(_.values(metadata.massActions), function (massAction) {
        if (!_.contains(reservedActions, massAction.type)) {
          modules[helpers.actionType(massAction.type)] = moduleName(actionModuleName, massAction.type);
        }
      });
    },

    /**
     * Build grid
     */
    buildGrid: function buildGrid() {
      var options, collection, grid; // create collection

      options = methods.combineCollectionOptions.call(this);
      collection = new PageableCollection(this.$el.data('data'), options); // create grid

      options = methods.combineGridOptions.call(this);
      grid = new Grid(_.extend({
        collection: collection
      }, options));
      this.grid = grid;
      this.$el.append(grid.render().$el); // create grid view

      options = methods.combineGridViewsOptions.call(this);
      $(gridGridViewsSelector).append(new GridViewsView(_.extend({
        collection: collection
      }, options)).render().$el);
    },

    /**
     * After build
     */
    afterBuild: function afterBuild() {
      mediator.trigger('datagrid_collection_set_after', this.grid.collection, this.$el);
    },

    /**
     * Process metadata and combines options for collection
     *
     * @returns {Object}
     */
    combineCollectionOptions: function combineCollectionOptions() {
      return _.extend({
        inputName: this.metadata.options.gridName,
        parse: true,
        url: '/user/json',
        state: _.extend({
          filters: {},
          sorters: {}
        }, this.metadata.state)
      }, this.metadata.options);
    },

    /**
     * Process metadata and combines options for datagrid
     *
     * @returns {Object}
     */
    combineGridOptions: function combineGridOptions() {
      var columns,
          rowActions = {},
          massActions = {},
          defaultOptions = {
        sortable: false
      },
          modules = this.modules,
          metadata = this.metadata; // columns

      columns = _.map(metadata.columns, function (cell) {
        var cellOptionKeys = ['name', 'label', 'renderable', 'editable', 'sortable', 'headerCell'],
            cellOptions = _.extend({}, defaultOptions, _.pick.apply(null, [cell].concat(cellOptionKeys))),
            extraOptions = _.omit.apply(null, [cell].concat(cellOptionKeys.concat('type'))),
            headerCellType = modules[helpers.headerCellType(cell.headerCell)],
            cellType = modules[helpers.cellType(cell.type)];

        if (!_.isEmpty(extraOptions)) {
          cellOptions.extraOptions = _.extend({}, extraOptions);
          cellType = cellType.extend(extraOptions);
        }

        cellOptions.headerCell = headerCellType;
        cellOptions.cell = cellType;
        return cellOptions;
      }); // row actions

      _.each(metadata.rowActions, function (options, action) {
        rowActions[action] = modules[helpers.actionType(options.type)].extend(options);
      }); // mass actions


      _.each(metadata.massActions, function (options, action) {
        var optionType = _.contains(reservedActions, options.type) ? 'mass' : options.type;
        massActions[action] = modules[helpers.actionType(optionType)].extend(options);
      });

      return {
        name: metadata.options.gridName,
        columns: columns,
        rowActions: rowActions,
        massActionsGroups: metadata.massActionsGroups,
        massActions: massActions,
        toolbarOptions: metadata.options.toolbarOptions || {},
        multipleSorting: metadata.options.multipleSorting || false,
        entityHint: metadata.options.entityHint,
        row: metadata.options.rowView ? requireContext(metadata.options.rowView) : null,
        displayTypes: metadata.options.displayTypes,
        manageColumns: metadata.options.manageColumns,
        emptyGridOptions: metadata.options.emptyGridOptions
      };
    },

    /**
     * Process metadata and combines options for datagrid views
     *
     * @returns {Object}
     */
    combineGridViewsOptions: function combineGridViewsOptions() {
      return this.metadata.gridViews || {};
    }
  };
  /**
   * Process datagirid's metadata and creates datagrid
   *
   * @export oro/datagrid-builder
   * @name   oro.datagridBuilder
   */

  return function (builders) {
    $(gridSelector).each(function (i, el) {
      var $el = $(el);
      var gridName = (($el.data('metadata') || {}).options || {}).gridName;

      if (!gridName) {
        return;
      }

      $el.attr('data-rendered', true);

      if (!_.isArray(builders)) {
        builders = [builders];
      }

      methods.initBuilder.call({
        $el: $el
      }, function () {
        _.each(builders, function (builder) {
          if (!_.has(builder, 'init') || !$.isFunction(builder.init)) {
            throw new TypeError('Builder does not have init method');
          }

          builder.init($el, gridName);
        });
      });
    }).end();
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 92993:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action-launcher.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/datagrid/action-launcher-button */ 97704), __webpack_require__(/*! pim/template/datagrid/action-launcher-list-item */ 13490)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, buttonTemplate, listItemTemplate) {
  'use strict';
  /**
   * Action launcher implemented as simple link. Click on link triggers action run
   *
   * Events:
   * click: Fired when launcher was clicked
   *
   * @export  oro/datagrid/action-launcher
   * @class   oro.datagrid.ActionLauncher
   * @extends Backbone.View
   */

  return Backbone.View.extend({
    /** @property */
    enabled: true,

    /** @property {String} */
    tagName: 'a',

    /** @property {Boolean} */
    onClickReturnValue: true,

    /** @property {oro.datagrid.AbstractAction} */
    action: undefined,

    /** @property {String} */
    label: undefined,

    /** @property {String} */
    icon: undefined,

    /** @property {String} */
    iconClassName: undefined,

    /** @property {String} */
    className: undefined,

    /** @property {String} */
    link: 'javascript:void(0);',

    /** @property {String} */
    runAction: true,

    /** @property {String} */
    group: undefined,

    /** @property {function(Object, ?Object=): String} */
    buttonTemplate: _.template(buttonTemplate),

    /** @property {function(Object, ?Object=): String} */
    listItemTemplate: _.template(listItemTemplate),

    /** @property */
    events: {
      click: 'onClick'
    },

    /** @property {Boolean} */
    noHref: false,

    /**
     * Initialize
     *
     * @param {Object} options
     * @param {oro.datagrid.AbstractAction} options.action
     * @param {function(Object, ?Object=): string} [options.template]
     * @param {String} [options.label]
     * @param {String} [options.icon]
     * @param {String} [options.link]
     * @param {Boolean} [options.runAction]
     * @param {Boolean} [options.onClickReturnValue]
     * @throws {TypeError} If mandatory option is undefined
     */
    initialize: function initialize(options) {
      options = options || {};

      if (!options.action) {
        throw new TypeError("'action' is required");
      }

      if (options.template) {
        this.template = options.template;
      }

      if (options.label) {
        this.label = options.label;
      }

      if (options.icon) {
        this.icon = options.icon;
      }

      if (options.link) {
        this.link = options.link;
      }

      if (options.iconClassName) {
        this.iconClassName = options.iconClassName;
      }

      if (options.className) {
        this.className = options.className;
      }

      if (_.has(options, 'runAction')) {
        this.runAction = options.runAction;
      }

      if (_.has(options, 'group')) {
        this.group = options.group;
      }

      if (_.has(options, 'onClickReturnValue')) {
        this.onClickReturnValue = options.onClickReturnValue;
      }

      if (_.has(options, 'enabled')) {
        this.enabled = options.enabled;
      }

      if (_.has(options, 'noHref')) {
        this.noHref = options.noHref;
      }

      this.action = options.action;
      Backbone.View.prototype.initialize.apply(this, arguments);
    },

    /**
     * Render the launcher as a simple button
     *
     * @return {*}
     */
    render: function render() {
      this.$el.empty();
      var labelKey = this.label || this.action.label;
      var $el = $(this.buttonTemplate({
        label: labelKey ? __(labelKey) : '',
        icon: this.icon,
        className: this.className ? this.className : '',
        iconClassName: this.iconClassName,
        link: this.link,
        action: this.action,
        attributes: this.attributes,
        enabled: this.enabled,
        tagName: this.tagName,
        noHref: this.noHref
      }));
      this.setElement($el);
      return this;
    },

    /**
     * Render the launcher as a list item
     *
     * @return {*}
     */
    renderAsListItem: function renderAsListItem() {
      this.$el.empty();
      var labelKey = this.label || this.action.label;
      var $el = $(this.listItemTemplate({
        label: labelKey ? __(labelKey) : '',
        className: 'AknDropdown-menuLink' + (this.className ? ' ' + this.className : ''),
        link: this.link,
        action: this.action,
        attributes: this.attributes,
        enabled: this.enabled,
        tagName: this.tagName
      }));
      this.setElement($el);
      return this;
    },

    /**
     * Handle launcher click
     *
     * @protected
     * @return {Boolean}
     */
    onClick: function onClick() {
      if (!this.enabled) {
        return this.onClickReturnValue;
      }

      this.trigger('click', this);

      if (this.runAction) {
        this.action.run();
        this.$el.closest('.btn-group').removeClass('open'); // skip launcher functionality, if action was executed

        return false;
      }

      return this.onClickReturnValue;
    },

    /**
     * Disable
     *
     * @return {*}
     */
    disable: function disable() {
      this.enabled = false;
      this.$el.addClass('disabled');
      return this;
    },

    /**
     * Enable
     *
     * @return {*}
     */
    enable: function enable() {
      this.enabled = true;
      this.$el.removeClass('disabled');
      return this;
    },

    /**
     * Return the action group
     *
     * @return {String}
     */
    getGroup: function getGroup() {
      return this.group;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 8744:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/abstract-action.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/error */ 57340), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! oro/datagrid/action-launcher */ 92993), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, routing, router, __, mediator, messenger, error, Dialog, ActionLauncher, requireContext) {
  'use strict';
  /**
   * Abstract action class. Subclasses should override execute method which is invoked when action is running.
   *
   * Triggers events:
   *  - "preExecute" before action is executed
   *  - "postExecute" after action is executed
   *
   * @export  oro/datagrid/abstract-action
   * @class   oro.datagrid.AbstractAction
   * @extends Backbone.View
   */

  return Backbone.View.extend({
    /** @property {Function} */
    launcherPrototype: ActionLauncher,

    /** @property {Object} */
    launcherOptions: undefined,

    /** @property {String} */
    name: null,

    /** @property {oro.datagrid.Grid} */
    datagrid: null,

    /** @property {string} */
    route: null,

    /** @property {Object} */
    route_parameters: null,

    /** @property {Boolean} */
    confirmation: false,

    /** @property {String} */
    frontend_type: null,

    /** @property {Object} */
    frontend_options: null,

    /** @property {string} */
    identifierFieldName: 'id',
    messages: {},
    dispatched: false,

    /** @property {Object} */
    defaultMessages: {
      confirm_title: __('pim_datagrid.action.default.confirmation.title'),
      confirm_content: __('pim_datagrid.action.default.confirmation.content'),
      confirm_ok: __('pim_common.yes'),
      success: __('pim_datagrid.action.default.success'),
      error: __('pim_datagrid.action.default.error'),
      empty_selection: __('pim_datagrid.action.default.no_items')
    },

    /**
     * Initialize view
     *
     * @param {Object} options
     * @param {Object} [options.launcherOptions] Options for new instance of launcher object
     */
    initialize: function initialize(options) {
      options = options || {};

      if (!options.datagrid) {
        throw new TypeError("'datagrid' is required");
      }

      this.datagrid = options.datagrid;

      _.each(this.messages, _.bind(function (message, key) {
        this.messages[key] = message;
      }, this));

      _.defaults(this.messages, this.defaultMessages);

      if (options.launcherOptions) {
        this.launcherOptions = _.extend({}, this.launcherOptions, options.launcherOptions);
      }

      this.launcherOptions = _.extend({
        action: this
      }, this.launcherOptions);
      Backbone.View.prototype.initialize.apply(this, arguments);
    },

    /**
     * Creates launcher
     *
     * @param {Object} options Launcher options
     * @return {oro.datagrid.ActionLauncher}
     */
    createLauncher: function createLauncher(options) {
      options = options || {};

      if (_.isUndefined(options.icon) && !_.isUndefined(this.icon)) {
        options.icon = this.icon;
      }

      if (_.isUndefined(options.className) && !_.isUndefined(this.className)) {
        options.className = this.className;
      }

      _.defaults(options, this.launcherOptions);

      return new this.launcherPrototype(options);
    },

    /**
     * Run action
     */
    run: function run() {
      var options = {
        doExecute: true
      };
      this.trigger('preExecute', this, options);

      if (options.doExecute) {
        this.execute();
        this.trigger('postExecute', this, options);
      }
    },

    /**
     * Execute action
     */
    execute: function execute() {
      var eventName = this.getEventName();
      mediator.once(eventName, this.executeConfiguredAction, this);

      this._confirmationExecutor(_.bind(function () {
        mediator.trigger(eventName, this);
      }, this));
    },
    getEventName: function getEventName() {
      return 'grid_action_execute:' + this.datagrid.name + ':' + this.name;
    },
    executeConfiguredAction: function executeConfiguredAction(action) {
      if (action.frontend_type == 'export') {
        this._handleExport(action);
      } else if (action.frontend_type == 'ajax') {
        this._handleAjax(action);
      } else if (action.frontend_type == 'redirect') {
        this._handleRedirect(action);
      } else {
        this._handleWidget(action);
      }
    },
    _confirmationExecutor: function _confirmationExecutor(callback) {
      if (this.confirmation) {
        this.getConfirmDialog(callback);
      } else {
        callback();
      }
    },
    _handleExport: function _handleExport(action) {
      if (action.dispatched) {
        return;
      }

      var ExportAction = requireContext('oro/' + action.frontend_type + '-widget');
      var exportAction = new ExportAction(action);
      exportAction.run();
    },
    _handleWidget: function _handleWidget(action) {
      if (action.dispatched) {
        return;
      }

      action.frontend_options.url = action.frontend_options.url || this.getLinkWithParameters();
      action.frontend_options.title = action.frontend_options.title || this.label;
      var WidgetType = requireContext('oro/' + action.frontend_type + '-widget');
      var widget = new WidgetType(action.frontend_options);
      widget.render();
    },
    _handleRedirect: function _handleRedirect(action) {
      if (action.dispatched) {
        return;
      }

      var url = action.getLinkWithParameters();
      router.redirect(url);
    },
    _handleAjax: function _handleAjax(action) {
      if (action.dispatched) {
        return;
      }

      action.datagrid.showLoading();
      $.ajax({
        url: action.getLink(),
        method: action.getMethod(),
        data: action.getActionParameters(),
        context: action,
        dataType: 'json',
        error: action._onAjaxError,
        success: action._onAjaxSuccess
      });
    },
    _onAjaxError: function _onAjaxError(jqXHR, textStatus, errorThrown) {
      error.dispatch(null, jqXHR);
      this.datagrid.hideLoading();
    },
    _onAjaxSuccess: function _onAjaxSuccess(data, textStatus, jqXHR) {
      if (data.count) {
        this.datagrid.collection.state.totalRecords -= data.count;
      }

      this.datagrid.hideLoading();
      this.datagrid.collection.fetch();
      var defaultMessage = data.successful ? this.messages.success : this.messages.error,
          message = __(data.message) || defaultMessage;

      if (message) {
        messenger.notify(data.successful ? 'success' : 'error', message);
      }
    },

    /**
     * Get action url
     *
     * @return {String}
     * @private
     */
    getLink: function getLink(parameters) {
      if (_.isUndefined(parameters)) {
        parameters = {};
      }

      return routing.generate(this.route, _.extend(this.route_parameters, parameters));
    },
    getMethod: function getMethod() {
      return 'GET';
    },

    /**
     * Get action url with parameters added.
     *
     * @returns {String}
     */
    getLinkWithParameters: function getLinkWithParameters() {
      return this.getLink(this.getActionParameters());
    },

    /**
     * Get action parameters
     *
     * @returns {Object}
     */
    getActionParameters: function getActionParameters() {
      return {};
    },

    /**
     * Get view for confirm modal
     *
     * @return {oro.Modal}
     */
    getConfirmDialog: function getConfirmDialog(callback) {
      return Dialog.confirm(this.messages.confirm_content, this.messages.confirm_title, callback, this.getEntityHint(true));
    },

    /**
     * Get the entity type from datagrid metadata
     *
     * @param {Boolean} plural Pluralize the entity code
     */
    getEntityHint: function getEntityHint(plural) {
      var datagrid = this.datagrid || {};
      var entityHint = datagrid.entityHint || 'item';

      if (plural) {
        return this.getEntityPlural(entityHint);
      }

      return entityHint;
    },

    /**
     * Get the entity hint separated by dashes
     */
    getEntityCode: function getEntityCode() {
      var entityHint = this.getEntityHint();
      return entityHint.toLowerCase().split(' ').join('_');
    },

    /**
     * Very basic pluralize method for entity types
     *
     * Example:
     *      Product -> products
     *      Family -> families
     *
     * @return {String}
     */
    getEntityPlural: function getEntityPlural(entityHint) {
      if (entityHint.endsWith('y')) {
        return entityHint.replace(/y$/, 'ies');
      }

      return "".concat(entityHint.replace('_', ' '), "s");
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 66623:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/ajax-action.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var _ = __webpack_require__(/*! underscore */ 13469);
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/model-action */ 98881)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (ModelAction) {
  'use strict';
  /**
   * Ajax action, triggers REST AJAX request
   *
   * @export  oro/datagrid/ajax-action
   * @class   oro.datagrid.AjaxAction
   * @extends oro.datagrid.ModelAction
   */

  return ModelAction.extend({
    /** @property {Boolean} */
    noHref: false,

    /**
     * Creates launcher
     *
     * @param {Object} options Launcher options
     * @return {oro.datagrid.ActionLauncher}
     */
    createLauncher: function createLauncher(options) {
      this.launcherOptions = _.extend({
        noHref: this.noHref
      }, this.launcherOptions);
      return ModelAction.prototype.createLauncher.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 44878:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/delete-action.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! oro/datagrid/model-action */ 98881), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/datagrid/delete-confirm */ 25567), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, messenger, __, Dialog, ModelAction, mediator, userContext, DeleteConfirm, FetcherRegistry) {
  'use strict';
  /**
   * Delete action with confirm dialog, triggers REST DELETE request
   *
   * @export  oro/datagrid/delete-action
   * @class   oro.datagrid.DeleteAction
   * @extends oro.datagrid.ModelAction
   */

  return ModelAction.extend({
    errorModal: undefined,
    confirmModal: undefined,

    /** @property {Boolean} */
    noHref: false,

    /**
     * Initialize view
     *
     * @param {Object} options
     * @param {Backbone.Model} options.model Optional parameter
     * @throws {TypeError} If model is undefined
     */
    initialize: function initialize(options) {
      options = options || {};
      this.gridName = options.datagrid.name;
      ModelAction.prototype.initialize.apply(this, arguments);
    },

    /**
     * Execute delete model
     */
    execute: function execute() {
      this.getConfirmDialog();
    },

    /**
     * Confirm delete item
     */
    doDelete: function doDelete() {
      this.model.id = true;
      this.model.destroy({
        url: this.getLink(),
        wait: true,
        error: function (element, response) {
          var contentType = response.getResponseHeader('content-type');
          var message = ''; //Need to check if it is a json because the backend can return an error

          if (contentType.indexOf('application/json') !== -1) {
            var decodedResponse = JSON.parse(response.responseText);

            if (undefined !== decodedResponse.message) {
              message = decodedResponse.message;
            }
          }

          this.showErrorFlashMessage(message);
        }.bind(this),
        success: function () {
          var messageText = __('pim_enrich.entity.' + this.getEntityCode() + '.flash.delete.success');

          messenger.notify('success', messageText);
          userContext.initialize();
          mediator.trigger('grid_action_execute:product-grid:delete');
          mediator.trigger('datagrid:doRefresh:' + this.gridName);

          if (this.gridName === 'association-type-grid') {
            FetcherRegistry.getFetcher('association-type').clear();
          }
        }.bind(this)
      });
    },

    /**
     * Get view for confirm modal
     */
    getConfirmDialog: function getConfirmDialog() {
      this.confirmModal = DeleteConfirm.getConfirmDialog(this.getEntityCode(), this.doDelete.bind(this), this.getEntityHint(true));
      return this.confirmModal;
    },

    /**
     * Get view for error modal
     *
     * @return {oro.Modal}
     */
    showErrorFlashMessage: function showErrorFlashMessage(response) {
      var message = '';

      if (typeof response === 'string' && response !== '') {
        message = response;
      } else {
        try {
          message = JSON.parse(response).message;
        } catch (e) {
          message = __('pim_enrich.entity.' + this.getEntityHint() + '.flash.delete.fail');
        }
      }

      messenger.notify('error', '' === message ? __('error.removing.' + this.getEntityHint()) : message);
    },

    /**
     * Creates launcher
     *
     * @param {Object} options Launcher options
     * @return {oro.datagrid.ActionLauncher}
     */
    createLauncher: function createLauncher(options) {
      this.launcherOptions = _.extend({
        noHref: this.noHref
      }, this.launcherOptions);
      return ModelAction.prototype.createLauncher.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 84978:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/mass-action.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! oro/datagrid/abstract-action */ 8744)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, messenger, __, Dialog, AbstractAction) {
  'use strict';
  /**
   * Basic mass action class.
   *
   * @export  oro/datagrid/mass-action
   * @class   oro.datagrid.MassAction
   * @extends oro.datagrid.AbstractAction
   */

  return AbstractAction.extend({
    /** @property {Object} */
    defaultMessages: {
      confirm_title: __('pim_datagrid.mass_action.default.confirmation.title'),
      confirm_content: __('pim_datagrid.mass_action.default.confirmation.content'),
      confirm_ok: __('pim_common.yes'),
      success: __('pim_datagrid.mass_action.default.success'),
      error: __('pim_datagrid.mass_action.default.error'),
      empty_selection: __('pim_datagrid.mass_action.default.no_items')
    },
    initialize: function initialize(options) {
      AbstractAction.prototype.initialize.apply(this, arguments);
      this.route_parameters = _.extend(this.route_parameters, {
        gridName: this.datagrid.name,
        actionName: this.name
      });

      _.defaults(this.messages, this.defaultMessages);
    },

    /**
     * Ask a confirmation and execute mass action.
     */
    execute: function execute() {
      var selectionState = this.datagrid.getSelectionState();

      if (_.isEmpty(selectionState.selectedModels) && selectionState.inset) {
        messenger.notify('warning', this.messages.empty_selection);
      } else {
        AbstractAction.prototype.execute.call(this);
      }
    },

    /**
     * Get action parameters
     *
     * @returns {Object}
     * @private
     */
    getActionParameters: function getActionParameters() {
      var selectionState = this.datagrid.getSelectionState();
      var collection = this.datagrid.collection;

      var idValues = _.map(selectionState.selectedModels, function (model) {
        return model.get(this.identifierFieldName);
      }, this);

      var params = {
        inset: selectionState.inset ? 1 : 0,
        values: idValues.join(',')
      };

      if (selectionState.inset) {
        params.itemsCount = idValues.length;
      } else {
        params.itemsCount = collection.state.totalRecords - idValues.length;
      }

      params = this.getExtraParameters(params, collection.state);
      params = collection.processFiltersParams(params, null, 'filters');
      var locale = this.getLocaleFromUrl('dataLocale');

      if ('family-grid' === this.datagrid.name) {
        locale = this.getLocaleFromUrl('localeCode');
      }

      if (locale) {
        params.dataLocale = locale;
      }

      return params;
    },

    /**
     * Get the locale from the datagrid collection url with a given key
     * @param  {String} localeKey For example dataLocale or localeCode
     * @return {String} locale.   The returned locale e.g. en_US
     */
    getLocaleFromUrl: function getLocaleFromUrl(localeKey) {
      var url = this.datagrid.collection.url.split('?')[1];
      var urlParams = this.datagrid.collection.decodeStateData(url);
      var datagridParams = urlParams[this.datagrid.name] || {};
      return urlParams[localeKey] || datagridParams[localeKey];
    },

    /**
     * Get extra parameters (sorters and custom parameters)
     * @param {array}  params
     * @param {object} state
     *
     * @return {object}
     */
    getExtraParameters: function getExtraParameters(params, state) {
      params[this.datagrid.name] = {};

      if (state !== undefined) {
        params[this.datagrid.name]._parameters = this.getActiveSorters(state);
        params[this.datagrid.name]._sort_by = this.getActiveColumns(state);
      }

      return params;
    },

    /**
     * Get active sorters
     * @param {object} state
     *
     * @return {object}
     */
    getActiveSorters: function getActiveSorters(state) {
      var result = {};

      if (state.parameters !== undefined && state.parameters.view !== undefined) {
        result.view = {
          columns: state.parameters.view.columns,
          id: state.parameters.view.id
        };
      }

      return result;
    },

    /**
     * Get active columns
     * @param {object} state
     *
     * @return {object}
     */
    getActiveColumns: function getActiveColumns(state) {
      var result = {};

      if (state.sorters !== undefined) {
        for (var sorterKey in state.sorters) {
          result[sorterKey] = state.sorters[sorterKey] === 1 ? 'DESC' : 'ASC';
        }
      }

      return result;
    },
    _onAjaxSuccess: function _onAjaxSuccess(data, textStatus, jqXHR) {
      this.datagrid.resetSelectionState();

      AbstractAction.prototype._onAjaxSuccess.apply(this, arguments);
    },

    /**
     * Get view for confirm modal
     *
     * @return {oro.Modal}
     */
    getConfirmDialog: function getConfirmDialog(callback) {
      return Dialog.confirm(this.messages.confirm_content, this.messages.confirm_title, callback, this.getEntityHint(true), "".concat(this.className, " ok"), this.messages.confirm_ok, this.type);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 92448:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/mass-delete-action.js ***!
  \*****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"jobInstanceCode":"delete_products_and_product_models","route":"pim_enrich_mass_edit_rest_launch","backRoute":"pim_enrich_product_index","launchErrorLabel":"pim_enrich.mass_edit.product.step.launch_error.label","launchedLabel":"pim_enrich.mass_edit.product.step.launched.label","confirmLabel":"pim_enrich.entity.product_model.module.delete.confirm_for_products_and_product_models","buttonText":"pim_common.delete"} ; /* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/datagrid/mass-action */ 84978), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/dialog */ 42905)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Routing, MassAction, router, messenger, LoadingMask, Dialog) {
  'use strict';
  /**
   * Mass delete action
   *
   * @export  oro/datagrid/mass-delete-action
   * @class   oro.datagrid.MassDeleteAction
   *
   * @extends oro.datagrid.MassAction
   */

  return MassAction.extend({
    /** @type oro.Modal */
    errorModal: undefined,

    /** @type oro.Modal */
    confirmModal: undefined,

    /** @type {Object} */
    config: undefined,
    initialize: function initialize(options) {
      this.config = __moduleConfig;
      MassAction.prototype.initialize.apply(this, arguments);
    },

    /**
     * Displays a confirm dialog and mass delete if action is confirmed.
     */
    execute: function execute() {
      var _this = this;

      this.getData().then(function (data) {
        _this.getConfirmDialog(data);
      });
    },

    /**
     * Converts grid data into pqb filters and gathers job instance code, actions and items count.
     *
     * @return {Promise}
     */
    getData: function getData() {
      var _this2 = this;

      var actionParameters = this.getActionParameters();
      actionParameters.actionName = this.route_parameters['actionName'];
      actionParameters.gridName = this.route_parameters['gridName'];
      var query = "?".concat($.param(actionParameters));
      return $.ajax({
        url: Routing.generate('pim_enrich_mass_edit_rest_get_filter') + query,
        method: 'POST'
      }).then(function (response) {
        return {
          filters: response.filters,
          jobInstanceCode: _this2.config.jobInstanceCode,
          actions: [_this2.route_parameters['actionName']],
          itemsCount: response.itemsCount
        };
      });
    },

    /**
     * Get view for confirm modal.
     *
     * @param {Object} data
     *
     * @return {oro.Modal}
     */
    getConfirmDialog: function getConfirmDialog(data) {
      this.confirmModal = Dialog.confirmDelete(__(this.config.confirmLabel), __('pim_common.confirm_deletion'), this.doMassDelete.bind(this, data), this.getEntityHint(true), this.config.buttonText);
      return this.confirmModal;
    },

    /**
     * Sends request to mass delete items.
     *
     * @param {Object} data
     */
    doMassDelete: function doMassDelete(data) {
      var _this3 = this;

      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo($('.hash-loading-mask')).show();
      $.ajax({
        method: 'POST',
        contentType: 'application/json',
        url: Routing.generate(this.config.route),
        data: JSON.stringify(data)
      }).then(function () {
        router.redirectToRoute(_this3.config.backRoute);

        var translatedAction = __('pim_datagrid.mass_action.mass_delete');

        messenger.notify('success', __(_this3.config.launchedLabel, {
          operation: translatedAction
        }));
      }).fail(function () {
        messenger.notify('error', __(_this3.config.launchErrorLabel));
      }).always(function () {
        loadingMask.hide().$el.remove();
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 98881:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/model-action.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datagrid/abstract-action */ 8744)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, AbstractAction) {
  'use strict';
  /**
   * Basic model action class.
   *
   * @export  oro/datagrid/model-action
   * @class   oro.datagrid.ModelAction
   * @extends oro.datagrid.AbstractAction
   */

  return AbstractAction.extend({
    /** @property {Backbone.Model} */
    model: null,

    /** @property {String} */
    link: undefined,

    /** @property {Boolean} */
    backUrl: false,

    /** @property {String} */
    backUrlParameter: 'back',

    /**
     * Initialize view
     *
     * @param {Object} options
     * @param {Backbone.Model} options.model Optional parameter
     * @throws {TypeError} If model is undefined
     */
    initialize: function initialize(options) {
      options = options || {};

      if (!options.model) {
        throw new TypeError("'model' is required");
      }

      this.model = options.model;

      if (_.has(options, 'backUrl')) {
        this.backUrl = options.backUrl;
      }

      if (_.has(options, 'backUrlParameter')) {
        this.backUrlParameter = options.backUrlParameter;
      }

      AbstractAction.prototype.initialize.apply(this, arguments);
    },

    /**
     * Get action link
     *
     * @return {String}
     * @throws {TypeError} If route is undefined
     */
    getLink: function getLink() {
      if (!this.link) {
        throw new TypeError("'link' is required");
      }

      var result;

      if (this.model.has(this.link)) {
        result = this.model.get(this.link);
      } else {
        result = this.link;
      }

      if (this.backUrl) {
        var backUrl = _.isBoolean(this.backUrl) ? window.location.href : this.backUrl;
        backUrl = encodeURIComponent(backUrl);
        result = this.addUrlParameter(result, this.backUrlParameter, backUrl);
      }

      return result;
    },

    /**
     * Add parameter to URL
     *
     * @param {String} url
     * @param {String} parameterName
     * @param {String} parameterValue
     * @return {String}
     * @protected
     */
    addUrlParameter: function addUrlParameter(url, parameterName, parameterValue) {
      var urlhash,
          sourceUrl,
          replaceDuplicates = true;

      if (url.indexOf('#') > 0) {
        var cl = url.indexOf('#');
        urlhash = url.substring(url.indexOf('#'), url.length);
      } else {
        urlhash = '';
        cl = url.length;
      }

      sourceUrl = url.substring(0, cl);
      var urlParts = sourceUrl.split('?');
      var newQueryString = '';

      if (urlParts.length > 1) {
        var parameters = urlParts[1].split('&');

        for (var i = 0; i < parameters.length; i++) {
          var parameterParts = parameters[i].split('=');

          if (!(replaceDuplicates && parameterParts[0] == parameterName)) {
            if (newQueryString == '') newQueryString = '?';else newQueryString += '&';
            newQueryString += parameterParts[0] + '=' + (parameterParts[1] ? parameterParts[1] : '');
          }
        }
      }

      if (newQueryString == '') {
        newQueryString = '?';
      }

      if (newQueryString !== '' && newQueryString != '?') {
        newQueryString += '&';
      }

      newQueryString += parameterName + '=' + (parameterValue ? parameterValue : '');
      return urlParts[0] + newQueryString + urlhash;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 42498:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/navigate-action.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/datagrid/model-action */ 98881), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, mediator, ModelAction, router) {
  'use strict';
  /**
   * Navigate action. Changes window location to url, from getLink method
   *
   * @export  oro/datagrid/navigate-action
   * @class   oro.datagrid.NavigateAction
   * @extends oro.datagrid.ModelAction
   */

  return ModelAction.extend({
    /**
     * If `true` then created launcher will be complete clickable link,
     * If `false` redirection will be delegated to execute method.
     *
     * @property {Boolean}
     */
    useDirectLauncherLink: true,

    /**
     * Initialize launcher options with url
     *
     * @param {Object} options
     * @param {Boolean} options.useDirectLauncherLink
     */
    initialize: function initialize(options) {
      ModelAction.prototype.initialize.apply(this, arguments);

      if (options.useDirectLauncherLink) {
        this.useDirectLauncherLink = options.useDirectLauncherLink;
      }

      this.on('preExecute', _.bind(this._preExecuteSubscriber, this));

      if (this.useDirectLauncherLink) {
        this.launcherOptions = _.extend({
          link: "#".concat(this.getLink()),
          runAction: false
        }, this.launcherOptions);
      }
    },

    /**
     * Execute redirect
     */
    execute: function execute() {
      router.redirect(this.getLink());
    },

    /**
     * Trigger global event
     *
     * @private
     */
    _preExecuteSubscriber: function _preExecuteSubscriber(action, options) {
      mediator.trigger('grid_action:navigateAction:preExecute', action, options);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 57109:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/refresh-collection-action.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/abstract-action */ 8744)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (AbstractAction) {
  'use strict';
  /**
   * Refreshes collection
   *
   * @export  oro/datagrid/refresh-collection-action
   * @class   oro.datagrid.RefreshCollectionAction
   * @extends oro.datagrid.AbstractAction
   */

  return AbstractAction.extend({
    /** @property oro.PageableCollection */
    collection: undefined,

    /**
     * Initialize action
     *
     * @param {Object} options
     * @param {oro.PageableCollection} options.collection Collection
     * @throws {TypeError} If collection is undefined
     */
    initialize: function initialize(options) {
      options = options || {};

      if (!options.datagrid) {
        throw new TypeError("'datagrid' is required");
      }

      this.collection = options.datagrid.collection;
      AbstractAction.prototype.initialize.apply(this, arguments);
    },

    /**
     * Execute refresh collection
     */
    execute: function execute() {
      this.datagrid.setAdditionalParameter('refresh', true);
      this.collection.fetch();
      this.datagrid.removeAdditionalParameter('refresh');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 82811:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/reset-collection-action.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datagrid/abstract-action */ 8744), __webpack_require__(/*! pim/datagrid/state */ 30138)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, AbstractAction, DatagridState) {
  'use strict';
  /**
   * Resets collection to initial state
   *
   * @export  oro/datagrid/reset-collection-action
   * @class   oro.datagrid.ResetCollectionAction
   * @extends oro.datagrid.AbstractAction
   */

  return AbstractAction.extend({
    /** @property oro.PageableCollection */
    collection: undefined,

    /**
     * Initialize action
     *
     * @param {Object} options
     * @param {oro.PageableCollection} options.collection Collection
     * @throws {TypeError} If collection is undefined
     */
    initialize: function initialize(options) {
      options = options || {};

      if (!options.datagrid) {
        throw new TypeError("'datagrid' is required");
      }

      this.collection = options.datagrid.collection;
      this.datagrid = options.datagrid;
      AbstractAction.prototype.initialize.apply(this, arguments);
    },

    /**
     * Execute reset collection
     */
    execute: function execute() {
      var initialState = this.collection.initialState;
      var datagridState = DatagridState.get(this.datagrid.name, ['initialViewState']);
      var view = initialState.parameters.view;

      if (_.has(initialState, 'filters')) {
        initialState.filters = _.omit(initialState.filters, 'scope');
      }

      if (view && view.id !== '0' && datagridState.initialViewState.length !== 0) {
        initialState = this.collection.decodeStateData(datagridState.initialViewState);
      }

      this.collection.updateState(initialState);
      this.collection.fetch();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 40043:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/revoke-action.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datagrid/delete-action */ 44878), __webpack_require__(/*! pim/dialog */ 42905)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, DeleteAction, Dialog) {
  'use strict';
  /**
   * Revoke action with confirm dialog, triggers REST DELETE request
   *
   * @export  oro/datagrid/revoke-action
   * @class   oro.datagrid.RevokeAction
   * @extends oro.datagrid.DeleteAction
   */

  return DeleteAction.extend({
    getConfirmDialog: function getConfirmDialog() {
      var entityCode = this.getEntityCode();
      this.confirmModal = Dialog.confirm(__("pim_enrich.entity.".concat(entityCode, ".module.revoke.confirm")), __('pim_common.confirm_revocation'), this.doDelete.bind(this), this.getEntityHint(true));
      return this.confirmModal;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 15398:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/sequential-edit-action.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/datagrid/mass-action */ 84978), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/provider/sequential-edit-provider */ 83436), __webpack_require__(/*! oro/loading-mask */ 13284)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Routing, MassAction, router, messenger, sequentialEditProvider, LoadingMask) {
  'use strict';
  /**
   * Sequential edit action
   *
   * @export  oro/datagrid/sequential-edit-action
   * @class   oro.datagrid.SequentialEditAction
   * @extends oro.datagrid.MassAction
   */

  return MassAction.extend({
    /**
     * Execute sequential edit
     */
    execute: function execute() {
      var params = Object.assign({}, this.getActionParameters(), {
        gridName: this.datagrid.name,
        actionName: 'sequential_edit'
      });
      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo($('.hash-loading-mask')).show();
      return $.ajax({
        url: Routing.generate('pim_enrich_sequential_edit_rest_get_ids'),
        method: 'POST',
        data: params
      }).then(function (response) {
        sequentialEditProvider.set(response.entities);

        if (1000 < response.total) {
          messenger.notify('warning', __('pim_enrich.entity.product.module.sequential_edit.item_limit', {
            count: response.total
          }));
        }

        if (0 === response.total) {
          messenger.notify('error', __('pim_enrich.entity.product.module.sequential_edit.empty'));
          return;
        }

        var entity = _.first(response.entities);

        if (entity.type === 'product') {
          router.redirectToRoute('pim_enrich_product_edit', {
            uuid: entity.id
          });
        } else {
          router.redirectToRoute('pim_enrich_' + entity.type + '_edit', {
            id: entity.id
          });
        }
      }).always(function () {
        loadingMask.hide().$el.remove();
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 89360:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/action/tab-redirect-action.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/navigate-action */ 42498)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (NavigateAction) {
  'use strict';
  /**
   * Redirects to a specific tab
   *
   * @author  Antoine Guigan <antoine@akeneo.com>
   * @class   Pim.Datagrid.Action.TabRedirectAction
   * @export  pim/datagrid/tab-redirect-action
   * @extends oro.datagrid.AbstractAction
   */

  var parent = NavigateAction.prototype,
      TabRedirectAction = NavigateAction.extend({
    useDirectLauncherLink: false,
    run: function run() {
      sessionStorage.redirectTab = '#' + this.tab;
      parent.run.call(this);
    }
  });
  return TabRedirectAction;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 66207:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/actions-panel.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */

/**
 * Panel with action buttons
 *
 * @export  oro/datagrid/actions-panel
 * @class   oro.datagrid.ActionsPanel
 * @extends BaseForm
 */

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/datagrid/actions-group */ 23730), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pimdatagrid/datagrid/quickexport/component/QuickExportConfigurator */ 28247), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, Backbone, groupTemplate, BaseForm, mediator, _ref, UserContext) {
  var QuickExportConfigurator = _ref.QuickExportConfigurator;
  var ActionsPanel = BaseForm.extend({
    appendToGrid: false,

    /** @property {Array} */
    actionsGroups: [],

    /** @property {Array.<oro.datagrid.AbstractAction>} */
    actions: [],

    /** @property {Array.<oro.datagrid.ActionLauncher>} */
    launchers: [],
    className: 'AknButtonList mass-actions-panel',

    /** @property {Function} */
    groupTemplate: _.template(groupTemplate),

    /**
     * Initialize view
     *
     * @param {Object} options
     * @param {Array} [options.actions] List of actions
     */
    initialize: function initialize(options) {
      this.appendToGrid = options.appendToGrid;
      this.gridElement = options.gridElement;
      mediator.once('grid_load:start', this.setupActions.bind(this));
      mediator.on('grid_load:complete', this.setupActions.bind(this));
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Get the action options from the datagrid
     */
    setupActions: function setupActions(collection, datagrid) {
      this.actionsGroups = datagrid.massActionsGroups;
      this.setActions(datagrid.massActions, datagrid);
      this.renderActions();
    },

    /**
     * Renders panel
     *
     * @return {*}
     */
    renderActions: function renderActions() {
      var _this = this;

      this.$el.empty();

      var simpleLaunchers = _.filter(this.launchers, function (launcher) {
        return undefined === launcher.getGroup();
      });

      var groupedLaunchers = _.filter(this.launchers, function (launcher) {
        return undefined !== launcher.getGroup();
      });

      if (simpleLaunchers.length) {
        _.each(simpleLaunchers, function (launcher) {
          _this.$el.append(launcher.render().$el);
        });
      }

      if (groupedLaunchers.length) {
        this.renderGroupedLaunchers(groupedLaunchers);
      }

      if (this.appendToGrid) {
        this.gridElement.prepend(this.$el);
      }

      return this;
    },

    /**
     * Render launchers belonging to actions groups
     *
     * @param {Array} launchers
     *
     * @return {*}
     */
    renderGroupedLaunchers: function renderGroupedLaunchers(launchers) {
      var groupedLaunchers = _.groupBy(launchers, function (launcher) {
        return launcher.getGroup();
      });

      var activeGroups = _.pick(this.actionsGroups, _.keys(groupedLaunchers));

      _.each(activeGroups, function (group, name) {
        this.$el.append(this.groupTemplate({
          __: __,
          classname: this.getGroupClassname(name),
          group: group
        }));
      }.bind(this));

      _.each(groupedLaunchers, function (groupLaunchers, groupName) {
        var _groupLaunchers$,
            _this2 = this;

        var button = this.el.querySelector(".".concat(this.getGroupClassname(groupName)));
        var isProductGrid = 'product-grid' === ((_groupLaunchers$ = groupLaunchers[0]) === null || _groupLaunchers$ === void 0 ? void 0 : _groupLaunchers$.action.datagrid.name) || false;
        var props = {
          showWithLabelsSelect: isProductGrid,
          showWithMediaSelect: isProductGrid,
          showWithUuidSelect: isProductGrid,
          onActionLaunch: function onActionLaunch(formValue) {
            var actionName = "quick_export".concat('grid-context' === formValue['context'] ? "_grid_context" : '', "_").concat(formValue['type']);
            var launcher = groupLaunchers.find(function (launcher) {
              return launcher.action.route_parameters.actionName === actionName;
            });

            if (undefined === launcher) {
              throw new Error("Action of type \"".concat(actionName, "\" not found."));
            }

            launcher.action.route_parameters = _objectSpread(_objectSpread({}, launcher.action.route_parameters), {}, {
              _withLabels: isProductGrid && 'with-labels' === formValue['with-labels'] ? 1 : 0,
              _withMedia: isProductGrid && 'true' === formValue['with_media'] ? 1 : 0,
              _withUuid: isProductGrid && 'true' === formValue['with_uuid'] ? 1 : 0,
              _fileLocale: UserContext.get('catalogLocale')
            });
            launcher.action.run();
          },
          getProductCount: function getProductCount() {
            return _this2.getParent().count;
          }
        };
        this.renderReact(QuickExportConfigurator, props, button);
      }.bind(this));

      return this;
    },

    /**
     * Build the class name for the specified action group
     *
     * @param {String} groupName
     *
     * @return {String}
     */
    getGroupClassname: function getGroupClassname(groupName) {
      return groupName.replace('_', '-') + '-actions-group';
    },

    /**
     * Set actions
     *
     * @param {Array.<oro.datagrid.AbstractAction>} actions
     */
    setActions: function setActions(actions, datagrid) {
      this.actions = [];
      this.launchers = [];

      _.each(actions, function (action) {
        this.addAction(action, datagrid);
      }, this);
    },

    /**
     * Adds action to toolbar
     *
     * @param {oro.datagrid.AbstractAction} action
     */
    addAction: function addAction(Action, datagrid) {
      var actionModule = new Action({
        datagrid: datagrid
      });
      this.actions.push(actionModule);
      this.launchers.push(actionModule.createLauncher());
    },

    /**
     * Disable
     *
     * @return {*}
     */
    disable: function disable() {
      _.each(this.launchers, function (launcher) {
        launcher.disable();
      });

      return this;
    },

    /**
     * Enable
     *
     * @return {*}
     */
    enable: function enable() {
      _.each(this.launchers, function (launcher) {
        launcher.enable();
      });

      return this;
    }
  });

  ActionsPanel.init = function (gridContainer, gridName) {
    return new ActionsPanel({
      appendToGrid: true,
      gridElement: $(gridContainer).find('.grid-container')
    });
  };

  return ActionsPanel;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 87265:
/*!********************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/body.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! oro/datagrid/row */ 72803)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backgrid, Row) {
  'use strict';
  /**
   * Grid body widget
   *
   * Triggers events:
   *  - "rowClicked" when row of body is clicked
   *
   * @export  oro/datagrid/body
   * @class   oro.datagrid.Body
   * @extends Backgrid.Body
   */

  return Backgrid.Body.extend({
    /** @property */
    row: Row,

    /** @property {String} */
    rowClassName: undefined,

    /**
     * @inheritDoc
     */
    initialize: function initialize(options) {
      options = options || {};

      if (!options.row) {
        options.row = this.row;
      }

      if (options.rowClassName) {
        this.rowClassName = options.rowClassName;
      }

      Backgrid.Body.prototype.initialize.apply(this, arguments);

      this._listenToRowsEvents(this.rows);
    },

    /**
     * @inheritDoc
     */
    refresh: function refresh() {
      Backgrid.Body.prototype.refresh.apply(this, arguments);

      this._listenToRowsEvents(this.rows);

      return this;
    },

    /**
     * @inheritDoc
     */
    insertRow: function insertRow(model, collection, options) {
      Backgrid.Body.prototype.insertRow.apply(this, arguments);
      var index = collection.indexOf(model);

      if (index < this.rows.length) {
        this._listenToOneRowEvents(this.rows[index]);
      }
    },

    /**
     * Listen to events of rows list
     *
     * @param {Array} rows
     * @private
     */
    _listenToRowsEvents: function _listenToRowsEvents(rows) {
      _.each(rows, function (row) {
        this._listenToOneRowEvents(row);
      }, this);
    },

    /**
     * Listen to events of row
     *
     * @param {Backgrid.Row} row
     * @private
     */
    _listenToOneRowEvents: function _listenToOneRowEvents(row) {
      this.listenTo(row, 'clicked', function (row, e) {
        this.trigger('rowClicked', row, e);
      });
    },

    /**
     * @inheritDoc
     */
    render: function render() {
      Backgrid.Body.prototype.render.apply(this, arguments);

      if (this.rowClassName) {
        this.$('> *').addClass(this.rowClassName);
      }

      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 41765:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/action-cell.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backgrid) {
  'use strict';
  /**
   * Cell for grid actions
   *
   * @export  oro/datagrid/action-cell
   * @class   oro.datagrid.ActionCell
   * @extends Backgrid.Cell
   */

  return Backgrid.Cell.extend({
    /** @property */
    className: 'AknGrid-bodyCell AknGrid-bodyCell--actions action-cell',

    /** @property {Array} */
    actions: undefined,

    /** @property {Array} */
    launchers: undefined,

    /**
     * Initilize cell actions and launchers
     */
    initialize: function initialize() {
      Backgrid.Cell.prototype.initialize.apply(this, arguments);
      this.actions = this.createActions();
      this.launchers = this.createLaunchers();
    },

    /**
     * Creates actions
     *
     * @return {Array}
     */
    createActions: function createActions() {
      var result = [];
      var actions = this.column.get('actions');
      var actionConfiguration = this.model.get('action_configuration');

      _.each(actions, function (action, name) {
        // filter available actions for current row
        if (_.isUndefined(actionConfiguration) || _.isUndefined(actionConfiguration[name]) || actionConfiguration[name]) {
          if (action.prototype.hidden !== true) {
            result.push(this.createAction(action));
          }
        }
      }, this);

      return result;
    },

    /**
     * Creates action
     *
     * @param {Function} ActionPrototype
     * @protected
     */
    createAction: function createAction(ActionPrototype) {
      return new ActionPrototype({
        model: this.model,
        datagrid: this.column.get('datagrid')
      });
    },

    /**
     * Creates actions launchers
     *
     * @protected
     */
    createLaunchers: function createLaunchers() {
      return _.map(this.actions, function (action) {
        var launcherClass = action.launcherOptions.className;

        if (_.isUndefined(launcherClass) || '' === launcherClass || 'no-hash' === launcherClass) {
          launcherClass = 'AknIconButton AknIconButton--small AknIconButton--grey';
        }

        return action.createLauncher({
          className: launcherClass + ' AknButtonList-item'
        });
      });
    },

    /**
     * Render cell with actions
     */
    render: function render() {
      this.$el.empty();
      var iconsList = $('<div>').addClass('AknButtonList AknButtonList--right AknButtonList--expanded');

      if (!_.isEmpty(this.launchers)) {
        _.each(this.launchers, function (launcher) {
          iconsList.append(launcher.render().$el);
        }, this);
      }

      this.$el.append(iconsList);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 42005:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/boolean-cell.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! pim/security-context */ 34770)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backgrid, SecurityContext) {
  'use strict';
  /**
   * Boolean column cell. Added missing behaviour.
   *
   * @export  oro/datagrid/boolean-cell
   * @class   oro.datagrid.BooleanCell
   * @extends Backgrid.BooleanCell
   */

  return Backgrid.BooleanCell.extend({
    /** @property {Boolean} */
    listenRowClick: true,

    /**
     * @inheritDoc
     */
    render: function render() {
      Backgrid.BooleanCell.prototype.render.apply(this, arguments);
      this.$input = this.$el.find('input');

      if (!this.isEditable()) {
        this.$input.prop('disabled', true);
      }

      this.updateStyle(this.$el.find('input[type=checkbox]').prop('checked'));
      return this;
    },
    isEditable: function isEditable() {
      var _this$column$get;

      var isEditable = this.column.get('editable');
      var isEditableAcl = (_this$column$get = this.column.get('extraOptions')) === null || _this$column$get === void 0 ? void 0 : _this$column$get.editable_acl;

      if (undefined !== isEditableAcl) {
        return isEditable && SecurityContext.isGranted(isEditableAcl);
      }

      return isEditable;
    },

    /**
     * @inheritDoc
     */
    enterEditMode: function enterEditMode(e) {
      if (!this.isEditable()) {
        return;
      }

      Backgrid.BooleanCell.prototype.enterEditMode.apply(this, arguments);
      var $editor = this.currentEditor.$el;
      $editor.prop('checked', !$editor.prop('checked')).change();
    },

    /**
     * @param {Backgrid.Row} row
     * @param {Event} e
     */
    onRowClicked: function onRowClicked(row, e) {
      if (!this.isEditable()) {
        return;
      }

      if (!this.$input.is(e.target) && !this.$el.is(e.target) && !this.$el.has(e.target).length) {
        this.enterEditMode(e);
      }

      this.updateStyle($(e.target).prop('checked'));
    },

    /**
     * Updates the current element to highlight it
     */
    updateStyle: function updateStyle(checked) {
      if (checked) {
        this.$el.addClass('AknGrid-bodyCell--checked');
      } else {
        this.$el.removeClass('AknGrid-bodyCell--checked');
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 51434:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/boolean-label-cell.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell, __) {
  'use strict';
  /**
   * Boolean column cell
   *
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    /**
     * Render the boolean.
     */
    render: function render() {
      var value = this.formatter.fromRaw(this.model.get(this.column.get('name')));

      if (null === value || '' === value) {
        return this;
      }

      var status = true === value || 'true' === value || '1' === value ? 'success' : 'important';
      var label = true === value || 'true' === value || '1' === value ? __('pim_common.yes') : __('pim_common.no');
      this.$el.empty().html('<span class="AknBadge AknBadge--' + status + '">' + __(label) + '</span>');
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 88653:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/boolean-status-cell.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell, __) {
  'use strict';
  /**
   * Boolean column cell
   *
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    render: function render() {
      var columnValue = this.model.get(this.column.get('name'));
      var value = this.formatter.fromRaw(columnValue);
      var label = true === value || 'true' === value || '1' === value ? '<strong>' + __('Yes') + '</strong>' : __('No');
      this.$el.empty().html(label);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 37004:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/complete-variant-product-cell.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Displays the number of complete variant product model for a product model, eg: 2 / 10.
 *
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell, __) {
  'use strict';
  /**
   * Complete variant product column cell
   *
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    /**
     * Render the completeness.
     */
    render: function render() {
      if ('product_model' !== this.model.get('document_type')) {
        this.$el.empty().html(__('pim_common.not_available'));
        return this;
      }

      var data = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      var completeness = '-';

      if (null !== data && '' !== data) {
        var ratio = data.complete / data.total;
        var cssClass = '';

        if (1 === ratio) {
          cssClass += 'success';
        } else if (0 === ratio || 0 === data.total) {
          cssClass += 'important';
        } else {
          cssClass += 'warning';
        }

        completeness = '<span class="AknBadge AknBadge--' + cssClass + '">' + data.complete + ' / ' + data.total + '</span>';
      }

      this.$el.empty().html(completeness);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62775:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/completeness-cell.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell, __) {
  'use strict';
  /**
   * Completeness column cell
   *
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    /**
     * Render the completeness.
     */
    render: function render() {
      if ('product_model' === this.model.get('document_type')) {
        this.$el.empty().html(__('pim_common.not_available'));
        return this;
      }

      var ratio = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      var completeness = '-';

      if (null !== ratio && '' !== ratio) {
        var cssClass = '';

        if (100 === ratio) {
          cssClass += 'success';
        } else if (0 === ratio) {
          cssClass += 'important';
        } else {
          cssClass += 'warning';
        }

        completeness = '<span class="AknBadge AknBadge--' + cssClass + '">' + ratio + '%</span>';
      }

      this.$el.empty().html(completeness);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 60431:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/credentials-cell.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/datagrid/cell/credentials-cell */ 14543)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell, _, __, CredentialsTemplate) {
  'use strict';
  /**
   * Credentials column cell
   *
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    className: 'AknGrid-bodyCell AknGrid-bodyCell--credentials',
    template: _.template(CredentialsTemplate),

    /**
     * Render the API credentials.
     */
    render: function render() {
      var value = this.formatter.fromRaw(this.model.get(this.column.get('name')));

      var credentials = _.object(['public_id', 'secret'], value.split('|'));

      if (null === credentials || '' === credentials) {
        return this;
      }

      this.$el.empty().html(this.template({
        clientIdLabel: __('pim_datagrid.cells.credientials.client_id'),
        secretLabel: __('pim_datagrid.cells.credientials.secret'),
        publicId: credentials.public_id,
        secret: credentials.secret
      }));
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 663:
/*!******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/date-cell.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/datetime-cell */ 22538)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DatagridDateTimeCell) {
  'use strict';
  /**
   * Date column cell
   *
   * @export  oro/datagrid/date-cell
   * @class   oro.datagrid.DateCell
   * @extends oro.datagrid.DateTimeCell
   */

  return DatagridDateTimeCell.extend({
    type: 'date'
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 22538:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/datetime-cell.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell) {
  'use strict';
  /**
   * Datetime column cell
   *
   * @export  oro/datagrid/datetime-cell
   * @class   oro.datagrid.DateTimeCell
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    type: 'dateTime'
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 59248:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/enabled-cell.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var _ = __webpack_require__(/*! underscore */ 13469);
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/datagrid/cell/enabled-cell */ 12493)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell, __, template) {
  'use strict';
  /**
   * Enabled column cell
   *
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if ('product_model' === this.model.get('document_type')) {
        // PIM-6493: the value should be calculated depending on the the model subtree.
        this.$el.empty().html('');
        return this;
      }

      var value = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      var enabled = true === value ? 'enabled' : 'disabled';
      var label = true === value ? __('pim_enrich.entity.product.module.status.enabled') : __('pim_enrich.entity.product.module.status.disabled');
      this.$el.empty().html(this.template({
        enabled: enabled,
        label: label
      }));
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 73438:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/expand-history-cell.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! pim/template/datagrid/cell/expand-history-cell */ 3631)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backgrid, template) {
  'use strict';
  /**
   * Expand history cell.
   *
   * @export  oro/datagrid/expand-history-cell
   * @class   oro.datagrid.ExpandCell
   * @extends Backgrid.StringCell
   */

  return Backgrid.StringCell.extend({
    /** @property */
    className: 'AknGrid-bodyCell AknGrid-expandable',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty().html(this.template({
        value: this.model.get(this.column.get('name'))
      }));
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 96148:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/history-diff-cell.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var _ = __webpack_require__(/*! underscore */ 13469);
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! pim/template/datagrid/cell/history-diff-cell */ 5286)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, Backgrid, template) {
  'use strict';
  /**
   * History diff column cell.
   *
   * @export  oro/datagrid/history-diff-cell
   * @class   oro.datagrid.HistoryDiffCell
   * @extends Backgrid.StringCell
   */

  return Backgrid.StringCell.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.el.setAttribute('colspan', 4);
      this.$el.empty();
      this.$el.html(this.template({
        changes: this.model.get(this.column.get('name')),
        __: __
      }));
      this.delegateEvents();
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 70275:
/*!******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/html-cell.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell) {
  'use strict';
  /**
   * Html column cell. Added missing behaviour.
   *
   * @export  oro/datagrid/html-cell
   * @class   oro.datagrid.HtmlCell
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    /**
     * Render a text string in a table cell. The text is converted from the
     * model's raw value for this cell's column.
     */
    render: function render() {
      this.$el.empty().html(this.formatter.fromRaw(this.model.get(this.column.get('name'))));
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 5184:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/image-cell.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datagrid/string-cell */ 10991), __webpack_require__(/*! pim/media-url-generator */ 72689), __webpack_require__(/*! pim/template/datagrid/cell/image-cell */ 61057), __webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, StringCell, MediaUrlGenerator, template, $) {
  'use strict';
  /**
   * Image column cell
   *
   * @export  oro/datagrid/image-cell
   * @class   oro.datagrid.ImageCell
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    template: _.template(template),

    /**
     * Render an image.
     */
    render: function render() {
      var image = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      var src = MediaUrlGenerator.getMediaShowUrl(image.filePath, 'thumbnail_small');
      this.$el.empty().html(this.getTemplate({
        label: image.originalFilename,
        src: src
      }));
      this.$el.find('img').one('error', function () {
        $(this).attr('src', MediaUrlGenerator.getMediaShowUrl(null, 'thumbnail_small'));
      });
      return this;
    },

    /**
     * Returns the template used to show the image.
     *
     * This function can be overridden to alter the way the image is shown.
     *
     * @returns {string}
     */
    getTemplate: function getTemplate(params) {
      return this.template(params);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 93590:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/integer-cell.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backgrid) {
  'use strict';
  /**
   * Integer column cell.
   *
   * @export  oro/datagrid/integer-cell
   * @class   oro.datagrid.NumberCell
   * @extends Backgrid.NumberCell
   */

  return Backgrid.NumberCell.extend({
    /** @property {String} */
    style: 'decimal',

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.decimals = 0;
      Backgrid.NumberCell.prototype.initialize.apply(this, arguments);
    },

    /**
     * @inheritDoc
     */
    enterEditMode: function enterEditMode(e) {
      if (this.column.get('editable')) {
        e.stopPropagation();
      }

      return Backgrid.NumberCell.prototype.enterEditMode.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 25662:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/label-cell.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell) {
  'use strict';
  /**
   * Label column cell
   *
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    className: 'AknGrid-bodyCell AknGrid-bodyCell--noWrap AknGrid-bodyCell--highlight',
    render: function render() {
      StringCell.prototype.render.apply(this, arguments);
      this.$el.prop('title', this.$el.text());
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 3657:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/number-cell.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backgrid) {
  'use strict';
  /**
   * Number column cell.
   *
   * @export  oro/datagrid/number-cell
   * @class   oro.datagrid.NumberCell
   * @extends Backgrid.NumberCell
   */

  return Backgrid.NumberCell.extend({
    /** @property {String} */
    style: 'decimal',

    /**
     * @inheritDoc
     */
    enterEditMode: function enterEditMode(e) {
      if (this.column.get('editable')) {
        e.stopPropagation();
      }

      return Backgrid.NumberCell.prototype.enterEditMode.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 4872:
/*!*********************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/product-and-product-model-image-cell.js ***!
  \*********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datagrid/image-cell */ 5184), __webpack_require__(/*! pim/template/datagrid/cell/product-and-product-model-image-cell */ 56874)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, ImageCell, productAndProductModelTemplate) {
  'use strict';
  /**
   * Uses a different template if the model is a product_model.
   *
   * @extends oro.datagrid.ImageCell
   */

  return ImageCell.extend({
    productAndProductModelTemplate: _.template(productAndProductModelTemplate),

    /**
     * {@inheritdoc}
     */
    getTemplate: function getTemplate(params) {
      if (this.model.get('document_type') === 'product_model') {
        return this.productAndProductModelTemplate(params);
      }

      return ImageCell.prototype.getTemplate.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 89505:
/*!*********************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/product-and-product-model-label-cell.js ***!
  \*********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/string-cell */ 10991)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (StringCell) {
  'use strict';
  /**
   * Label column cell for products and product models
   *
   * @extends oro.datagrid.StringCell
   */

  return StringCell.extend({
    /**
     * {@inheritdoc}
     */
    className: function className() {
      var className = 'AknGrid-bodyCell AknGrid-bodyCell--noWrap AknGrid-bodyCell--highlight';

      if (this.model.get('document_type') === 'product_model') {
        className += ' AknGrid-bodyCell--highlightAlternative';
      }

      return className;
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      StringCell.prototype.render.apply(this, arguments);
      var columnValue = this.model.get(this.column.get('name'));
      this.$el.attr('title', columnValue);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 24708:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/select-cell.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backgrid) {
  'use strict';
  /**
   * Select column cell. Added missing behaviour.
   *
   * @export  oro/datagrid/select-cell
   * @class   oro.datagrid.SelectCell
   * @extends Backgrid.SelectCell
   */

  return Backgrid.SelectCell.extend({
    /**
     * @inheritDoc
     */
    initialize: function initialize(options) {
      if (this.choices) {
        this.optionValues = [];

        _.each(this.choices, function (value, key) {
          this.optionValues.push([value, key]);
        }, this);
      }

      Backgrid.SelectCell.prototype.initialize.apply(this, arguments);
    },

    /**
     * @inheritDoc
     */
    enterEditMode: function enterEditMode(e) {
      if (this.column.get('editable')) {
        e.stopPropagation();
      }

      return Backgrid.StringCell.prototype.enterEditMode.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 10405:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/select-row-cell.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! backgrid */ 27217)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Backbone, Backgrid) {
  'use strict';
  /**
   * Renders a checkbox for row selection.
   *
   * @export  oro/datagrid/select-row-cell
   * @class   oro.datagrid.SelectRowCell
   * @extends Backbone.View
   */

  return Backbone.View.extend({
    /** @property */
    className: 'AknGrid-bodyCell AknGrid-bodyCell--tight AknGrid-bodyCell--checkbox select-row-cell',

    /** @property */
    tagName: 'td',

    /** @property */
    events: {
      'change :checkbox': 'onChange',
      click: 'enterEditMode'
    },

    /**
     * Initializer. If the underlying model triggers a `select` event, this cell
     * will change its checked value according to the event's `selected` value.
     *
     * @param {Object} options
     * @param {Backgrid.Column} options.column
     * @param {Backbone.Model} options.model
     */
    initialize: function initialize(options) {
      //Backgrid.requireOptions(options, ["model", "column"]);
      this.column = options.column;

      if (!(this.column instanceof Backgrid.Column)) {
        this.column = new Backgrid.Column(this.column);
      }

      this.listenTo(this.model, 'backgrid:select', function (model, checked) {
        this.$el.find(':checkbox').prop('checked', checked).change();
      });
    },

    /**
     * Focuses the checkbox.
     */
    enterEditMode: function enterEditMode(e) {
      var $checkbox = this.$el.find(':checkbox').focus();

      if ($checkbox[0] !== e.target) {
        $checkbox.prop('checked', !$checkbox.prop('checked')).change();
      }

      e.stopPropagation();
    },

    /**
     * Unfocuses the checkbox.
     */
    exitEditMode: function exitEditMode() {
      this.$el.find(':checkbox').blur();
    },

    /**
     * When the checkbox's value changes, this method will trigger a Backbone
     * `backgrid:selected` event with a reference of the model and the
     * checkbox's `checked` value.
     */
    onChange: function onChange(e) {
      this.model.trigger('backgrid:selected', this.model, $(e.target).prop('checked'));
    },

    /**
     * Renders a checkbox in a table cell.
     */
    render: function render() {
      // work around with trigger event to get current state of model (selected or not)
      var state = {
        selected: false
      };
      this.$el.empty().append('<input tabindex="-1" type="checkbox" />');
      this.model.trigger('backgrid:isSelected', this.model, state);

      if (state.selected) {
        this.$el.find(':checkbox').prop('checked', 'checked');
      }

      this.delegateEvents();
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 10991:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/cell/string-cell.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! oro/datagrid/cell-formatter */ 83065)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backgrid, CellFormatter) {
  'use strict';
  /**
   * String column cell. Added missing behaviour.
   *
   * @export  oro/datagrid/string-cell
   * @class   oro.datagrid.StringCell
   * @extends Backgrid.StringCell
   */

  return Backgrid.StringCell.extend({
    /**
         @property {(Backgrid.CellFormatter|Object|string)}
         */
    formatter: new CellFormatter(),

    /**
     * @inheritDoc
     */
    enterEditMode: function enterEditMode(e) {
      if (this.column.get('editable')) {
        e.preventDefault();
        e.stopPropagation();
      }

      return Backgrid.StringCell.prototype.enterEditMode.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 24365:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/column/action-column.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! oro/datagrid/action-cell */ 41765)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backgrid, ActionCell) {
  'use strict';
  /**
   * Column of grid that contains row actions
   *
   * @export  oro/datagrid/action-column
   * @class   oro.datagrid.ActionColumn
   * @extends Backgrid.Column
   */

  return Backgrid.Column.extend({
    /** @property {Object} */
    defaults: _.extend({}, Backgrid.Column.prototype.defaults, {
      name: 'rowActions',
      label: '',
      editable: false,
      cell: ActionCell,
      headerCell: Backgrid.HeaderCell.extend({
        className: 'AknGrid-headerCell action-column'
      }),
      sortable: false,
      actions: []
    }),

    /**
     * {@inheritDoc}
     */
    initialize: function initialize(attrs) {
      attrs = attrs || {};

      if (!attrs.cell) {
        attrs.cell = this.defaults.cell;
      }

      if (!attrs.name) {
        attrs.name = this.defaults.name;
      }

      if (!attrs.actions || _.isEmpty(attrs.actions)) {
        this.set('renderable', false);
      }

      Backgrid.Column.prototype.initialize.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 18255:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/display-selector.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * This module renders a dropdown list that allows the user to change the
 * display type for a grid.
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/datagrid/display-selector */ 26215), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, __, BaseForm, template, Routing) {
  return BaseForm.extend({
    className: 'AknDropdown AknDropdown--left AknTitleContainer-displaySelector',
    gridName: null,
    template: _.template(template),
    events: {
      'click .display-selector-item': 'setDisplayType'
    },

    /**
     * @inheritDoc
     */
    initialize: function initialize(options) {
      this.gridName = options.config.gridName;

      if (null === this.gridName) {
        new Error('You must specify gridName for the display-selector');
      }

      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * @inheritDoc
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'grid_load:start', this.collectDisplayOptions.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Receives the grid displayTypes config from the gridView and
     * renders them (with translated labels);
     *
     * @param  {Backbone.Collection} collection The datagrid collection
     * @param  {Backbone.View} gridView   The datagrid view
     */
    collectDisplayOptions: function collectDisplayOptions(collection, gridView) {
      var displayTypes = gridView.options.displayTypes;

      if (undefined === displayTypes) {
        return;
      }

      for (var display in displayTypes) {
        var type = displayTypes[display];
        type.label = __(type.label);
      }

      this.renderDisplayTypes(displayTypes);
    },

    /**
     * Returns the display type stored for a grid name
     * @return {String} The name of the display type e.g. thumbnail
     */
    getStoredType: function getStoredType() {
      return localStorage.getItem("display-selector:".concat(this.gridName));
    },

    /**
     * Gets the name of the display type from the event target and
     * puts it in localStorage using the gridName as the key.
     *
     * @param {jQuery.Event} event The dropdown item click event
     */
    setDisplayType: function setDisplayType(event) {
      var type = this.$(event.target).data('type');
      localStorage.setItem("display-selector:".concat(this.gridName), type);
      return Routing.reloadPage();
    },

    /**
     * Renders the dropdown list to show the display types
     *
     * @param  {Object} types A config object containing the display types
     * @return {Function}
     */
    renderDisplayTypes: function renderDisplayTypes(types) {
      var firstType = Object.keys(types)[0];
      var selectedType = this.getStoredType();

      var displayLabel = __('pim_datagrid.display_selector.label');

      if (undefined === types[selectedType]) {
        selectedType = firstType;
      }

      this.$el.html(this.template({
        displayLabel: displayLabel,
        types: types,
        selectedType: selectedType
      }));
      return BaseForm.prototype.render.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 83065:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/formatter/cell-formatter.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backgrid) {
  'use strict';
  /**
   * Cell formatter with fixed fromRaw method
   *
   * @export  oro/datagrid/cell-formatter
   * @class   oro.datagrid.CellFormatter
   * @extends Backgrid.CellFormatter
   */

  var CellFormatter = function CellFormatter() {};

  CellFormatter.prototype = new Backgrid.CellFormatter();

  _.extend(CellFormatter.prototype, {
    /**
     * @inheritDoc
     */
    fromRaw: function fromRaw(rawData) {
      if (rawData == null) {
        return '';
      }

      return Backgrid.CellFormatter.prototype.fromRaw.apply(this, arguments);
    }
  });

  return CellFormatter;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 21620:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/grid-views/collection.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/datagrid/grid-views/model */ 56117)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, GridViewsModel) {
  'use strict';

  return Backbone.Collection.extend({
    /** @property */
    model: GridViewsModel
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 56117:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/grid-views/model.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! underscore */ 13469)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _) {
  'use strict';

  return Backbone.Model.extend({
    /** @property */
    idAttribute: 'name',

    /** @property */
    defaults: {
      filters: [],
      sorters: []
    },

    /** @property */
    directions: {
      ASC: '-1',
      DESC: '1'
    },

    /**
     * Initializer.
     *
     * @param {Object} data
     * @param {String} data.name required
     * @param {Array}  data.sorters
     * @param {Array}  data.filters
     */
    initialize: function initialize(data) {
      if (!data.name) {
        throw new TypeError("'name' is required");
      }

      _.each(data.sorters, _.bind(function (direction, key) {
        data.sorters[key] = this.directions[direction];
      }, this));
    },

    /**
     * Convert model to format needed for applying greed state
     *
     * @returns {}
     */
    toGridState: function toGridState() {
      return {
        filters: this.get('filters'),
        sorters: this.get('sorters'),
        gridView: this.get('name')
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 76735:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/grid-views/view.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var $ = __webpack_require__(/*! jquery */ 49845);
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datagrid/grid-views/collection */ 21620)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, __, GridViewsCollection) {
  'use strict';
  /**
   * Datagrid views widget
   *
   * @export oro/datagrid/grid-views
   * @class   oro.datagrid.GridViews
   * @extends Backbone.View
   */

  return Backbone.View.extend({
    /** @property */
    events: {
      'click a': 'onChange'
    },

    /** @property */
    template: _.template('<div class="btn-group ">' + '<button data-toggle="dropdown" class="btn dropdown-toggle <% if (disabled) { %>disabled<% } %>">' + '<%=  current %>' + '<span class="caret"></span>' + '</button>' + '<ul class="dropdown-menu pull-right">' + '<% _.each(choices, function (choice) { %>' + '<li><a href="#" data-value="' + '<%= choice.value %>' + '">' + '<%= choice.label %>' + '</a></li>' + '<% }); %>' + '</ul>' + '</div>'),

    /** @property */
    enabled: true,

    /** @property */
    choices: [],

    /** @property */
    viewsCollection: GridViewsCollection,

    /**
     * Initializer.
     *
     * @param {Object} options
     * @param {Backbone.Collection} options.collection
     * @param {Boolean} [options.enable]
     * @param {Array}   [options.choices]
     * @param {Array}   [options.views]
     */
    initialize: function initialize(options) {
      options = options || {};

      if (!options.collection) {
        throw new TypeError("'collection' is required");
      }

      if (options.choices) {
        this.choices = _.union(this.choices, options.choices);
      }

      this.collection = options.collection;
      this.enabled = options.enable != false;
      this.listenTo(this.collection, 'updateState', this.render);
      this.listenTo(this.collection, 'beforeFetch', this.render);
      options.views = options.views || [];
      this.viewsCollection = new this.viewsCollection(options.views);
      Backbone.View.prototype.initialize.call(this, options);
    },

    /**
     * Disable view selector
     *
     * @return {*}
     */
    disable: function disable() {
      this.enabled = false;
      this.render();
      return this;
    },

    /**
     * Enable view selector
     *
     * @return {*}
     */
    enable: function enable() {
      this.enabled = true;
      this.render();
      return this;
    },

    /**
     * Select change event handler
     *
     * @param {Event} e
     */
    onChange: function onChange(e) {
      e.preventDefault();
      var value = $(e.target).data('value');

      if (value !== this.collection.state.gridView) {
        this.changeView(value);
      }
    },

    /**
     * Updates collection
     *
     * @param gridView
     * @returns {*}
     */
    changeView: function changeView(gridView) {
      var view = this.viewsCollection.get(gridView);

      if (view) {
        var viewState = _.extend({}, this.collection.initialState, view.toGridState());

        this.collection.updateState(viewState);
        this.collection.fetch();
      }

      return this;
    },
    render: function render() {
      this.$el.empty();

      if (this.choices.length > 0) {
        var currentView = _.filter(this.choices, _.bind(function (item) {
          return item.value == this.collection.state.gridView;
        }, this));

        var currentViewLabel = currentView.length ? _.first(currentView).label : __('pim_datagrid.view_selector.select');
        this.$el.append($(this.template({
          disabled: !this.enabled,
          choices: this.choices,
          current: currentViewLabel
        })));
      }

      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 40319:
/*!********************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/grid.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jslint nomen: true, vars: true*/

/*global define*/
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! oro/datagrid/header */ 67689), __webpack_require__(/*! oro/datagrid/body */ 87265), __webpack_require__(/*! oro/datagrid/action-column */ 24365), __webpack_require__(/*! oro/datagrid/select-row-cell */ 10405), __webpack_require__(/*! oro/datagrid/select-all-header-cell */ 50053), __webpack_require__(/*! pim/template/common/no-data */ 73183), __webpack_require__(/*! pim/template/common/grid */ 86128), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backgrid, __, mediator, LoadingMask, GridHeader, GridBody, ActionColumn, SelectRowCell, SelectAllHeaderCell, noDataTemplate, template, analytics) {
  'use strict';
  /**
   * Basic grid class.
   *
   * Triggers events:
   *  - "rowClicked" when row of grid body is clicked
   *
   * @export  oro/datagrid/grid
   * @class   oro.datagrid.Grid
   * @extends Backgrid.Grid
   */

  return Backgrid.Grid.extend({
    /** @property {String} */
    name: 'datagrid',

    /** @property {String} */
    tagName: 'div',

    /** @property {int} */
    requestsCount: 0,

    /** @property {String} */
    className: 'clearfix',

    /** @property */
    template: _.template(template),

    /** @property */
    noDataTemplate: _.template(noDataTemplate),

    /** @property {Object} */
    selectors: {
      grid: '.grid',
      noDataBlock: '.no-data',
      loadingMask: '.loading-mask',
      toolbar: '[data-drop-zone="toolbar"]'
    },

    /** @property {oro.datagrid.Header} */
    header: GridHeader,

    /** @property {oro.datagrid.Body} */
    body: GridBody,

    /** @property {oro.LoadingMask} */
    loadingMask: LoadingMask,

    /** @property {oro.datagrid.ActionColumn} */
    actionsColumn: ActionColumn,

    /**
     * @property {Object} Default properties values
     */
    defaults: {
      rowClickActionClass: 'row-click-action',
      rowClassName: 'AknGrid-bodyRow',
      rowClickAction: undefined,
      multipleSorting: true,
      rowActions: [],
      massActionsGroups: [],
      massActions: [],
      emptyGridOptions: null
    },

    /**
     * Initialize grid
     *
     * @param {Object} options
     * @param {Backbone.Collection} options.collection
     * @param {(Backbone.Collection|Array)} options.columns
     * @param {String} [options.rowClickActionClass] CSS class for row with click action
     * @param {String} [options.rowClassName] CSS class for row
     * @param {Array<oro.datagrid.AbstractAction>} [options.rowActions] Array of row actions prototypes
     * @param {Array<oro.datagrid.AbstractAction>} [options.massActions] Array of mass actions prototypes
     * @param {oro.datagrid.AbstractAction} [options.rowClickAction] Prototype for action that handles row click
     * @throws {TypeError} If mandatory options are undefined
     */
    initialize: function initialize(options) {
      options = options || {}; // Check required options

      if (!options.collection) {
        throw new TypeError("'collection' is required");
      }

      this.collection = options.collection;

      if (!options.columns) {
        throw new TypeError("'columns' is required");
      } // Init properties values based on options and defaults


      _.extend(this, this.defaults, options);

      this.collection.multipleSorting = this.multipleSorting;

      this._initRowActions();

      if (this.rowClickAction) {
        // This option property is used in oro.datagrid.Body
        options.rowClassName = this.rowClickActionClass + ' ' + this.rowClassName;
      }

      options.columns.push(this._createActionsColumn());
      options.columns.unshift(this._getMassActionsColumn());
      this.loadingMask = this._createLoadingMask();
      Backgrid.Grid.prototype.initialize.apply(this, arguments); // Listen and proxy events

      this._listenToCollectionEvents();

      this._listenToBodyEvents();

      this._listenToCommands();

      mediator.trigger('grid_load:start', this.collection, this);
    },

    /**
     * Inits this.rowActions and this.rowClickAction
     *
     * @private
     */
    _initRowActions: function _initRowActions() {
      if (!this.rowClickAction) {
        this.rowClickAction = _.find(this.rowActions, function (action) {
          return Boolean(action.prototype.rowAction);
        });
      }
    },

    /**
     * Creates actions column
     *
     * @return {Backgrid.Column}
     * @private
     */
    _createActionsColumn: function _createActionsColumn() {
      return new this.actionsColumn({
        actions: this.rowActions,
        datagrid: this
      });
    },

    /**
     * Creates mass actions column
     *
     * @return {Backgrid.Column}
     * @private
     */
    _getMassActionsColumn: function _getMassActionsColumn() {
      if (!this.massActionsColumn) {
        this.massActionsColumn = new Backgrid.Column({
          name: 'massAction',
          label: __('Selected Rows'),
          renderable: !_.isEmpty(this.massActions),
          sortable: false,
          editable: false,
          cell: SelectRowCell,
          headerCell: SelectAllHeaderCell
        });
      }

      return this.massActionsColumn;
    },

    /**
     * Gets selection state
     *
     * @returns {{selectedModels: *, inset: boolean}}
     */
    getSelectionState: function getSelectionState() {
      var selectAllHeader = this.header.row.cells[0];
      return selectAllHeader.getSelectionState();
    },

    /**
     * Resets selection state
     */
    resetSelectionState: function resetSelectionState() {
      var selectAllHeader = this.header.row.cells[0];
      return selectAllHeader.selectNone();
    },

    /**
     * Creates loading mask
     *
     * @return {oro.LoadingMask}
     * @private
     */
    _createLoadingMask: function _createLoadingMask() {
      return new this.loadingMask();
    },

    /**
     * Listen to events of collection
     *
     * @private
     */
    _listenToCollectionEvents: function _listenToCollectionEvents() {
      this.collection.on('request', function (model, xhr, options) {
        this._beforeRequest();

        var self = this;
        var always = xhr.always;

        xhr.always = function () {
          always.apply(this, arguments);

          self._afterRequest();
        };
      }, this);
      this.collection.on('remove', this._onRemove, this);
      this.collection.on('change', function (model) {
        this.$el.trigger('datagrid:change:' + this.name, model);
      }.bind(this));
    },

    /**
     * Listen to events of body, proxies events "rowClicked", handle run of rowClickAction if required
     *
     * @private
     */
    _listenToBodyEvents: function _listenToBodyEvents() {
      this.listenTo(this.body, 'rowClicked', function (row, e) {
        if (true === e.originalEvent.defaultPrevented) {
          return;
        }

        this.trigger('rowClicked', this, row);

        this._runRowClickAction(row);
      });
    },

    /**
     * Create row click action
     *
     * @param {oro.datagrid.Row} row
     * @private
     */
    _runRowClickAction: function _runRowClickAction(row) {
      if (this.rowClickAction) {
        var action = new this.rowClickAction({
          datagrid: this,
          model: row.model
        }),
            actionConfiguration = row.model.get('action_configuration');

        if (!actionConfiguration || actionConfiguration[action.name] !== false) {
          action.run();
          analytics.track('grid:item:selected', {
            name: this.name,
            entityHint: this.entityHint,
            model: action.model
          });
        }
      }
    },

    /**
     * Listen to commands on mediator
     */
    _listenToCommands: function _listenToCommands() {
      var grid = this;
      mediator.clear('datagrid:setParam:' + grid.name);
      mediator.clear('datagrid:removeParam:' + grid.name);
      mediator.clear('datagrid:restoreState:' + grid.name);
      mediator.clear('datagrid:doRefresh:' + grid.name);
      mediator.on('datagrid:setParam:' + grid.name, function (param, value) {
        grid.setAdditionalParameter(param, value);
      });
      mediator.on('datagrid:removeParam:' + grid.name, function (param) {
        grid.removeAdditionalParameter(param);
      });
      mediator.on('datagrid:restoreState:' + grid.name, function (columnName, dataField, included, excluded) {
        grid.collection.each(function (model) {
          if (_.indexOf(included, model.get(dataField)) !== -1) {
            model.set(columnName, true);
          }

          if (_.indexOf(excluded, model.get(dataField)) !== -1) {
            model.set(columnName, false);
          }
        });
      });
      mediator.on('datagrid:doRefresh:' + grid.name, this.refreshCollection.bind(this));
    },

    /**
     * Renders the grid, no data block and loading mask
     *
     * @return {*}
     */
    render: function render() {
      this.$el.empty();
      this.$el = this.$el.append($(this.template({
        hasCheckbox: this.massActionsColumn.get('renderable') === true
      })));
      this.renderGrid();
      this.renderNoDataBlock();
      this.renderLoadingMask();
      /**
       * Backbone event. Fired when the grid has been successfully rendered.
       * @event rendered
       */

      this.trigger('rendered');
      return this;
    },

    /**
     * Renders the grid's header, then footer, then finally the body.
     */
    renderGrid: function renderGrid() {
      var $el = this.$(this.selectors.grid);
      $el.append(this.header.render().$el);

      if (this.footer) {
        $el.append(this.footer.render().$el);
      }

      $el.append(this.body.render().$el);
    },

    /**
     * Renders loading mask.
     */
    renderLoadingMask: function renderLoadingMask() {
      this.$(this.selectors.loadingMask).append(this.loadingMask.render().$el);
      this.loadingMask.hide();
    },

    /**
     * Returns the messages to display when there is no results.
     *
     * @returns {{hint, subHint: *, imageClass: string}}
     */
    getDefaultNoDataOptions: function getDefaultNoDataOptions() {
      var entityHint = (this.entityHint ? this.entityHint.replace(/_/, ' ') : __('pim_datagrid.entity_hint')).toLowerCase();
      var key = _.isEmpty(this.collection.state.filters) ? 'pim_datagrid.no_entities' : 'pim_datagrid.no_results';

      if (__(key + '.' + entityHint) !== key + '.' + entityHint) {
        key += '.' + entityHint;
      }

      var hint = __(key, {
        entityHint: entityHint
      }).replace('\n', '<br />');

      var subHint = 'pim_datagrid.no_results_subtitle';
      return {
        hint: hint,
        subHint: subHint,
        imageClass: '',
        __: __
      };
    },

    /**
     * Render no data block.
     */
    renderNoDataBlock: function renderNoDataBlock() {
      var customOptions = this.emptyGridOptions;
      var options = this.getDefaultNoDataOptions();

      if (null !== customOptions && undefined !== customOptions) {
        options = customOptions;
        options.__ = __;
      }

      this.$(this.selectors.noDataBlock).html($(this.noDataTemplate(options))).hide();

      this._updateNoDataBlock();
    },

    /**
     * Refresh datagrid collection, triggers for datagrid:doRefresh events
     */
    refreshCollection: function refreshCollection() {
      this.setAdditionalParameter('refresh', true);
      this.collection.fetch();
      this.removeAdditionalParameter('refresh');
    },

    /**
     * Triggers when collection "request" event fired
     *
     * @private
     */
    _beforeRequest: function _beforeRequest() {
      this.requestsCount += 1;
      this.showLoading();
    },

    /**
     * Triggers when collection request is done
     *
     * @private
     */
    _afterRequest: function _afterRequest() {
      this.requestsCount -= 1;

      if (this.requestsCount === 0) {
        this.hideLoading(); // render block instead of update in order to change message depending on filter state

        this.renderNoDataBlock();
        /**
         * Backbone event. Fired when data for grid has been successfully rendered.
         * @event grid_load:complete
         */

        mediator.trigger('grid_load:complete', this.collection, this);
      }
    },

    /**
     * Show loading mask and disable toolbar
     */
    showLoading: function showLoading() {
      this.loadingMask.show();
    },

    /**
     * Hide loading mask and enable toolbar
     */
    hideLoading: function hideLoading() {
      this.loadingMask.hide();
    },

    /**
     * Update no data block status
     *
     * @private
     */
    _updateNoDataBlock: function _updateNoDataBlock() {
      if (this.collection.models.length > 0) {
        this.$(this.selectors.grid).show();
        $(this.selectors.toolbar).show();
        this.$(this.selectors.noDataBlock).hide();
      } else {
        this.$(this.selectors.grid).hide();
        $(this.selectors.toolbar).hide();
        this.$(this.selectors.noDataBlock).show();
      }
    },

    /**
     * Triggers when collection "remove" event fired
     *
     * @private
     */
    _onRemove: function _onRemove() {
      this.collection.fetch();
    },

    /**
     * Set additional parameter to send on server
     *
     * @param {String} name
     * @param value
     */
    setAdditionalParameter: function setAdditionalParameter(name, value) {
      var state = this.collection.state;

      if (!_.has(state, 'parameters')) {
        state.parameters = {};
      }

      state.parameters[name] = value;
    },

    /**
     * Remove additional parameter
     *
     * @param {String} name
     */
    removeAdditionalParameter: function removeAdditionalParameter(name) {
      var state = this.collection.state;

      if (_.has(state, 'parameters')) {
        delete state.parameters[name];
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 58183:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/header-cell/header-cell.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! oro/pageable-collection */ 3110)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, Backgrid, PageableCollection) {
  'use strict';
  /**
   * Datagrid header cell
   *
   * @export  oro/datagrid/header-cell
   * @class   oro.datagrid.HeaderCell
   * @extends Backgrid.HeaderCell
   */

  return Backgrid.HeaderCell.extend({
    /** @property */
    template: _.template('<% if (sortable) { %>' + '<a href="#">' + '<%= label %> ' + '<span class="AknGrid-caret AknCaret caret"></span>' + '</a>' + '<% } else { %>' + '<span><%= label %></span>' + // wrap label into span otherwise underscore will not render it
    '<% } %>'),

    /** @property {Boolean} */
    allowNoSorting: true,

    /**
     * Initialize.
     *
     * Add listening "reset" event of collection to able catch situation when header cell should update it's sort state.
     */
    initialize: function initialize() {
      this.allowNoSorting = this.collection.multipleSorting;
      Backgrid.HeaderCell.prototype.initialize.apply(this, arguments);

      this._initCellDirection(this.collection);

      this.collection.on('reset', this._initCellDirection, this);
    },

    /**
     * There is no need to reset cell direction because of multiple sorting
     *
     * @private
     */
    _resetCellDirection: function _resetCellDirection() {},

    /**
     * Inits cell direction when collections loads first time.
     *
     * @param collection
     * @private
     */
    _initCellDirection: function _initCellDirection(collection) {
      if (collection == this.collection) {
        var state = collection.state;
        var direction = null;
        var columnName = this.column.get('name');

        if (this.column.get('sortable') && _.has(state.sorters, columnName)) {
          if (1 == state.sorters[columnName]) {
            direction = 'descending';
          } else if (-1 == state.sorters[columnName]) {
            direction = 'ascending';
          }
        }

        if (direction != this.direction()) {
          this.direction(direction);
        }
      }
    },

    /**
     * Renders a header cell with a sorter and a label.
     *
     * @return {*}
     */
    render: function render() {
      this.$el.empty();
      this.$el.append($(this.template({
        label: this.column.get('label'),
        sortable: this.column.get('sortable')
      })));

      if (this.column.has('width')) {
        this.$el.width(this.column.get('width'));
      }

      return this;
    },

    /**
     * Click on column name to perform sorting
     *
     * @param {Event} e
     */
    onClick: function onClick(e) {
      e.preventDefault();
      var columnName = this.column.get('name');

      if (this.column.get('sortable')) {
        if (this.direction() === 'ascending') {
          this.sort(columnName, 'descending', function (left, right) {
            var leftVal = left.get(columnName);
            var rightVal = right.get(columnName);

            if (leftVal === rightVal) {
              return 0;
            } else if (leftVal > rightVal) {
              return -1;
            }

            return 1;
          });
        } else if (this.allowNoSorting && this.direction() === 'descending') {
          this.sort(columnName, null);
        } else {
          this.sort(columnName, 'ascending', function (left, right) {
            var leftVal = left.get(columnName);
            var rightVal = right.get(columnName);

            if (leftVal === rightVal) {
              return 0;
            } else if (leftVal < rightVal) {
              return -1;
            }

            return 1;
          });
        }
      }
    },

    /**
     * @param {string} columnName
     * @param {null|"ascending"|"descending"} direction
     * @param {function(*, *): number} [comparator]
     */
    sort: function sort(columnName, direction, comparator) {
      comparator = comparator || this._cidComparator;
      var collection = this.collection;

      if (collection instanceof PageableCollection) {
        var order;
        if (direction === 'ascending') order = -1;else if (direction === 'descending') order = 1;else order = null;
        collection.setSorting(columnName, order);

        if (collection.mode == 'client') {
          if (!collection.fullCollection.comparator) {
            collection.fullCollection.comparator = comparator;
          }

          collection.fullCollection.sort();
        } else collection.fetch();
      } else {
        collection.comparator = comparator;
        collection.sort();
      }
      /**
       * Global Backbone event. Fired when the sorter is clicked on a sortable column.
       */


      Backbone.trigger('backgrid:sort', columnName, direction, comparator, this.collection);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 50053:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/header-cell/select-all-header-cell.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */

/**
 * Contains mass-selection logic
 *  - watches models selection, keeps reference to selected
 *  - provides mass-selection actions
 *  - listening to models collection events,
 *      fills in 'obj' with proper data for
 *      `backgrid:isSelected` and `backgrid:getSelected`
 *
 * @export  oro/datagrid/select-all-header-cell
 * @class   oro.datagrid.SelectAllHeaderCell
 * @extends oro.datagrid.SelectRowCell
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! oro/datagrid/select-row-cell */ 10405)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backgrid, SelectRowCell) {
  'use strict';

  return SelectRowCell.extend({
    /** @property */
    className: 'AknGrid-headerCell AknGrid-headerCell--checkbox select-all-header-cell',

    /** @property */
    tagName: 'th',
    events: {},

    /**
     * Initializer.
     * Subscribers on events listening
     *
     * @param {Object} options
     * @param {Backgrid.Column} options.column
     * @param {Backbone.Collection} options.collection
     */
    initialize: function initialize(options) {
      //Backgrid.requireOptions(options, ["column", "collection"]);
      this.column = options.column;

      if (!(this.column instanceof Backgrid.Column)) {
        this.column = new Backgrid.Column(this.column);
      }

      this.initialState();
      this.listenTo(this.collection, {
        remove: this.removeModel,
        updateState: this.initialState,
        'backgrid:selected': this.selectModel,
        'backgrid:selectAll': this.selectAll,
        'backgrid:selectAllVisible': this.selectAllVisible,
        'backgrid:selectNone': this.selectNone,
        'backgrid:isSelected': _.bind(function (model, obj) {
          if ($.isPlainObject(obj)) {
            obj.selected = this.isSelectedModel(model);
          }
        }, this),
        'backgrid:getSelected': _.bind(function (obj) {
          if ($.isEmptyObject(obj)) {
            obj.selected = _.keys(this.selectedModels);
            obj.inset = this.inset;
          }
        }, this)
      });
    },

    /**
     * Resets selection to initial conditions
     *  - clear selected models set
     *  - reset set type in-set/not-in-set
     */
    initialState: function initialState() {
      this.selectedModels = {};
      this.inset = true;
    },

    /**
     * Gets selection state
     *
     * @returns {{selectedModels: *, inset: boolean}}
     */
    getSelectionState: function getSelectionState() {
      return {
        selectedModels: this.selectedModels,
        inset: this.inset
      };
    },

    /**
     * Checks if passed model have to be marked as selected
     *
     * @param {Backbone.Model} model
     * @returns {boolean}
     */
    isSelectedModel: function isSelectedModel(model) {
      return this.inset === _.has(this.selectedModels, model.id || model.cid);
    },

    /**
     * Removes model from selected models set
     *
     * @param {Backbone.Model} model
     */
    removeModel: function removeModel(model) {
      delete this.selectedModels[model.id || model.cid];
    },

    /**
     * Adds/removes model to/from selected models set
     *
     * @param {Backbone.Model} model
     * @param {boolean} selected
     */
    selectModel: function selectModel(model, selected) {
      if (selected === this.inset) {
        this.selectedModels[model.id || model.cid] = model;
      } else {
        this.removeModel(model);
      }
    },

    /**
     * Performs selection of all possible models:
     *  - reset to initial state
     *  - change type of set type as not-inset
     *  - marks all models in collection as selected
     *  start to collect models which have to be excluded
     */
    selectAll: function selectAll() {
      this.initialState();
      this.inset = false;

      this._selectAll();
    },

    /**
     * Reset selection of all possible models:
     *  - reset to initial state
     *  - change type of set type as inset
     *  - marks all models in collection as not selected
     *  start to collect models which have to be included
     */
    selectNone: function selectNone() {
      this.initialState();
      this.inset = true;

      this._selectNone();
    },

    /**
     * Performs selection of all visible models:
     *  - if necessary reset to initial state
     *  - marks all models in collection as selected
     */
    selectAllVisible: function selectAllVisible() {
      if (!this.inset) {
        this.initialState();
      }

      this._selectAllNotSelected();
    },

    /**
     * Marks all models in collection as selected
     *
     * @private
     */
    _selectAll: function _selectAll() {
      this.collection.each(function (model) {
        model.trigger('backgrid:select', model, true);
      });
    },

    /**
     * Marks all non selected models in collection as selected
     *
     * @private
     */
    _selectAllNotSelected: function _selectAllNotSelected() {
      var _this = this;

      this.collection.each(function (model) {
        if (!_this.isSelectedModel(model)) {
          model.trigger('backgrid:select', model, true);
        }
      });
    },

    /**
     * Marks all models in collection as not selected
     *
     * @private
     */
    _selectNone: function _selectNone() {
      this.collection.each(function (model) {
        model.trigger('backgrid:select', model, false);
      });
    },

    /**
     *
     *
     * @returns {oro.datagrid.SelectAllHeaderCell}
     */
    render: function render() {
      /* temp solution: start */
      // It's not clear for now, how mass selection will be designed,
      // thus implementation is done just to check functionality.
      // For future render method will depend on options or will be empty
      this.$el.empty().append('<div class="AknSeveralActionsButton AknSeveralActionsButton--small AknDropdown">\
                <button type="button" class="AknSeveralActionsButton-mainAction" data-select-all>' + _.__('pim_common.all') + '</button>\
                <button type="button" class="AknSeveralActionsButton-caretContainer dropdown-toggle" data-toggle="dropdown">\
                    <i class="AknCaret AknCaret--inverse"></i>\
                </button>\
                <ul class="AknSeveralActionsButton-menu AknDropdown-menu">\
                    <li><a class="AknDropdown-menuLink" href="#" data-select-all-visible>' + _.__('oro_datagrid.select.visible') + '</a></li>\
                    <li><a class="AknDropdown-menuLink" href="#" data-select-none>' + _.__('pim_common.none') + '</a></li>\
                </ul>\
            </div>');
      this.$el.find('[data-select-all]').on('click', _.bind(function (e) {
        this.collection.trigger('backgrid:selectAll');
        e.preventDefault();
      }, this));
      this.$el.find('[data-select-all-visible]').on('click', _.bind(function (e) {
        this.collection.trigger('backgrid:selectAllVisible');
        e.preventDefault();
      }, this));
      this.$el.find('[data-select-none]').on('click', _.bind(function (e) {
        this.collection.trigger('backgrid:selectNone');
        e.preventDefault();
      }, this));
      /* temp solution: end */

      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 67689:
/*!**********************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/header.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! oro/datagrid/header-cell */ 58183)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, Backgrid, HeaderCell) {
  'use strict';
  /**
   * Datagrid header widget
   *
   * @export  oro/datagrid/header
   * @class   oro.datagrid.Header
   * @extends Backgrid.Header
   */

  return Backgrid.Header.extend({
    /** @property */
    tagName: 'thead',

    /** @property */
    row: Backgrid.HeaderRow,

    /** @property */
    headerCell: HeaderCell,

    /**
     * @inheritDoc
     */
    initialize: function initialize(options) {
      if (!options.collection) {
        throw new TypeError("'collection' is required");
      }

      if (!options.columns) {
        throw new TypeError("'columns' is required");
      }

      this.columns = options.columns;

      if (!(this.columns instanceof Backbone.Collection)) {
        this.columns = new Backgrid.Columns(this.columns);
      }

      this.row = new this.row({
        columns: this.columns,
        collection: this.collection,
        headerCell: this.headerCell
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 30808:
/*!***************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/history-row.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217), __webpack_require__(/*! oro/datagrid/row */ 72803), __webpack_require__(/*! pim/template/datagrid/row/version */ 54376), __webpack_require__(/*! pim/template/datagrid/row/changes */ 74456)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backgrid, BaseRow, versionTemplate, changesTemplate) {
  'use strict';
  /**
   * Grid row.
   *
   * Triggers events:
   *  - "clicked" when row is clicked
   *
   * @export  oro/datagrid/row
   * @class   oro.datagrid.Row
   * @extends Backgrid.Row
   */

  return BaseRow.extend({
    tagName: 'div',
    versionTemplate: _.template(versionTemplate),
    changesTemplate: _.template(changesTemplate),

    /**
         Renders a row of cells for this row's model.
        */
    render: function render() {
      this.$el.empty();
      var mainLine = $(this.versionTemplate({
        version: this.model.get('version'),
        id: this.model.get('id')
      }));
      var changesLine = $(this.changesTemplate({
        version: this.model.get('version'),
        id: this.model.get('id')
      }));
      mainLine.on('click', function () {
        changesLine.toggle();
        mainLine.toggleClass('AknGrid-bodyRow--expanded');
        mainLine.find('.AknGrid-expand').toggleClass('AknGrid-expand--expanded');
      });

      for (var i = 0; i < this.cells.length; i++) {
        var cell = this.cells[i];
        var line = 'changes' === cell.column.get('name') ? changesLine : mainLine;
        line.append(cell.render().el);
        if (!cell.column.get('renderable') && 'changes' !== cell.column.get('name')) cell.$el.hide();
      }

      this.$el.append(mainLine);
      this.$el.append(changesLine);
      changesLine.hide();
      this.delegateEvents();
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 26510:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/listener/abstract-listener.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jslint browser: true, nomen: true*/

/*global define*/
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! backbone */ 2918)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, Backbone) {
  'use strict';
  /**
   * Abstarct listener for datagrid
   *
   * @export  oro/datagrid/abstract-listener
   * @class   oro.datagrid.AbstractListener
   * @extends Backbone.Model
   */

  return Backbone.Model.extend({
    /** @param {String} Column name of cells that will be listened for changing their values */
    columnName: 'id',

    /** @param {String} Model field that contains data */
    dataField: 'id',

    /**
     * Initialize listener object
     *
     * @param {Object} options
     */
    initialize: function initialize(options) {
      if (!_.has(options, 'columnName')) {
        throw new Error('Data column name is not specified');
      }

      this.columnName = options.columnName;

      if (options.dataField) {
        this.dataField = options.dataField;
      }

      Backbone.Model.prototype.initialize.apply(this, arguments);

      if (!options.$gridContainer) {
        throw new Error('gridSelector is not specified');
      }

      this.$gridContainer = options.$gridContainer;
      this.gridName = options.gridName;
      this.setDatagridAndSubscribe();
    },

    /**
     * Set datagrid instance
     */
    setDatagridAndSubscribe: function setDatagridAndSubscribe() {
      this.$gridContainer.on('datagrid:change:' + this.gridName, this._onModelEdited.bind(this));
    },

    /**
     * Process cell editing
     *
     * @param {Backbone.Model} model
     * @protected
     */
    _onModelEdited: function _onModelEdited(e, model) {
      if (!model.hasChanged(this.columnName)) {
        return;
      }

      var value = model.get(this.dataField);

      if (!_.isUndefined(value)) {
        this._processValue(value, model);
      }
    },

    /**
     * Process value
     *
     * @param {*} value Value of model property with name of this.dataField
     * @param {Backbone.Model} model
     * @protected
     * @abstract
     */
    _processValue: function _processValue(value, model) {
      throw new Error('_processValue method is abstract and must be implemented');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 52488:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/listener/callback-listener.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var _ = __webpack_require__(/*! underscore */ 13469);
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/abstract-listener */ 26510)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (AbstractListener) {
  'use strict';
  /**
   * Listener with custom callback to execute
   *
   * @export  oro/datagrid/callback-listener
   * @class   oro.datagrid.CallbackListener
   * @extends oro.datagrid.AbstractListener
   */

  return AbstractListener.extend({
    /** @param {Call} */
    processCallback: null,

    /**
     * Initialize listener object
     *
     * @param {Object} options
     */
    initialize: function initialize(options) {
      if (!_.has(options, 'processCallback')) {
        throw new Error('Process callback is not specified');
      }

      this.processCallback = options.processCallback;
      AbstractListener.prototype.initialize.apply(this, arguments);
    },

    /**
     * Execute callback
     *
     * @param {*} value Value of model property with name of this.dataField
     * @param {Backbone.Model} model
     * @protected
     */
    _processValue: function _processValue(value, model) {
      this.processCallback(value, model, this);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 44838:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/listener/column-form-listener.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/datagrid/column-form-listener */ 91645), __webpack_require__(/*! pim/security-context */ 34770)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, mediator, OroColumnFormListener, SecurityContext) {
  'use strict';
  /**
   * Column form listener based on oro implementation that allows
   * changing of field selectors dynamically using mediator
   */

  var ColumnFormListener = OroColumnFormListener.extend({
    $checkbox: null,
    initialize: function initialize() {
      OroColumnFormListener.prototype.initialize.apply(this, arguments);
      this.$checkbox = $('<input type="checkbox">').css('margin', 0);
      mediator.on('datagrid_collection_set_after', function (collection, $grid) {
        if (collection.inputName === this.gridName) {
          this.$el = $grid.find('table.grid thead th:not([style])').first();
          this.$el.empty();
          this.setStateFromCollection(collection);

          if (this.isEnabled()) {
            this.$el.html(this.$checkbox);
            this.$checkbox.on('click', _.bind(function () {
              var state = this.$checkbox.is(':checked');

              _.each(collection.models, function (model) {
                model.set(this.columnName, state);
              }, this);
            }, this));
          }
        }
      }, this);
      mediator.on('grid_load:complete', function (collection) {
        if (collection.inputName === this.gridName) {
          this.setStateFromCollection(collection);
        }
      }, this);
      mediator.bind('column_form_listener:set_selectors:' + this.gridName, function (selectors) {
        this._clearState();

        this.selectors = selectors;

        this._restoreState();

        this._synchronizeState();
      }, this);
      mediator.trigger('column_form_listener:initialized', this.gridName);
    },
    isEnabled: function isEnabled() {
      var _this$attributes;

      if (undefined === ((_this$attributes = this.attributes) === null || _this$attributes === void 0 ? void 0 : _this$attributes.acl_resource)) {
        return true;
      }

      return SecurityContext.isGranted(this.attributes.acl_resource);
    },
    _explode: function _explode(string) {
      if (!string) {
        return [];
      }

      return _.map(string.split(','), function (val) {
        return val ? String(val).trim() : null;
      });
    },
    setStateFromCollection: function setStateFromCollection(collection) {
      var checked = true;

      _.each(collection.models, function (model) {
        if (checked) {
          checked = model.get(this.columnName);
        }
      }, this);

      this.$checkbox.prop('checked', checked);
    },
    _processValue: function _processValue(id, model) {
      OroColumnFormListener.prototype._processValue.apply(this, arguments);

      var selectEvent = model.get(this.columnName) ? 'selectModel' : 'unselectModel';
      mediator.trigger('datagrid:' + selectEvent + ':' + this.gridName, model);
    }
  });
  return {
    init: function init($gridContainer, gridName) {
      var metadata = $gridContainer.data('metadata');
      var options = metadata.options || {};

      if (options.columnListener) {
        options.columnListener.selectors = options.columnListener.selectors || {};
        new ColumnFormListener(_.extend({
          $gridContainer: $gridContainer,
          gridName: gridName
        }, options.columnListener));
      }
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 91645:
/*!*************************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/listener/oro-column-form-listener.js ***!
  \*************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var Backbone = __webpack_require__(/*! backbone */ 2918);
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/datagrid/abstract-listener */ 26510)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, mediator, AbstractListener) {
  'use strict';
  /**
   * Listener for entity edit form and datagrid
   *
   * @export  oro/datagrid/column-form-listener
   * @class   oro.datagrid.ColumnFormListener
   * @extends oro.datagrid.AbstractListener
   */

  var ColumnFormListener = AbstractListener.extend({
    /** @param {Object} */
    selectors: {
      included: null,
      excluded: null
    },

    /**
     * Initialize listener object
     *
     * @param {Object} options
     */
    initialize: function initialize(options) {
      if (!_.has(options, 'selectors')) {
        throw new Error('Field selectors is not specified');
      }

      this.selectors = options.selectors;
      AbstractListener.prototype.initialize.apply(this, arguments);
    },

    /**
     * Set datagrid instance
     */
    setDatagridAndSubscribe: function setDatagridAndSubscribe() {
      AbstractListener.prototype.setDatagridAndSubscribe.apply(this, arguments);
      this.$gridContainer.on('preExecute:refresh:' + this.gridName, this._onExecuteRefreshAction.bind(this));
      this.$gridContainer.on('preExecute:reset:' + this.gridName, this._onExecuteResetAction.bind(this));
      mediator.on('grid_load:complete', this._restoreState.bind(this));

      this._clearState();

      this._restoreState();
    },

    /**
     * Fills inputs referenced by selectors with ids need to be included and to excluded
     *
     * @param {*} id model id
     * @param {Backbone.Model} model
     * @protected
     */
    _processValue: function _processValue(id, model) {
      var original = this.get('original');
      var included = this.get('included');
      var excluded = this.get('excluded');
      var isActive = model.get(this.columnName);
      var originallyActive;

      if (_.has(original, id)) {
        originallyActive = original[id];
      } else {
        originallyActive = !isActive;
        original[id] = originallyActive;
      }

      if (isActive) {
        if (originallyActive) {
          included = _.without(included, [id]);
        } else {
          included = _.union(included, [id]);
        }

        excluded = _.without(excluded, id);
      } else {
        included = _.without(included, id);

        if (!originallyActive) {
          excluded = _.without(excluded, [id]);
        } else {
          excluded = _.union(excluded, [id]);
        }
      }

      this.set('included', included);
      this.set('excluded', excluded);
      this.set('original', original);

      this._synchronizeState();
    },

    /**
     * Clears state of include and exclude properties to empty values
     *
     * @private
     */
    _clearState: function _clearState() {
      this.set('included', []);
      this.set('excluded', []);
      this.set('original', {});
    },

    /**
     * Synchronize values of include and exclude properties with form fields and datagrid parameters
     *
     * @private
     */
    _synchronizeState: function _synchronizeState() {
      var included = this.get('included');
      var excluded = this.get('excluded');

      if (this.selectors.included) {
        $(this.selectors.included).val(included.join(','));
      }

      if (this.selectors.excluded) {
        $(this.selectors.excluded).val(excluded.join(','));
      }
    },

    /**
     * Explode string into int array
     *
     * @param string
     * @return {Array}
     * @private
     */
    _explode: function _explode(string) {
      if (!string) {
        return [];
      }

      return _.map(string.split(','), function (val) {
        return val ? parseInt(val, 10) : null;
      });
    },

    /**
     * Restore values of include and exclude properties
     *
     * @private
     */
    _restoreState: function _restoreState() {
      var included = '';
      var excluded = '';

      if (this.selectors.included && $(this.selectors.included).length) {
        included = this._explode($(this.selectors.included).val());
        this.set('included', included);
      }

      if (this.selectors.excluded && $(this.selectors.excluded).length) {
        excluded = this._explode($(this.selectors.excluded).val());
        this.set('excluded', excluded);
      }

      if (included || excluded) {
        mediator.trigger('datagrid:restoreState:' + this.gridName, this.columnName, this.dataField, included, excluded);
      }
    },

    /**
     * Confirms refresh action that before it will be executed
     *
     * @param {oro.datagrid.AbstractAction} action
     * @param {Object} options
     * @private
     */
    _onExecuteRefreshAction: function _onExecuteRefreshAction(e, action, options) {
      this._confirmAction(action, options, 'refresh', {
        title: __('pim_datagrid.refresh_confirmation.title'),
        content: __('pim_datagrid.refresh_confirmation.content')
      });
    },

    /**
     * Confirms reset action that before it will be executed
     *
     * @param {oro.datagrid.AbstractAction} action
     * @param {Object} options
     * @private
     */
    _onExecuteResetAction: function _onExecuteResetAction(e, action, options) {
      this._confirmAction(action, options, 'reset', {
        title: __('pim_datagrid.reset_confirmation.title'),
        content: __('pim_datagrid.reset_confirmation.content')
      });
    },

    /**
     * Asks user a confirmation if there are local changes, if user confirms then clears state and runs action
     *
     * @param {oro.datagrid.AbstractAction} action
     * @param {Object} actionOptions
     * @param {String} type "reset" or "refresh"
     * @param {Object} confirmModalOptions Options for confirm dialog
     * @private
     */
    _confirmAction: function _confirmAction(action, actionOptions, type, confirmModalOptions) {
      this.confirmed = this.confirmed || {};

      if (!this.confirmed[type] && this._hasChanges()) {
        actionOptions.doExecute = false; // do not execute action until it's confirmed

        this._openConfirmDialog(type, confirmModalOptions, function () {
          // If confirmed, clear state and run action
          this.confirmed[type] = true;

          this._clearState();

          this._synchronizeState();

          action.run();
        });
      }

      this.confirmed[type] = false;
    },

    /**
     * Returns TRUE if listener contains user changes
     *
     * @return {Boolean}
     * @private
     */
    _hasChanges: function _hasChanges() {
      return !_.isEmpty(this.get('included')) || !_.isEmpty(this.get('excluded'));
    },

    /**
     * Opens confirm modal dialog
     */
    _openConfirmDialog: function _openConfirmDialog(type, options, callback) {
      this.confirmModal = this.confirmModal || {};

      if (!this.confirmModal[type]) {
        this.confirmModal[type] = new Backbone.BootstrapModal(_.extend({
          title: __('pim_common.confirm'),
          okText: __('pim_common.yes')
        }, options));
        this.confirmModal[type].on('ok', _.bind(callback, this));
      }

      this.confirmModal[type].open();
    }
  });

  ColumnFormListener.init = function ($gridContainer, gridName) {
    var metadata = $gridContainer.data('metadata');
    var options = metadata.options || {};

    if (options.columnListener) {
      new ColumnFormListener(_.extend({
        $gridContainer: $gridContainer,
        gridName: gridName
      }, options.columnListener));
    }
  };

  return ColumnFormListener;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 3587:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/pagination-input.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */

/**
 * Datagrid pagination with input field
 *
 * @export  oro/datagrid/pagination-input
 * @class   oro.datagrid.PaginationInput
 * @extends oro.datagrid.Pagination
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datagrid/pagination */ 13509), __webpack_require__(/*! pim/template/datagrid/pagination */ 35311), __webpack_require__(/*! oro/messenger */ 80581)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, mediator, _, __, Pagination, template, Messenger) {
  'use strict';

  var PaginationInput = Pagination.extend({
    collection: {},

    /** @property */
    template: _.template(template),

    /** @property */
    windowSize: 3,

    /** @property */
    fastForwardHandleConfig: {
      gap: {
        label: '...'
      }
    },

    /** @property */
    maxRescoreWindow: 10000,

    /**
     * @inheritDoc
     */
    initialize: function initialize(options) {
      this.appendToGrid = options.appendToGrid;
      this.gridElement = options.gridElement;
      this.gridName = options.config.gridName;

      if (null === this.gridName || undefined === this.gridName) {
        throw Error('You must set the gridName in the form_extensions config for the oro/datagrid/pagination-input');
      }

      if (this.appendToGrid) {
        mediator.on('datagrid_collection_set_after', this.setupPagination.bind(this));
      }

      mediator.once('grid_load:start', this.setupPagination.bind(this));
      mediator.on('grid_load:complete', this.setupPagination.bind(this));
    },

    /**
     * Initialize the pagination with the collection
     *
     * @param collection
     */
    setupPagination: function setupPagination(collection) {
      if (collection.inputName !== this.gridName) return;
      this.collection = collection;
      this.renderPagination();
      return Pagination.prototype.initialize.call(this, {
        collection: this.collection,
        enabled: true
      });
    },

    /**
     * {@inheritdoc}
     */
    makeHandles: function makeHandles() {
      var _this = this;

      var handles = [];
      var state = this.collection.state;
      var currentPage = state.firstPage === 0 ? state.currentPage : state.currentPage - 1;
      var pageIds = this.getPages();

      if (this.collection.mode !== 'infinite') {
        var previousId = _.first(pageIds);

        pageIds.forEach(function (id) {
          if (id - previousId > 1) {
            handles.push({
              label: _this.fastForwardHandleConfig.gap.label,
              title: _this.fastForwardHandleConfig.gap.label,
              className: 'AknActionButton--unclickable'
            });
          }

          previousId = id;
          handles.push({
            label: id + 1,
            title: 'No. ' + (id + 1),
            className: currentPage === id ? 'active AknActionButton--highlight' : undefined
          });
        });

        if (state.totalRecords > this.maxRescoreWindow && (previousId + 1) * state.pageSize < this.maxRescoreWindow) {
          handles.push({
            label: this.fastForwardHandleConfig.gap.label,
            title: this.fastForwardHandleConfig.gap.label,
            className: 'AknActionButton--unclickable'
          });
        }
      }

      return handles;
    },

    /**
     * Returns the list of pages to display
     */
    getPages: function getPages() {
      var collection = this.collection;
      var state = collection.state;
      var lastPage = state.lastPage ? state.lastPage : state.firstPage;
      lastPage = state.firstPage === 0 ? lastPage : lastPage - 1;
      var lastAccessiblePage = Math.floor(this.maxRescoreWindow / state.pageSize);
      var currentPage = state.firstPage === 0 ? state.currentPage : state.currentPage - 1;
      var windowStart = currentPage - (this.windowSize - 1) / 2;
      windowStart = Math.max(Math.min(windowStart, lastPage - this.windowSize + 1), 0);
      var windowEnd = Math.min(windowStart + this.windowSize, lastPage, lastAccessiblePage);
      var ids = [];
      ids.push(state.firstPage - 1);

      for (var i = windowStart; i < windowEnd; i++) {
        ids.push(i);
      }

      if (state.totalRecords < this.maxRescoreWindow) {
        ids.push(lastPage);
      }

      return _.uniq(ids);
    },

    /**
     * {@inheritdoc}
     */
    onChangePage: function onChangePage(e) {
      var label = $(e.target).text().trim();

      if (label === this.fastForwardHandleConfig.gap.label) {
        return false;
      }

      return Pagination.prototype.onChangePage.apply(this, arguments);
    },

    /**
     * Render pagination view and add validation for input with positive integer value
     */
    renderPagination: function renderPagination() {
      if (this.getPages().length <= 1) {
        this.$el.empty();
      } else {
        Pagination.prototype.renderPagination.apply(this, arguments);
        var state = this.collection.state;
        var currentPage = state.firstPage === 0 ? state.currentPage : state.currentPage - 1;

        if (currentPage + 1 === Math.floor(this.maxRescoreWindow / state.pageSize)) {
          Messenger.notify('warning', __('oro.datagrid.pagination.limit_warning', {
            limit: this.maxRescoreWindow
          }));
        }

        if (this.options.appendToGrid) {
          this.gridElement.prepend(this.$el);
        }
      }

      return this;
    }
  });

  PaginationInput.init = function (gridContainer, gridName) {
    return new PaginationInput({
      appendToGrid: true,
      gridElement: $(gridContainer).find('.grid-container'),
      config: {
        gridName: gridName
      }
    });
  };

  return PaginationInput;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13509:
/*!**************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/pagination.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, BaseForm) {
  'use strict';
  /**
   * Datagrid pagination widget
   *
   * @export  oro/datagrid/pagination
   * @class   oro.datagrid.Pagination
   * @extends BaseForm
   */

  return BaseForm.extend({
    /** @property */
    tagName: 'div',

    /** @property */
    className: 'AknGridToolbar-center',

    /** @property */
    windowSize: 10,

    /** @property */
    enabled: true,

    /** @property */
    hidden: false,

    /** @property */
    template: _.template('<label>Page:</label>' + '<ul class="AknPagination-icons">' + '<% _.each(handles, function (handle) { %>' + '<li class="AknPagination-item <% if (handle.className) { %><%= handle.className %><% } %>">' + '<a href="#" class="AknPagination-link" <% if (handle.title) {%> title="<%= handle.title %>"<% } %>>' + '<% if (handle.wrapClass) {%>' + '<i <% if (handle.wrapClass) { %>class="<%= handle.wrapClass %>"<% } %>>' + '<%= handle.label %>' + '</i>' + '<% } else { %>' + '<%= handle.label %>' + '<% } %>' + '</a>' + '</li>' + '<% }); %>' + '</ul>' + '<label>of <%= state.totalPages ? state.totalPages : 1 %> | <%= state.totalRecords %> records</label>'),

    /** @property */
    events: {
      'click a': 'onChangePage'
    },

    /** @property */
    fastForwardHandleConfig: {
      prev: {
        label: '',
        wrapClass: 'icon-chevron-left hide-text'
      },
      next: {
        label: '',
        wrapClass: 'icon-chevron-right hide-text'
      }
    },

    /**
     * Initializer.
     *
     * @param {Object} options
     * @param {Backbone.Collection} options.collection
     * @param {Object} options.fastForwardHandleConfig
     * @param {Number} options.windowSize
     */
    initialize: function initialize(options) {
      options = options || {};

      if (!options.collection) {
        throw new TypeError("'collection' is required");
      }

      this.collection = options.collection;
      this.listenTo(this.collection, 'add', this.render);
      this.listenTo(this.collection, 'remove', this.render);
      this.listenTo(this.collection, 'reset', this.render);
      this.hidden = options.hide == true;
      BaseForm.prototype.initialize.call(this, options);
    },

    /**
     * Disable pagination
     *
     * @return {*}
     */
    disable: function disable() {
      this.enabled = false;
      this.render();
      return this;
    },

    /**
     * Enable pagination
     *
     * @return {*}
     */
    enable: function enable() {
      this.enabled = true;
      this.render();
      return this;
    },

    /**
     * jQuery event handler for the page handlers. Goes to the right page upon clicking.
     *
     * @param {Event} e
     * @protected
     */
    onChangePage: function onChangePage(e) {
      e.preventDefault();

      if (!this.enabled) {
        return;
      }

      var label = $(e.target).text();
      var ffConfig = this.fastForwardHandleConfig;
      var collection = this.collection;

      if (ffConfig) {
        var prevLabel = _.has(ffConfig.prev, 'label') ? ffConfig.prev.label : undefined;
        var nextLabel = _.has(ffConfig.next, 'label') ? ffConfig.next.label : undefined;

        switch (label) {
          case prevLabel:
            if (collection.hasPrevious()) collection.getPreviousPage();
            return;

          case nextLabel:
            if (collection.hasNext()) collection.getNextPage();
            return;
        }
      }

      var state = collection.state;
      var pageIndex = label * 1 - state.firstPage;
      collection.getPage(state.firstPage === 0 ? pageIndex : pageIndex + 1);
    },

    /**
     * Internal method to create a list of page handle objects for the template
     * to render them.
     *
     * @return {Array.<Object>} an array of page handle objects hashes
     */
    makeHandles: function makeHandles(handles) {
      handles = handles || [];
      var collection = this.collection;
      var state = collection.state; // convert all indices to 0-based here

      var lastPage = state.lastPage ? state.lastPage : state.firstPage;
      lastPage = state.firstPage === 0 ? lastPage : lastPage - 1;
      var currentPage = state.firstPage === 0 ? state.currentPage : state.currentPage - 1;
      var windowStart = Math.floor(currentPage / this.windowSize) * this.windowSize;
      var windowEnd = windowStart + this.windowSize;
      windowEnd = windowEnd <= lastPage ? windowEnd : lastPage + 1;

      if (collection.mode !== 'infinite') {
        for (var i = windowStart; i < windowEnd; i++) {
          handles.push({
            label: i + 1,
            title: 'No. ' + (i + 1),
            className: currentPage === i ? 'active' : undefined
          });
        }
      }

      var ffConfig = this.fastForwardHandleConfig || {};

      if (ffConfig.prev) {
        handles.unshift({
          label: _.has(ffConfig.prev, 'label') ? ffConfig.prev.label : undefined,
          wrapClass: _.has(ffConfig.prev, 'wrapClass') ? ffConfig.prev.wrapClass : undefined,
          className: collection.hasPrevious() ? undefined : 'AknActionButton--disabled'
        });
      }

      if (ffConfig.next) {
        handles.push({
          label: _.has(ffConfig.next, 'label') ? ffConfig.next.label : undefined,
          wrapClass: _.has(ffConfig.next, 'wrapClass') ? ffConfig.next.wrapClass : undefined,
          className: collection.hasNext() ? void 0 : 'AknActionButton--disabled'
        });
      }

      return handles;
    },

    /**
     * Render pagination
     *
     * @return {*}
     */
    renderPagination: function renderPagination() {
      this.$el.empty();
      var state = this.collection.state;
      this.$el.append($(this.template({
        disabled: !this.enabled || !state.totalRecords,
        handles: this.makeHandles(),
        state: state
      })));

      if (this.hidden) {
        this.$el.hide();
      }

      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 90286:
/*!***************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/product-row.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * This module is a custom row for a product in the datagrid.
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datagrid/row */ 72803), __webpack_require__(/*! pim/template/datagrid/row/product */ 75320), __webpack_require__(/*! pim/template/datagrid/row/product-thumbnail */ 19675), __webpack_require__(/*! pim/media-url-generator */ 72689)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseRow, rowTemplate, thumbnailTemplate, mediaUrlGenerator) {
  return BaseRow.extend({
    tagName: 'div',
    rowTemplate: _.template(rowTemplate),
    thumbnailTemplate: _.template(thumbnailTemplate),
    renderedRow: null,

    /**
     * Return the columns for the cells that should be rendered
     *
     * @return {Array} An array of column names
     */
    getRenderableColumns: function getRenderableColumns() {
      return ['massAction', 'rowActions'];
    },

    /**
     * Return an object containing the template options
     *
     * @return {Object}
     */
    getTemplateOptions: function getTemplateOptions() {
      var isProductModel = this.isProductModel();
      var label = this.model.get('label');
      return {
        useLayerStyle: isProductModel,
        label: label,
        identifier: this.model.get('identifier'),
        imagePath: this.getThumbnailImagePath(),
        completenessText: this.getCompletenessText(),
        completenessClass: this.getCompletenessClass()
      };
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var templateOptions = this.getTemplateOptions();
      var row = $(this.rowTemplate(templateOptions));
      var thumbnail = this.thumbnailTemplate(templateOptions);
      row.html(thumbnail);
      this.renderCells(row);
      this.$el.empty().html(row);
      row.on('click', this.onClick.bind(this));
      this.listenTo(this.model, 'backgrid:selected', function (model, checked) {
        row.toggleClass('AknGrid-bodyRow--selected', checked);
      });
      this.delegateEvents();
      this.renderedRow = row;
      return this;
    },

    /**
     * Returns true if the model is a product model
     * @return {Boolean}
     */
    isProductModel: function isProductModel() {
      return this.model.get('document_type') === 'product_model';
    },

    /**
     * Get the name of the completeness cell based on product type
     * @return {String}
     */
    getCompletenessCellType: function getCompletenessCellType() {
      return this.isProductModel() ? 'complete_variant_products' : 'completeness';
    },

    /**
     * Returns the 'thumbnail' size image path for a product OR the dummy image
     *
     * @return {String}
     */
    getThumbnailImagePath: function getThumbnailImagePath() {
      var image = this.model.get('image');

      if (undefined === image || null === image) {
        return '/media/show/undefined/preview';
      }

      return mediaUrlGenerator.getMediaShowUrl(image.filePath, 'thumbnail');
    },

    /**
     * Renders the completeness, row actions and checkbox cells
     *
     * Adds modifier classes for the completeness cell and the icons
     * inside the row actions cell.
     *
     * @param  {HTMLElement} row
     */
    renderCells: function renderCells(row) {
      var _this = this;

      var columnsToRender = this.getRenderableColumns();
      this.cells.forEach(function (cell) {
        var columnName = cell.column.get('name');

        if (false === columnsToRender.includes(columnName)) {
          return;
        }

        var cellElement = cell.render().el;

        _this.setCellModifiers(columnName, cellElement);

        row.append(cellElement);
      });
    },

    /**
     * Set modifiers on cells within a cell element
     *
     * @param {String} columnName  The name of a column e.g. completeness
     * @param {HTMLElement} cellElement The element for the cell
     */
    setCellModifiers: function setCellModifiers(columnName, cellElement) {
      var type = this.getCompletenessCellType();

      if (columnName === type) {
        $(cellElement).addClass('AknBadge--topRight');
      } else if (columnName === 'rowActions') {
        $('.AknIconButton', cellElement).addClass('AknIconButton--white');
      }
    },
    getCompletenessText: function getCompletenessText() {
      if (this.isProductModel()) {
        var complete = this.model.get('complete_variant_products').complete;
        var total = this.model.get('complete_variant_products').total;
        return complete + ' / ' + total;
      } else {
        var completeness = this.model.get('completeness');

        if (null !== completeness) {
          return completeness + '%';
        }
      }

      return null;
    },
    getCompletenessClass: function getCompletenessClass() {
      if (this.isProductModel()) {
        var complete = this.model.get('complete_variant_products').complete;
        var total = this.model.get('complete_variant_products').total;

        if (complete === total) {
          return 'AknBadge--success';
        } else if (complete === 0) {
          return 'AknBadge--important';
        } else {
          return 'AknBadge--warning';
        }
      } else {
        var completeness = this.model.get('completeness');

        if (null !== completeness) {
          if (completeness <= 0) {
            return 'AknBadge--important';
          } else if (completeness >= 100) {
            return 'AknBadge--success';
          } else {
            return 'AknBadge--warning';
          }
        }
      }

      return null;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 72803:
/*!*******************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/row.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backgrid */ 27217)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backgrid) {
  'use strict';
  /**
   * Grid row.
   *
   * Triggers events:
   *  - "clicked" when row is clicked
   *
   * @export  oro/datagrid/row
   * @class   oro.datagrid.Row
   * @extends Backgrid.Row
   */

  return Backgrid.Row.extend({
    /** @property */
    events: {
      click: 'onClick'
    },

    /** @property */
    clickData: {
      counter: 0,
      timeout: 100,
      hasSelectedText: false
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      Backgrid.Row.prototype.initialize.apply(this, arguments);
      this.listenTo(this.model, 'backgrid:selected', function (model, checked) {
        if (checked) {
          this.$el.addClass('AknGrid-bodyRow--selected');
        } else {
          this.$el.removeClass('AknGrid-bodyRow--selected');
        }
      });
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      Backgrid.Row.prototype.render.apply(this, arguments);
      var isChecked = this.$el.find('input[type=checkbox]').prop('checked');

      if (true === isChecked) {
        this.$el.addClass('AknGrid-bodyRow--selected');
      }

      return this;
    },

    /**
     * jQuery event handler for row click, trigger "clicked" event if row element was clicked
     *
     * @param {Event} e
     */
    onClick: function onClick(e) {
      var targetElement = e.target;
      var targetParentElement = $(e.target).parent().get(0);

      if (!this.el == targetElement && !this.el == targetParentElement) {
        return;
      }

      this.clickData.counter++;

      if (this.clickData.counter == 1 && !this._hasSelectedText()) {
        _.delay(_.bind(function () {
          if (!this._hasSelectedText() && this.clickData.counter == 1) {
            this.trigger('clicked', this, e);
          }

          this.clickData.counter = 0;
        }, this), this.clickData.timeout);
      } else {
        this.clickData.counter = 0;
      }
    },

    /**
     * Checks if selected text is available
     *
     * @returns {string}
     * @return {boolean}
     */
    _hasSelectedText: function _hasSelectedText() {
      var text = '';

      if (_.isFunction(window.getSelection)) {
        text = window.getSelection().toString();
      } else if (!_.isUndefined(document.selection) && document.selection.type == 'Text') {
        text = document.selection.createRange().text;
      }

      return !_.isEmpty(text);
    },

    /**
     * @inheritDoc
     */
    makeCell: function makeCell(column) {
      var cell = new (column.get('cell'))({
        column: column,
        model: this.model
      });

      this._listenToCellEvents(cell);

      return cell;
    },

    /**
     * Listen to events of cell
     *
     * @param {Backgrid.Cell} cell
     * @private
     */
    _listenToCellEvents: function _listenToCellEvents(cell) {
      if (cell.listenRowClick && _.isFunction(cell.onRowClicked)) {
        this.on('clicked', _.bind(cell.onRowClicked, cell));
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 34498:
/*!******************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/state-listener.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/datagrid/abstract-listener */ 26510), __webpack_require__(/*! pim/datagrid/state */ 30138)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, mediator, AbstractListener, DatagridState) {
  'use strict';
  /**
   * Datagrid state listener
   */

  var StateListener = AbstractListener.extend({
    gridName: null,
    $gridContainer: null,
    initialize: function initialize(options) {
      if (!_.has(options, 'gridName')) {
        throw new Error('Grid name not specified');
      }

      if (!_.has(options, '$gridContainer')) {
        throw new Error('Grid container not specified');
      }

      this.gridName = options.gridName;
      this.$gridContainer = options.$gridContainer;
      this.subscribe();
    },
    subscribe: function subscribe() {
      mediator.once('datagrid_collection_set_after', this.afterCollectionSet, this);
      mediator.on('grid_load:complete', this.saveGridState, this);
      this.$gridContainer.on('preExecute:reset:' + this.gridName, this.onGridReset.bind(this));
      mediator.once('hash_navigation_request:start', this.unsubscribe, this);
    },
    unsubscribe: function unsubscribe() {
      mediator.off('grid_load:complete', this.saveGridState, this);
    },
    afterCollectionSet: function afterCollectionSet() {
      mediator.once('datagrid_filters:rendered', function (collection) {
        collection.trigger('updateState', collection); // We have to use a timeout here because the toolbar is hidden right after triggering this event

        setTimeout(_.bind(function () {
          this.$gridContainer.find('div.toolbar, div.filter-box').show();
        }, this), 20);
      }, this);
    },
    saveGridState: function saveGridState(collection) {
      if (collection.inputName === this.gridName) {
        var $filterBox = this.$gridContainer.find('.filter-box');

        if ($filterBox.length && !$filterBox.is(':visible')) {
          $filterBox.show();
        }

        var encodedStateData = collection.encodeStateData(collection.state);
        DatagridState.set(this.gridName, 'filters', encodedStateData);
      }
    },
    onGridReset: function onGridReset(e, action) {
      action.collection.initialState.filters = {};
    }
  });

  StateListener.init = function ($gridContainer, gridName) {
    new StateListener({
      $gridContainer: $gridContainer,
      gridName: gridName
    });
  };

  return StateListener;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 30138:
/*!*********************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/state.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, mediator) {
  'use strict';

  var storageEnabled = typeof Storage !== 'undefined' && sessionStorage;

  var _get = function _get(alias, key) {
    if (storageEnabled) {
      return sessionStorage.getItem(alias + '.' + key);
    }
  };

  var _getParsed = function _getParsed(alias, key) {
    var rawValue = _get(alias, key);

    var parsedValue = {};

    if (null == rawValue) {
      return rawValue;
    }

    rawValue.split('&').forEach(function (part) {
      if (!part) return;
      var item = part.split('=');
      var key = decodeURIComponent(item[0]);
      var from = key.indexOf('[');

      if (from == -1) {
        parsedValue[key] = decodeURIComponent(item[1]);
      } else {
        var to = key.indexOf(']');
        var index = key.substring(from + 1, to);
        key = key.substring(0, from);

        if (!parsedValue[key]) {
          parsedValue[key] = [];
        }

        if (!index) {
          parsedValue[key].push(item[1]);
        } else {
          parsedValue[key][index] = item[1];
        }
      }
    });
    return parsedValue;
  };

  var _set = function _set(alias, key, value) {
    if (storageEnabled) {
      var oldValue = _get(alias, key);

      if (oldValue !== value) {
        sessionStorage.setItem(alias + '.' + key, value);

        if (oldValue === null) {
          mediator.trigger('grid:' + alias + ':state_set', {
            item: key,
            newValue: value
          });
        } else {
          mediator.trigger('grid:' + alias + ':state_changed', {
            item: key,
            oldValue: oldValue,
            newValue: value
          });
        }
      }
    }
  };

  var _remove = function _remove(alias, key) {
    if (storageEnabled) {
      var value = _get(alias, key);

      if (value !== null) {
        sessionStorage.removeItem(alias + '.' + key);
        mediator.trigger('grid:' + alias + ':state_reset', {
          item: key,
          oldValue: value
        });
      }
    }
  };
  /**
   * A wrapper for storing datagrid state
   */


  return {
    get: function get(alias, keys) {
      if (_.isArray(keys)) {
        var values = {};

        _.each(keys, function (key) {
          values[key] = _get(alias, key);
        });

        return values;
      } else {
        return _get.apply(this, arguments);
      }
    },
    getParsed: function getParsed(alias, keys) {
      if (_.isArray(keys)) {
        var values = {};

        _.each(keys, function (key) {
          values[key] = _getParsed(alias, key);
        });

        return values;
      } else {
        return _getParsed.apply(this, arguments);
      }
    },
    set: function set(alias, data) {
      if (_.isObject(data)) {
        _.each(data, function (key, value) {
          _set(alias, value, key);
        });
      } else {
        _set.apply(this, arguments);
      }

      return this;
    },
    remove: function remove(alias, keys) {
      if (_.isArray(keys)) {
        _.each(keys, function (key) {
          _remove(alias, key);
        });
      } else {
        _remove.apply(this, arguments);
      }

      return this;
    },
    refreshFiltersFromUrl: function refreshFiltersFromUrl(alias) {
      var storageHash = this.get(alias, 'filters');
      var hash = location.hash;

      if (-1 === hash.indexOf('|g/')) {
        return;
      }

      var urlHash = hash.split('|g/').pop();

      if (!storageHash) {
        this.set(alias, {
          filters: urlHash
        });
        return;
      }

      var storageFilters = storageHash.split('&');
      var urlFilters = urlHash.split('&');

      if (!_.isEqual(urlFilters.sort(), storageFilters.sort())) {
        this.set(alias, {
          filters: urlHash
        });
      }
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71582:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/datagrid/widget/export-widget.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/error */ 57340), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! react */ 67294), __webpack_require__(/*! akeneo-design-system */ 96541)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, __, Backbone, messenger, Error, Routing, React, _ref) {
  var Link = _ref.Link;
  return Backbone.View.extend({
    action: null,
    initialize: function initialize(action) {
      this.action = action;
    },
    run: function run() {
      $.post(this.action.getLink(), this.action.getActionParameters()).done(function (data) {
        var title = __('pim_datagrid.mass_action.quick_export.success');

        var link = React.createElement(Link, {
          key: data.job_id,
          href: "#".concat(Routing.generate('akeneo_job_process_tracker_details', {
            id: data.job_id
          }))
        }, __('pim_datagrid.mass_action.quick_export.flash.message'));
        messenger.notify('success', title, link);
      }).fail(function (jqXHR) {
        if (jqXHR.status === 401) {
          Error.dispatch(null, jqXHR);
        } else {
          messenger.notify('error', __(jqXHR.responseText));
        }
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 9161:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/fetcher/datagrid-view-fetcher.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Datagrid View Fetcher.
 * We override the default fetcher to add additional methods
 * to fetch default columns & default user datagrid view.
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/base-fetcher */ 77289)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Routing, BaseFetcher) {
  return BaseFetcher.extend({
    /**
     * Fetch default columns for grid with given alias
     *
     * @param {string} alias
     *
     * @return Promise
     */
    defaultColumns: function defaultColumns(alias) {
      var columns = this.entityPromises['columns'];

      if (!columns) {
        columns = $.getJSON(Routing.generate(this.options.urls.columns, {
          alias: alias
        }));
        this.entityPromises['columns'] = columns;
      }

      return columns;
    },

    /**
     * Fetch default datagrid view for given alias of the current user
     *
     * @param {string} alias
     *
     * @return Promise
     */
    defaultUserView: function defaultUserView(alias) {
      var view = this.entityPromises['view'];

      if (!view) {
        view = $.getJSON(Routing.generate(this.options.urls.userDefaultView, {
          alias: alias
        }));
        this.entityPromises['view'] = view;
      }

      return view;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13284:
/*!*******************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/loading-mask.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Loading mask widget
 *
 * @export  oro/loading-mask
 * @class   oro.LoadingMask
 * @extends Backbone.View
 */

/* global define */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, __) {
  return Backbone.View.extend({
    /** @property {Boolean} */
    displayed: false,

    /** @property {String} */
    className: 'AknLoadingMask loading-mask',

    /**
     * Show loading mask
     *
     * @return {*}
     */
    show: function show() {
      this.$el.show();
      this.displayed = true;
      return this;
    },

    /**
     * Hide loading mask
     *
     * @return {*}
     */
    hide: function hide() {
      this.$el.hide();
      this.displayed = false;
      return this;
    },

    /**
     * Render loading mask
     *
     * @return {*}
     */
    render: function render() {
      this.hide();
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 1157:
/*!****************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/multiselect-decorator.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! jquery.multiselect */ 15077), __webpack_require__(/*! jquery.multiselect.filter */ 96525)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, mediator) {
  'use strict';
  /**
   * Multiselect decorator class.
   * Wraps multiselect widget and provides design modifications
   *
   * @export oro/multiselect-decorator
   * @class  oro.MultiselectDecorator
   */

  var MultiselectDecorator = function MultiselectDecorator(options) {
    this.initialize(options);
  };

  MultiselectDecorator.prototype = {
    /**
     * Multiselect widget element container
     *
     * @property {Object}
     */
    element: null,

    /**
     * Default multiselect widget parameters
     *
     * @property {Object}
     */
    parameters: {
      height: 'auto'
    },

    /**
     * @property {Boolean}
     */
    contextSearch: true,

    /**
     * Minimum width of this multiselect
     *
     * @property {int}
     */
    minimumWidth: null,

    /**
     * Initialize all required properties
     */
    initialize: function initialize(options) {
      if (!options.element) {
        throw new Error('Select element must be defined');
      }

      this.element = options.element;

      if (options.parameters) {
        _.extend(this.parameters, options.parameters);
      }

      if (_.has(options, 'contextSearch')) {
        this.contextSearch = options.contextSearch;
      } // initialize multiselect widget


      this.multiselect(this.parameters); // initialize multiselect filter

      if (this.contextSearch) {
        this.multiselectfilter({
          label: '',
          placeholder: '',
          autoReset: true
        });
      } // destroy DOM garbage after change page via hash-navigation


      mediator.once('hash_navigation_request:start', function () {
        if (this.element.closest('body').length) {
          this.multiselect('destroy');
          this.element.hide();
        }
      }, this);
    },

    /**
     * Set design for view
     *
     * @param {Backbone.View} view
     */
    setViewDesign: function setViewDesign(view) {
      view.$('.ui-multiselect').removeClass('ui-widget').removeClass('ui-state-default');
      view.$('.ui-multiselect span.ui-icon').remove();
    },

    /**
     * Action performed on dropdown open
     */
    onOpenDropdown: function onOpenDropdown() {
      this.getWidget().find('input[type="search"]').focus();
      $('body').trigger('click');
    },

    /**
     * Get minimum width of dropdown menu
     *
     * @return {Number}
     */
    getMinimumDropdownWidth: function getMinimumDropdownWidth() {
      if (_.isNull(this.minimumWidth)) {
        var margin = 100;
        var elements = this.getWidget().find('.ui-multiselect-checkboxes li');

        var longest = _.max(_.map(elements, function (element) {
          return $(element).find('span:first').width();
        }));

        this.minimumWidth = longest + margin;
      }

      return this.minimumWidth;
    },

    /**
     * Get multiselect widget
     *
     * @return {Object}
     */
    getWidget: function getWidget() {
      try {
        return this.multiselect('widget');
      } catch (error) {
        return $('.ui-multiselect-menu.pimmultiselect');
      }
    },

    /**
     * Proxy for multiselect method
     *
     * @param functionName
     * @return {Object}
     */
    multiselect: function multiselect(functionName) {
      return this.element.multiselect(functionName);
    },

    /**
     * Proxy for multiselectfilter method
     *
     * @param functionName
     * @return {Object}
     */
    multiselectfilter: function multiselectfilter(functionName) {
      return this.element.multiselectfilter(functionName);
    }
  };
  return MultiselectDecorator;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 3110:
/*!**************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/pageable-collection.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! backbone/pageable-collection */ 16168), __webpack_require__(/*! oro/app */ 10501)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, BackbonePageableCollection, app) {
  'use strict';
  /**
   * Pageable collection
   *
   * Additional events:
   * beforeReset: Fired when collection is about to reset data (e.g. after success response)
   * updateState: Fired when collection state is updated using updateState method
   * beforeFetch: Fired when collection starts to fetch, before request is formed
   *
   * @export  oro/pageable-collection
   * @class   oro.PageableCollection
   * @extends Backbone.PageableCollection
   */

  var PageableCollection = BackbonePageableCollection.extend({
    /**
     * Basic model to store row data
     *
     * @property {Function}
     */
    model: Backbone.Model,

    /**
     * Initial state of collection
     *
     * @property
     */
    initialState: {},

    /**
     * Declaration of URL parameters
     *
     * @property {Object}
     */
    queryParams: _.extend({}, BackbonePageableCollection.prototype.queryParams, {
      directions: {
        '-1': 'ASC',
        '1': 'DESC'
      },
      totalRecords: undefined,
      totalPages: undefined
    }),

    /**
     * Object declares state keys that will be involved in URL-state saving with their shorthands
     *
     * @property {Object}
     */
    stateShortKeys: {
      currentPage: 'i',
      pageSize: 'p',
      sorters: 's',
      filters: 'f',
      gridName: 't',
      gridView: 'v'
    },

    /**
     * @property {Object}
     */
    additionalParameters: {
      view: 'gridView'
    },

    /**
     * Whether multiple sorting is allowed
     *
     * @property {Boolean}
     */
    multipleSorting: true,

    /**
     * @property {Object}
     */
    meta: {},

    /**
     * Initialize basic parameters from source options
     *
     * @param models
     * @param options
     */
    initialize: function initialize(models, options) {
      this.state = {};
      options = options || {};

      if (options.state) {
        if (options.state.sorters) {
          _.each(options.state.sorters, function (direction, field) {
            options.state.sorters[field] = this.getSortDirectionKey(direction);
          }, this);
        }

        _.extend(this.state, options.state);
      }

      this.initialState = app.deepClone(this.state);

      if (options.url) {
        this.url = options.url;
      }

      if (options.model) {
        this.model = options.model;
      }

      if (options.inputName) {
        this.inputName = options.inputName;
      }

      if (models !== null && models !== void 0 && models.meta) {
        this.meta = models.meta;
      }

      this.fetchMethod = options.fetchMethod || 'GET';

      _.extend(this.queryParams, {
        currentPage: this.inputName + '[_pager][_page]',
        pageSize: this.inputName + '[_pager][_per_page]',
        sortBy: this.inputName + '[_sort_by][%field%]',
        parameters: this.inputName + '[_parameters]'
      });

      this.on('remove', this.onRemove, this);
      BackbonePageableCollection.prototype.initialize.apply(this, arguments);
    },

    /**
     * Triggers when model is removed from collection.
     *
     * Ensure that state is changed after concrete model removed from collection.
     *
     * @protected
     */
    onRemove: function onRemove() {
      if (this.state.totalRecords > 0) {
        this.state.totalRecords--;
      }
    },

    /**
     * Encode state object to string
     *
     * @param {Object} stateObject
     * @return {String}
     */
    encodeStateData: function encodeStateData(stateObject) {
      var data = _.pick(stateObject, _.keys(this.stateShortKeys));

      data.gridName = this.inputName;
      data = app.invertKeys(data, this.stateShortKeys);
      return app.packToQueryString(data);
    },

    /**
     * Decode state object from string, operation is invert for encodeStateData.
     *
     * @param {String} stateString
     * @return {Object}
     */
    decodeStateData: function decodeStateData(stateString) {
      var data = app.unpackFromQueryString(stateString);
      data = app.invertKeys(data, _.invert(this.stateShortKeys));
      return data;
    },

    /**
     * Adds filter parameters to data
     *
     * @param {Object} data
     * @param {Object} state
     * @param {String} prefix
     * @return {Object}
     */
    processFiltersParams: function processFiltersParams(data, state, prefix) {
      if (!state) {
        state = this.state;
      }

      if (!prefix) {
        prefix = this.inputName + '[_filter]';
      }

      if (this.inputName && !_.isUndefined(data[this.inputName]) && !_.isUndefined(data[this.inputName]._filter)) {
        var scope = !_.isUndefined(data[this.inputName]._filter.scope) ? data[this.inputName]._filter.scope : null;
        data[this.inputName]._filter = {};

        if (null !== scope) {
          data[this.inputName]._filter.scope = scope;
        }
      }

      if (state.filters) {
        _.extend(data, this.generateParameterStrings(state.filters, prefix));
      }

      return data;
    },

    /**
     * Adds additional parameters to state
     *
     * @param {Object} state
     * @return {Object}
     */
    processAdditionalParams: function processAdditionalParams(state) {
      var state = app.deepClone(state);
      state.parameters = state.parameters || {};

      _.each(this.additionalParameters, _.bind(function (value, key) {
        if (!_.isUndefined(state[value])) {
          state.parameters[key] = state[value];
        }
      }, this));

      return state;
    },

    /**
     * Get list of request parameters
     *
     * @param {Object} parameters
     * @param {String} prefix
     * @return {Object}
     */
    generateParameterStrings: function generateParameterStrings(parameters, prefix) {
      var localStrings = {};
      var localPrefix = prefix;

      _.each(parameters, function (filterParameters, filterKey) {
        filterKey = filterKey.toString();

        if (filterKey.substr(0, 2) != '__') {
          var filterKeyString = localPrefix + '[' + filterKey + ']';

          if (_.isObject(filterParameters)) {
            _.extend(localStrings, this.generateParameterStrings(filterParameters, filterKeyString));
          } else {
            localStrings[filterKeyString] = filterParameters;
          }
        }
      }, this);

      return localStrings;
    },

    /**
     * Parse AJAX response
     *
     * @param resp
     * @param options
     * @return {Object}
     */
    parse: function parse(resp, options) {
      this.state.totalRecords = 'undefined' !== typeof resp.totalRecords ? resp.totalRecords : resp.options.totalRecords;
      this.state.totalProducts = 'undefined' !== typeof resp.totalProducts ? resp.totalProducts : null;
      this.state.totalProductModels = 'undefined' !== typeof resp.totalProductModels ? resp.totalProductModels : null;
      this.state = this._checkState(this.state);
      return resp.data;
    },

    /**
     * Reset collection object
     *
     * @param models
     * @param options
     */
    reset: function reset(models, options) {
      this.trigger('beforeReset', this, options);
      BackbonePageableCollection.prototype.reset.apply(this, arguments);
    },

    /**
     * Updates and checks state
     *
     * @param {Object} state
     */
    updateState: function updateState(state) {
      var newState = _.extend({}, this.state, state);

      this.state = this._checkState(newState);
      this.trigger('updateState', this, this.state);
    },

    /**
     * @inheritDoc
     */
    _checkState: function _checkState(state) {
      var mode = this.mode;
      var links = this.links;
      var totalRecords = state.totalRecords;
      var pageSize = state.pageSize;
      var currentPage = state.currentPage < 0 ? 1 : state.currentPage;
      var firstPage = state.firstPage;
      var totalPages = state.totalPages;

      if (totalRecords != null && pageSize != null && currentPage != null && firstPage != null && (mode == 'infinite' ? links : true)) {
        state.totalRecords = totalRecords = this.finiteInt(totalRecords, 'totalRecords');
        state.pageSize = pageSize = this.finiteInt(pageSize, 'pageSize');
        state.currentPage = currentPage = this.finiteInt(currentPage, 'currentPage');
        state.firstPage = firstPage = this.finiteInt(firstPage, 'firstPage');

        if (pageSize < 0) {
          throw new RangeError('`pageSize` must be >= 0');
        }

        state.totalPages = pageSize == 0 ? 1 : totalPages = state.totalPages = Math.ceil(totalRecords / pageSize);

        if (firstPage < 0 || firstPage > 1) {
          throw new RangeError('`firstPage` must be 0 or 1');
        }

        state.lastPage = firstPage === 0 ? totalPages - 1 : totalPages;
        state.lastPage = state.lastPage < 0 ? 1 : state.lastPage; // page out of range

        if (currentPage > state.lastPage && state.pageSize > 0) {
          state.currentPage = currentPage = state.lastPage;
        }

        if (state.pageSize == 0) {
          state.currentPage = currentPage = 1;
        } // no results returned


        if (totalRecords == 0) {
          state.currentPage = currentPage = firstPage;
        }

        if (mode == 'infinite') {
          if (!links[currentPage + '']) {
            throw new RangeError('No link found for page ' + currentPage);
          }
        } else if (totalPages > 0) {
          if (firstPage === 0 && (currentPage < firstPage || currentPage >= totalPages)) {
            throw new RangeError('`currentPage` must be firstPage <= currentPage < totalPages if 0-based. Got ' + currentPage + '.');
          } else if (firstPage === 1 && (currentPage < firstPage || currentPage > totalPages)) {
            throw new RangeError('`currentPage` must be firstPage <= currentPage <= totalPages if 1-based. Got ' + currentPage + '.');
          }
        } else if (currentPage !== firstPage) {
          throw new RangeError('`currentPage` must be ' + firstPage + '. Got ' + currentPage + '.');
        }
      }

      return state;
    },

    /**
     * Asserts that val is finite integer.
     *
     * @param {*} val
     * @param {String} name
     * @return {Number}
     * @protected
     */
    finiteInt: function finiteInt(val, name) {
      val *= 1;

      if (!_.isNumber(val) || _.isNaN(val) || !_.isFinite(val) || ~~val !== val) {
        throw new TypeError('`' + name + '` must be a finite integer');
      }

      return val;
    },

    /**
     * Fetch collection data
     */
    fetch: function fetch(options) {
      this.trigger('beforeFetch', this, options);
      var BBColProto = Backbone.Collection.prototype;
      options = options || {};

      var state = this._checkState(this.state);

      var mode = this.mode;

      if (mode == 'infinite' && !options.url) {
        options.url = this.links[state.currentPage];
      }

      var data = options.data || {}; // set up query params

      var url = options.url || _.result(this, 'url') || '';

      if ('GET' === this.fetchMethod) {
        var qsi = url.indexOf('?');

        if (qsi != -1) {
          _.extend(data, app.unpackFromQueryString(url.slice(qsi + 1)));

          url = url.slice(0, qsi);
        }
      }

      options.url = url;
      options.data = data;
      options.type = this.fetchMethod;
      data = this.processQueryParams(data, state);
      data = this.processFiltersParams(data, state);
      var fullCollection = this.fullCollection,
          links = this.links;

      if (mode != 'server') {
        var self = this;
        var success = options.success;

        options.success = function (col, resp, opts) {
          // make sure the caller's intent is obeyed
          opts = opts || {};
          if (_.isUndefined(options.silent)) delete opts.silent;else opts.silent = options.silent;
          var models = col.models;
          var currentPage = state.currentPage;
          if (mode == 'client') resetQuickly(fullCollection, models, opts);else if (links[currentPage]) {
            // refetching a page
            var pageSize = state.pageSize;
            var pageStart = (state.firstPage === 0 ? currentPage : currentPage - 1) * pageSize;
            var fullModels = fullCollection.models;
            var head = fullModels.slice(0, pageStart);
            var tail = fullModels.slice(pageStart + pageSize);
            fullModels = head.concat(models).concat(tail);
            fullCollection.update(fullModels, _.extend({
              silent: true,
              sort: false
            }, opts));
            if (fullCollection.comparator) fullCollection.sort();
            fullCollection.trigger('reset', fullCollection, opts);
          } else {
            // fetching new page
            fullCollection.add(models, _.extend({
              at: fullCollection.length,
              silent: true
            }, opts));
            fullCollection.trigger('reset', fullCollection, opts);
          }
          if (success) success(col, resp, opts);
        }; // silent the first reset from backbone


        return BBColProto.fetch.call(self, _.extend({}, options, {
          silent: true
        }));
      }

      return BBColProto.fetch.call(this, options);
    },

    /**
     * Process parameters which are sending to server
     *
     * @param {Object} data
     * @param {Object} state
     * @return {Object}
     */
    processQueryParams: function processQueryParams(data, state) {
      state = this.processAdditionalParams(state);
      var pageablePrototype = PageableCollection.prototype; // map params except directions

      var queryParams = this.mode == 'client' ? _.pick(this.queryParams, 'sorters') : _.omit(_.pick(this.queryParams, _.keys(pageablePrototype.queryParams)), 'directions');

      var i,
          kvp,
          k,
          v,
          kvps = _.pairs(queryParams),
          thisCopy = _.clone(this);

      for (i = 0; i < kvps.length; i++) {
        kvp = kvps[i], k = kvp[0], v = kvp[1];
        v = _.isFunction(v) ? v.call(thisCopy) : v;

        if (state[k] != null && v != null) {
          data[v] = state[k];
        }
      } // set sorting parameters


      var hasSorterParameterInState = false;

      if (state.sorters) {
        _.each(state.sorters, function (direction, field) {
          var key = this.queryParams.sortBy.replace('%field%', field);
          data[key] = this.queryParams.directions[direction];
          hasSorterParameterInState = true;
        }, this);
      } // We can have sorter parameters in the url (saved in session) and in the current state.
      // To avoid to have multiple sorters and a strange display, when the user chooses a new sorter, we
      // remove the old one.


      if (hasSorterParameterInState && !this.multipleSorting && 'undefined' !== typeof data[this.inputName]) {
        delete data[this.inputName]['_sort_by'];
      } // map extra query parameters


      var extraKvps = _.pairs(_.omit(this.queryParams, _.keys(pageablePrototype.queryParams)));

      for (i = 0; i < extraKvps.length; i++) {
        kvp = extraKvps[i];
        v = kvp[1];
        v = _.isFunction(v) ? v.call(thisCopy) : v;
        data[kvp[0]] = v;
      } // unused parameters


      delete data[queryParams.order];
      delete data[queryParams.sortKey];
      return data;
    },

    /**
     * Convert direction value to direction key
     *
     * @param {String} directionValue
     * @return {String}
     */
    getSortDirectionKey: function getSortDirectionKey(directionValue) {
      var directionKey = null;

      _.each(this.queryParams.directions, function (value, key) {
        if (value == directionValue) {
          directionKey = key;
        }
      });

      return directionKey;
    },

    /**
     * Set sorting order
     *
     * @param {String} sortKey
     * @param {String} order
     * @param {Object} options
     * @return {*}
     */
    setSorting: function setSorting(sortKey, order, options) {
      var state = this.state;
      state.sorters = state.sorters || {};

      if (this.multipleSorting) {
        // there is always must be at least one sorted column
        if (_.keys(state.sorters).length <= 1 && !order) {
          order = this.getSortDirectionKey('ASC'); // default order
        } // last sorting has the lowest priority


        delete state.sorters[sortKey];
      } else {
        state.sorters = {};
      }

      if (order) {
        state.sorters[sortKey] = order;
      }

      var fullCollection = this.fullCollection;
      var delComp = false,
          delFullComp = false;
      if (!order) delComp = delFullComp = true;
      var mode = this.mode;
      options = _.extend({
        side: mode == 'client' ? mode : 'server',
        full: true
      }, options);

      var comparator = this._makeComparator(sortKey, order);

      var full = options.full,
          side = options.side;

      if (side == 'client') {
        if (full) {
          if (fullCollection) fullCollection.comparator = comparator;
          delComp = true;
        } else {
          this.comparator = comparator;
          delFullComp = true;
        }
      } else if (side == 'server' && !full) {
        this.comparator = comparator;
      }

      if (delComp) delete this.comparator;
      if (delFullComp && fullCollection) delete fullCollection.comparator;
      return this;
    },

    /**
     * Clone collection
     *
     * @return {PageableCollection}
     */
    clone: function clone() {
      var collectionOptions = {};
      collectionOptions.url = this.url;
      collectionOptions.inputName = this.inputName;
      var newCollection = new PageableCollection(this.toJSON(), collectionOptions);
      newCollection.state = app.deepClone(this.state);
      return newCollection;
    }
  });
  return PageableCollection;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62514:
/*!************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/remover/datagrid-view-remover.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_datagrid_view_rest_remove"} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Routing) {
  return {
    /**
     * Remove the given datagridView.
     * Return the DELETE request promise.
     *
     * @param {object} datagridView
     *
     * @returns {Promise}
     */
    remove: function remove(datagridView) {
      var removeRoute = Routing.generate(__moduleConfig.url, {
        identifier: datagridView.id
      });
      return $.ajax({
        url: removeRoute,
        type: 'DELETE'
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 9165:
/*!********************************************************************!*\
  !*** ./public/bundles/pimdatagrid/js/saver/datagrid-view-saver.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_datagrid_view_rest_save"} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Routing) {
  return {
    /**
     * Save the given datagridView for the given gridAlias.
     * Return the POST request promise.
     *
     * @param {object} datagridView
     * @param {string} gridAlias
     *
     * @returns {Promise}
     */
    save: function save(datagridView, gridAlias) {
      var saveRoute = Routing.generate(__moduleConfig.url, {
        alias: gridAlias
      });
      return $.post(saveRoute, {
        view: datagridView
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16168:
/*!*************************************************************!*\
  !*** ./public/bundles/pimdatagrid/lib/backbone-pageable.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*
  backbone-pageable 1.2.3
  http://github.com/wyuenho/backbone-pageable

  Copyright (c) 2013 Jimmy Yuen Ho Wong
  Licensed under the MIT @license.
*/
(function (factory) {
  // CommonJS
  if (( false ? 0 : _typeof(exports)) == 'object') {
    module.exports = factory(__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918));
  } // AMD
  else if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } // Browser
  else { var PageableCollection, oldPageableCollection; }
})(function (_, Backbone) {
  'use strict';

  var _extend = _.extend;
  var _omit = _.omit;
  var _clone = _.clone;
  var _each = _.each;
  var _pick = _.pick;
  var _contains = _.contains;
  var _isEmpty = _.isEmpty;
  var _pairs = _.pairs;
  var _invert = _.invert;
  var _isArray = _.isArray;
  var _isFunction = _.isFunction;
  var _isObject = _.isObject;
  var _keys = _.keys;
  var _isUndefined = _.isUndefined;
  var _result = _.result;
  var ceil = Math.ceil;
  var floor = Math.floor;
  var max = Math.max;
  var BBColProto = Backbone.Collection.prototype;

  function finiteInt(val, name) {
    if (!_.isNumber(val) || _.isNaN(val) || !_.isFinite(val) || ~~val !== val) {
      throw new TypeError('`' + name + '` must be a finite integer');
    }

    return val;
  }

  function queryStringToParams(qs) {
    var kvp,
        k,
        v,
        ls,
        params = {},
        decode = decodeURIComponent;
    var kvps = qs.split('&');

    for (var i = 0, l = kvps.length; i < l; i++) {
      var param = kvps[i];
      kvp = param.split('='), k = kvp[0], v = kvp[1] || true;
      k = decode(k), ls = params[k];
      if (_isArray(ls)) ls.push(v);else if (ls) params[k] = [ls, v];else params[k] = v;
    }

    return params;
  } // Quickly reset a collection by temporarily detaching the comparator of the
  // given collection, reset and then attach the comparator back to the
  // collection and sort.
  // @param {Backbone.Collection} collection
  // @param {...*} resetArgs
  // @return {Backbone.Collection} collection The same collection instance after
  // reset.


  function resetQuickly() {
    var collection = arguments[0];

    var resetArgs = _.toArray(arguments).slice(1);

    var comparator = collection.comparator;
    collection.comparator = null;

    try {
      collection.reset.apply(collection, resetArgs);
    } finally {
      collection.comparator = comparator;
      if (comparator) collection.sort();
    }

    return collection;
  }

  var PARAM_TRIM_RE = /[\s'"]/g;
  var URL_TRIM_RE = /[<>\s'"]/g;
  /**
     Drop-in replacement for Backbone.Collection. Supports server-side and
     client-side pagination and sorting. Client-side mode also support fully
     multi-directional synchronization of changes between pages.
      @class Backbone.PageableCollection
     @extends Backbone.Collection
  */

  var PageableCollection = Backbone.Collection.extend({
    /**
       The container object to store all pagination states.
        You can override the default state by extending this class or specifying
       them in an `options` hash to the constructor.
        @property {Object} state
        @property {0|1} [state.firstPage=1] The first page index. Set to 0 if
       your server API uses 0-based indices. You should only override this value
       during extension, initialization or reset by the server after
       fetching. This value should be read only at other times.
        @property {number} [state.lastPage=null] The last page index. This value
       is __read only__ and it's calculated based on whether `firstPage` is 0 or
       1, during bootstrapping, fetching and resetting. Please don't change this
       value under any circumstances.
        @property {number} [state.currentPage=null] The current page index. You
       should only override this value during extension, initialization or reset
       by the server after fetching. This value should be read only at other
       times. Can be a 0-based or 1-based index, depending on whether
       `firstPage` is 0 or 1. If left as default, it will be set to `firstPage`
       on initialization.
        @property {number} [state.pageSize=25] How many records to show per
       page. This value is __read only__ after initialization, if you want to
       change the page size after initialization, you must call #setPageSize.
        @property {number} [state.totalPages=null] How many pages there are. This
       value is __read only__ and it is calculated from `totalRecords`.
        @property {number} [state.totalRecords=null] How many records there
       are. This value is __required__ under server mode. This value is optional
       for client mode as the number will be the same as the number of models
       during bootstrapping and during fetching, either supplied by the server
       in the metadata, or calculated from the size of the response.
        @property {string} [state.sortKey=null] The model attribute to use for
       sorting.
        @property {-1|0|1} [state.order=-1] The order to use for sorting. Specify
       -1 for ascending order or 1 for descending order. If 0, no client side
       sorting will be done and the order query parameter will not be sent to
       the server during a fetch.
    */
    state: {
      firstPage: 1,
      lastPage: null,
      currentPage: null,
      pageSize: 25,
      totalPages: null,
      totalRecords: null,
      sortKey: null,
      order: -1
    },

    /**
       @property {"server"|"client"|"infinite"} [mode="server"] The mode of
       operations for this collection. `"server"` paginates on the server-side,
       `"client"` paginates on the client-side and `"infinite"` paginates on the
       server-side for APIs that do not support `totalRecords`.
    */
    mode: 'server',

    /**
       A translation map to convert Backbone.PageableCollection state attributes
       to the query parameters accepted by your server API.
        You can override the default state by extending this class or specifying
       them in `options.queryParams` object hash to the constructor.
        @property {Object} queryParams
       @property {string} [queryParams.currentPage="page"]
       @property {string} [queryParams.pageSize="per_page"]
       @property {string} [queryParams.totalPages="total_pages"]
       @property {string} [queryParams.totalRecords="total_entries"]
       @property {string} [queryParams.sortKey="sort_by"]
       @property {string} [queryParams.order="order"]
       @property {string} [queryParams.directions={"-1": "asc", "1": "desc"}] A
       map for translating a Backbone.PageableCollection#state.order constant to
       the ones your server API accepts.
    */
    queryParams: {
      currentPage: 'page',
      pageSize: 'per_page',
      totalPages: 'total_pages',
      totalRecords: 'total_entries',
      sortKey: 'sort_by',
      order: 'order',
      directions: {
        '-1': 'asc',
        '1': 'desc'
      }
    },

    /**
       __CLIENT MODE ONLY__
        This collection is the internal storage for the bootstrapped or fetched
       models. You can use this if you want to operate on all the pages.
        @property {Backbone.Collection} fullCollection
    */

    /**
       Given a list of models or model attributues, bootstraps the full
       collection in client mode or infinite mode, or just the page you want in
       server mode.
        If you want to initialize a collection to a different state than the
       default, you can specify them in `options.state`. Any state parameters
       supplied will be merged with the default. If you want to change the
       default mapping from #state keys to your server API's query parameter
       names, you can specifiy an object hash in `option.queryParams`. Likewise,
       any mapping provided will be merged with the default. Lastly, all
       Backbone.Collection constructor options are also accepted.
        See:
        - Backbone.PageableCollection#state
       - Backbone.PageableCollection#queryParams
       - [Backbone.Collection#initialize](http://backbonejs.org/#Collection-constructor)
        @param {Array.<Object>} [models]
        @param {Object} [options]
        @param {function(*, *): number} [options.comparator] If specified, this
       comparator is set to the current page under server mode, or the
       #fullCollection otherwise.
        @param {boolean} [options.full] If `false` and either a
       `options.comparator` or `sortKey` is defined, the comparator is attached
       to the current page. Default is `true` under client or infinite mode and
       the comparator will be attached to the #fullCollection.
        @param {Object} [options.state] The state attributes overriding the defaults.
        @param {string} [options.state.sortKey] The model attribute to use for
       sorting. If specified instead of `options.comparator`, a comparator will
       be automatically created using this value, and optionally a sorting order
       specified in `options.state.order`. The comparator is then attached to
       the new collection instance.
        @param {-1|1} [options.state.order] The order to use for sorting. Specify
       -1 for ascending order and 1 for descending order.
        @param {Object} [options.queryParam]
    */
    initialize: function initialize(models, options) {
      options = options || {};
      var mode = this.mode = options.mode || this.mode || PageableProto.mode;

      var queryParams = _extend({}, PageableProto.queryParams, this.queryParams, options.queryParams || {});

      queryParams.directions = _extend({}, PageableProto.queryParams.directions, this.queryParams.directions, queryParams.directions || {});
      this.queryParams = queryParams;

      var state = this.state = _extend({}, PageableProto.state, this.state, options.state || {});

      state.currentPage = state.currentPage == null ? state.firstPage : state.currentPage;
      if (!_isArray(models)) models = models ? [models] : [];

      if (mode != 'server' && state.totalRecords == null && !_isEmpty(models)) {
        state.totalRecords = models.length;
      }

      this.switchMode(mode, _extend({
        fetch: false,
        resetState: false,
        models: models
      }, options));
      var comparator = options.comparator;

      if (state.sortKey && !comparator) {
        this.setSorting(state.sortKey, state.order, options);
      }

      if (mode != 'server') {
        if (comparator && options.full) {
          delete this.comparator;
          var fullCollection = this.fullCollection;
          fullCollection.comparator = comparator;
          fullCollection.sort();
        } // make sure the models in the current page and full collection have the
        // same references


        if (models && !_isEmpty(models)) {
          this.getPage(state.currentPage);
          models.splice.apply(models, [0, models.length].concat(this.models));
        }
      }

      this._initState = _clone(this.state);
    },

    /**
       Makes a Backbone.Collection that contains all the pages.
        @private
       @param {Array.<Object|Backbone.Model>} models
       @param {Object} options Options for Backbone.Collection constructor.
       @return {Backbone.Collection}
    */
    _makeFullCollection: function _makeFullCollection(models, options) {
      var properties = ['url', 'model', 'sync', 'comparator'];
      var thisProto = this.constructor.prototype;
      var i, length, prop;
      var proto = {};

      for (i = 0, length = properties.length; i < length; i++) {
        prop = properties[i];

        if (!_isUndefined(thisProto[prop])) {
          proto[prop] = thisProto[prop];
        }
      }

      var fullCollection = new (Backbone.Collection.extend(proto))(models, options);

      for (i = 0, length = properties.length; i < length; i++) {
        prop = properties[i];

        if (this[prop] !== thisProto[prop]) {
          fullCollection[prop] = this[prop];
        }
      }

      return fullCollection;
    },

    /**
       Factory method that returns a Backbone event handler that responses to
       the `add`, `remove`, `reset`, and the `sort` events. The returned event
       handler will synchronize the current page collection and the full
       collection's models.
        @private
        @param {Backbone.PageableCollection} pageCol
       @param {Backbone.Collection} fullCol
        @return {function(string, Backbone.Model, Backbone.Collection, Object)}
       Collection event handler
    */
    _makeCollectionEventHandler: function _makeCollectionEventHandler(pageCol, fullCol) {
      return function collectionEventHandler(event, model, collection, options) {
        var handlers = pageCol._handlers;

        _each(_keys(handlers), function (event) {
          var handler = handlers[event];
          pageCol.off(event, handler);
          fullCol.off(event, handler);
        });

        var state = _clone(pageCol.state);

        var firstPage = state.firstPage;
        var currentPage = firstPage === 0 ? state.currentPage : state.currentPage - 1;
        var pageSize = state.pageSize;
        var pageStart = currentPage * pageSize,
            pageEnd = pageStart + pageSize;

        if (event == 'add') {
          var pageIndex,
              fullIndex,
              addAt,
              colToAdd,
              options = options || {};

          if (collection == fullCol) {
            fullIndex = fullCol.indexOf(model);

            if (fullIndex >= pageStart && fullIndex < pageEnd) {
              colToAdd = pageCol;
              pageIndex = addAt = fullIndex - pageStart;
            }
          } else {
            pageIndex = pageCol.indexOf(model);
            fullIndex = pageStart + pageIndex;
            colToAdd = fullCol;
            var addAt = !_isUndefined(options.at) ? options.at + pageStart : fullIndex;
          }

          ++state.totalRecords;
          pageCol.state = pageCol._checkState(state);

          if (colToAdd) {
            colToAdd.add(model, _extend({}, options || {}, {
              at: addAt
            }));
            var modelToRemove = pageIndex >= pageSize ? model : !_isUndefined(options.at) && addAt < pageEnd && pageCol.length > pageSize ? pageCol.at(pageSize) : null;

            if (modelToRemove) {
              var addHandlers = collection._events.add || [],
                  popOptions = {
                onAdd: true
              };

              if (addHandlers.length) {
                var lastAddHandler = addHandlers[addHandlers.length - 1];
                var oldCallback = lastAddHandler.callback;

                lastAddHandler.callback = function () {
                  try {
                    oldCallback.apply(this, arguments);
                    pageCol.remove(modelToRemove, popOptions);
                  } finally {
                    lastAddHandler.callback = oldCallback;
                  }
                };
              } else pageCol.remove(modelToRemove, popOptions);
            }
          }
        } // remove the model from the other collection as well


        if (event == 'remove') {
          if (!options.onAdd) {
            // decrement totalRecords and update totalPages and lastPage
            if (! --state.totalRecords) {
              state.totalRecords = null;
              state.totalPages = null;
            } else {
              var totalPages = state.totalPages = ceil(state.totalRecords / pageSize);
              state.lastPage = firstPage === 0 ? totalPages - 1 : totalPages;
              if (state.currentPage > totalPages) state.currentPage = state.lastPage;
            }

            pageCol.state = pageCol._checkState(state);
            var nextModel,
                removedIndex = options.index;

            if (collection == pageCol) {
              if (nextModel = fullCol.at(pageEnd)) pageCol.push(nextModel);
              fullCol.remove(model);
            } else if (removedIndex >= pageStart && removedIndex < pageEnd) {
              pageCol.remove(model);
              nextModel = fullCol.at(currentPage * (pageSize + removedIndex));
              if (nextModel) pageCol.push(nextModel);
            }
          } else delete options.onAdd;
        }

        if (event == 'reset' || event == 'sort') {
          options = collection;
          collection = model;

          if (collection == pageCol && event == 'reset') {
            var head = fullCol.models.slice(0, pageStart);
            var tail = fullCol.models.slice(pageStart + pageCol.models.length);
            options = _extend(options, {
              silent: true
            });
            resetQuickly(fullCol, head.concat(pageCol.models).concat(tail), options);
          }

          if (event == 'reset' || collection == fullCol) {
            if (!(state.totalRecords = fullCol.models.length)) {
              state.totalRecords = null;
              state.totalPages = null;
              state.lastPage = state.currentPage = state.firstPage;
            }

            pageCol.state = pageCol._checkState(state);
            if (collection == pageCol) fullCol.trigger(event, fullCol, options);
            resetQuickly(pageCol, fullCol.models.slice(pageStart, pageEnd), _extend({}, options, {
              parse: false
            }));
          }
        }

        _each(_keys(handlers), function (event) {
          var handler = handlers[event];

          _each([pageCol, fullCol], function (col) {
            col.on(event, handler);
            var callbacks = col._events[event] || [];
            callbacks.unshift(callbacks.pop());
          });
        });
      };
    },

    /**
       Sanity check this collection's pagination states. Only perform checks
       when all the required pagination state values are defined and not null.
       If `totalPages` is undefined or null, it is set to `totalRecords` /
       `pageSize`. `lastPage` is set according to whether `firstPage` is 0 or 1
       when no error occurs.
        @private
        @throws {TypeError} If `totalRecords`, `pageSize`, `currentPage` or
       `firstPage` is not a finite integer.
        @throws {RangeError} If `pageSize`, `currentPage` or `firstPage` is out
       of bounds.
        @return {Object} Returns the `state` object if no error was found.
    */
    _checkState: function _checkState(state) {
      var mode = this.mode;
      var links = this.links;
      var totalRecords = state.totalRecords;
      var pageSize = state.pageSize;
      var currentPage = state.currentPage;
      var firstPage = state.firstPage;
      var totalPages = state.totalPages;

      if (totalRecords != null && pageSize != null && currentPage != null && firstPage != null && (mode == 'infinite' ? links : true)) {
        totalRecords = finiteInt(totalRecords, 'totalRecords');
        pageSize = finiteInt(pageSize, 'pageSize');
        currentPage = finiteInt(currentPage, 'currentPage');
        firstPage = finiteInt(firstPage, 'firstPage');

        if (pageSize < 1) {
          throw new RangeError('`pageSize` must be >= 1');
        }

        totalPages = state.totalPages = ceil(totalRecords / pageSize);

        if (firstPage < 0 || firstPage > 1) {
          throw new RangeError('`firstPage must be 0 or 1`');
        }

        state.lastPage = firstPage === 0 ? max(0, totalPages - 1) : totalPages;

        if (mode == 'infinite') {
          if (!links[currentPage + '']) {
            throw new RangeError('No link found for page ' + currentPage);
          }
        } else if (currentPage < firstPage || totalPages > 0 && (firstPage ? currentPage > totalPages : currentPage >= totalPages)) {
          throw new RangeError('`currentPage` must be firstPage <= currentPage ' + (firstPage ? '>' : '>=') + ' totalPages if ' + firstPage + '-based. Got ' + currentPage + '.');
        }
      }

      return state;
    },

    /**
       Change the page size of this collection.
        For server mode operations, changing the page size will trigger a #fetch
       and subsequently a `reset` event.
        For client mode operations, changing the page size will `reset` the
       current page by recalculating the current page boundary on the client
       side.
        If `options.fetch` is true, a fetch can be forced if the collection is in
       client mode.
        @param {number} pageSize The new page size to set to #state.
       @param {Object} [options] {@link #fetch} options.
       @param {boolean} [options.fetch] If `true`, force a fetch in client mode.
        @throws {TypeError} If `pageSize` is not a finite integer.
       @throws {RangeError} If `pageSize` is less than 1.
        @chainable
       @return {XMLHttpRequest|Backbone.PageableCollection} The XMLHttpRequest
       from fetch or this.
    */
    setPageSize: function setPageSize(pageSize, options) {
      pageSize = finiteInt(pageSize, 'pageSize');
      options = options || {};
      this.state = this._checkState(_extend({}, this.state, {
        pageSize: pageSize,
        totalPages: ceil(this.state.totalRecords / pageSize)
      }));
      return this.getPage(this.state.currentPage, options);
    },

    /**
       Switching between client, server and infinite mode.
        If switching from client to server mode, the #fullCollection is emptied
       first and then deleted and a fetch is immediately issued for the current
       page from the server. Pass `false` to `options.fetch` to skip fetching.
        If switching to infinite mode, and if `options.models` is given for an
       array of models, #links will be populated with a URL per page, using the
       default URL for this collection.
        If switching from server to client mode, all of the pages are immediately
       refetched. If you have too many pages, you can pass `false` to
       `options.fetch` to skip fetching.
        If switching to any mode from infinite mode, the #links will be deleted.
        @param {"server"|"client"|"infinite"} [mode] The mode to switch to.
        @param {Object} [options]
        @param {boolean} [options.fetch=true] If `false`, no fetching is done.
        @param {boolean} [options.resetState=true] If 'false', the state is not
       reset, but checked for sanity instead.
        @chainable
       @return {XMLHttpRequest|Backbone.PageableCollection} The XMLHttpRequest
       from fetch or this if `options.fetch` is `false`.
    */
    switchMode: function switchMode(mode, options) {
      if (!_contains(['server', 'client', 'infinite'], mode)) {
        throw new TypeError('`mode` must be one of "server", "client" or "infinite"');
      }

      options = options || {
        fetch: true,
        resetState: true
      };
      var state = this.state = options.resetState ? _clone(this._initState) : this._checkState(_extend({}, this.state));
      this.mode = mode;
      var self = this;
      var fullCollection = this.fullCollection;
      var handlers = this._handlers = this._handlers || {},
          handler;

      if (mode != 'server' && !fullCollection) {
        fullCollection = this._makeFullCollection(options.models || []);
        fullCollection.pageableCollection = this;
        this.fullCollection = fullCollection;

        var allHandler = this._makeCollectionEventHandler(this, fullCollection);

        _each(['add', 'remove', 'reset', 'sort'], function (event) {
          handlers[event] = handler = _.bind(allHandler, {}, event);
          self.on(event, handler);
          fullCollection.on(event, handler);
        });

        fullCollection.comparator = this._fullComparator;
      } else if (mode == 'server' && fullCollection) {
        _each(_keys(handlers), function (event) {
          handler = handlers[event];
          self.off(event, handler);
          fullCollection.off(event, handler);
        });

        delete this._handlers;
        this._fullComparator = fullCollection.comparator;
        delete this.fullCollection;
      }

      if (mode == 'infinite') {
        var links = this.links = {};
        var firstPage = state.firstPage;
        var totalPages = ceil(state.totalRecords / state.pageSize);
        var lastPage = firstPage === 0 ? max(0, totalPages - 1) : totalPages || firstPage;

        for (var i = state.firstPage; i <= lastPage; i++) {
          links[i] = this.url;
        }
      } else if (this.links) delete this.links;

      return options.fetch ? this.fetch(_omit(options, 'fetch', 'resetState')) : this;
    },

    /**
       @return {boolean} `true` if this collection can page backward, `false`
       otherwise.
    */
    hasPrevious: function hasPrevious() {
      var state = this.state;
      var currentPage = state.currentPage;
      if (this.mode != 'infinite') return currentPage > state.firstPage;
      return !!this.links[currentPage - 1];
    },

    /**
       @return {boolean} `true` if this collection can page forward, `false`
       otherwise.
    */
    hasNext: function hasNext() {
      var state = this.state;
      var currentPage = this.state.currentPage;
      if (this.mode != 'infinite') return currentPage < state.lastPage;
      return !!this.links[currentPage + 1];
    },

    /**
       Fetch the first page in server mode, or reset the current page of this
       collection to the first page in client or infinite mode.
        @param {Object} options {@link #getPage} options.
        @chainable
       @return {XMLHttpRequest|Backbone.PageableCollection} The XMLHttpRequest
       from fetch or this.
    */
    getFirstPage: function getFirstPage(options) {
      return this.getPage('first', options);
    },

    /**
       Fetch the previous page in server mode, or reset the current page of this
       collection to the previous page in client or infinite mode.
        @param {Object} options {@link #getPage} options.
        @chainable
       @return {XMLHttpRequest|Backbone.PageableCollection} The XMLHttpRequest
       from fetch or this.
    */
    getPreviousPage: function getPreviousPage(options) {
      return this.getPage('prev', options);
    },

    /**
       Fetch the next page in server mode, or reset the current page of this
       collection to the next page in client mode.
        @param {Object} options {@link #getPage} options.
        @chainable
       @return {XMLHttpRequest|Backbone.PageableCollection} The XMLHttpRequest
       from fetch or this.
    */
    getNextPage: function getNextPage(options) {
      return this.getPage('next', options);
    },

    /**
       Fetch the last page in server mode, or reset the current page of this
       collection to the last page in client mode.
        @param {Object} options {@link #getPage} options.
        @chainable
       @return {XMLHttpRequest|Backbone.PageableCollection} The XMLHttpRequest
       from fetch or this.
    */
    getLastPage: function getLastPage(options) {
      return this.getPage('last', options);
    },

    /**
       Given a page index, set #state.currentPage to that index. If this
       collection is in server mode, fetch the page using the updated state,
       otherwise, reset the current page of this collection to the page
       specified by `index` in client mode. If `options.fetch` is true, a fetch
       can be forced in client mode before resetting the current page. Under
       infinite mode, if the index is less than the current page, a reset is
       done as in client mode. If the index is greater than the current page
       number, a fetch is made with the results **appended** to
       #fullCollection. The current page will then be reset after fetching.
        @param {number|string} index The page index to go to, or the page name to
       look up from #links in infinite mode.
       @param {Object} [options] {@link #fetch} options or
       [reset](http://backbonejs.org/#Collection-reset) options for client mode
       when `options.fetch` is `false`.
       @param {boolean} [options.fetch=false] If true, force a {@link #fetch} in
       client mode.
        @throws {TypeError} If `index` is not a finite integer under server or
       client mode, or does not yield a URL from #links under infinite mode.
        @throws {RangeError} If `index` is out of bounds.
        @chainable
       @return {XMLHttpRequest|Backbone.PageableCollection} The XMLHttpRequest
       from fetch or this.
    */
    getPage: function getPage(index, options) {
      var mode = this.mode,
          fullCollection = this.fullCollection;
      options = options || {
        fetch: false
      };
      var state = this.state,
          firstPage = state.firstPage,
          currentPage = state.currentPage,
          lastPage = state.lastPage,
          pageSize = state.pageSize;
      var pageNum = index;

      switch (index) {
        case 'first':
          pageNum = firstPage;
          break;

        case 'prev':
          pageNum = currentPage - 1;
          break;

        case 'next':
          pageNum = currentPage + 1;
          break;

        case 'last':
          pageNum = lastPage;
          break;

        default:
          pageNum = finiteInt(index, 'index');
      }

      this.state = this._checkState(_extend({}, state, {
        currentPage: pageNum
      }));
      var pageStart = (firstPage === 0 ? pageNum : pageNum - 1) * pageSize;
      var pageModels = fullCollection && fullCollection.length ? fullCollection.models.slice(pageStart, pageStart + pageSize) : [];

      if ((mode == 'client' || mode == 'infinite' && !_isEmpty(pageModels)) && !options.fetch) {
        return resetQuickly(this, pageModels, _omit(options, 'fetch'));
      }

      if (mode == 'infinite') options.url = this.links[pageNum];
      return this.fetch(_omit(options, 'fetch'));
    },

    /**
       Fetch the page for the provided item offset in server mode, or reset the current page of this
       collection to the page for the provided item offset in client mode.
        @param {Object} options {@link #getPage} options.
        @chainable
       @return {XMLHttpRequest|Backbone.PageableCollection} The XMLHttpRequest
       from fetch or this.
    */
    getPageByOffset: function getPageByOffset(offset, options) {
      if (offset < 0) {
        throw new RangeError('`offset must be > 0`');
      }

      offset = finiteInt(offset);
      var page = floor(offset / this.state.pageSize);
      if (this.state.firstPage !== 0) page++;
      if (page > this.state.lastPage) page = this.state.lastPage;
      return this.getPage(page, options);
    },

    /**
       Overidden to make `getPage` compatible with Zepto.
        @param {string} method
       @param {Backbone.Model|Backbone.Collection} model
       @param {Object} [options]
        @return {XMLHttpRequest}
    */
    sync: function sync(method, model, options) {
      var self = this;

      if (self.mode == 'infinite') {
        var success = options.success;
        var currentPage = self.state.currentPage;

        options.success = function (resp, status, xhr) {
          var links = self.links;
          var newLinks = self.parseLinks(resp, _extend({
            xhr: xhr
          }, options));
          if (newLinks.first) links[self.state.firstPage] = newLinks.first;
          if (newLinks.prev) links[currentPage - 1] = newLinks.prev;
          if (newLinks.next) links[currentPage + 1] = newLinks.next;
          if (success) success(resp, status, xhr);
        };
      }

      return (BBColProto.sync || Backbone.sync).call(self, method, model, options);
    },

    /**
       Parse pagination links from the server response. Only valid under
       infinite mode.
        Given a response body and a XMLHttpRequest object, extract pagination
       links from them for infinite paging.
        This default implementation parses the RFC 5988 `Link` header and extract
       3 links from it - `first`, `prev`, `next`. If a `previous` link is found,
       it will be found in the `prev` key in the returned object hash. Any
       subclasses overriding this method __must__ return an object hash having
       only the keys above. If `first` is missing, the collection's default URL
       is assumed to be the `first` URL. If `prev` or `next` is missing, it is
       assumed to be `null`. An empty object hash must be returned if there are
       no links found. If either the response or the header contains information
       pertaining to the total number of records on the server,
       #state.totalRecords must be set to that number. The default
       implementation uses the `last` link from the header to calculate it.
        @param {*} resp The deserialized response body.
       @param {Object} [options]
       @param {XMLHttpRequest} [options.xhr] The XMLHttpRequest object for this
       response.
       @return {Object}
    */
    parseLinks: function parseLinks(resp, options) {
      var links = {};
      var linkHeader = options.xhr.getResponseHeader('Link');

      if (linkHeader) {
        var relations = ['first', 'prev', 'previous', 'next', 'last'];

        _each(linkHeader.split(','), function (linkValue) {
          var linkParts = linkValue.split(';');
          var url = linkParts[0].replace(URL_TRIM_RE, '');
          var params = linkParts.slice(1);

          _each(params, function (param) {
            var paramParts = param.split('=');
            var key = paramParts[0].replace(PARAM_TRIM_RE, '');
            var value = paramParts[1].replace(PARAM_TRIM_RE, '');

            if (key == 'rel' && _contains(relations, value)) {
              if (value == 'previous') links.prev = url;else links[value] = url;
            }
          });
        });

        var last = links.last || '',
            qsi,
            qs;

        if (qs = (qsi = last.indexOf('?')) ? last.slice(qsi + 1) : '') {
          var params = queryStringToParams(qs);

          var state = _clone(this.state);

          var queryParams = this.queryParams;
          var pageSize = state.pageSize;
          var totalRecords = params[queryParams.totalRecords] * 1;
          var pageNum = params[queryParams.currentPage] * 1;
          var totalPages = params[queryParams.totalPages];

          if (!totalRecords) {
            if (pageNum) totalRecords = (state.firstPage === 0 ? pageNum + 1 : pageNum) * pageSize;else if (totalPages) totalRecords = totalPages * pageSize;
          }

          if (totalRecords) state.totalRecords = totalRecords;
          this.state = this._checkState(state);
        }
      }

      delete links.last;
      return links;
    },

    /**
       Parse server response data.
        This default implementation assumes the response data is in one of two
       structures:
            [
             {}, // Your new pagination state
             [{}, ...] // An array of JSON objects
           ]
        Or,
            [{}] // An array of JSON objects
        The first structure is the preferred form because the pagination states
       may have been updated on the server side, sending them down again allows
       this collection to update its states. If the response has a pagination
       state object, it is checked for errors.
        The second structure is the
       [Backbone.Collection#parse](http://backbonejs.org/#Collection-parse)
       default.
        **Note:** this method has been further simplified since 1.1.7. While
       existing #parse implementations will continue to work, new code is
       encouraged to override #parseState and #parseRecords instead.
        @param {Object} resp The deserialized response data from the server.
        @return {Array.<Object>} An array of model objects
    */
    parse: function parse(resp) {
      var newState = this.parseState(resp, _clone(this.queryParams), _clone(this.state));
      if (newState) this.state = this._checkState(_extend({}, this.state, newState));
      return this.parseRecords(resp);
    },

    /**
       Parse server response for server pagination state updates.
        This default implementation first checks whether the response has any
       state object as documented in #parse. If it exists, a state object is
       returned by mapping the server state keys to this pageable collection
       instance's query parameter keys using `queryParams`.
        It is __NOT__ neccessary to return a full state object complete with all
       the mappings defined in #queryParams. Any state object resulted is merged
       with a copy of the current pageable collection state and checked for
       sanity before actually updating. Most of the time, simply providing a new
       `totalRecords` value is enough to trigger a full pagination state
       recalculation.
            parseState: function (resp, queryParams, state) {
             return {totalRecords: resp.total_entries};
           }
        This method __MUST__ return a new state object instead of directly
       modifying the #state object. The behavior of directly modifying #state is
       undefined.
        @param {Object} resp The deserialized response data from the server.
       @param {Object} queryParams A copy of #queryParams.
       @param {Object} state A copy of #state.
        @return {Object} A new (partial) state object.
     */
    parseState: function parseState(resp, queryParams, state) {
      if (resp && resp.length === 2 && _isObject(resp[0]) && _isArray(resp[1])) {
        var newState = _clone(state);

        var serverState = resp[0];

        _each(_pairs(_omit(queryParams, 'directions')), function (kvp) {
          var k = kvp[0],
              v = kvp[1];
          var serverVal = serverState[v];
          if (!_isUndefined(serverVal) && !_.isNull(serverVal)) newState[k] = serverState[v];
        });

        if (serverState.order) {
          newState.order = _invert(queryParams.directions)[serverState.order] * 1;
        }

        return newState;
      }
    },

    /**
       Parse server response for an array of model objects.
        This default implementation first checks whether the response has any
       state object as documented in #parse. If it exists, the array of model
       objects is assumed to be the second element, otherwise the entire
       response is returned directly.
        @param {Object} resp The deserialized response data from the server.
        @return {Array.<Object>} An array of model objects
     */
    parseRecords: function parseRecords(resp) {
      if (resp && resp.length === 2 && _isObject(resp[0]) && _isArray(resp[1])) {
        return resp[1];
      }

      return resp;
    },

    /**
       Fetch a page from the server in server mode, or all the pages in client
       mode. Under infinite mode, the current page is refetched by default and
       then reset.
        The query string is constructed by translating the current pagination
       state to your server API query parameter using #queryParams.  The current
       page will reset after fetch.
        @param {Object} [options] Accepts all
       [Backbone.Collection#fetch](http://backbonejs.org/#Collection-fetch)
       options.
        @return {XMLHttpRequest}
    */
    fetch: function fetch(options) {
      options = options || {};

      var state = this._checkState(this.state);

      var mode = this.mode;

      if (mode == 'infinite' && !options.url) {
        options.url = this.links[state.currentPage];
      }

      var data = options.data || {}; // dedup query params

      var url = _result(options, 'url') || _result(this, 'url') || '';
      var qsi = url.indexOf('?');

      if (qsi != -1) {
        _extend(data, queryStringToParams(url.slice(qsi + 1)));

        url = url.slice(0, qsi);
      }

      options.url = url;
      options.data = data; // map params except directions

      var queryParams = this.mode == 'client' ? _pick(this.queryParams, 'sortKey', 'order') : _omit(_pick(this.queryParams, _keys(PageableProto.queryParams)), 'directions');

      var i,
          kvp,
          k,
          v,
          kvps = _pairs(queryParams),
          thisCopy = _clone(this);

      for (i = 0; i < kvps.length; i++) {
        kvp = kvps[i], k = kvp[0], v = kvp[1];
        v = _isFunction(v) ? v.call(thisCopy) : v;

        if (state[k] != null && v != null) {
          data[v] = state[k];
        }
      } // fix up sorting parameters


      if (state.sortKey && state.order) {
        data[queryParams.order] = this.queryParams.directions[state.order + ''];
      } else if (!state.sortKey) delete data[queryParams.order]; // map extra query parameters


      var extraKvps = _pairs(_omit(this.queryParams, _keys(PageableProto.queryParams)));

      for (i = 0; i < extraKvps.length; i++) {
        kvp = extraKvps[i];
        v = kvp[1];
        v = _isFunction(v) ? v.call(thisCopy) : v;
        data[kvp[0]] = v;
      }

      var fullCollection = this.fullCollection,
          links = this.links;

      if (mode != 'server') {
        var self = this;
        var success = options.success;

        options.success = function (col, resp, opts) {
          // make sure the caller's intent is obeyed
          opts = opts || {};
          if (_isUndefined(options.silent)) delete opts.silent;else opts.silent = options.silent;
          var models = col.models;
          var currentPage = state.currentPage;
          if (mode == 'client') resetQuickly(fullCollection, models, opts);else if (links[currentPage]) {
            // refetching a page
            var pageSize = state.pageSize;
            var pageStart = (state.firstPage === 0 ? currentPage : currentPage - 1) * pageSize;
            var fullModels = fullCollection.models;
            var head = fullModels.slice(0, pageStart);
            var tail = fullModels.slice(pageStart + pageSize);
            fullModels = head.concat(models).concat(tail);
            var updateFunc = fullCollection.set || fullCollection.update;
            updateFunc.call(fullCollection, fullModels, _extend({
              silent: true,
              sort: false
            }, opts));
            if (fullCollection.comparator) fullCollection.sort();
            fullCollection.trigger('reset', fullCollection, opts);
          } else {
            // fetching new page
            fullCollection.add(models, _extend({
              at: fullCollection.length,
              silent: true
            }, opts));
            fullCollection.trigger('reset', fullCollection, opts);
          }
          if (success) success(col, resp, opts);
        }; // silent the first reset from backbone


        return BBColProto.fetch.call(self, _extend({}, options, {
          silent: true
        }));
      }

      return BBColProto.fetch.call(this, options);
    },

    /**
       Convenient method for making a `comparator` sorted by a model attribute
       identified by `sortKey` and ordered by `order`.
        Like a Backbone.Collection, a Backbone.PageableCollection will maintain
       the __current page__ in sorted order on the client side if a `comparator`
       is attached to it. If the collection is in client mode, you can attach a
       comparator to #fullCollection to have all the pages reflect the global
       sorting order by specifying an option `full` to `true`. You __must__ call
       `sort` manually or #fullCollection.sort after calling this method to
       force a resort.
        While you can use this method to sort the current page in server mode,
       the sorting order may not reflect the global sorting order due to the
       additions or removals of the records on the server since the last
       fetch. If you want the most updated page in a global sorting order, it is
       recommended that you set #state.sortKey and optionally #state.order, and
       then call #fetch.
        @protected
        @param {string} [sortKey=this.state.sortKey] See `state.sortKey`.
       @param {number} [order=this.state.order] See `state.order`.
        See [Backbone.Collection.comparator](http://backbonejs.org/#Collection-comparator).
    */
    _makeComparator: function _makeComparator(sortKey, order) {
      var state = this.state;
      sortKey = sortKey || state.sortKey;
      order = order || state.order;
      if (!sortKey || !order) return;
      return function (left, right) {
        var l = left.get(sortKey),
            r = right.get(sortKey),
            t;
        if (order === 1) t = l, l = r, r = t;
        if (l === r) return 0;else if (l < r) return -1;
        return 1;
      };
    },

    /**
       Adjusts the sorting for this pageable collection.
        Given a `sortKey` and an `order`, sets `state.sortKey` and
       `state.order`. A comparator can be applied on the client side to sort in
       the order defined if `options.side` is `"client"`. By default the
       comparator is applied to the #fullCollection. Set `options.full` to
       `false` to apply a comparator to the current page under any mode. Setting
       `sortKey` to `null` removes the comparator from both the current page and
       the full collection.
        @chainable
        @param {string} sortKey See `state.sortKey`.
       @param {number} [order=this.state.order] See `state.order`.
       @param {Object} [options]
       @param {"server"|"client"} [options.side] By default, `"client"` if
       `mode` is `"client"`, `"server"` otherwise.
       @param {boolean} [options.full=true]
    */
    setSorting: function setSorting(sortKey, order, options) {
      var state = this.state;
      state.sortKey = sortKey;
      state.order = order = order || state.order;
      var fullCollection = this.fullCollection;
      var delComp = false,
          delFullComp = false;
      if (!sortKey) delComp = delFullComp = true;
      var mode = this.mode;
      options = _extend({
        side: mode == 'client' ? mode : 'server',
        full: true
      }, options);

      var comparator = this._makeComparator(sortKey, order);

      var full = options.full,
          side = options.side;

      if (side == 'client') {
        if (full) {
          if (fullCollection) fullCollection.comparator = comparator;
          delComp = true;
        } else {
          this.comparator = comparator;
          delFullComp = true;
        }
      } else if (side == 'server' && !full) {
        this.comparator = comparator;
      }

      if (delComp) delete this.comparator;
      if (delFullComp && fullCollection) delete fullCollection.comparator;
      return this;
    }
  });
  var PageableProto = PageableCollection.prototype;
  return PageableCollection;
});

/***/ }),

/***/ 27217:
/*!*************************************************************!*\
  !*** ./public/bundles/pimdatagrid/lib/backgrid/backgrid.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 49845);
/* provided dependency */ var _ = __webpack_require__(/*! underscore */ 13469);
/* provided dependency */ var Backbone = __webpack_require__(/*! backbone */ 2918);
/*
  backgrid
  http://github.com/wyuenho/backgrid

  Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
*/
(function (root, $, _, Backbone) {
  'use strict';
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  var window = root; // Copyright 2009, 2010 Kristopher Michael Kowal
  // https://github.com/kriskowal/es5-shim
  // ES5 15.5.4.20
  // http://es5.github.com/#x15.5.4.20

  var ws = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003" + "\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028" + "\u2029\uFEFF";

  if (!String.prototype.trim || ws.trim()) {
    // http://blog.stevenlevithan.com/archives/faster-trim-javascript
    // http://perfectionkills.com/whitespace-deviations/
    ws = '[' + ws + ']';
    var trimBeginRegexp = new RegExp('^' + ws + ws + '*'),
        trimEndRegexp = new RegExp(ws + ws + '*$');

    String.prototype.trim = function trim() {
      if (this === undefined || this === null) {
        throw new TypeError("can't convert " + this + ' to object');
      }

      return String(this).replace(trimBeginRegexp, '').replace(trimEndRegexp, '');
    };
  }

  function capitalize(s) {
    return String.fromCharCode(s.charCodeAt(0) - 32) + s.slice(1);
  }

  function lpad(str, length, padstr) {
    var paddingLen = length - (str + '').length;
    paddingLen = paddingLen < 0 ? 0 : paddingLen;
    var padding = '';

    for (var i = 0; i < paddingLen; i++) {
      padding = padding + padstr;
    }

    return padding + str;
  }

  var Backgrid = root.Backgrid = {
    VERSION: '0.2.6',
    Extension: {},
    requireOptions: function requireOptions(options, requireOptionKeys) {
      for (var i = 0; i < requireOptionKeys.length; i++) {
        var key = requireOptionKeys[i];

        if (_.isUndefined(options[key])) {
          throw new TypeError("'" + key + "' is required");
        }
      }
    },
    resolveNameToClass: function resolveNameToClass(name, suffix) {
      if (_.isString(name)) {
        var key = _.map(name.split('-'), function (e) {
          return capitalize(e);
        }).join('') + suffix;
        var klass = Backgrid[key] || Backgrid.Extension[key];

        if (_.isUndefined(klass)) {
          throw new ReferenceError("Class '" + key + "' not found");
        }

        return klass;
      }

      return name;
    }
  };

  _.extend(Backgrid, Backbone.Events);
  /**
   Command translates a DOM Event into commands that Backgrid
   recognizes. Interested parties can listen on selected Backgrid events that
   come with an instance of this class and act on the commands.
    It is also possible to globally rebind the keyboard shortcuts by replacing
   the methods in this class' prototype.
    @class Backgrid.Command
   @constructor
  */


  var Command = Backgrid.Command = function (evt) {
    _.extend(this, {
      altKey: !!evt.altKey,
      "char": evt["char"],
      charCode: evt.charCode,
      ctrlKey: !!evt.ctrlKey,
      key: evt.key,
      keyCode: evt.keyCode,
      locale: evt.locale,
      location: evt.location,
      metaKey: !!evt.metaKey,
      repeat: !!evt.repeat,
      shiftKey: !!evt.shiftKey,
      which: evt.which
    });
  };

  _.extend(Command.prototype, {
    /**
     Up Arrow
      @member Backgrid.Command
    */
    moveUp: function moveUp() {
      return this.keyCode == 38;
    },

    /**
     Down Arrow
      @member Backgrid.Command
    */
    moveDown: function moveDown() {
      return this.keyCode === 40;
    },

    /**
     Shift Tab
      @member Backgrid.Command
    */
    moveLeft: function moveLeft() {
      return this.shiftKey && this.keyCode === 9;
    },

    /**
     Tab
      @member Backgrid.Command
    */
    moveRight: function moveRight() {
      return !this.shiftKey && this.keyCode === 9;
    },

    /**
     Enter
      @member Backgrid.Command
    */
    save: function save() {
      return this.keyCode === 13;
    },

    /**
     Esc
      @member Backgrid.Command
    */
    cancel: function cancel() {
      return this.keyCode === 27;
    },

    /**
     None of the above.
      @member Backgrid.Command
    */
    passThru: function passThru() {
      return !(this.moveUp() || this.moveDown() || this.moveLeft() || this.moveRight() || this.save() || this.cancel());
    }
  });
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  /**
   Just a convenient class for interested parties to subclass.
    The default Cell classes don't require the formatter to be a subclass of
   Formatter as long as the fromRaw(rawData) and toRaw(formattedData) methods
   are defined.
    @abstract
   @class Backgrid.CellFormatter
   @constructor
  */


  var CellFormatter = Backgrid.CellFormatter = function () {};

  _.extend(CellFormatter.prototype, {
    /**
     Takes a raw value from a model and returns an optionally formatted string
     for display. The default implementation simply returns the supplied value
     as is without any type conversion.
      @member Backgrid.CellFormatter
     @param {*} rawData
     @return {*}
    */
    fromRaw: function fromRaw(rawData) {
      return rawData;
    },

    /**
     Takes a formatted string, usually from user input, and returns a
     appropriately typed value for persistence in the model.
      If the user input is invalid or unable to be converted to a raw value
     suitable for persistence in the model, toRaw must return `undefined`.
      @member Backgrid.CellFormatter
     @param {string} formattedData
     @return {*|undefined}
    */
    toRaw: function toRaw(formattedData) {
      return formattedData;
    }
  });
  /**
   A floating point number formatter. Doesn't understand notation at the moment.
    @class Backgrid.NumberFormatter
   @extends Backgrid.CellFormatter
   @constructor
   @throws {RangeError} If decimals < 0 or > 20.
  */


  var NumberFormatter = Backgrid.NumberFormatter = function (options) {
    options = options ? _.clone(options) : {};

    _.extend(this, this.defaults, options);

    if (this.decimals < 0 || this.decimals > 20) {
      throw new RangeError('decimals must be between 0 and 20');
    }
  };

  NumberFormatter.prototype = new CellFormatter();

  _.extend(NumberFormatter.prototype, {
    /**
     @member Backgrid.NumberFormatter
     @cfg {Object} options
      @cfg {number} [options.decimals=2] Number of decimals to display. Must be an integer.
      @cfg {string} [options.decimalSeparator='.'] The separator to use when
     displaying decimals.
      @cfg {string} [options.orderSeparator=','] The separator to use to
     separator thousands. May be an empty string.
    */
    defaults: {
      decimals: 2,
      decimalSeparator: '.',
      orderSeparator: ','
    },
    HUMANIZED_NUM_RE: /(\d)(?=(?:\d{3})+$)/g,

    /**
     Takes a floating point number and convert it to a formatted string where
     every thousand is separated by `orderSeparator`, with a `decimal` number of
     decimals separated by `decimalSeparator`. The number returned is rounded
     the usual way.
      @member Backgrid.NumberFormatter
     @param {number} number
     @return {string}
    */
    fromRaw: function fromRaw(number) {
      if (_.isNull(number) || _.isUndefined(number)) return '';
      number = number.toFixed(~~this.decimals);
      var parts = number.split('.');
      var integerPart = parts[0];
      var decimalPart = parts[1] ? (this.decimalSeparator || '.') + parts[1] : '';
      return integerPart.replace(this.HUMANIZED_NUM_RE, '$1' + this.orderSeparator) + decimalPart;
    },

    /**
     Takes a string, possibly formatted with `orderSeparator` and/or
     `decimalSeparator`, and convert it back to a number.
      @member Backgrid.NumberFormatter
     @param {string} formattedData
     @return {number|undefined} Undefined if the string cannot be converted to
     a number.
    */
    toRaw: function toRaw(formattedData) {
      var rawData = '';
      var thousands = formattedData.trim().split(this.orderSeparator);

      for (var i = 0; i < thousands.length; i++) {
        rawData += thousands[i];
      }

      var decimalParts = rawData.split(this.decimalSeparator);
      rawData = '';

      for (var i = 0; i < decimalParts.length; i++) {
        rawData = rawData + decimalParts[i] + '.';
      }

      if (rawData[rawData.length - 1] === '.') {
        rawData = rawData.slice(0, rawData.length - 1);
      }

      var result = (rawData * 1).toFixed(~~this.decimals) * 1;
      if (_.isNumber(result) && !_.isNaN(result)) return result;
    }
  });
  /**
   Formatter to converts between various datetime formats.
    This class only understands ISO-8601 formatted datetime strings and UNIX
   offset (number of milliseconds since UNIX Epoch). See
   Backgrid.Extension.MomentFormatter if you need a much more flexible datetime
   formatter.
    @class Backgrid.DatetimeFormatter
   @extends Backgrid.CellFormatter
   @constructor
   @throws {Error} If both `includeDate` and `includeTime` are false.
  */


  var DatetimeFormatter = Backgrid.DatetimeFormatter = function (options) {
    options = options ? _.clone(options) : {};

    _.extend(this, this.defaults, options);

    if (!this.includeDate && !this.includeTime) {
      throw new Error('Either includeDate or includeTime must be true');
    }
  };

  DatetimeFormatter.prototype = new CellFormatter();

  _.extend(DatetimeFormatter.prototype, {
    /**
     @member Backgrid.DatetimeFormatter
      @cfg {Object} options
      @cfg {boolean} [options.includeDate=true] Whether the values include the
     date part.
      @cfg {boolean} [options.includeTime=true] Whether the values include the
     time part.
      @cfg {boolean} [options.includeMilli=false] If `includeTime` is true,
     whether to include the millisecond part, if it exists.
    */
    defaults: {
      includeDate: true,
      includeTime: true,
      includeMilli: false
    },
    DATE_RE: /^([+\-]?\d{4})-(\d{2})-(\d{2})$/,
    TIME_RE: /^(\d{2}):(\d{2}):(\d{2})(\.(\d{3}))?$/,
    ISO_SPLITTER_RE: /T|Z| +/,
    _convert: function _convert(data, validate) {
      var date,
          time = null;

      if (_.isNumber(data)) {
        var jsDate = new Date(data);
        date = lpad(jsDate.getUTCFullYear(), 4, 0) + '-' + lpad(jsDate.getUTCMonth() + 1, 2, 0) + '-' + lpad(jsDate.getUTCDate(), 2, 0);
        time = lpad(jsDate.getUTCHours(), 2, 0) + ':' + lpad(jsDate.getUTCMinutes(), 2, 0) + ':' + lpad(jsDate.getUTCSeconds(), 2, 0);
      } else {
        data = data.trim();
        var parts = data.split(this.ISO_SPLITTER_RE) || [];
        date = this.DATE_RE.test(parts[0]) ? parts[0] : '';
        time = date && parts[1] ? parts[1] : this.TIME_RE.test(parts[0]) ? parts[0] : '';
      }

      var YYYYMMDD = this.DATE_RE.exec(date) || [];
      var HHmmssSSS = this.TIME_RE.exec(time) || [];

      if (validate) {
        if (this.includeDate && _.isUndefined(YYYYMMDD[0])) return;
        if (this.includeTime && _.isUndefined(HHmmssSSS[0])) return;
        if (!this.includeDate && date) return;
        if (!this.includeTime && time) return;
      }

      var jsDate = new Date(Date.UTC(YYYYMMDD[1] * 1 || 0, YYYYMMDD[2] * 1 - 1 || 0, YYYYMMDD[3] * 1 || 0, HHmmssSSS[1] * 1 || null, HHmmssSSS[2] * 1 || null, HHmmssSSS[3] * 1 || null, HHmmssSSS[5] * 1 || null));
      var result = '';

      if (this.includeDate) {
        result = lpad(jsDate.getUTCFullYear(), 4, 0) + '-' + lpad(jsDate.getUTCMonth() + 1, 2, 0) + '-' + lpad(jsDate.getUTCDate(), 2, 0);
      }

      if (this.includeTime) {
        result = result + (this.includeDate ? 'T' : '') + lpad(jsDate.getUTCHours(), 2, 0) + ':' + lpad(jsDate.getUTCMinutes(), 2, 0) + ':' + lpad(jsDate.getUTCSeconds(), 2, 0);

        if (this.includeMilli) {
          result = result + '.' + lpad(jsDate.getUTCMilliseconds(), 3, 0);
        }
      }

      if (this.includeDate && this.includeTime) {
        result += 'Z';
      }

      return result;
    },

    /**
     Converts an ISO-8601 formatted datetime string to a datetime string, date
     string or a time string. The timezone is ignored if supplied.
      @member Backgrid.DatetimeFormatter
     @param {string} rawData
     @return {string|null|undefined} ISO-8601 string in UTC. Null and undefined
     values are returned as is.
    */
    fromRaw: function fromRaw(rawData) {
      if (_.isNull(rawData) || _.isUndefined(rawData)) return '';
      return this._convert(rawData);
    },

    /**
     Converts an ISO-8601 formatted datetime string to a datetime string, date
     string or a time string. The timezone is ignored if supplied. This method
     parses the input values exactly the same way as
     Backgrid.Extension.MomentFormatter#fromRaw(), in addition to doing some
     sanity checks.
      @member Backgrid.DatetimeFormatter
     @param {string} formattedData
     @return {string|undefined} ISO-8601 string in UTC. Undefined if a date is
     found when `includeDate` is false, or a time is found when `includeTime` is
     false, or if `includeDate` is true and a date is not found, or if
     `includeTime` is true and a time is not found.
    */
    toRaw: function toRaw(formattedData) {
      return this._convert(formattedData, true);
    }
  });
  /**
   Formatter to convert any value to string.
    @class Backgrid.StringFormatter
   @extends Backgrid.CellFormatter
   @constructor
  */


  var StringFormatter = Backgrid.StringFormatter = function () {};

  StringFormatter.prototype = new CellFormatter();

  _.extend(StringFormatter.prototype, {
    /**
     Converts any value to a string using Ecmascript's implicit type
     conversion. If the given value is `null` or `undefined`, an empty string is
     returned instead.
      @member Backgrid.StringFormatter
     @param {*} rawValue
     @return {string}
    */
    fromRaw: function fromRaw(rawValue) {
      if (_.isUndefined(rawValue) || _.isNull(rawValue)) return '';
      return rawValue + '';
    }
  });
  /**
   Simple email validation formatter.
    @class Backgrid.EmailFormatter
   @extends Backgrid.CellFormatter
   @constructor
  */


  var EmailFormatter = Backgrid.EmailFormatter = function () {};

  EmailFormatter.prototype = new CellFormatter();

  _.extend(EmailFormatter.prototype, {
    /**
     Return the input if it is a string that contains an '@' character and if
     the strings before and after '@' are non-empty. If the input does not
     validate, `undefined` is returned.
      @member Backgrid.EmailFormatter
     @param {*} formattedData
     @return {string|undefined}
    */
    toRaw: function toRaw(formattedData) {
      var parts = formattedData.trim().split('@');

      if (parts.length === 2 && _.all(parts)) {
        return formattedData;
      }
    }
  });
  /**
   Formatter for SelectCell.
    @class Backgrid.SelectFormatter
   @extends Backgrid.CellFormatter
   @constructor
  */


  var SelectFormatter = Backgrid.SelectFormatter = function () {};

  SelectFormatter.prototype = new CellFormatter();

  _.extend(SelectFormatter.prototype, {
    /**
     Normalizes raw scalar or array values to an array.
      @member Backgrid.SelectFormatter
     @param {*} rawValue
     @return {Array.<*>}
    */
    fromRaw: function fromRaw(rawValue) {
      return _.isArray(rawValue) ? rawValue : rawValue != null ? [rawValue] : [];
    }
  });
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  /**
   Generic cell editor base class. Only defines an initializer for a number of
   required parameters.
    @abstract
   @class Backgrid.CellEditor
   @extends Backbone.View
  */


  var CellEditor = Backgrid.CellEditor = Backbone.View.extend({
    /**
     Initializer.
      @param {Object} options
     @param {Backgrid.CellFormatter} options.formatter
     @param {Backgrid.Column} options.column
     @param {Backbone.Model} options.model
      @throws {TypeError} If `formatter` is not a formatter instance, or when
     `model` or `column` are undefined.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, ['formatter', 'column', 'model']);
      this.formatter = options.formatter;
      this.column = options.column;

      if (!(this.column instanceof Column)) {
        this.column = new Column(this.column);
      }

      this.listenTo(this.model, 'backgrid:editing', this.postRender);
    },

    /**
     Post-rendering setup and initialization. Focuses the cell editor's `el` in
     this default implementation. **Should** be called by Cell classes after
     calling Backgrid.CellEditor#render.
    */
    postRender: function postRender(model, column) {
      if (column == null || column.get('name') == this.column.get('name')) {
        this.$el.focus();
      }

      return this;
    }
  });
  /**
   InputCellEditor the cell editor type used by most core cell types. This cell
   editor renders a text input box as its editor. The input will render a
   placeholder if the value is empty on supported browsers.
    @class Backgrid.InputCellEditor
   @extends Backgrid.CellEditor
  */

  var InputCellEditor = Backgrid.InputCellEditor = CellEditor.extend({
    /** @property */
    tagName: 'input',

    /** @property */
    attributes: {
      type: 'text'
    },

    /** @property */
    events: {
      blur: 'saveOrCancel',
      keydown: 'saveOrCancel'
    },

    /**
     Initializer. Removes this `el` from the DOM when a `done` event is
     triggered.
      @param {Object} options
     @param {Backgrid.CellFormatter} options.formatter
     @param {Backgrid.Column} options.column
     @param {Backbone.Model} options.model
     @param {string} [options.placeholder]
    */
    initialize: function initialize(options) {
      CellEditor.prototype.initialize.apply(this, arguments);

      if (options.placeholder) {
        this.$el.attr('placeholder', options.placeholder);
      }
    },

    /**
     Renders a text input with the cell value formatted for display, if it
     exists.
    */
    render: function render() {
      this.$el.val(this.formatter.fromRaw(this.model.get(this.column.get('name'))));
      return this;
    },

    /**
     If the key pressed is `enter`, `tab`, `up`, or `down`, converts the value
     in the editor to a raw value for saving into the model using the formatter.
      If the key pressed is `esc` the changes are undone.
      If the editor goes out of focus (`blur`) but the value is invalid, the
     event is intercepted and cancelled so the cell remains in focus pending for
     further action. The changes are saved otherwise.
      Triggers a Backbone `backgrid:edited` event from the model when successful,
     and `backgrid:error` if the value cannot be converted. Classes listening to
     the `error` event, usually the Cell classes, should respond appropriately,
     usually by rendering some kind of error feedback.
      @param {Event} e
    */
    saveOrCancel: function saveOrCancel(e) {
      var formatter = this.formatter;
      var model = this.model;
      var column = this.column;
      var command = new Command(e);
      var blurred = e.type === 'blur';

      if (command.moveUp() || command.moveDown() || command.moveLeft() || command.moveRight() || command.save() || blurred) {
        e.preventDefault();
        e.stopPropagation();
        var val = this.$el.val();
        var newValue = formatter.toRaw(val);

        if (_.isUndefined(newValue)) {
          model.trigger('backgrid:error', model, column, val);
        } else {
          model.set(column.get('name'), newValue);
          model.trigger('backgrid:edited', model, column, command);
        }
      } // esc
      else if (command.cancel()) {
        // undo
        e.stopPropagation();
        model.trigger('backgrid:edited', model, column, command);
      }
    },
    postRender: function postRender(model, column) {
      if (column == null || column.get('name') == this.column.get('name')) {
        // move the cursor to the end on firefox if text is right aligned
        if (this.$el.css('text-align') === 'right') {
          var val = this.$el.val();
          this.$el.focus().val(null).val(val);
        } else this.$el.focus();
      }

      return this;
    }
  });
  /**
   The super-class for all Cell types. By default, this class renders a plain
   table cell with the model value converted to a string using the
   formatter. The table cell is clickable, upon which the cell will go into
   editor mode, which is rendered by a Backgrid.InputCellEditor instance by
   default. Upon encountering any formatting errors, this class will add an
   `error` CSS class to the table cell.
    @abstract
   @class Backgrid.Cell
   @extends Backbone.View
  */

  var Cell = Backgrid.Cell = Backbone.View.extend({
    /** @property */
    tagName: 'td',

    /**
     @property {Backgrid.CellFormatter|Object|string} [formatter=new CellFormatter()]
    */
    formatter: new CellFormatter(),

    /**
     @property {Backgrid.CellEditor} [editor=Backgrid.InputCellEditor] The
     default editor for all cell instances of this class. This value must be a
     class, it will be automatically instantiated upon entering edit mode.
      See Backgrid.CellEditor
    */
    editor: InputCellEditor,

    /** @property */
    events: {
      click: 'enterEditMode'
    },

    /**
     Initializer.
      @param {Object} options
     @param {Backbone.Model} options.model
     @param {Backgrid.Column} options.column
      @throws {ReferenceError} If formatter is a string but a formatter class of
     said name cannot be found in the Backgrid module.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, ['model', 'column']);
      this.column = options.column;

      if (!(this.column instanceof Column)) {
        this.column = new Column(this.column);
      }

      this.formatter = Backgrid.resolveNameToClass(this.column.get('formatter') || this.formatter, 'Formatter');
      this.editor = Backgrid.resolveNameToClass(this.editor, 'CellEditor');
      this.listenTo(this.model, 'change:' + this.column.get('name'), function () {
        if (!this.$el.hasClass('editor')) this.render();
      });
      this.listenTo(this.model, 'backgrid:error', this.renderError);
    },

    /**
     Render a text string in a table cell. The text is converted from the
     model's raw value for this cell's column.
    */
    render: function render() {
      this.$el.empty();
      this.$el.text(this.formatter.fromRaw(this.model.get(this.column.get('name'))));
      this.el.dataset.column = this.column.get('name');
      this.delegateEvents();
      return this;
    },

    /**
     If this column is editable, a new CellEditor instance is instantiated with
     its required parameters. An `editor` CSS class is added to the cell upon
     entering edit mode.
      This method triggers a Backbone `backgrid:edit` event from the model when
     the cell is entering edit mode and an editor instance has been constructed,
     but before it is rendered and inserted into the DOM. The cell and the
     constructed cell editor instance are sent as event parameters when this
     event is triggered.
      When this cell has finished switching to edit mode, a Backbone
     `backgrid:editing` event is triggered from the model. The cell and the
     constructed cell instance are also sent as parameters in the event.
      When the model triggers a `backgrid:error` event, it means the editor is
     unable to convert the current user input to an apprpriate value for the
     model's column, and an `error` CSS class is added to the cell accordingly.
    */
    enterEditMode: function enterEditMode() {
      var model = this.model;
      var column = this.column;

      if (column.get('editable')) {
        this.currentEditor = new this.editor({
          column: this.column,
          model: this.model,
          formatter: this.formatter
        });
        model.trigger('backgrid:edit', model, column, this, this.currentEditor); // Need to redundantly undelegate events for Firefox

        this.undelegateEvents();
        this.$el.empty();
        this.$el.append(this.currentEditor.$el);
        this.currentEditor.render();
        this.$el.addClass('editor');
        model.trigger('backgrid:editing', model, column, this, this.currentEditor);
      }
    },

    /**
     Put an `error` CSS class on the table cell.
    */
    renderError: function renderError(model, column) {
      if (column == null || column.get('name') == this.column.get('name')) {
        this.$el.addClass('error');
      }
    },

    /**
     Removes the editor and re-render in display mode.
    */
    exitEditMode: function exitEditMode() {
      this.$el.removeClass('error');
      this.currentEditor.remove();
      this.stopListening(this.currentEditor);
      delete this.currentEditor;
      this.$el.removeClass('editor');
      this.render();
    },

    /**
     Clean up this cell.
      @chainable
    */
    remove: function remove() {
      if (this.currentEditor) {
        this.currentEditor.remove.apply(this, arguments);
        delete this.currentEditor;
      }

      return Backbone.View.prototype.remove.apply(this, arguments);
    }
  });
  /**
   StringCell displays HTML escaped strings and accepts anything typed in.
    @class Backgrid.StringCell
   @extends Backgrid.Cell
  */

  var StringCell = Backgrid.StringCell = Cell.extend({
    /** @property */
    className: 'AknGrid-bodyCell string-cell',
    formatter: new StringFormatter()
  });
  /**
   UriCell renders an HTML `<a>` anchor for the value and accepts URIs as user
   input values. No type conversion or URL validation is done by the formatter
   of this cell. Users who need URL validation are encourage to subclass UriCell
   to take advantage of the parsing capabilities of the HTMLAnchorElement
   available on HTML5-capable browsers or using a third-party library like
   [URI.js](https://github.com/medialize/URI.js).
    @class Backgrid.UriCell
   @extends Backgrid.Cell
  */

  var UriCell = Backgrid.UriCell = Cell.extend({
    /** @property */
    className: 'AknGrid-bodyCell uri-cell',
    render: function render() {
      this.$el.empty();
      var formattedValue = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      this.$el.append($('<a>', {
        tabIndex: -1,
        href: formattedValue,
        title: formattedValue,
        target: '_blank'
      }).text(formattedValue));
      this.delegateEvents();
      return this;
    }
  });
  /**
   Like Backgrid.UriCell, EmailCell renders an HTML `<a>` anchor for the
   value. The `href` in the anchor is prefixed with `mailto:`. EmailCell will
   complain if the user enters a string that doesn't contain the `@` sign.
    @class Backgrid.EmailCell
   @extends Backgrid.StringCell
  */

  var EmailCell = Backgrid.EmailCell = StringCell.extend({
    /** @property */
    className: 'AknGrid-bodyCell email-cell',
    formatter: new EmailFormatter(),
    render: function render() {
      this.$el.empty();
      var formattedValue = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      this.$el.append($('<a>', {
        tabIndex: -1,
        href: 'mailto:' + formattedValue,
        title: formattedValue
      }).text(formattedValue));
      this.delegateEvents();
      return this;
    }
  });
  /**
   NumberCell is a generic cell that renders all numbers. Numbers are formatted
   using a Backgrid.NumberFormatter.
    @class Backgrid.NumberCell
   @extends Backgrid.Cell
  */

  var NumberCell = Backgrid.NumberCell = Cell.extend({
    /** @property */
    className: 'AknGrid-bodyCell number-cell',

    /**
     @property {number} [decimals=2] Must be an integer.
    */
    decimals: NumberFormatter.prototype.defaults.decimals,

    /** @property {string} [decimalSeparator='.'] */
    decimalSeparator: NumberFormatter.prototype.defaults.decimalSeparator,

    /** @property {string} [orderSeparator=','] */
    orderSeparator: NumberFormatter.prototype.defaults.orderSeparator,

    /** @property {Backgrid.CellFormatter} [formatter=Backgrid.NumberFormatter] */
    formatter: NumberFormatter,

    /**
     Initializes this cell and the number formatter.
      @param {Object} options
     @param {Backbone.Model} options.model
     @param {Backgrid.Column} options.column
    */
    initialize: function initialize(options) {
      Cell.prototype.initialize.apply(this, arguments);
      this.formatter = new this.formatter({
        decimals: this.decimals,
        decimalSeparator: this.decimalSeparator,
        orderSeparator: this.orderSeparator
      });
    }
  });
  /**
   An IntegerCell is just a Backgrid.NumberCell with 0 decimals. If a floating
   point number is supplied, the number is simply rounded the usual way when
   displayed.
    @class Backgrid.IntegerCell
   @extends Backgrid.NumberCell
  */

  var IntegerCell = Backgrid.IntegerCell = NumberCell.extend({
    /** @property */
    className: 'AknGrid-bodyCell integer-cell',

    /**
     @property {number} decimals Must be an integer.
    */
    decimals: 0
  });
  /**
   DatetimeCell is a basic cell that accepts datetime string values in RFC-2822
   or W3C's subset of ISO-8601 and displays them in ISO-8601 format. For a much
   more sophisticated date time cell with better datetime formatting, take a
   look at the Backgrid.Extension.MomentCell extension.
    @class Backgrid.DatetimeCell
   @extends Backgrid.Cell
    See:
    - Backgrid.Extension.MomentCell
   - Backgrid.DatetimeFormatter
  */

  var DatetimeCell = Backgrid.DatetimeCell = Cell.extend({
    /** @property */
    className: 'AknGrid-bodyCell datetime-cell',

    /**
     @property {boolean} [includeDate=true]
    */
    includeDate: DatetimeFormatter.prototype.defaults.includeDate,

    /**
     @property {boolean} [includeTime=true]
    */
    includeTime: DatetimeFormatter.prototype.defaults.includeTime,

    /**
     @property {boolean} [includeMilli=false]
    */
    includeMilli: DatetimeFormatter.prototype.defaults.includeMilli,

    /** @property {Backgrid.CellFormatter} [formatter=Backgrid.DatetimeFormatter] */
    formatter: DatetimeFormatter,

    /**
     Initializes this cell and the datetime formatter.
      @param {Object} options
     @param {Backbone.Model} options.model
     @param {Backgrid.Column} options.column
    */
    initialize: function initialize(options) {
      Cell.prototype.initialize.apply(this, arguments);
      this.formatter = new this.formatter({
        includeDate: this.includeDate,
        includeTime: this.includeTime,
        includeMilli: this.includeMilli
      });
      var placeholder = this.includeDate ? 'YYYY-MM-DD' : '';
      placeholder += this.includeDate && this.includeTime ? 'T' : '';
      placeholder += this.includeTime ? 'HH:mm:ss' : '';
      placeholder += this.includeTime && this.includeMilli ? '.SSS' : '';
      this.editor = this.editor.extend({
        attributes: _.extend({}, this.editor.prototype.attributes, this.editor.attributes, {
          placeholder: placeholder
        })
      });
    }
  });
  /**
   DateCell is a Backgrid.DatetimeCell without the time part.
    @class Backgrid.DateCell
   @extends Backgrid.DatetimeCell
  */

  var DateCell = Backgrid.DateCell = DatetimeCell.extend({
    /** @property */
    className: 'AknGrid-bodyCell date-cell',

    /** @property */
    includeTime: false
  });
  /**
   TimeCell is a Backgrid.DatetimeCell without the date part.
    @class Backgrid.TimeCell
   @extends Backgrid.DatetimeCell
  */

  var TimeCell = Backgrid.TimeCell = DatetimeCell.extend({
    /** @property */
    className: 'AknGrid-bodyCell time-cell',

    /** @property */
    includeDate: false
  });
  /**
   BooleanCellEditor renders a checkbox as its editor.
    @class Backgrid.BooleanCellEditor
   @extends Backgrid.CellEditor
  */

  var BooleanCellEditor = Backgrid.BooleanCellEditor = CellEditor.extend({
    /** @property */
    tagName: 'input',

    /** @property */
    attributes: {
      tabIndex: -1,
      type: 'checkbox'
    },

    /** @property */
    events: {
      mousedown: function mousedown() {
        this.mouseDown = true;
      },
      blur: 'enterOrExitEditMode',
      mouseup: function mouseup() {
        this.mouseDown = false;
      },
      change: 'saveOrCancel',
      keydown: 'saveOrCancel'
    },

    /**
     Renders a checkbox and check it if the model value of this column is true,
     uncheck otherwise.
    */
    render: function render() {
      var val = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      this.$el.prop('checked', val);
      return this;
    },

    /**
     Event handler. Hack to deal with the case where `blur` is fired before
     `change` and `click` on a checkbox.
    */
    enterOrExitEditMode: function enterOrExitEditMode(e) {
      if (!this.mouseDown) {
        var model = this.model;
        model.trigger('backgrid:edited', model, this.column, new Command(e));
      }
    },

    /**
     Event handler. Save the value into the model if the event is `change` or
     one of the keyboard navigation key presses. Exit edit mode without saving
     if `escape` was pressed.
    */
    saveOrCancel: function saveOrCancel(e) {
      var model = this.model;
      var column = this.column;
      var formatter = this.formatter;
      var command = new Command(e); // skip ahead to `change` when space is pressed

      if (command.passThru() && e.type != 'change') return true;

      if (command.cancel()) {
        e.stopPropagation();
        model.trigger('backgrid:edited', model, column, command);
      }

      var $el = this.$el;

      if (command.save() || command.moveLeft() || command.moveRight() || command.moveUp() || command.moveDown()) {
        e.preventDefault();
        e.stopPropagation();
        var val = formatter.toRaw($el.prop('checked'));
        model.set(column.get('name'), val);
        model.trigger('backgrid:edited', model, column, command);
      } else if (e.type == 'change') {
        var val = formatter.toRaw($el.prop('checked'));
        model.set(column.get('name'), val);
        $el.focus();
      }
    }
  });
  /**
   BooleanCell renders a checkbox both during display mode and edit mode. The
   checkbox is checked if the model value is true, unchecked otherwise.
    @class Backgrid.BooleanCell
   @extends Backgrid.Cell
  */

  var BooleanCell = Backgrid.BooleanCell = Cell.extend({
    /** @property */
    className: 'AknGrid-bodyCell AknGrid-bodyCell--tight AknGrid-bodyCell--checkbox boolean-cell',

    /** @property */
    editor: BooleanCellEditor,

    /** @property */
    events: {
      click: 'enterEditMode'
    },

    /**
     Renders a checkbox and check it if the model value of this column is true,
     uncheck otherwise.
    */
    render: function render() {
      this.$el.empty();
      this.$el.append($('<input>', {
        tabIndex: -1,
        type: 'checkbox',
        checked: this.formatter.fromRaw(this.model.get(this.column.get('name')))
      }));
      this.delegateEvents();
      return this;
    }
  });
  /**
   SelectCellEditor renders an HTML `<select>` fragment as the editor.
    @class Backgrid.SelectCellEditor
   @extends Backgrid.CellEditor
  */

  var SelectCellEditor = Backgrid.SelectCellEditor = CellEditor.extend({
    /** @property */
    tagName: 'select',

    /** @property */
    events: {
      change: 'save',
      blur: 'close',
      keydown: 'close'
    },

    /** @property {function(Object, ?Object=): string} template */
    template: _.template('<option value="<%- value %>" <%= selected ? \'selected="selected"\' : "" %>><%- text %></option>'),
    setOptionValues: function setOptionValues(optionValues) {
      this.optionValues = optionValues;
    },
    setMultiple: function setMultiple(multiple) {
      this.multiple = multiple;
      this.$el.prop('multiple', multiple);
    },
    _renderOptions: function _renderOptions(nvps, selectedValues) {
      var options = '';

      for (var i = 0; i < nvps.length; i++) {
        options = options + this.template({
          text: nvps[i][0],
          value: nvps[i][1],
          selected: selectedValues.indexOf(nvps[i][1]) > -1
        });
      }

      return options;
    },

    /**
     Renders the options if `optionValues` is a list of name-value pairs. The
     options are contained inside option groups if `optionValues` is a list of
     object hashes. The name is rendered at the option text and the value is the
     option value. If `optionValues` is a function, it is called without a
     parameter.
    */
    render: function render() {
      this.$el.empty();

      var optionValues = _.result(this, 'optionValues');

      var selectedValues = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      if (!_.isArray(optionValues)) throw TypeError('optionValues must be an array');
      var optionValue = null;
      var optionText = null;
      var optionValue = null;
      var optgroupName = null;
      var optgroup = null;

      for (var i = 0; i < optionValues.length; i++) {
        var optionValue = optionValues[i];

        if (_.isArray(optionValue)) {
          optionText = optionValue[0];
          optionValue = optionValue[1];
          this.$el.append(this.template({
            text: optionText,
            value: optionValue,
            selected: selectedValues.indexOf(optionValue) > -1
          }));
        } else if (_.isObject(optionValue)) {
          optgroupName = optionValue.name;
          optgroup = $('<optgroup></optgroup>', {
            label: optgroupName
          });
          optgroup.append(this._renderOptions(optionValue.values, selectedValues));
          this.$el.append(optgroup);
        } else {
          throw TypeError("optionValues elements must be a name-value pair or an object hash of { name: 'optgroup label', value: [option name-value pairs] }");
        }
      }

      this.delegateEvents();
      return this;
    },

    /**
     Saves the value of the selected option to the model attribute. Triggers a
     `backgrid:edited` Backbone event from the model.
    */
    save: function save(e) {
      var model = this.model;
      var column = this.column;
      model.set(column.get('name'), this.formatter.toRaw(this.$el.val()));
      model.trigger('backgrid:edited', model, column, new Command(e));
    },

    /**
     Triggers a `backgrid:edited` event from the model so the body can close
     this editor.
    */
    close: function close(e) {
      var model = this.model;
      var column = this.column;
      var command = new Command(e);

      if (command.cancel()) {
        e.stopPropagation();
        model.trigger('backgrid:edited', model, column, new Command(e));
      } else if (command.save() || command.moveLeft() || command.moveRight() || command.moveUp() || command.moveDown() || e.type == 'blur') {
        e.preventDefault();
        e.stopPropagation();

        if (e.type == 'blur' && this.$el.find('option').length === 1) {
          model.set(column.get('name'), this.formatter.toRaw(this.$el.val()));
        }

        model.trigger('backgrid:edited', model, column, new Command(e));
      }
    }
  });
  /**
   SelectCell is also a different kind of cell in that upon going into edit mode
   the cell renders a list of options to pick from, as opposed to an input box.
    SelectCell cannot be referenced by its string name when used in a column
   definition because it requires an `optionValues` class attribute to be
   defined. `optionValues` can either be a list of name-value pairs, to be
   rendered as options, or a list of object hashes which consist of a key *name*
   which is the option group name, and a key *values* which is a list of
   name-value pairs to be rendered as options under that option group.
    In addition, `optionValues` can also be a parameter-less function that
   returns one of the above. If the options are static, it is recommended the
   returned values to be memoized. `_.memoize()` is a good function to help with
   that.
    During display mode, the default formatter will normalize the raw model value
   to an array of values whether the raw model value is a scalar or an
   array. Each value is compared with the `optionValues` values using
   Ecmascript's implicit type conversion rules. When exiting edit mode, no type
   conversion is performed when saving into the model. This behavior is not
   always desirable when the value type is anything other than string. To
   control type conversion on the client-side, you should subclass SelectCell to
   provide a custom formatter or provide the formatter to your column
   definition.
    See:
     [$.fn.val()](http://api.jquery.com/val/)
    @class Backgrid.SelectCell
   @extends Backgrid.Cell
  */

  var SelectCell = Backgrid.SelectCell = Cell.extend({
    /** @property */
    className: 'AknGrid-bodyCell select-cell',

    /** @property */
    editor: SelectCellEditor,

    /** @property */
    multiple: false,

    /** @property */
    formatter: new SelectFormatter(),

    /**
     @property {Array.<Array>|Array.<{name: string, values: Array.<Array>}>} optionValues
    */
    optionValues: undefined,

    /** @property */
    delimiter: ', ',

    /**
     Initializer.
      @param {Object} options
     @param {Backbone.Model} options.model
     @param {Backgrid.Column} options.column
      @throws {TypeError} If `optionsValues` is undefined.
    */
    initialize: function initialize(options) {
      Cell.prototype.initialize.apply(this, arguments);
      Backgrid.requireOptions(this, ['optionValues']);
      this.listenTo(this.model, 'backgrid:edit', function (model, column, cell, editor) {
        if (column.get('name') == this.column.get('name')) {
          editor.setOptionValues(this.optionValues);
          editor.setMultiple(this.multiple);
        }
      });
    },

    /**
     Renders the label using the raw value as key to look up from `optionValues`.
      @throws {TypeError} If `optionValues` is malformed.
    */
    render: function render() {
      this.$el.empty();
      var optionValues = this.optionValues;
      var rawData = this.formatter.fromRaw(this.model.get(this.column.get('name')));
      var selectedText = [];

      try {
        if (!_.isArray(optionValues) || _.isEmpty(optionValues)) throw new TypeError();

        for (var k = 0; k < rawData.length; k++) {
          var rawDatum = rawData[k];

          for (var i = 0; i < optionValues.length; i++) {
            var optionValue = optionValues[i];

            if (_.isArray(optionValue)) {
              var optionText = optionValue[0];
              var optionValue = optionValue[1];
              if (optionValue == rawDatum) selectedText.push(optionText);
            } else if (_.isObject(optionValue)) {
              var optionGroupValues = optionValue.values;

              for (var j = 0; j < optionGroupValues.length; j++) {
                var optionGroupValue = optionGroupValues[j];

                if (optionGroupValue[1] == rawDatum) {
                  selectedText.push(optionGroupValue[0]);
                }
              }
            } else {
              throw new TypeError();
            }
          }
        }

        this.$el.append(selectedText.join(this.delimiter));
      } catch (ex) {
        if (ex instanceof TypeError) {
          throw TypeError("'optionValues' must be of type {Array.<Array>|Array.<{name: string, values: Array.<Array>}>}");
        }

        throw ex;
      }

      this.delegateEvents();
      return this;
    }
  });
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  /**
   A Column is a placeholder for column metadata.
    You usually don't need to create an instance of this class yourself as a
   collection of column instances will be created for you from a list of column
   attributes in the Backgrid.js view class constructors.
    @class Backgrid.Column
   @extends Backbone.Model
  */

  var Column = Backgrid.Column = Backbone.Model.extend({
    defaults: {
      name: undefined,
      label: undefined,
      sortable: true,
      editable: true,
      renderable: true,
      formatter: undefined,
      cell: undefined,
      headerCell: undefined
    },

    /**
     Initializes this Column instance.
      @param {Object} attrs Column attributes.
     @param {string} attrs.name The name of the model attribute.
     @param {string|Backgrid.Cell} attrs.cell The cell type.
     If this is a string, the capitalized form will be used to look up a
     cell class in Backbone, i.e.: string => StringCell. If a Cell subclass
     is supplied, it is initialized with a hash of parameters. If a Cell
     instance is supplied, it is used directly.
     @param {string|Backgrid.HeaderCell} [attrs.headerCell] The header cell type.
     @param {string} [attrs.label] The label to show in the header.
     @param {boolean} [attrs.sortable=true]
     @param {boolean} [attrs.editable=true]
     @param {boolean} [attrs.renderable=true]
     @param {Backgrid.CellFormatter|Object|string} [attrs.formatter] The
     formatter to use to convert between raw model values and user input.
      @throws {TypeError} If attrs.cell or attrs.options are not supplied.
     @throws {ReferenceError} If attrs.cell is a string but a cell class of
     said name cannot be found in the Backgrid module.
      See:
      - Backgrid.Cell
     - Backgrid.CellFormatter
    */
    initialize: function initialize(attrs) {
      Backgrid.requireOptions(attrs, ['cell', 'name']);

      if (!this.has('label')) {
        this.set({
          label: this.get('name')
        }, {
          silent: true
        });
      }

      var headerCell = Backgrid.resolveNameToClass(this.get('headerCell'), 'HeaderCell');
      var cell = Backgrid.resolveNameToClass(this.get('cell'), 'Cell');
      this.set({
        cell: cell,
        headerCell: headerCell
      }, {
        silent: true
      });
    }
  });
  /**
   A Backbone collection of Column instances.
    @class Backgrid.Columns
   @extends Backbone.Collection
  */

  var Columns = Backgrid.Columns = Backbone.Collection.extend({
    /**
     @property {Backgrid.Column} model
    */
    model: Column
  });
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  /**
   Row is a simple container view that takes a model instance and a list of
   column metadata describing how each of the model's attribute is to be
   rendered, and apply the appropriate cell to each attribute.
    @class Backgrid.Row
   @extends Backbone.View
  */

  var Row = Backgrid.Row = Backbone.View.extend({
    /** @property */
    tagName: 'tr',
    className: 'AknGrid-bodyRow',
    requiredOptions: ['columns', 'model'],

    /**
     Initializes a row view instance.
      @param {Object} options
     @param {Backbone.Collection.<Backgrid.Column>|Array.<Backgrid.Column>|Array.<Object>} options.columns Column metadata.
     @param {Backbone.Model} options.model The model instance to render.
      @throws {TypeError} If options.columns or options.model is undefined.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, this.requiredOptions);
      var columns = this.columns = options.columns;

      if (!(columns instanceof Backbone.Collection)) {
        columns = this.columns = new Columns(columns);
      }

      var cells = this.cells = [];

      for (var i = 0; i < columns.length; i++) {
        cells.push(this.makeCell(columns.at(i), options));
      }

      this.listenTo(columns, 'change:renderable', function (column, renderable) {
        for (var i = 0; i < cells.length; i++) {
          var cell = cells[i];

          if (cell.column.get('name') == column.get('name')) {
            if (renderable) cell.$el.show();else cell.$el.hide();
          }
        }
      });
      this.listenTo(columns, 'add', function (column, columns) {
        var i = columns.indexOf(column);
        var cell = this.makeCell(column, options);
        cells.splice(i, 0, cell);
        if (!cell.column.get('renderable')) cell.$el.hide();
        var $el = this.$el;

        if (i === 0) {
          $el.prepend(cell.render().$el);
        } else if (i === columns.length - 1) {
          $el.append(cell.render().$el);
        } else {
          $el.children().eq(i).before(cell.render().$el);
        }
      });
      this.listenTo(columns, 'remove', function (column, columns, opts) {
        cells[opts.index].remove();
        cells.splice(opts.index, 1);
      });
    },

    /**
     Factory method for making a cell. Used by #initialize internally. Override
     this to provide an appropriate cell instance for a custom Row subclass.
      @protected
      @param {Backgrid.Column} column
     @param {Object} options The options passed to #initialize.
      @return {Backgrid.Cell}
    */
    makeCell: function makeCell(column) {
      return new (column.get('cell'))({
        column: column,
        model: this.model
      });
    },

    /**
     Renders a row of cells for this row's model.
    */
    render: function render() {
      this.$el.empty();
      var fragment = document.createDocumentFragment();

      for (var i = 0; i < this.cells.length; i++) {
        var cell = this.cells[i];
        fragment.appendChild(cell.render().el);
        if (!cell.column.get('renderable')) cell.$el.hide();
      }

      this.el.appendChild(fragment);
      this.delegateEvents();
      return this;
    },

    /**
     Clean up this row and its cells.
      @chainable
    */
    remove: function remove() {
      for (var i = 0; i < this.cells.length; i++) {
        var cell = this.cells[i];
        cell.remove.apply(cell, arguments);
      }

      return Backbone.View.prototype.remove.apply(this, arguments);
    }
  });
  /**
   EmptyRow is a simple container view that takes a list of column and render a
   row with a single column.
    @class Backgrid.EmptyRow
   @extends Backbone.View
  */

  var EmptyRow = Backgrid.EmptyRow = Backbone.View.extend({
    /** @property */
    tagName: 'tr',
    className: 'AknGrid-bodyRow',

    /** @property */
    emptyText: null,

    /**
     Initializer.
      @param {Object} options
     @param {string} options.emptyText
     @param {Backbone.Collection.<Backgrid.Column>|Array.<Backgrid.Column>|Array.<Object>} options.columns Column metadata.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, ['emptyText', 'columns']);
      this.emptyText = options.emptyText;
      this.columns = options.columns;
    },

    /**
     Renders an empty row.
    */
    render: function render() {
      this.$el.empty();
      var td = document.createElement('td');
      td.setAttribute('colspan', this.columns.length);
      td.textContent = this.emptyText;
      this.el.setAttribute('class', 'empty');
      this.el.appendChild(td);
      return this;
    }
  });
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  /**
   HeaderCell is a special cell class that renders a column header cell. If the
   column is sortable, a sorter is also rendered and will trigger a table
   refresh after sorting.
    @class Backgrid.HeaderCell
   @extends Backbone.View
  */

  var HeaderCell = Backgrid.HeaderCell = Backbone.View.extend({
    /** @property */
    tagName: 'th',
    className: 'AknGrid-headerCell',

    /** @property */
    events: {
      'click a': 'onClick'
    },

    /**
    @property {null|"ascending"|"descending"} _direction The current sorting
    direction of this column.
    */
    _direction: null,

    /**
     Initializer.
      @param {Object} options
     @param {Backgrid.Column|Object} options.column
      @throws {TypeError} If options.column or options.collection is undefined.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, ['column', 'collection']);
      this.column = options.column;

      if (!(this.column instanceof Column)) {
        this.column = new Column(this.column);
      }

      this.listenTo(this.collection, 'backgrid:sort', this._resetCellDirection);
    },

    /**
     Gets or sets the direction of this cell. If called directly without
     parameters, returns the current direction of this cell, otherwise sets
     it. If a `null` is given, sets this cell back to the default order.
      @param {null|"ascending"|"descending"} dir
     @return {null|string} The current direction or the changed direction.
    */
    direction: function direction(dir) {
      if (arguments.length) {
        if (this._direction) {
          this.$el.removeClass('AknGrid-headerCell--descending').removeClass('AknGrid-headerCell--ascending');
          this.$el.removeClass(this._direction);
        }

        if (dir) {
          this.$el.addClass('AknGrid-headerCell--' + dir);
          this.$el.addClass(dir);
        }

        this._direction = dir;
      }

      return this._direction;
    },

    /**
     Event handler for the Backbone `backgrid:sort` event. Resets this cell's
     direction to default if sorting is being done on another column.
      @private
    */
    _resetCellDirection: function _resetCellDirection(sortByColName, direction, comparator, collection) {
      if (collection == this.collection) {
        if (sortByColName !== this.column.get('name')) this.direction(null);else this.direction(direction);
      }
    },

    /**
     Event handler for the `click` event on the cell's anchor. If the column is
     sortable, clicking on the anchor will cycle through 3 sorting orderings -
     `ascending`, `descending`, and default.
    */
    onClick: function onClick(e) {
      e.preventDefault();
      var columnName = this.column.get('name');

      if (this.column.get('sortable')) {
        if (this.direction() === 'ascending') {
          this.sort(columnName, 'descending', function (left, right) {
            var leftVal = left.get(columnName);
            var rightVal = right.get(columnName);

            if (leftVal === rightVal) {
              return 0;
            } else if (leftVal > rightVal) {
              return -1;
            }

            return 1;
          });
        } else if (this.direction() === 'descending') {
          this.sort(columnName, null);
        } else {
          this.sort(columnName, 'ascending', function (left, right) {
            var leftVal = left.get(columnName);
            var rightVal = right.get(columnName);

            if (leftVal === rightVal) {
              return 0;
            } else if (leftVal < rightVal) {
              return -1;
            }

            return 1;
          });
        }
      }
    },

    /**
     If the underlying collection is a Backbone.PageableCollection in
     server-mode or infinite-mode, a page of models is fetched after sorting is
     done on the server.
      If the underlying collection is a Backbone.PageableCollection in
     client-mode, or any
     [Backbone.Collection](http://backbonejs.org/#Collection) instance, sorting
     is done on the client side. If the collection is an instance of a
     Backbone.PageableCollection, sorting will be done globally on all the pages
     and the current page will then be returned.
      Triggers a Backbone `backgrid:sort` event from the collection when done
     with the column name, direction, comparator and a reference to the
     collection.
      @param {string} columnName
     @param {null|"ascending"|"descending"} direction
     @param {function(*, *): number} [comparator]
      See [Backbone.Collection#comparator](http://backbonejs.org/#Collection-comparator)
    */
    sort: function sort(columnName, direction, comparator) {
      comparator = comparator || this._cidComparator;
      var collection = this.collection;

      if (Backbone.PageableCollection && collection instanceof Backbone.PageableCollection) {
        var order;
        if (direction === 'ascending') order = -1;else if (direction === 'descending') order = 1;else order = null;
        collection.setSorting(order ? columnName : null, order);

        if (collection.mode == 'client') {
          if (!collection.fullCollection.comparator) {
            collection.fullCollection.comparator = comparator;
          }

          collection.fullCollection.sort();
        } else collection.fetch({
          reset: true
        });
      } else {
        collection.comparator = comparator;
        collection.sort();
      }

      this.collection.trigger('backgrid:sort', columnName, direction, comparator, this.collection);
    },

    /**
     Default comparator for Backbone.Collections. Sorts cids in ascending
     order. The cids of the models are assumed to be in insertion order.
      @private
     @param {*} left
     @param {*} right
    */
    _cidComparator: function _cidComparator(left, right) {
      var lcid = left.cid,
          rcid = right.cid;

      if (!_.isUndefined(lcid) && !_.isUndefined(rcid)) {
        lcid = lcid.slice(1) * 1, rcid = rcid.slice(1) * 1;
        if (lcid < rcid) return -1;else if (lcid > rcid) return 1;
      }

      return 0;
    },

    /**
     Renders a header cell with a sorter and a label.
    */
    render: function render() {
      this.$el.empty();
      var $label = $('<a>').text(this.column.get('label')).append("<b class='sort-caret'></b>");
      this.$el.append($label);
      this.delegateEvents();
      return this;
    }
  });
  /**
   HeaderRow is a controller for a row of header cells.
    @class Backgrid.HeaderRow
   @extends Backgrid.Row
  */

  var HeaderRow = Backgrid.HeaderRow = Backgrid.Row.extend({
    requiredOptions: ['columns', 'collection'],

    /**
     Initializer.
      @param {Object} options
     @param {Backbone.Collection.<Backgrid.Column>|Array.<Backgrid.Column>|Array.<Object>} options.columns
     @param {Backgrid.HeaderCell} [options.headerCell] Customized default
     HeaderCell for all the columns. Supply a HeaderCell class or instance to a
     the `headerCell` key in a column definition for column-specific header
     rendering.
      @throws {TypeError} If options.columns or options.collection is undefined.
    */
    initialize: function initialize() {
      Backgrid.Row.prototype.initialize.apply(this, arguments);
    },
    makeCell: function makeCell(column, options) {
      var headerCell = column.get('headerCell') || options.headerCell || HeaderCell;
      headerCell = new headerCell({
        column: column,
        collection: this.collection
      });
      return headerCell;
    }
  });
  /**
   Header is a special structural view class that renders a table head with a
   single row of header cells.
    @class Backgrid.Header
   @extends Backbone.View
  */

  var Header = Backgrid.Header = Backbone.View.extend({
    /** @property */
    tagName: 'thead',
    className: 'AknGrid-header',

    /**
     Initializer. Initializes this table head view to contain a single header
     row view.
      @param {Object} options
     @param {Backbone.Collection.<Backgrid.Column>|Array.<Backgrid.Column>|Array.<Object>} options.columns Column metadata.
     @param {Backbone.Model} options.model The model instance to render.
      @throws {TypeError} If options.columns or options.model is undefined.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, ['columns', 'collection']);
      this.columns = options.columns;

      if (!(this.columns instanceof Backbone.Collection)) {
        this.columns = new Columns(this.columns);
      }

      this.row = new Backgrid.HeaderRow({
        columns: this.columns,
        collection: this.collection
      });
    },

    /**
     Renders this table head with a single row of header cells.
    */
    render: function render() {
      this.$el.append(this.row.render().$el);
      this.delegateEvents();
      return this;
    },

    /**
     Clean up this header and its row.
      @chainable
    */
    remove: function remove() {
      this.row.remove.apply(this.row, arguments);
      return Backbone.View.prototype.remove.apply(this, arguments);
    }
  });
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  /**
   Body is the table body which contains the rows inside a table. Body is
   responsible for refreshing the rows after sorting, insertion and removal.
    @class Backgrid.Body
   @extends Backbone.View
  */

  var Body = Backgrid.Body = Backbone.View.extend({
    /** @property */
    tagName: 'tbody',
    className: 'AknGrid-body',

    /**
     Initializer.
      @param {Object} options
     @param {Backbone.Collection} options.collection
     @param {Backbone.Collection.<Backgrid.Column>|Array.<Backgrid.Column>|Array.<Object>} options.columns
     Column metadata.
     @param {Backgrid.Row} [options.row=Backgrid.Row] The Row class to use.
     @param {string} [options.emptyText] The text to display in the empty row.
      @throws {TypeError} If options.columns or options.collection is undefined.
      See Backgrid.Row.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, ['columns', 'collection']);
      this.columns = options.columns;

      if (!(this.columns instanceof Backbone.Collection)) {
        this.columns = new Columns(this.columns);
      }

      this.row = options.row || Row;
      this.rows = this.collection.map(function (model) {
        var row = new this.row({
          columns: this.columns,
          model: model
        });
        return row;
      }, this);
      this.emptyText = options.emptyText;

      this._unshiftEmptyRowMayBe();

      var collection = this.collection;
      this.listenTo(collection, 'add', this.insertRow);
      this.listenTo(collection, 'remove', this.removeRow);
      this.listenTo(collection, 'sort', this.refresh);
      this.listenTo(collection, 'reset', this.refresh);
      this.listenTo(collection, 'backgrid:edited', this.moveToNextCell);
    },
    _unshiftEmptyRowMayBe: function _unshiftEmptyRowMayBe() {
      if (this.rows.length === 0 && this.emptyText != null) {
        this.rows.unshift(new EmptyRow({
          emptyText: this.emptyText,
          columns: this.columns
        }));
      }
    },

    /**
     This method can be called either directly or as a callback to a
     [Backbone.Collecton#add](http://backbonejs.org/#Collection-add) event.
      When called directly, it accepts a model or an array of models and an
     option hash just like
     [Backbone.Collection#add](http://backbonejs.org/#Collection-add) and
     delegates to it. Once the model is added, a new row is inserted into the
     body and automatically rendered.
      When called as a callback of an `add` event, splices a new row into the
     body and renders it.
      @param {Backbone.Model} model The model to render as a row.
     @param {Backbone.Collection} collection When called directly, this
     parameter is actually the options to
     [Backbone.Collection#add](http://backbonejs.org/#Collection-add).
     @param {Object} options When called directly, this must be null.
      See:
      - [Backbone.Collection#add](http://backbonejs.org/#Collection-add)
    */
    insertRow: function insertRow(model, collection, options) {
      if (this.rows[0] instanceof EmptyRow) this.rows.pop().remove(); // insertRow() is called directly

      if (!(collection instanceof Backbone.Collection) && !options) {
        this.collection.add(model, options = collection);
        return;
      }

      options = _.extend({
        render: true
      }, options || {});
      var row = new this.row({
        columns: this.columns,
        model: model
      });
      var index = collection.indexOf(model);
      this.rows.splice(index, 0, row);
      var $el = this.$el;
      var $children = $el.children();
      var $rowEl = row.render().$el;

      if (options.render) {
        if (index >= $children.length) {
          $el.append($rowEl);
        } else {
          $children.eq(index).before($rowEl);
        }
      }
    },

    /**
     The method can be called either directly or as a callback to a
     [Backbone.Collection#remove](http://backbonejs.org/#Collection-remove)
     event.
      When called directly, it accepts a model or an array of models and an
     option hash just like
     [Backbone.Collection#remove](http://backbonejs.org/#Collection-remove) and
     delegates to it. Once the model is removed, a corresponding row is removed
     from the body.
      When called as a callback of a `remove` event, splices into the rows and
     removes the row responsible for rendering the model.
      @param {Backbone.Model} model The model to remove from the body.
     @param {Backbone.Collection} collection When called directly, this
     parameter is actually the options to
     [Backbone.Collection#remove](http://backbonejs.org/#Collection-remove).
     @param {Object} options When called directly, this must be null.
      See:
      - [Backbone.Collection#remove](http://backbonejs.org/#Collection-remove)
    */
    removeRow: function removeRow(model, collection, options) {
      // removeRow() is called directly
      if (!options) {
        this.collection.remove(model, options = collection);

        this._unshiftEmptyRowMayBe();

        return;
      }

      if (_.isUndefined(options.render) || options.render) {
        this.rows[options.index].remove();
      }

      this.rows.splice(options.index, 1);

      this._unshiftEmptyRowMayBe();
    },

    /**
     Reinitialize all the rows inside the body and re-render them. Triggers a
     Backbone `backgrid:refresh` event from the collection along with the body
     instance as its sole parameter when done.
    */
    refresh: function refresh() {
      for (var i = 0; i < this.rows.length; i++) {
        this.rows[i].remove();
      }

      this.rows = this.collection.map(function (model) {
        var row = new this.row({
          columns: this.columns,
          model: model
        });
        return row;
      }, this);

      this._unshiftEmptyRowMayBe();

      this.render();
      this.collection.trigger('backgrid:refresh', this);
      return this;
    },

    /**
     Renders all the rows inside this body. If the collection is empty and
     `options.emptyText` is defined and not null in the constructor, an empty
     row is rendered, otherwise no row is rendered.
    */
    render: function render() {
      this.$el.empty();
      var fragment = document.createDocumentFragment();

      for (var i = 0; i < this.rows.length; i++) {
        var row = this.rows[i];
        row.render();

        if ('TR' === row.el.tagName) {
          fragment.appendChild(row.el);
        } else {
          _.each(row.$el.children(), function (child) {
            fragment.appendChild(child);
          });
        }
      }

      this.el.appendChild(fragment);
      this.delegateEvents();
      return this;
    },

    /**
     Clean up this body and it's rows.
      @chainable
    */
    remove: function remove() {
      for (var i = 0; i < this.rows.length; i++) {
        var row = this.rows[i];
        row.remove.apply(row, arguments);
      }

      return Backbone.View.prototype.remove.apply(this, arguments);
    },

    /**
     Moves focus to the next renderable and editable cell and return the
     currently editing cell to display mode.
      @param {Backbone.Model} model The originating model
     @param {Backgrid.Column} column The originating model column
     @param {Backgrid.Command} command The Command object constructed from a DOM
     Event
    */
    moveToNextCell: function moveToNextCell(model, column, command) {
      var i = this.collection.indexOf(model);
      var j = this.columns.indexOf(column);

      if (command.moveUp() || command.moveDown() || command.moveLeft() || command.moveRight() || command.save()) {
        var l = this.columns.length;
        var maxOffset = l * this.collection.length;

        if (command.moveUp() || command.moveDown()) {
          var row = this.rows[i + (command.moveUp() ? -1 : 1)];
          if (row) row.cells[j].enterEditMode();
        } else if (command.moveLeft() || command.moveRight()) {
          var right = command.moveRight();

          for (var offset = i * l + j + (right ? 1 : -1); offset >= 0 && offset < maxOffset; right ? offset++ : offset--) {
            var m = ~~(offset / l);
            var n = offset - m * l;
            var cell = this.rows[m].cells[n];

            if (cell.column.get('renderable') && cell.column.get('editable')) {
              cell.enterEditMode();
              break;
            }
          }
        }
      }

      this.rows[i].cells[j].exitEditMode();
    }
  });
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  /**
   A Footer is a generic class that only defines a default tag `tfoot` and
   number of required parameters in the initializer.
    @abstract
   @class Backgrid.Footer
   @extends Backbone.View
  */

  var Footer = Backgrid.Footer = Backbone.View.extend({
    /** @property */
    tagName: 'tfoot',

    /**
     Initializer.
      @param {Object} options
     @param {*} options.parent The parent view class of this footer.
     @param {Backbone.Collection.<Backgrid.Column>|Array.<Backgrid.Column>|Array.<Object>} options.columns
     Column metadata.
     @param {Backbone.Collection} options.collection
      @throws {TypeError} If options.columns or options.collection is undefined.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, ['columns', 'collection']);
      this.columns = options.columns;

      if (!(this.columns instanceof Backbone.Collection)) {
        this.columns = new Backgrid.Columns(this.columns);
      }
    }
  });
  /*
  backgrid
  http://github.com/wyuenho/backgrid
   Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
  Licensed under the MIT @license.
  */

  /**
   Grid represents a data grid that has a header, body and an optional footer.
    By default, a Grid treats each model in a collection as a row, and each
   attribute in a model as a column. To render a grid you must provide a list of
   column metadata and a collection to the Grid constructor. Just like any
   Backbone.View class, the grid is rendered as a DOM node fragment when you
   call render().
        var grid = Backgrid.Grid({
         columns: [{ name: "id", label: "ID", type: "string" },
          // ...
         ],
         collections: books
       });
        $("#table-container").append(grid.render().el);
    Optionally, if you want to customize the rendering of the grid's header and
   footer, you may choose to extend Backgrid.Header and Backgrid.Footer, and
   then supply that class or an instance of that class to the Grid constructor.
   See the documentation for Header and Footer for further details.
        var grid = Backgrid.Grid({
         columns: [{ name: "id", label: "ID", type: "string" }],
         collections: books,
         header: Backgrid.Header.extend({
              //...
         }),
         footer: Backgrid.Paginator
       });
    Finally, if you want to override how the rows are rendered in the table body,
   you can supply a Body subclass as the `body` attribute that uses a different
   Row class.
    @class Backgrid.Grid
   @extends Backbone.View
    See:
    - Backgrid.Column
   - Backgrid.Header
   - Backgrid.Body
   - Backgrid.Row
   - Backgrid.Footer
  */

  var Grid = Backgrid.Grid = Backbone.View.extend({
    /** @property */
    tagName: 'table',

    /** @property */
    className: 'backgrid',

    /** @property */
    header: Header,

    /** @property */
    body: Body,

    /** @property */
    footer: null,

    /**
     Initializes a Grid instance.
      @param {Object} options
     @param {Backbone.Collection.<Backgrid.Column>|Array.<Backgrid.Column>|Array.<Object>} options.columns Column metadata.
     @param {Backbone.Collection} options.collection The collection of tabular model data to display.
     @param {Backgrid.Header} [options.header=Backgrid.Header] An optional Header class to override the default.
     @param {Backgrid.Body} [options.body=Backgrid.Body] An optional Body class to override the default.
     @param {Backgrid.Row} [options.row=Backgrid.Row] An optional Row class to override the default.
     @param {Backgrid.Footer} [options.footer=Backgrid.Footer] An optional Footer class.
    */
    initialize: function initialize(options) {
      Backgrid.requireOptions(options, ['columns', 'collection']); // Convert the list of column objects here first so the subviews don't have
      // to.

      if (!(options.columns instanceof Backbone.Collection)) {
        options.columns = new Columns(options.columns);
      }

      this.columns = options.columns;

      var passedThruOptions = _.omit(options, ['el', 'id', 'attributes', 'className', 'tagName', 'events']);

      this.header = options.header || this.header;
      this.header = new this.header(passedThruOptions);
      this.body = options.body || this.body;
      this.body = new this.body(passedThruOptions);
      this.footer = options.footer || this.footer;

      if (this.footer) {
        this.footer = new this.footer(passedThruOptions);
      }

      this.listenTo(this.columns, 'reset', function () {
        this.header = new (this.header.remove().constructor)(passedThruOptions);
        this.body = new (this.body.remove().constructor)(passedThruOptions);

        if (this.footer) {
          this.footer = new (this.footer.remove().constructor)(passedThruOptions);
        }

        this.render();
      });
    },

    /**
     Delegates to Backgrid.Body#insertRow.
    */
    insertRow: function insertRow(model, collection, options) {
      return this.body.insertRow(model, collection, options);
    },

    /**
     Delegates to Backgrid.Body#removeRow.
    */
    removeRow: function removeRow(model, collection, options) {
      return this.body.removeRow(model, collection, options);
    },

    /**
     Delegates to Backgrid.Columns#add for adding a column. Subviews can listen
     to the `add` event from their internal `columns` if rerendering needs to
     happen.
      @param {Object} [options] Options for `Backgrid.Columns#add`.
     @param {boolean} [options.render=true] Whether to render the column
     immediately after insertion.
      @chainable
    */
    insertColumn: function insertColumn(column, options) {
      options = options || {
        render: true
      };
      this.columns.add(column, options);
      return this;
    },

    /**
     Delegates to Backgrid.Columns#remove for removing a column. Subviews can
     listen to the `remove` event from the internal `columns` if rerendering
     needs to happen.
      @param {Object} [options] Options for `Backgrid.Columns#remove`.
      @chainable
    */
    removeColumn: function removeColumn(column, options) {
      this.columns.remove(column, options);
      return this;
    },

    /**
     Renders the grid's header, then footer, then finally the body. Triggers a
     Backbone `backgrid:rendered` event along with a reference to the grid when
     the it has successfully been rendered.
    */
    render: function render() {
      this.$el.empty();
      this.$el.append(this.header.render().$el);

      if (this.footer) {
        this.$el.append(this.footer.render().$el);
      }

      this.$el.append(this.body.render().$el);
      this.delegateEvents();
      this.trigger('backgrid:rendered', this);
      return this;
    },

    /**
     Clean up this grid and its subviews.
      @chainable
    */
    remove: function remove() {
      this.header.remove.apply(this.header, arguments);
      this.body.remove.apply(this.body, arguments);
      this.footer && this.footer.remove.apply(this.footer, arguments);
      return Backbone.View.prototype.remove.apply(this, arguments);
    }
  });
})(this, jQuery, _, Backbone);

module.exports = this.Backgrid;

/***/ }),

/***/ 96525:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/lib/multiselect/jquery.multiselect.filter.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * jQuery MultiSelect UI ImportExport Filtering Plugin 1.5pre
 * Copyright (c) 2012 Eric Hynds
 *
 * http://www.erichynds.com/jquery/jquery-ui-multiselect-widget/
 *
 * Depends:
 *   - jQuery UI MultiSelect widget
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {
  var rEscape = /[\-\[\]{}()*+?.,\\\^$|#\s]/g;
  $.widget('ech.multiselectfilter', {
    options: {
      label: 'Filter:',
      width: null
      /* override default width set in css file (px). null will inherit */
      ,
      placeholder: 'Enter keywords',
      autoReset: false
    },
    _create: function _create() {
      var opts = this.options;
      var elem = $(this.element); // get the multiselect instance

      var instance = this.instance = elem.data('echMultiselect') || elem.data('multiselect'); // store header; add filter class so the close/check all/uncheck all links can be positioned correctly

      var header = this.header = instance.menu.find('.ui-multiselect-header').addClass('ui-multiselect-hasfilter'); // wrapper elem

      var wrapper = this.wrapper = $('<div class="ui-multiselect-filter">' + (opts.label.length ? opts.label : '') + '<input placeholder="' + opts.placeholder + '" type="search"' + (/\d/.test(opts.width) ? 'style="width:' + opts.width + 'px"' : '') + ' /></div>').prependTo(this.header); // reference to the actual inputs

      this.inputs = instance.menu.find('input[type="checkbox"], input[type="radio"]'); // build the input box

      this.input = wrapper.find('input').bind({
        keydown: function keydown(e) {
          // prevent the enter key from submitting the form / closing the widget
          if (e.which === 13) {
            e.preventDefault();
          }
        },
        keyup: $.proxy(this._handler, this),
        click: $.proxy(this._handler, this)
      }); // cache input values for searching

      this.updateCache(); // rewrite internal _toggleChecked fn so that when checkAll/uncheckAll is fired,
      // only the currently filtered elements are checked

      instance._toggleChecked = function (flag, group) {
        var $inputs = group && group.length ? group : this.labels.find('input');

        var _self = this; // do not include hidden elems if the menu isn't open.


        var selector = instance._isOpen ? ':disabled, :hidden' : ':disabled';
        $inputs = $inputs.not(selector).each(this._toggleState('checked', flag)); // update text

        this.update(); // gather an array of the values that actually changed

        var values = $inputs.map(function () {
          return this.value;
        }).get(); // select option tags

        this.element.find('option').filter(function () {
          if (!this.disabled && $.inArray(this.value, values) > -1) {
            _self._toggleState('selected', flag).call(this);
          }
        }); // trigger the change event on the select

        if ($inputs.length) {
          this.element.trigger('change');
        }
      }; // rebuild cache when multiselect is updated


      var doc = $(document).on('multiselectrefresh', $.proxy(function () {
        this.updateCache();

        this._handler();
      }, this)); // automatically reset the widget on close?

      if (this.options.autoReset) {
        doc.on('multiselectclose', $.proxy(this._reset, this));
      }
    },
    // thx for the logic here ben alman
    _handler: function _handler(e) {
      var term = $.trim(this.input[0].value.toLowerCase()),
          // speed up lookups
      rows = this.rows,
          inputs = this.inputs,
          cache = this.cache;

      if (!term) {
        rows.show();
      } else {
        rows.hide();
        var regex = new RegExp(term.replace(rEscape, '\\$&'), 'gi');

        this._trigger('filter', e, $.map(cache, function (v, i) {
          var found = false;

          if (v.search(regex) !== -1) {
            found = true;
          } else {
            // look for 'value' attibute if innerHTML doesn't match
            var val = rows.eq(i).find('input').val();

            if (val.search(regex) !== -1) {
              found = true;
            }
          }

          if (found) {
            rows.eq(i).show();
            return inputs.get(i);
          }

          return null;
        }));
      } // show/hide optgroups


      this.instance.menu.find('.ui-multiselect-optgroup-label').each(function () {
        var $this = $(this);
        var isVisible = $this.nextUntil('.ui-multiselect-optgroup-label').filter(function () {
          return $.css(this, 'display') !== 'none';
        }).length;
        $this[isVisible ? 'show' : 'hide']();
      });
    },
    _reset: function _reset() {
      this.input.val('').trigger('keyup');
    },
    updateCache: function updateCache() {
      // each list item
      this.rows = this.instance.menu.find('.ui-multiselect-checkboxes li:not(.ui-multiselect-optgroup-label)'); // cache

      this.cache = this.element.children().map(function () {
        var elem = $(this); // account for optgroups

        if (this.tagName.toLowerCase() === 'optgroup') {
          elem = elem.children();
        }

        return elem.map(function () {
          return this.innerHTML.toLowerCase();
        }).get();
      }).get();
    },
    widget: function widget() {
      return this.wrapper;
    },
    destroy: function destroy() {
      $.Widget.prototype.destroy.call(this);
      this.input.val('').trigger('keyup');
      this.wrapper.remove();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 15077:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimdatagrid/lib/multiselect/jquery.multiselect.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * jQuery MultiSelect UI ImportExport 1.14pre
 * Copyright (c) 2012 Eric Hynds
 *
 * http://www.erichynds.com/jquery/jquery-ui-multiselect-widget/
 *
 * Depends:
 *   - jQuery 1.4.2+
 *   - jQuery UI 1.8 widget factory
 *
 * Optional:
 *   - jQuery UI effects
 *   - jQuery UI position utility
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {
  var multiselectID = 0;
  var $doc = $(document);
  $.widget('ech.multiselect', {
    // default options
    options: {
      header: true,
      height: 175,
      minWidth: 225,
      classes: '',
      checkAllText: 'Check all',
      uncheckAllText: 'Uncheck all',
      noneSelectedText: 'Select options',
      selectedText: '# selected',
      selectedList: 0,
      show: null,
      hide: null,
      autoOpen: false,
      multiple: true,
      position: {}
    },
    _create: function _create() {
      var el = this.element.hide();
      var o = this.options;
      this.speed = $.fx.speeds._default; // default speed for effects

      this._isOpen = false; // assume no
      // create a unique namespace for events that the widget
      // factory cannot unbind automatically. Use eventNamespace if on
      // jQuery UI 1.9+, and otherwise fallback to a custom string.

      this._namespaceID = this.eventNamespace || 'multiselect' + multiselectID;
      var button = (this.button = $('<button type="button"><span class="ui-icon ui-icon-triangle-1-s"></span></button>')).addClass('ui-multiselect ui-widget ui-state-default ui-corner-all').addClass(o.classes).attr({
        title: el.attr('title'),
        'aria-haspopup': true,
        tabIndex: el.attr('tabIndex')
      }).insertAfter(el),
          buttonlabel = (this.buttonlabel = $('<span></span>')).html(o.noneSelectedText).appendTo(button),
          menu = (this.menu = $('<div></div>')).addClass('ui-multiselect-menu ui-widget ui-widget-content ui-corner-all').addClass(o.classes).appendTo(document.body),
          header = (this.header = $('<div></div>')).addClass('ui-widget-header ui-corner-all ui-multiselect-header ui-helper-clearfix').appendTo(menu),
          headerLinkContainer = (this.headerLinkContainer = $('<ul></ul>')).addClass('ui-helper-reset').html(function () {
        if (o.header === true) {
          return '<li><a class="ui-multiselect-all" href="#"><span class="ui-icon ui-icon-check"></span><span>' + o.checkAllText + '</span></a></li><li><a class="ui-multiselect-none" href="#"><span class="ui-icon ui-icon-closethick"></span><span>' + o.uncheckAllText + '</span></a></li>';
        } else if (typeof o.header === 'string') {
          return '<li>' + o.header + '</li>';
        } else {
          return '';
        }
      }).append('<li class="ui-multiselect-close"><a href="#" class="ui-multiselect-close"><span class="ui-icon ui-icon-circle-close"></span></a></li>').appendTo(header),
          checkboxContainer = (this.checkboxContainer = $('<ul></ul>')).addClass('ui-multiselect-checkboxes ui-helper-reset').appendTo(menu); // perform event bindings

      this._bindEvents(); // build menu


      this.refresh(true); // some addl. logic for single selects

      if (!o.multiple) {
        menu.addClass('ui-multiselect-single');
      } // bump unique ID


      multiselectID++;
    },
    _init: function _init() {
      if (this.options.header === false) {
        this.header.hide();
      }

      if (!this.options.multiple) {
        this.headerLinkContainer.find('.ui-multiselect-all, .ui-multiselect-none').hide();
      }

      if (this.options.autoOpen) {
        this.open();
      }

      if (this.element.is(':disabled')) {
        this.disable();
      }
    },
    refresh: function refresh(init) {
      var el = this.element;
      var o = this.options;
      var menu = this.menu;
      var checkboxContainer = this.checkboxContainer;
      var optgroups = [];
      var html = '';
      var id = el.attr('id') || multiselectID++; // unique ID for the label & option tags
      // build items

      el.find('option').each(function (i) {
        var $this = $(this);
        var parent = this.parentNode;
        var title = this.innerHTML;
        var description = this.title;
        var value = this.value;
        var inputID = 'ui-multiselect-' + (this.id || id + '-option-' + i);
        var isDisabled = this.disabled;
        var isSelected = this.selected;
        var labelClasses = ['ui-corner-all'];
        var liClasses = (isDisabled ? 'ui-multiselect-disabled ' : ' ') + this.className;
        var optLabel; // is this an optgroup?

        if (parent.tagName === 'OPTGROUP') {
          optLabel = parent.getAttribute('label'); // has this optgroup been added already?

          if ($.inArray(optLabel, optgroups) === -1) {
            html += '<li class="ui-multiselect-optgroup-label ' + parent.className + '"><a href="#">' + optLabel + '</a></li>';
            optgroups.push(optLabel);
          }
        }

        if (isDisabled) {
          labelClasses.push('ui-state-disabled');
        } // browsers automatically select the first option
        // by default with single selects


        if (isSelected && !o.multiple) {
          labelClasses.push('ui-state-active');
        }

        html += '<li class="' + liClasses + '">'; // create the label

        html += '<label for="' + inputID + '" title="' + description + '" class="' + labelClasses.join(' ') + '">';
        html += '<input id="' + inputID + '" name="multiselect_' + id + '" type="' + (o.multiple ? 'checkbox' : 'radio') + '" value="' + value + '" title="' + title + '"'; // pre-selected?

        if (isSelected) {
          html += ' checked="checked"';
          html += ' aria-selected="true"';
        } // disabled?


        if (isDisabled) {
          html += ' disabled="disabled"';
          html += ' aria-disabled="true"';
        } // add the title and close everything off


        html += ' /><span>' + title + '</span></label></li>';
      }); // insert into the DOM

      checkboxContainer.html(html); // cache some moar useful elements

      this.labels = menu.find('label');
      this.inputs = this.labels.children('input'); // set widths

      this._setButtonWidth();

      this._setMenuWidth(); // remember default value


      this.button[0].defaultValue = this.update(); // broadcast refresh event; useful for widgets

      if (!init) {
        this._trigger('refresh');
      }
    },
    // updates the button text. call refresh() to rebuild
    update: function update() {
      var o = this.options;
      var $inputs = this.inputs;
      var $checked = $inputs.filter(':checked');
      var numChecked = $checked.length;
      var value;

      if (numChecked === 0) {
        value = o.noneSelectedText;
      } else {
        if ($.isFunction(o.selectedText)) {
          value = o.selectedText.call(this, numChecked, $inputs.length, $checked.get());
        } else if (/\d/.test(o.selectedList) && o.selectedList > 0 && numChecked <= o.selectedList) {
          value = $checked.map(function () {
            return $(this).next().html();
          }).get().join(', ');
        } else {
          value = o.selectedText.replace('#', numChecked).replace('#', $inputs.length);
        }
      }

      this._setButtonValue(value);

      return value;
    },
    // this exists as a separate method so that the developer
    // can easily override it.
    _setButtonValue: function _setButtonValue(value) {
      this.buttonlabel.text(value);
    },
    // binds events
    _bindEvents: function _bindEvents() {
      var self = this;
      var button = this.button;

      function clickHandler() {
        self[self._isOpen ? 'close' : 'open']();
        return false;
      } // webkit doesn't like it when you click on the span :(


      button.find('span').on('click.multiselect', clickHandler); // button events

      button.bind({
        click: clickHandler,
        keypress: function keypress(e) {
          switch (e.which) {
            case 27: // esc

            case 38: // up

            case 37:
              // left
              self.close();
              break;

            case 39: // right

            case 40:
              // down
              self.open();
              break;
          }
        },
        mouseenter: function mouseenter() {
          if (!button.hasClass('ui-state-disabled')) {
            $(this).addClass('ui-state-hover');
          }
        },
        mouseleave: function mouseleave() {
          $(this).removeClass('ui-state-hover');
        },
        focus: function focus() {
          if (!button.hasClass('ui-state-disabled')) {
            $(this).addClass('ui-state-focus');
          }
        },
        blur: function blur() {
          $(this).removeClass('ui-state-focus');
        }
      }); // header links

      this.header.delegate('a', 'click.multiselect', function (e) {
        // close link
        if ($(this).hasClass('ui-multiselect-close')) {
          self.close(); // check all / uncheck all
        } else {
          self[$(this).hasClass('ui-multiselect-all') ? 'checkAll' : 'uncheckAll']();
        }

        e.preventDefault();
      }); // optgroup label toggle support

      this.menu.delegate('li.ui-multiselect-optgroup-label a', 'click.multiselect', function (e) {
        e.preventDefault();
        var $this = $(this);
        var $inputs = $this.parent().nextUntil('li.ui-multiselect-optgroup-label').find('input:visible:not(:disabled)');
        var nodes = $inputs.get();
        var label = $this.parent().text(); // trigger event and bail if the return is false

        if (self._trigger('beforeoptgrouptoggle', e, {
          inputs: nodes,
          label: label
        }) === false) {
          return;
        } // toggle inputs


        self._toggleChecked($inputs.filter(':checked').length !== $inputs.length, $inputs);

        self._trigger('optgrouptoggle', e, {
          inputs: nodes,
          label: label,
          checked: nodes[0].checked
        });
      }).delegate('label', 'mouseenter.multiselect', function () {
        if (!$(this).hasClass('ui-state-disabled')) {
          self.labels.removeClass('ui-state-hover');
          $(this).addClass('ui-state-hover').find('input').focus();
        }
      }).delegate('label', 'keydown.multiselect', function (e) {
        e.preventDefault();

        switch (e.which) {
          case 9: // tab

          case 27:
            // esc
            self.close();
            break;

          case 38: // up

          case 40: // down

          case 37: // left

          case 39:
            // right
            self._traverse(e.which, this);

            break;

          case 13:
            // enter
            $(this).find('input')[0].click();
            break;
        }
      }).delegate('input[type="checkbox"], input[type="radio"]', 'click.multiselect', function (e) {
        var $this = $(this);
        var val = this.value;
        var checked = this.checked;
        var tags = self.element.find('option'); // bail if this input is disabled or the event is cancelled

        if (this.disabled || self._trigger('click', e, {
          value: val,
          text: this.title,
          checked: checked
        }) === false) {
          e.preventDefault();
          return;
        } // make sure the input has focus. otherwise, the esc key
        // won't close the menu after clicking an item.


        $this.focus(); // toggle aria state

        $this.attr('aria-selected', checked); // change state on the original option tags

        tags.each(function () {
          if (this.value === val) {
            this.selected = checked;
          } else if (!self.options.multiple) {
            this.selected = false;
          }
        }); // some additional single select-specific logic

        if (!self.options.multiple) {
          self.labels.removeClass('ui-state-active');
          $this.closest('label').toggleClass('ui-state-active', checked); // close menu

          self.close();
        } // fire change on the select box


        self.element.trigger('change'); // setTimeout is to fix multiselect issue #14 and #47. caused by jQuery issue #3827
        // http://bugs.jquery.com/ticket/3827

        setTimeout($.proxy(self.update, self), 10);
      }); // close each widget when clicking on any other element/anywhere else on the page

      $doc.on('mousedown.' + this._namespaceID, function (event) {
        var target = event.target;

        if (self._isOpen && !$.contains(self.menu[0], target) && !$.contains(self.button[0], target) && target !== self.button[0] && target !== self.menu[0]) {
          self.close();
        }
      }); // deal with form resets.  the problem here is that buttons aren't
      // restored to their defaultValue prop on form reset, and the reset
      // handler fires before the form is actually reset.  delaying it a bit
      // gives the form inputs time to clear.

      $(this.element[0].form).on('reset.multiselect', function () {
        setTimeout($.proxy(self.refresh, self), 10);
      });
    },
    // set button width
    _setButtonWidth: function _setButtonWidth() {
      var width = this.element.outerWidth();
      var o = this.options;

      if (/\d/.test(o.minWidth) && width < o.minWidth) {
        width = o.minWidth;
      } // set widths


      this.button.outerWidth(width);
    },
    // set menu width
    _setMenuWidth: function _setMenuWidth() {
      var m = this.menu;
      m.outerWidth(this.button.outerWidth());
    },
    // move up or down within the menu
    _traverse: function _traverse(which, start) {
      var $start = $(start);
      var moveToLast = which === 38 || which === 37; // select the first li that isn't an optgroup label / disabled

      $next = $start.parent()[moveToLast ? 'prevAll' : 'nextAll']('li:not(.ui-multiselect-disabled, .ui-multiselect-optgroup-label)')[moveToLast ? 'last' : 'first'](); // if at the first/last element

      if (!$next.length) {
        var $container = this.menu.find('ul').last(); // move to the first/last

        this.menu.find('label')[moveToLast ? 'last' : 'first']().trigger('mouseover'); // set scroll position

        $container.scrollTop(moveToLast ? $container.height() : 0);
      } else {
        $next.find('label').trigger('mouseover');
      }
    },
    // This is an internal function to toggle the checked property and
    // other related attributes of a checkbox.
    //
    // The context of this function should be a checkbox; do not proxy it.
    _toggleState: function _toggleState(prop, flag) {
      return function () {
        if (!this.disabled) {
          this[prop] = flag;
        }

        if (flag) {
          this.setAttribute('aria-selected', true);
        } else {
          this.removeAttribute('aria-selected');
        }
      };
    },
    _toggleChecked: function _toggleChecked(flag, group) {
      var $inputs = group && group.length ? group : this.inputs;
      var self = this; // toggle state on inputs

      $inputs.each(this._toggleState('checked', flag)); // give the first input focus

      $inputs.eq(0).focus(); // update button text

      this.update(); // gather an array of the values that actually changed

      var values = $inputs.map(function () {
        return this.value;
      }).get(); // toggle state on original option tags

      this.element.find('option').each(function () {
        if (!this.disabled && $.inArray(this.value, values) > -1) {
          self._toggleState('selected', flag).call(this);
        }
      }); // trigger the change event on the select

      if ($inputs.length) {
        this.element.trigger('change');
      }
    },
    _toggleDisabled: function _toggleDisabled(flag) {
      this.button.attr({
        disabled: flag,
        'aria-disabled': flag
      })[flag ? 'addClass' : 'removeClass']('ui-state-disabled');
      var inputs = this.menu.find('input');
      var key = 'ech-multiselect-disabled';

      if (flag) {
        // remember which elements this widget disabled (not pre-disabled)
        // elements, so that they can be restored if the widget is re-enabled.
        inputs = inputs.filter(':enabled').data(key, true);
      } else {
        inputs = inputs.filter(function () {
          return $.data(this, key) === true;
        }).removeData(key);
      }

      inputs.attr({
        disabled: flag,
        'arial-disabled': flag
      }).parent()[flag ? 'addClass' : 'removeClass']('ui-state-disabled');
      this.element.attr({
        disabled: flag,
        'aria-disabled': flag
      });
    },
    // open the menu
    open: function open(e) {
      var self = this;
      var button = this.button;
      var menu = this.menu;
      var speed = this.speed;
      var o = this.options;
      var args = []; // bail if the multiselectopen event returns false, this widget is disabled, or is already open

      if (this._trigger('beforeopen') === false || button.hasClass('ui-state-disabled') || this._isOpen) {
        return;
      }

      var $container = menu.find('ul').last();
      var effect = o.show; // figure out opening effects/speeds

      if ($.isArray(o.show)) {
        effect = o.show[0];
        speed = o.show[1] || self.speed;
      } // if there's an effect, assume jQuery UI is in use
      // build the arguments to pass to show()


      if (effect) {
        args = [effect, speed];
      } // set the scroll of the checkbox container


      $container.scrollTop(0).height(o.height); // positon

      this.position(); // show the menu, maybe with a speed/effect combo

      $.fn.show.apply(menu, args); // select the first not disabled option
      // triggering both mouseover and mouseover because 1.4.2+ has a bug where triggering mouseover
      // will actually trigger mouseenter.  the mouseenter trigger is there for when it's eventually fixed

      this.labels.filter(':not(.ui-state-disabled)').eq(0).trigger('mouseover').trigger('mouseenter').find('input').trigger('focus');
      button.addClass('ui-state-active');
      this._isOpen = true;

      this._trigger('open');
    },
    // close the menu
    close: function close() {
      if (this._trigger('beforeclose') === false) {
        return;
      }

      var o = this.options;
      var effect = o.hide;
      var speed = this.speed;
      var args = []; // figure out opening effects/speeds

      if ($.isArray(o.hide)) {
        effect = o.hide[0];
        speed = o.hide[1] || this.speed;
      }

      if (effect) {
        args = [effect, speed];
      }

      $.fn.hide.apply(this.menu, args);
      this.button.removeClass('ui-state-active').trigger('blur').trigger('mouseleave');
      this._isOpen = false;

      this._trigger('close');
    },
    enable: function enable() {
      this._toggleDisabled(false);
    },
    disable: function disable() {
      this._toggleDisabled(true);
    },
    checkAll: function checkAll(e) {
      this._toggleChecked(true);

      this._trigger('checkAll');
    },
    uncheckAll: function uncheckAll() {
      this._toggleChecked(false);

      this._trigger('uncheckAll');
    },
    getChecked: function getChecked() {
      return this.menu.find('input').filter(':checked');
    },
    destroy: function destroy() {
      // remove classes + data
      $.Widget.prototype.destroy.call(this); // unbind events

      $doc.off(this._namespaceID);
      this.button.remove();
      this.menu.remove();
      this.element.show();
      return this;
    },
    isOpen: function isOpen() {
      return this._isOpen;
    },
    widget: function widget() {
      return this.menu;
    },
    getButton: function getButton() {
      return this.button;
    },
    position: function position() {
      var o = this.options; // use the position utility if it exists and options are specifified

      if ($.ui.position && !$.isEmptyObject(o.position)) {
        o.position.of = o.position.of || this.button;
        this.menu.show().position(o.position).hide(); // otherwise fallback to custom positioning
      } else {
        var pos = this.button.offset();
        this.menu.css({
          top: pos.top + this.button.outerHeight(),
          left: pos.left
        });
      }
    },
    // react to option changes after initialization
    _setOption: function _setOption(key, value) {
      var menu = this.menu;

      switch (key) {
        case 'header':
          menu.find('div.ui-multiselect-header')[value ? 'show' : 'hide']();
          break;

        case 'checkAllText':
          menu.find('a.ui-multiselect-all span').eq(-1).text(value);
          break;

        case 'uncheckAllText':
          menu.find('a.ui-multiselect-none span').eq(-1).text(value);
          break;

        case 'height':
          menu.find('ul').last().height(parseInt(value, 10));
          break;

        case 'minWidth':
          this.options[key] = parseInt(value, 10);

          this._setButtonWidth();

          this._setMenuWidth();

          break;

        case 'selectedText':
        case 'selectedList':
        case 'noneSelectedText':
          this.options[key] = value; // these all needs to update immediately for the update() call

          this.update();
          break;

        case 'classes':
          menu.add(this.button).removeClass(this.options.classes).addClass(value);
          break;

        case 'multiple':
          menu.toggleClass('ui-multiselect-single', !value);
          this.options.multiple = value;
          this.element[0].multiple = value;
          this.refresh();
          break;

        case 'position':
          this.position();
      }

      $.Widget.prototype._setOption.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 63624:
/*!********************************************************!*\
  !*** ./public/bundles/pimnotification/js/indicator.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! underscore */ 13469)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _) {
  'use strict';

  var Indicator = Backbone.Model.extend({
    defaults: {
      value: null,
      className: 'AknNotificationMenu-count',
      emptyClass: 'AknNotificationMenu-count--hidden',
      nonEmptyClass: ''
    }
  });
  var IndicatorView = Backbone.View.extend({
    model: Indicator,
    template: _.template('<span class="<%= className %> <%= value ? nonEmptyClass : emptyClass %>"><%= value %></span>'),
    initialize: function initialize() {
      this.listenTo(this.model, 'change', this.render);
      this.render();
    },
    render: function render() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    }
  });
  return function (opts) {
    var el = opts.el || null;
    delete opts.el;
    var indicator = new Indicator(opts);
    var indicatorView = new IndicatorView({
      el: el,
      model: indicator
    });

    indicator.setElement = function () {
      indicatorView.setElement.apply(indicatorView, arguments);
      return indicatorView.render();
    };

    return indicator;
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 80860:
/*!****************************************************************!*\
  !*** ./public/bundles/pimnotification/js/notification-list.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/template/notification/notification-list */ 30186)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, $, _, __, Routing, router, template) {
  'use strict';

  var Notification = Backbone.Model.extend({
    defaults: {
      viewed: false,
      url: null,
      message: '',
      id: null,
      type: 'success',
      createdAt: null,
      actionType: null,
      showReportButton: true,
      comment: null
    }
  });
  var NotificationList = Backbone.Collection.extend({
    model: Notification,
    loading: false,
    hasMore: true
  });
  var NotificationView = Backbone.View.extend({
    tagName: 'li',
    className: 'AknNotification',
    model: Notification,
    template: _.template(template),
    events: {
      'click .icon-trash': 'remove',
      'click .icon-eye-close': 'markAsRead',
      'click i': 'preventOpen',
      'click a.new': 'markAsRead',
      'click a': 'open'
    },
    remove: function remove() {
      this.model.destroy({
        url: Routing.generate('pim_notification_notification_remove', {
          id: this.model.get('id')
        }),
        wait: false,
        _method: 'DELETE'
      });
      this.$el.fadeOut(function () {
        this.remove();
      });
    },
    open: function open(e) {
      this.preventOpen(e);

      if (this.model.get('url')) {
        router.redirect(this.model.get('url'));
      }

      this.$el.closest('.dropdown').removeClass('open');
    },
    preventOpen: function preventOpen(e) {
      e.preventDefault();
      e.stopPropagation();
    },
    markAsRead: function markAsRead() {
      this.model.trigger('mark_as_read', this.model.id);
      this.model.set('viewed', true);
      $.ajax({
        type: 'POST',
        url: Routing.generate('pim_notification_notification_mark_viewed', {
          id: this.model.id
        }),
        async: true
      });
    },
    initialize: function initialize() {
      this.listenTo(this.model, 'change', this.render);
      this.render();
    },
    render: function render() {
      var _this$template;

      this.$el.html(this.template((_this$template = {
        viewed: this.model.get('viewed'),
        message: this.model.get('message'),
        url: this.model.get('url'),
        icon: this.getIcon(this.model.get('type')),
        type: this.model.get('type'),
        createdAt: this.model.get('createdAt'),
        actionType: this.camelize(this.model.get('actionType')),
        actionTypeMessage: 'foo',
        buttonLabel: this.model.get('buttonLabel')
      }, _defineProperty(_this$template, "actionTypeMessage", __('pim_notification.types.' + this.model.get('actionType'))), _defineProperty(_this$template, "showReportButton", this.model.get('showReportButton')), _defineProperty(_this$template, "comment", this.model.get('comment')), _this$template)));
      return this;
    },
    getIcon: function getIcon(type) {
      var icons = {
        success: 'ok',
        warning: 'warning-sign',
        error: 'remove',
        add: 'plus'
      };
      return _.result(icons, type, 'remove');
    },
    camelize: function camelize(str) {
      return str.toLowerCase().replace(/_(.)/g, function ($firstLetter) {
        return $firstLetter.toUpperCase();
      }).replace(/_/g, '');
    }
  });
  var NotificationListView = Backbone.View.extend({
    tagName: 'ol',
    collection: NotificationList,
    events: {
      scroll: 'onScroll'
    },
    initialize: function initialize() {
      _.bindAll(this, 'render');

      this.collection.on('add reset', this.render);
      this.render();
    },
    onScroll: function onScroll() {
      var self = this;
      this.$el.on('scroll', function () {
        if ($(this).scrollTop() + $(this).innerHeight() >= this.scrollHeight) {
          self.loadNotifications();
        }
      });
    },
    loadNotifications: function loadNotifications() {
      if (this.collection.loading || !this.collection.hasMore) {
        return;
      }

      this.collection.loading = true;
      this.collection.trigger('loading:start');
      $.getJSON(Routing.generate('pim_notification_notification_list') + '?skip=' + this.collection.length).then(_.bind(function (data) {
        this.collection.add(data.notifications);
        this.collection.hasMore = data.notifications.length >= 10;
        this.collection.trigger('load:unreadCount', data.unreadCount);
        this.collection.loading = false;
        this.collection.trigger('loading:finish');
      }, this));
    },
    render: function render() {
      this.$el.empty();

      _.each(this.collection.models, function (model) {
        this.renderNotification(model);
      }, this);
    },
    renderNotification: function renderNotification(item) {
      var itemView = new NotificationView({
        model: item
      });
      this.$el.append(itemView.$el);
    }
  });
  return function (opts) {
    var notificationList = new NotificationList();

    var options = _.extend({}, {
      el: null,
      collection: notificationList
    }, opts);

    var notificationListView = new NotificationListView(options);

    notificationList.setElement = function (element) {
      notificationListView.$el.prependTo(element);
      notificationListView.delegateEvents();
      notificationListView.render();
    };

    notificationList.loadNotifications = function () {
      return notificationListView.loadNotifications();
    };

    return notificationList;
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 93394:
/*!************************************************************!*\
  !*** ./public/bundles/pimnotification/js/notifications.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/notification-list */ 80860), __webpack_require__(/*! pim/indicator */ 63624), __webpack_require__(/*! pim/template/notification/notification */ 79838), __webpack_require__(/*! pim/template/notification/notification-footer */ 54359)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, $, _, Routing, NotificationList, Indicator, notificationTpl, notificationFooterTpl) {
  'use strict';

  var NOTIFICATION_TIMEOUT_ID = 'notifications_timeout_ids';
  return Backbone.View.extend({
    options: {
      imgUrl: '',
      loadingText: null,
      noNotificationsMessage: null,
      markAsReadMessage: null,
      indicatorBaseClass: 'AknNotificationMenu-count',
      indicatorEmptyClass: 'AknNotificationMenu-count--hidden',
      refreshInterval: 30000
    },
    freezeCount: false,
    template: _.template(notificationTpl),
    footerTemplate: _.template(notificationFooterTpl),
    events: {
      'click .notification-link': 'onOpen',
      'click .mark-as-read': 'markAllAsRead'
    },
    markAllAsRead: function markAllAsRead(e) {
      e.stopPropagation();
      e.preventDefault();
      $.ajax({
        type: 'POST',
        url: Routing.generate('pim_notification_notification_mark_viewed'),
        async: true
      });
      this.collection.trigger('mark_as_read', null);

      _.each(this.collection.models, function (model) {
        model.set('viewed', true);
      });
    },
    initialize: function initialize(opts) {
      this.options = _.extend({}, this.options, opts);
      this.collection = new NotificationList();
      this.indicator = new Indicator({
        el: this.$('.AknNotificationMenu-countContainer'),
        value: 0,
        className: this.options.indicatorBaseClass,
        emptyClass: this.options.indicatorEmptyClass
      });
      this.collection.on('load:unreadCount', function (count, reset) {
        this.scheduleRefresh();

        if (this.freezeCount) {
          this.freezeCount = false;
          return;
        }

        if (this.indicator.get('value') !== count) {
          this.indicator.set('value', count);

          if (reset) {
            this.collection.hasMore = true;
            this.collection.reset();
            this.renderFooter();
          }
        }
      }, this);
      this.collection.on('mark_as_read', function (id) {
        var value = null === id ? 0 : this.indicator.get('value') - 1;
        this.indicator.set('value', value);

        if (0 === value) {
          this.renderFooter();
        }

        if (null !== id) {
          this.freezeCount = true;
        }
      }, this);
      this.collection.on('loading:start loading:finish remove', this.renderFooter, this);
      this.render();
      this.scheduleRefresh();
    },
    scheduleRefresh: function scheduleRefresh() {
      var timeoutId = sessionStorage.getItem(NOTIFICATION_TIMEOUT_ID);

      if (timeoutId !== null && timeoutId !== '') {
        clearTimeout(parseInt(timeoutId));
      }

      var newTimeoutId = setTimeout(this.refresh.bind(this), this.options.refreshInterval);
      sessionStorage.setItem(NOTIFICATION_TIMEOUT_ID, newTimeoutId + '');
    },
    refresh: function refresh() {
      $.getJSON(Routing.generate('pim_notification_notification_count_unread')).then(_.bind(function (count) {
        sessionStorage.setItem('notificationRefreshLocked', 'available');
        this.collection.trigger('load:unreadCount', count, true);
      }, this));
    },
    onOpen: function onOpen() {
      if (!this.collection.length) {
        this.collection.loadNotifications();
      }
    },
    render: function render() {
      this.$el.html(this.template());
      this.collection.setElement(this.$('ul'));
      this.indicator.setElement(this.$('.AknNotificationMenu-countContainer'));
      this.renderFooter();
    },
    renderFooter: function renderFooter() {
      this.$('p').remove();
      this.$('ul').append(this.footerTemplate({
        options: this.options,
        loading: this.collection.loading,
        hasNotifications: this.collection.length > 0,
        hasMore: this.collection.hasMore,
        hasUnread: this.indicator.get('value') > 0
      }));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 63024:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/association-type/form/delete.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension for association type
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/association-type */ 8569)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, AssociationTypeRemover) {
  return DeleteForm.extend({
    remover: AssociationTypeRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 87832:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute-group/form/delete.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension for attribute group
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/attribute-group */ 60217)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, AttributeGroupRemover) {
  return DeleteForm.extend({
    remover: AttributeGroupRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 88730:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute-group/form/list.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Display the list of attribute groups
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/template/form/attribute-group/list */ 49644)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, FetcherRegistry, propertyAccessor, Routing, router, UserContext, i18n, securityContext, template) {
  return BaseForm.extend({
    className: 'tabsection',
    template: _.template(template),
    attributeGroups: [],
    events: {
      'click .attribute-group-link': 'redirectToGroup'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return $.when(FetcherRegistry.getFetcher('attribute-group').fetchAll(), BaseForm.prototype.configure.apply(this, arguments)).then(function (attributeGroups) {
        this.attributeGroups = attributeGroups;
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var canSortAttributeGroup = securityContext.isGranted('pim_enrich_attributegroup_sort');
      this.$el.html(this.template({
        attributeGroups: _.sortBy(_.values(this.attributeGroups), function (attributeGroup) {
          return attributeGroup.sort_order;
        }),
        i18n: i18n,
        uiLocale: UserContext.get('catalogLocale'),
        canSortAttributeGroup: canSortAttributeGroup
      }));

      if (canSortAttributeGroup) {
        this.$('tbody').sortable({
          handle: '.handle',
          containment: 'parent',
          tolerance: 'pointer',
          update: this.updateAttributeOrders.bind(this),
          helper: function helper(e, tr) {
            var $originals = tr.children();
            var $helper = tr.clone();
            $helper.children().each(function (index) {
              $(this).width($originals.eq(index).width());
            });
            return $helper;
          }
        });
      }

      this.renderExtensions();
    },

    /**
     * Update the attribute order based on the dom
     */
    updateAttributeOrders: function updateAttributeOrders() {
      var sortOrder = _.reduce(this.$('.attribute-group'), function (previous, current, order) {
        var next = _.extend({}, previous);

        next[current.dataset.attributeGroupCode] = order;
        return next;
      }, {});

      $.ajax({
        url: Routing.generate('pim_enrich_attributegroup_rest_sort'),
        type: 'PATCH',
        data: JSON.stringify(sortOrder)
      }).then(function (attributeGroups) {
        this.attributeGroups = attributeGroups;
        FetcherRegistry.getFetcher('attribute-group').clear();
        this.render();
      }.bind(this));
    },

    /**
     * Redirect to attribute group page
     *
     * @param {event} event
     */
    redirectToGroup: function redirectToGroup(event) {
      if (securityContext.isGranted('pim_enrich_attributegroup_edit')) {
        router.redirectToRoute('pim_enrich_attributegroup_edit', {
          identifier: event.target.dataset.attributeGroupCode
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 46049:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute-group/form/tab/attribute.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute selection tab
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/template/form/attribute-group/tab/attribute */ 9613), __webpack_require__(/*! pim/datagrid/state */ 30138), __webpack_require__(/*! jquery-ui */ 5232)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Router, BaseForm, i18n, UserContext, FetcherRegistry, SecurityContext, Dialog, template, DatagridState) {
  return BaseForm.extend({
    className: 'tabbable tabs-left',
    template: _.template(template),
    otherAttributes: [],
    attributeSortOrderKey: 'attributes_sort_order',
    events: {
      'click .remove-attribute': 'removeAttributeRequest',
      'click .redirect-attribute-list': 'redirectAttributeList'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      this.config.number_of_attributes_displayed = 500;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: this.config.tabCode ? this.config.tabCode : this.code,
        label: __(this.config.title)
      });
      this.onExtensions('add-attribute:add', this.addAttributes.bind(this));
      return FetcherRegistry.getFetcher('attribute').search({
        attribute_groups: 'other',
        rights: 0
      }).then(function (attributes) {
        this.otherAttributes = _.pluck(attributes, 'code');
      }.bind(this)).then(function () {
        return BaseForm.prototype.configure.apply(this, arguments);
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var attributeCodesToFetch = this.getFormData().attributes.slice(0, this.config.number_of_attributes_displayed);
      FetcherRegistry.getFetcher('attribute').fetchByIdentifiers(attributeCodesToFetch, {
        rights: 0
      }).then(function (attributes) {
        var _this = this;

        attributes = attributes.map(function (attribute) {
          var sortOrder = _this.getFormData().attributes_sort_order[attribute.code]; //This updates the sort order if the attribute is new on the collection


          if (undefined === sortOrder) {
            sortOrder = Object.keys(_this.getFormData().attributes_sort_order).length + 1;
          }

          return Object.assign({}, attribute, {
            sort_order: sortOrder
          });
        });
        attributes.sort(function (first, second) {
          return first.sort_order - second.sort_order;
        });
        this.$el.empty().append(this.template({
          attributes: attributes,
          i18n: i18n,
          UserContext: UserContext,
          __: __,
          hasRightToRemove: this.hasRightToRemove(),
          canSortAttributes: SecurityContext.isGranted(this.config.sortAttributesACL),
          attributeCount: attributes.length,
          totalAttributeCount: this.getFormData().attributes.length
        }));
        this.$('.attribute-list').sortable({
          handle: '.handle',
          containment: 'parent',
          tolerance: 'pointer',
          update: this.updateAttributeOrders.bind(this),
          helper: function helper(e, tr) {
            var $originals = tr.children();
            var $helper = tr.clone();
            $helper.children().each(function (index) {
              $(this).width($originals.eq(index).width());
            });
            return $helper;
          }
        });
        this.delegateEvents();
        BaseForm.prototype.render.apply(this, arguments);
      }.bind(this));
      return this;
    },

    /**
     * Update the sort order of attributes
     */
    updateAttributeOrders: function updateAttributeOrders() {
      var attributeGroup = _.extend({}, this.getFormData());

      attributeGroup.attributes_sort_order = _.reduce(this.$('.attribute'), function (previous, current, order) {
        var next = _.extend({}, previous);

        next[current.dataset.attributeCode] = order;
        return next;
      }, {});
      this.setData(attributeGroup);
      this.render();
    },

    /**
     * Add attributes to the model
     *
     * @param {Event}
     */
    addAttributes: function addAttributes(event) {
      var attributeGroup = _.extend({}, this.getFormData());

      attributeGroup.attributes = _.union(attributeGroup.attributes, event.codes);
      this.otherAttributes = _.difference(this.otherAttributes, event.codes);
      this.setData(attributeGroup);
      this.render();
    },

    /**
     * Add attributes to the model
     *
     * @param {Event}
     */
    removeAttributeRequest: function removeAttributeRequest(event) {
      if (!SecurityContext.isGranted(this.config.removeAttributeACL)) {
        return;
      }

      var code = event.currentTarget.dataset.attributeCode;
      Dialog.confirmDelete(__(this.config.confirmation.message, {
        attribute: code
      }), __(this.config.confirmation.title), function () {
        this.removeAttribute(code);
      }.bind(this), __(this.config.confirmation.subTitle), __(this.config.confirmation.buttonText));
    },

    /**
     * Remove attribute from collection
     *
     * @param {string} code
     */
    removeAttribute: function removeAttribute(code) {
      var attributeGroup = _.extend({}, this.getFormData());

      attributeGroup.attributes = _.without(attributeGroup.attributes, code);
      delete attributeGroup.attributes_sort_order[code];
      this.otherAttributes = _.union(this.otherAttributes, [code]);
      this.setData(attributeGroup);
      this.render();
    },

    /**
     * Get the list of attributes that are in the 'other' group
     *
     * @return {array}
     */
    getOtherAttributes: function getOtherAttributes() {
      return this.otherAttributes;
    },

    /**
     * Does the user has right to remove an attribute
     *
     * @return {Boolean}
     */
    hasRightToRemove: function hasRightToRemove() {
      var currentAttributeGroupIsNotOther = this.config.otherGroup !== this.getFormData().code;
      return currentAttributeGroupIsNotOther && SecurityContext.isGranted(this.config.removeAttributeACL);
    },

    /**
     * Does the user has right to add an attribute
     *
     * @return {Boolean}
     */
    hasRightToAdd: function hasRightToAdd() {
      var currentAttributeGroupIsNotOther = this.config.otherGroup !== this.getFormData().code;
      return currentAttributeGroupIsNotOther && SecurityContext.isGranted(this.config.addAttributeACL);
    },
    redirectAttributeList: function redirectAttributeList() {
      var groupFilters = "f[group][value][]=".concat(this.getFormData().code);
      DatagridState.set('attribute-grid', {
        filters: groupFilters
      });
      Router.redirectToRoute('pim_enrich_attribute_index');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 82553:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute-group/form/tab/select.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute group edit form add attribute select extension view
 *
 * @author   Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/product/add-select/attribute */ 24018), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/formatter/choices/base */ 78464), __webpack_require__(/*! pim/common/add-select/line */ 67184), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, AddAttributeSelect, FetcherRegistry, ChoicesFormatter, LineView, UserContext) {
  return AddAttributeSelect.extend({
    lineView: LineView,

    /**
     * Render this extension
     *
     * @return {Object}
     */
    render: function render() {
      if (!this.hasRightToAdd()) {
        return this;
      }

      return AddAttributeSelect.prototype.render.apply(this, arguments);
    },

    /**
     * Creates request according to recieved options
     *
     * @param {Object} options
     */
    onGetQuery: function onGetQuery(options) {
      return FetcherRegistry.getFetcher('attribute').search({
        identifiers: this.getParent().getOtherAttributes().join(','),
        rights: 0,
        search: options.term,
        options: {
          locale: UserContext.get('catalogLocale')
        }
      }).then(this.prepareChoices).then(function (choices) {
        options.callback({
          results: choices,
          more: false
        });
      });
    },

    /**
     * {@inheritdoc}
     */
    prepareChoices: function prepareChoices(items) {
      return _.chain(items).map(function (item) {
        var choice = ChoicesFormatter.formatOne(item);
        return choice;
      }).value();
    },

    /**
     * Does the user has right to add an attribute
     *
     * @return {Boolean}
     */
    hasRightToAdd: function hasRightToAdd() {
      return this.getParent().hasRightToAdd();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16326:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute-option/create.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/template/attribute-option/validation-error */ 69554)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, Routing, FormBuilder, messenger, errorTemplate) {
  var CreateOptionView = Backbone.View.extend({
    errorTemplate: _.template(errorTemplate),
    attribute: null,
    initialize: function initialize(options) {
      this.attribute = options.attribute;
    },
    createOption: function createOption() {
      var _this = this;

      var deferred = $.Deferred();
      FormBuilder.build('pim-attribute-option-form').done(function (form) {
        var modal = new Backbone.BootstrapModal({
          title: _.__('pim_enrich.entity.product.module.attribute.add_attribute_option'),
          content: form,
          cancelText: _.__('pim_common.cancel'),
          okText: _.__('pim_common.add'),
          picture: 'illustrations/Attribute.svg',
          okCloses: false
        });
        modal.open();
        modal.on('cancel', deferred.reject);
        modal.on('ok', function () {
          $.ajax({
            method: 'POST',
            url: Routing.generate('pim_enrich_attributeoption_create', {
              attributeId: _this.attribute.meta.id
            }),
            data: JSON.stringify(form.getFormData())
          }).done(function (option) {
            modal.close();
            messenger.notify('success', _.__('pim_enrich.entity.attribute_option.flash.create.success'));
            deferred.resolve(option);
          }).fail(function (xhr) {
            var response = xhr.responseJSON;

            if (response.code) {
              form.$('input[name="code"]').after(_this.errorTemplate({
                errors: [response.code]
              }));
            } else {
              messenger.notify('error', _.__('pim_enrich.entity.attribute_option.flash.create.fail'));
            }
          });
        });
      });
      return deferred.promise();
    }
  });
  return function (attribute) {
    if (!attribute) {
      throw new Error('Attribute must be provided to create a new option');
    }

    var view = new CreateOptionView({
      attribute: attribute
    });
    return view.createOption().always(function () {
      view.remove();
    });
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 84304:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/attribute-option/form.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/attribute-option/form */ 71993), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, Backbone, BaseForm, template, UserContext, i18n) {
  return BaseForm.extend({
    template: _.template(template),
    events: {
      'change input': 'updateModel'
    },
    updateModel: function updateModel() {
      var optionValues = {};

      _.each(this.$('input[name^="label-"]'), function (labelInput) {
        var locale = labelInput.dataset.locale;
        optionValues[locale] = {
          locale: locale,
          value: labelInput.value
        };
      });

      this.getFormModel().set('code', this.$('input[name="code"]').val());
      this.getFormModel().set('optionValues', optionValues);
    },
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template({
        locale: UserContext.get('catalogLocale'),
        i18n: i18n,
        option: this.getFormData(),
        __: __
      }));
      return this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 42916:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/choices/options-grid.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/attributeoptionview */ 3865), __webpack_require__(/*! pim/template/attribute/tab/choices/options-grid */ 66828)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseForm, fetcherRegistry, AttributeOptionGrid, template) {
  return BaseForm.extend({
    template: _.template(template),
    locales: [],

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return $.when(BaseForm.prototype.configure.apply(this, arguments), fetcherRegistry.getFetcher('locale').fetchActivated().then(function (locales) {
        this.locales = locales;
      }.bind(this)));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        attributeId: this.getFormData().meta.id,
        sortable: !this.getFormData().auto_option_sorting,
        localeCodes: _.pluck(this.locales, 'code')
      }));
      AttributeOptionGrid(this.$('.attribute-option-grid'));
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 18356:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/edit-form.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/edit-form */ 2891)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseEditForm) {
  return BaseEditForm.extend({
    type: null,

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.on('pim_enrich:form:entity:post_fetch', this.render);
      return BaseEditForm.prototype.configure.apply(this, arguments);
    },
    render: function render() {
      this.$el.addClass('attribute');
      return BaseEditForm.prototype.render.apply(this, arguments);
    },

    /**
     * Sets the attribute code for dynamic tree building purpose at configuration time.
     *
     * @param {String} type
     */
    setCode: function setCode(code) {
      this.code = code;
    },

    /**
     * Sets the attribute type for dynamic tree building purpose at configuration time.
     *
     * @param {String} type
     */
    setType: function setType(type) {
      this.type = type;
    },

    /**
     * Returns the view name associated to the key.
     *
     * @return {String}
     */
    getType: function getType() {
      return this.type;
    },
    setLabels: function setLabels(labels) {
      this.labels = labels;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 48696:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/grid.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/index/grid */ 56354), __webpack_require__(/*! pim/common/grid */ 30820), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseForm, Grid, UserContext) {
  return BaseForm.extend({
    configure: function configure() {
      BaseForm.prototype.configure.apply(this, arguments);
      var metaData = this.config.metadata || {}; // Keep the catalog locale context for the queries used to provide the grid data source

      metaData.localeCode = UserContext.get('catalogLocale'); // Keep the catalog locale context when the user navigates from the product Edit Form

      metaData.dataLocale = UserContext.get('catalogLocale');
      this.grid = new Grid(this.config.alias, metaData);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 1833:
/*!********************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/available-locales.js ***!
  \********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2018 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/fields/available-locales */ 3994)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseAvailableLocales) {
  return BaseAvailableLocales.extend({
    /**
     * {@inheritdoc}
     *
     * This field shouldn't be displayed if the attribute is not locale specific.
     */
    isVisible: function isVisible() {
      return undefined !== this.getFormData().is_locale_specific && this.getFormData().is_locale_specific;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 45513:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/default-metric-unit.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/form/common/fields/select */ 60191), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseField, fetcherRegistry, template, UserContext, i18n) {
  return BaseField.extend({
    events: {
      'change select': function changeSelect(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
        this.getRoot().render();
      }
    },
    template: _.template(template),
    measures: {},

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return $.when(BaseField.prototype.configure.apply(this, arguments), fetcherRegistry.getFetcher('measure').fetchAll().then(function (measures) {
        this.measures = measures;
      }.bind(this)));
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      var _this = this;

      var measurementFamily = this.measures.find(function (family) {
        return family.code === _this.getFormData().metric_family;
      });
      return this.template(_.extend(templateContext, {
        value: this.getFormData()[this.fieldName],
        choices: this.formatChoices(measurementFamily.units),
        multiple: false,
        labels: {
          defaultLabel: __('pim_enrich.entity.attribute.property.default_metric_unit.choose')
        }
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('select.select2').select2();
    },

    /**
     * {@inheritdoc}
     *
     * This field shouldn't be displayed if the attribute has no metric family defined yet.
     */
    isVisible: function isVisible() {
      return undefined !== this.getFormData().metric_family && null !== this.getFormData().metric_family;
    },

    /**
     * Transforms:
     *
     * {
     *     BIT: {...},
     *     BYTE: {...}
     * }
     *
     * into:
     *
     * {
     *     BIT: "Bit",
     *     BYTE: "Octet"
     * }
     *
     * (for locale fr_FR)
     *
     * @param {Object} units
     */
    formatChoices: function formatChoices(units) {
      var choices = {};
      var locale = UserContext.get('uiLocale');
      units.forEach(function (unit) {
        return choices[unit.code] = i18n.getLabel(unit.labels, locale, unit.code);
      });
      return choices;
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      return $(field).val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 61556:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/group.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/attribute/tab/properties/group */ 53842)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseField, fetcherRegistry, UserContext, i18n, template) {
  return BaseField.extend({
    events: {
      'change select': function changeSelect(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
        this.getRoot().render();
      }
    },
    template: _.template(template),
    attributeGroups: {},

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return $.when(BaseField.prototype.configure.apply(this, arguments), fetcherRegistry.getFetcher('attribute-group').fetchAll().then(function (attributeGroups) {
        this.attributeGroups = attributeGroups;
      }.bind(this)));
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend(templateContext, {
        value: this.getFormData()[this.fieldName],
        groups: _.sortBy(this.attributeGroups, 'sort_order'),
        i18n: i18n,
        locale: UserContext.get('catalogLocale'),
        labels: {
          defaultLabel: __('pim_enrich.entity.attribute.property.group.choose')
        }
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('select.select2').select2();
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      return $(field).val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 39867:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/is-locale-specific.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/fields/boolean */ 46164)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseField) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     */
    updateModel: function updateModel() {
      BaseField.prototype.updateModel.apply(this, arguments);

      if (false === this.getFormData().is_locale_specific) {
        this.setData({
          available_locales: []
        }, {
          silent: true
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 33531:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/localizable.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/boolean */ 46164)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseField) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), this.getRoot().preUpdateEventName, this.onPreUpdate.bind(this));
      return BaseField.prototype.configure.apply(this, arguments);
    },

    /**
     * Attribute must not be localizable if it has unique values.
     */
    onPreUpdate: function onPreUpdate(data) {
      if (undefined !== data.unique && true === data.unique) {
        var newData = {};
        newData[this.fieldName] = false;
        this.setData(newData, {
          silent: true
        });
      }
    },

    /**
     * {@inheritdoc}
     *
     * This field shouldn't be editable if the attribute has unique values.
     */
    isReadOnly: function isReadOnly() {
      return BaseField.prototype.isReadOnly.apply(this, arguments) || undefined !== this.getFormData().unique && true === this.getFormData().unique || _.has(this.config, 'readOnlyForTypes') && _.contains(this.config.readOnlyForTypes, this.getRoot().getType());
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 1072:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/metric-family.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/form/common/fields/select */ 60191), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseField, fetcherRegistry, template, UserContext, i18n) {
  return BaseField.extend({
    events: {
      'change select': function changeSelect(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
        this.getRoot().render();
      }
    },
    template: _.template(template),
    measures: {},

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return $.when(BaseField.prototype.configure.apply(this, arguments), fetcherRegistry.getFetcher('measure').fetchAll().then(function (measures) {
        this.measures = measures;
      }.bind(this)));
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend(templateContext, {
        value: this.getFormData()[this.fieldName],
        choices: this.formatChoices(this.measures),
        multiple: false,
        labels: {
          defaultLabel: __('pim_enrich.entity.attribute.property.metric_family.choose')
        }
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('select.select2').select2();
    },

    /**
     * Transforms:
     *
     * {
     *     Area: {...},
     *     Binary: {...}
     * }
     *
     * into:
     *
     * {
     *     Area: "Surface",
     *     Binary: "Binaire"
     * }
     *
     * (for locale fr_FR)
     *
     * @param {Object} measures
     */
    formatChoices: function formatChoices(measures) {
      var choices = {};
      var locale = UserContext.get('uiLocale');
      measures.forEach(function (family) {
        return choices[family.code] = i18n.getLabel(family.labels, locale, family.code);
      });
      return choices;
    },

    /**
     * {@inheritdoc}
     *
     * Override to reset the default metric unit each time the metric family changes.
     */
    updateModel: function updateModel() {
      BaseField.prototype.updateModel.apply(this, arguments);
      this.setData({
        default_metric_unit: null
      }, {
        silent: true
      });
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      return $(field).val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 21177:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/scopable.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/boolean */ 46164)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseField) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), this.getRoot().preUpdateEventName, this.onPreUpdate.bind(this));
      return BaseField.prototype.configure.apply(this, arguments);
    },

    /**
     * Attribute must not be scopable if it has unique values.
     */
    onPreUpdate: function onPreUpdate(data) {
      if (undefined !== data.unique && true === data.unique) {
        var newData = {};
        newData[this.fieldName] = false;
        this.setData(newData, {
          silent: true
        });
      }
    },

    /**
     * {@inheritdoc}
     *
     * This field shouldn't be editable if the attribute has unique values.
     */
    isReadOnly: function isReadOnly() {
      return BaseField.prototype.isReadOnly.apply(this, arguments) || undefined !== this.getFormData().unique && true === this.getFormData().unique || _.has(this.config, 'readOnlyForTypes') && _.contains(this.config.readOnlyForTypes, this.getRoot().getType());
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 32788:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/type.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! pim/template/form/common/fields/select */ 60191)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseField, template) {
  return BaseField.extend({
    events: {
      'change select': function changeSelect(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
        this.getRoot().render();
      }
    },
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      var value = this.getFormData()[this.fieldName];
      var choices = {};
      choices[value] = __('pim_enrich.entity.attribute.property.type.' + value);
      return this.template(_.extend(templateContext, {
        value: value,
        choices: choices,
        multiple: false,
        labels: {
          defaultLabel: ''
        }
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('select.select2').select2();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 4054:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/unique.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/boolean */ 46164)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseField) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     *
     * This field should be editable only for certain attribute types.
     */
    isReadOnly: function isReadOnly() {
      return BaseField.prototype.isReadOnly.apply(this, arguments) || !_.contains(this.config.activeForTypes, this.getRoot().getType());
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 98995:
/*!********************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/properties/validation-regexp.js ***!
  \********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/fields/text */ 53228)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseField) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     *
     * This field should be displayed only when the validation rule is set to "regular expression".
     */
    isVisible: function isVisible() {
      return 'regexp' === this.getFormData().validation_rule;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 92472:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/save.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/save-form */ 64169), __webpack_require__(/*! oro/messenger */ 80581)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseSave, messenger) {
  return BaseSave.extend({
    fail: function fail(response) {
      var errorMessage = this.updateFailureMessage;

      switch (response.status) {
        case 400:
          this.getRoot().trigger('pim_enrich:form:entity:bad_request', {
            sentData: this.getFormData(),
            response: response.responseJSON
          });
          errorMessage = response.responseJSON[0] !== undefined ? response.responseJSON[0].message : errorMessage;
          break;

        case 500:
          var message = response.responseJSON ? response.responseJSON : response;
          this.getRoot().trigger('pim_enrich:form:entity:error:save', message);
          break;

        default:
      }

      messenger.notify('error', errorMessage);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 21351:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/type-specific-form-registry.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"formNames":{"pim_reference_data_multiselect":{"create":"pim-attribute-form-ref-data-multi","edit":"pim-attribute-form-ref-data-multi"},"pim_reference_data_simpleselect":{"create":"pim-attribute-form-ref-data-simple","edit":"pim-attribute-form-ref-data-simple"},"pim_catalog_date":{"create":"pim-attribute-form-date","edit":"pim-attribute-form-date"},"pim_catalog_file":{"create":"pim-attribute-form-file","edit":"pim-attribute-form-file"},"pim_catalog_identifier":{"create":"pim-attribute-form-identifier","edit":"pim-attribute-form-identifier"},"pim_catalog_image":{"create":"pim-attribute-form-image","edit":"pim-attribute-form-image"},"pim_catalog_metric":{"create":"pim-attribute-form-metric-create","edit":"pim-attribute-form-metric-edit"},"pim_catalog_multiselect":{"create":"pim-attribute-form-select","edit":"pim-attribute-form-select"},"pim_catalog_number":{"create":"pim-attribute-form-number","edit":"pim-attribute-form-number"},"pim_catalog_price_collection":{"create":"pim-attribute-form-price","edit":"pim-attribute-form-price"},"pim_catalog_simpleselect":{"create":"pim-attribute-form-select","edit":"pim-attribute-form-select"},"pim_catalog_text":{"create":"pim-attribute-form-text","edit":"pim-attribute-form-text"},"pim_catalog_textarea":{"create":"pim-attribute-form-textarea","edit":"pim-attribute-form-textarea"},"pim_catalog_boolean":{"create":"pim-attribute-form-boolean","edit":"pim-attribute-form-boolean"}}} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {
  return {
    /**
     * Get the form name corresponding to the specified attribute type, or null.
     *
     * @param {String} attributeType
     * @param {String} mode
     *
     * @return {String}
     */
    getFormName: function getFormName(attributeType, mode) {
      return _.has(__moduleConfig.formNames, attributeType) ? __moduleConfig.formNames[attributeType][mode] : null;
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13194:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/attribute/form/type-specific-form.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Special view that serves as a bridge between its parent and another tree.
 * It builds a tree on-the-fly at configure time then adds it to its own children. The result is a fully functional
 * tree as if it was build "statically".
 * The goal is to build modular view trees without duplicating a bunch of conf.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/attribute-edit-form/type-specific-form-registry */ 21351)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, __, BaseForm, FormBuilder, FormRegistry) {
  return BaseForm.extend({
    config: {},

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var formName = FormRegistry.getFormName(this.getRoot().getType(), this.config.mode);

      if (undefined !== formName && null !== formName) {
        return FormBuilder.getFormMeta(formName).then(FormBuilder.buildForm).then(function (form) {
          this.addExtension(form.code, form, 'self', 100);
          return BaseForm.prototype.configure.apply(this);
        }.bind(this));
      }

      return BaseForm.prototype.configure.apply(this);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16481:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/channel/form/delete.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension for channel
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/channel */ 9240)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, ChannelRemover) {
  return DeleteForm.extend({
    remover: ChannelRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 97971:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/js/channel/form/properties/conversion-unit.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the conversion unit properties of a channel
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/channel/tab/properties/conversion-unit */ 2036), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! akeneo-design-system */ 96541), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, FetcherRegistry, template, UserContext, i18n, _ref) {
  var Helper = _ref.Helper;
  return BaseForm.extend({
    className: 'tabsection',
    template: _.template(template),
    locale: UserContext.get('uiLocale'),
    config: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      $.when(FetcherRegistry.getFetcher('attribute').search({
        types: 'pim_catalog_metric',
        options: {
          limit: 1000
        }
      }), FetcherRegistry.getFetcher('measure').fetchAll()).then(function (attributes, measures) {
        this.$el.html(this.template({
          conversionUnits: this.getFormData().conversion_units,
          metrics: attributes,
          measures: measures,
          locale: this.locale,
          label: __(this.config.label),
          fieldBaseId: this.config.fieldBaseId,
          doNotConvertLabel: __('pim_enrich.entity.channel.property.do_not_convert'),
          i18n: i18n,
          __: __
        }));
        this.renderReact(Helper, {
          children: __('pim_enrich.entity.channel.property.label_conversion_units')
        }, this.$('.tabsection-helper').get(0));
        this.$('.select2').select2().on('change', this.updateState.bind(this));
        this.renderExtensions();
      }.bind(this));
      return this;
    },

    /**
     * Sets new attribute conversion unit on change.
     *
     * @param {Object} event
     */
    updateState: function updateState(event) {
      this.setAttributeConversionUnit(event.currentTarget.id.replace(this.config.fieldBaseId, ''), event.currentTarget.value);
    },

    /**
     * Sets specified conversion unit settings into form model.
     *
     * @param {String} attribute
     * @param {String} value
     */
    setAttributeConversionUnit: function setAttributeConversionUnit(attribute, value) {
      var data = this.getFormData();

      if (_.isEmpty(data.conversion_units)) {
        data.conversion_units = {};
      }

      if (value !== 'no_conversion') {
        data.conversion_units[attribute] = value;
      } else {
        delete data.conversion_units[attribute];
      }

      this.setData(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 97430:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/js/channel/form/properties/general/category-tree.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the category general properties field of a channel
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/channel/tab/properties/general/category-tree */ 7420), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, FetcherRegistry, template, UserContext, i18n) {
  return BaseForm.extend({
    className: 'AknFieldContainer',
    template: _.template(template),
    catalogLocale: UserContext.get('catalogLocale'),

    /**
     * Initializes configuration.
     *
     * @param {Object} config
     */
    initialize: function initialize(config) {
      this.config = config.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      FetcherRegistry.getFetcher('channel').fetchCategoryTree().then(function (categories) {
        if (0 === this.getFormData().category_tree.length) {
          var data = this.getFormData();
          data.category_tree = _.first(categories).code;
          this.setData(data, {
            silent: true
          });
        }

        this.$el.html(this.template({
          categoryTree: this.getFormData().category_tree,
          categories: categories,
          catalogLocale: this.catalogLocale,
          label: __('pim_enrich.entity.channel.property.category_tree'),
          requiredLabel: __('pim_common.required_label'),
          defaulValueLabel: __('pim_enrich.entity.channel.property.label_category_tree'),
          errors: this.getParent().getValidationErrorsForField('category'),
          i18n: i18n
        }));
        this.$('.select2').select2().on('change', this.updateState.bind(this));
        this.renderExtensions();
      }.bind(this));
      return this;
    },

    /**
     * Sets new category tree on change.
     *
     * @param {Object} event
     */
    updateState: function updateState(event) {
      this.setCategory(event.currentTarget.value);
    },

    /**
     * Sets specified category tree into root model.
     *
     * @param {Array} code
     */
    setCategory: function setCategory(code) {
      var data = this.getFormData();
      data.category_tree = code;
      this.setData(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71140:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/js/channel/form/properties/general/currencies.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the currencies general properties field of a channel
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/channel/tab/properties/general/currencies */ 77843), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, FetcherRegistry, template) {
  return BaseForm.extend({
    className: 'AknFieldContainer',
    template: _.template(template),

    /**
     * Configures this extension.
     *
     * @return {Promise}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.render.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      FetcherRegistry.getFetcher('currency').fetchAll().then(function (currencies) {
        this.$el.html(this.template({
          currentCurrencies: this.getFormData().currencies,
          currencies: currencies,
          errors: this.getParent().getValidationErrorsForField('currencies'),
          label: __('pim_enrich.entity.currency.plural_label'),
          requiredLabel: __('pim_common.required_label')
        }));
        this.$('.select2').select2().on('change', this.updateState.bind(this));
        this.renderExtensions();
      }.bind(this));
      return this;
    },

    /**
     * Sets new currencies on change.
     *
     * @param {Object} event
     */
    updateState: function updateState(event) {
      this.setCurrencies(event.val);
    },

    /**
     * Sets specified currencies into root model.
     *
     * @param {Array} codes
     */
    setCurrencies: function setCurrencies(codes) {
      if (null === codes) {
        codes = [];
      }

      var data = this.getFormData();
      data.currencies = codes;
      this.setData(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 36476:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/js/channel/form/properties/general/locales.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the locales general properties field of a channel
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/channel/tab/properties/general/locales */ 40536), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, FetcherRegistry, template) {
  return BaseForm.extend({
    className: 'AknFieldContainer',
    template: _.template(template),
    initialLocales: null,
    locales: null,

    /**
     * Configures this extension.
     *
     * @return {Promise}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.render.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_save', this.setCurrentLocales.bind(this));
      this.initialLocales = this.getFormData().locales;
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      FetcherRegistry.getFetcher('locale').fetchAll().then(function (locales) {
        this.locales = locales;
        this.$el.html(this.template({
          currentLocales: this.getFormData().locales,
          locales: locales,
          label: __('pim_enrich.entity.locale.plural_label'),
          requiredLabel: __('pim_common.required_label'),
          errors: this.getParent().getValidationErrorsForField('locales')
        }));
        this.$('.select2').select2().on('change', this.updateState.bind(this));
        this.renderExtensions();
      }.bind(this));
      return this;
    },

    /**
     * Sets new locales on change.
     *
     * @param {Object} event
     */
    updateState: function updateState(event) {
      var localesToSet = [];

      _.each(event.val, function (code) {
        localesToSet.push(_.find(this.locales, function (locale) {
          return locale.code === code;
        }));
      }.bind(this));

      this.setLocales(localesToSet);
    },

    /**
     * Sets specified locales into root model.
     *
     * @param {Array} locales
     */
    setLocales: function setLocales(locales) {
      var data = this.getFormData();
      data.locales = locales;
      this.setData(data);
    },

    /**
     * Sets current locales
     */
    setCurrentLocales: function setCurrentLocales() {
      var oldLocales = this.initialLocales;
      var newLocales = this.getFormData().locales;

      if (!_.isEqual(oldLocales, newLocales)) {
        this.getRoot().trigger('pim_enrich:form:entity:locales_updated');
        this.initialLocales = newLocales;
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 94545:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/channel/form/save.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension for channel
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/save */ 21153), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/saver/channel */ 75963), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseSave, messenger, ChannelSaver, FieldManager, i18n, UserContext, Routing, router) {
  return BaseSave.extend({
    updateSuccessMessage: __('pim_enrich.entity.channel.flash.update.success'),
    updateFailureMessage: __('pim_enrich.entity.channel.flash.update.fail'),
    createSuccessMessage: __('pim_enrich.entity.channel.flash.create.success'),
    createFailureMessage: __('pim_enrich.entity.channel.flash.create.fail'),

    /**
     * {@inheritdoc}
     */
    postSave: function postSave(isUpdate) {
      this.getRoot().trigger('pim_enrich:form:entity:post_save');
      var code = this.getFormData().code;

      if (!isUpdate) {
        messenger.notify('success', this.createSuccessMessage);
        router.redirectToRoute(this.config.redirectUrl, {
          code: code
        });
        return;
      }

      messenger.notify('success', this.updateSuccessMessage);
    },

    /**
     * {@inheritdoc}
     */
    save: function save() {
      var channel = $.extend(true, {}, this.getFormData());
      var code = null;
      var isUpdate = false;
      var method = 'POST';

      if (_.has(channel.meta, 'id')) {
        code = channel.code;
        isUpdate = true;
        method = 'PUT';
      }

      delete channel.meta;
      this.showLoadingMask();
      this.getRoot().trigger('pim_enrich:form:entity:pre_save');
      return ChannelSaver.save(code, channel, method).then(function (data) {
        this.setData(data);
        this.getRoot().trigger('pim_enrich:form:entity:post_fetch', data);
        this.postSave(isUpdate);
      }.bind(this)).fail(this.fail.bind(this)).always(this.hideLoadingMask.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 99683:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/common/breadcrumbs.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Extension to display breadcrumbItems on every page
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/form-registry */ 27091), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! react */ 67294), __webpack_require__(/*! akeneo-design-system */ 96541)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, __, BaseForm, mediator, FormRegistry, propertyAccessor, React, _ref) {
  var Breadcrumb = _ref.Breadcrumb;
  return BaseForm.extend({
    events: {
      'click .breadcrumb-tab': 'redirectTab',
      'click .breadcrumb-item': 'redirectItem'
    },

    /**
     * {@inheritdoc}
     *
     * @param {string} config.tab The main tab to highlight
     * @param {string} [config.item] The sub item to highlight (optional)
     */
    initialize: function initialize(config) {
      this.config = config.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * This method will configure the breadcrumb. The configuration of this module contains backbone extension
     * codes related to the menu. To avoid duplication of the labels, we load the configuration of these modules
     * to bring back the labels into this module.
     *
     * {@inheritdoc}
     */
    configure: function configure() {
      mediator.trigger('pim_menu:highlight:tab', {
        extension: this.config.tab
      });
      mediator.trigger('pim_menu:highlight:item', {
        extension: this.config.item
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      return $.when(FormRegistry.getFormMeta(this.config.tab), FormRegistry.getFormMeta(this.config.item)).then(function (metaTab, metaItem) {
        var _this = this;

        var breadcrumbTab = {
          code: this.config.tab,
          label: __(metaTab.config.title)
        };
        var breadcrumbItem = null;

        if (undefined !== metaItem) {
          breadcrumbItem = {
            code: this.config.item,
            label: __(metaItem.config.title),
            active: true
          };
        }

        if (this.config.itemPath) {
          var itemPaths = this.config.itemPath;

          if (!Array.isArray(itemPaths)) {
            itemPaths = [itemPaths];
          }

          itemPaths.forEach(function (itemPath) {
            if (breadcrumbItem === null && null !== propertyAccessor.accessProperty(_this.getFormData(), itemPath)) {
              var item = propertyAccessor.accessProperty(_this.getFormData(), itemPath);
              breadcrumbItem = {
                code: item,
                label: item,
                active: false
              };
            }
          });
        }

        var tab = React.createElement(Breadcrumb.Step, {
          className: 'breadcrumb-tab'
        }, breadcrumbTab.label);
        var children = [tab];

        if (null !== breadcrumbItem) {
          children.push(React.createElement(Breadcrumb.Step, {
            className: 'breadcrumb-item'
          }, breadcrumbItem.label));
        }

        this.renderReact(Breadcrumb, {
          children: children
        }, this.el);
        this.delegateEvents();
      }.bind(this));
    },

    /**
     * Redirects to the linked tab
     */
    redirectTab: function redirectTab() {
      mediator.trigger('pim_menu:redirect:tab', {
        extension: this.config.tab
      });
    },

    /**
     * Redirects to the linked item
     */
    redirectItem: function redirectItem() {
      mediator.trigger('pim_menu:redirect:item', {
        extension: this.config.item
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 2081:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/common/form-modal-creator.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/common/modal-centered */ 94596)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, Backbone, formBuilder, fetcherRegistry, UserContext, i18n, modalTemplate) {
  return {
    /**
     * Create a modal from fetcher and entity identifier
     *
     * @param {String} entityCode
     * @param {String} fetcherCode
     *
     * @return {Promise}
     */
    createModal: function createModal(entityCode, fetcherCode) {
      return fetcherRegistry.getFetcher(fetcherCode).fetch(entityCode, {
        cached: false
      }).then(function (entity) {
        return formBuilder.build(entity.meta.form).then(function (form) {
          form.setData(entity);
          form.trigger('pim_enrich:form:entity:post_fetch', entity);
          form.on('pim_enrich:form:entity:post_save', function () {
            modal.trigger('cancel');
          });
          var familyVariant = entity;
          var modal = new Backbone.BootstrapModal({
            content: form,
            buttons: false,
            title: i18n.getLabel(familyVariant.labels, UserContext.get('catalogLocale'), familyVariant.code),
            subtitle: __('Code') + ': ' + familyVariant.code,
            template: _.template(modalTemplate),
            okText: '',
            innerClassName: 'AknFullPage--full'
          });
          modal.open();
          return modal;
        });
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 49593:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/common/item-picker.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Extension to display full screen item picker to choose elements from a grid
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/common/item-picker */ 74788), __webpack_require__(/*! pim/template/common/item-picker-basket */ 2372), __webpack_require__(/*! oro/datagrid-builder */ 10488), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/datafilter/product_category-filter */ 54688), __webpack_require__(/*! require-context */ 76925), __webpack_require__(/*! pim/menu/resizable */ 80787)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, Routing, BaseForm, template, basketTemplate, datagridBuilder, mediator, FetcherRegistry, UserContext, CategoryFilter, requireContext, Resizable) {
  return BaseForm.extend({
    template: _.template(template),
    basketTemplate: _.template(basketTemplate),
    events: {
      'click .remove-item': 'removeItemFromBasket'
    },
    imagePathMethod: function imagePathMethod() {
      throw new Error('You have to define "imagePathMethod" method using "setImagePathMethod" method.');
    },
    labelMethod: function labelMethod() {
      throw new Error('You have to define "labelMethod" method using "setLabelMethod" method.');
    },
    title: '',

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.datagridModel = null;
      this.config = config.config;
      this.title = __(this.config.title);

      if (undefined === this.config.datagridName) {
        throw new Error('You have to add parameter "datagridName" to the configuration of this module.');
      }

      if (undefined === this.config.categoryTreeRoute) {
        throw new Error('You have to add parameter "categoryTreeRoute" to the configuration of this module.');
      }

      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.datagrid = {
        name: this.config.datagridName,
        paramName: 'itemCodes'
      };
      mediator.clear('datagrid:selectModel:' + this.datagrid.name);
      mediator.clear('datagrid:unselectModel:' + this.datagrid.name);
      mediator.clear('datagrid_collection_set_after');
      mediator.clear('grid_load:complete');
      mediator.on('datagrid:selectModel:' + this.datagrid.name, this.selectModel.bind(this));
      mediator.on('datagrid:unselectModel:' + this.datagrid.name, this.unselectModel.bind(this));
      mediator.on('datagrid_collection_set_after', this.updateChecked.bind(this));
      mediator.on('datagrid_collection_set_after', this.setDatagrid.bind(this));
      mediator.on('grid_load:complete', this.updateChecked.bind(this));
      mediator.once('column_form_listener:initialized', function onColumnListenerReady(gridName) {
        if (!this.configured) {
          mediator.trigger('column_form_listener:set_selectors:' + gridName, {
            included: '#item-picker-append-field'
          });
        }
      }.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template({
        locale: this.getLocale(),
        datagridIdentifier: this.datagrid.name
      }));
      this.renderGrid(this.datagrid);
      this.setupResizableColumn();
      return this.renderExtensions();
    },

    /**
     * Make the categories tree resizable. Because of flexbox we get the
     * rendered width of the column and use that as the minimum.
     */
    setupResizableColumn: function setupResizableColumn() {
      var resizableColumn = this.$('.ui-resizable-container--column');
      var originalColumnWidth = resizableColumn.outerWidth();
      Resizable.set({
        minWidth: originalColumnWidth,
        maxWidth: 500,
        container: this.$('.ui-resizable-container--column-child'),
        storageKey: 'item-picker'
      });
    },

    /**
     * {@inheritdoc}
     */
    shutdown: function shutdown() {
      Resizable.destroy();
      return BaseForm.prototype.shutdown.apply(this, arguments);
    },

    /**
     * Render the item grid
     */
    renderGrid: function renderGrid() {
      var urlParams = {
        alias: this.datagrid.name,
        params: {
          dataLocale: this.getLocale(),
          _filter: {
            category: {
              value: {
                categoryId: -2
              }
            },
            // -2 = all categories
            scope: {
              value: this.getScope()
            }
          }
        }
      };
      /* jshint nonew: false */

      new CategoryFilter(urlParams, this.config.datagridName, this.config.categoryTreeRoute, '#item-picker-tree');
      $.get(Routing.generate('pim_datagrid_load', urlParams)).done(function (response) {
        this.$('#grid-' + this.datagrid.name).data({
          metadata: response.metadata,
          data: JSON.parse(response.data)
        });
        var resolvedModules = [];
        response.metadata.requireJSModules.concat(['oro/datagrid/pagination-input']).forEach(function (module) {
          resolvedModules.push(requireContext(module));
        });
        datagridBuilder(resolvedModules);
      }.bind(this));
    },

    /**
     * Triggered by the event 'datagrid_collection_set_after' to keep a locale reference to
     * the grid model #gridCrap
     *
     * @param {Object} datagridModel
     */
    setDatagrid: function setDatagrid(datagridModel) {
      this.datagridModel = datagridModel;
    },

    /**
     * Triggered by the datagrid:selectModel:gridName event
     *
     * @param {Object} model
     */
    selectModel: function selectModel(model) {
      this.addItem(model.get(this.config.columnName));
    },

    /**
     * Triggered by the datagrid:unselectModel:gridName event
     *
     * @param {Object} model
     */
    unselectModel: function unselectModel(model) {
      this.removeItem(model.get(this.config.columnName));
    },

    /**
     * Add an item to the basket
     *
     * @param {string} code
     *
     * @return this
     */
    addItem: function addItem(code) {
      var items = this.getItems();
      items.push(code);
      items = _.uniq(items);
      this.setItems(items);
      return this;
    },

    /**
     * Remove an item from the collection
     *
     * @param {string} code
     *
     * @return this
     */
    removeItem: function removeItem(code) {
      var items = _.without(this.getItems(), code);

      this.setItems(items);
      return this;
    },

    /**
     * Get all items in the collection
     *
     * @return {Array}
     */
    getItems: function getItems() {
      var items = $('#item-picker-append-field').val();
      return !_.isUndefined(items) && '' !== items ? items.split(',') : [];
    },

    /**
     * Set items
     *
     * @param {Array} itemCodes
     *
     * @return this
     */
    setItems: function setItems(itemCodes) {
      $('#item-picker-append-field').val(itemCodes.join(','));
      this.updateBasket(itemCodes);
      return this;
    },

    /**
     * Update the checked rows in the grid according to the current model
     *
     * @param {Object} datagrid
     */
    updateChecked: function updateChecked(datagrid) {
      var _this = this;

      if (datagrid.inputName !== this.datagrid.name) {
        return;
      }

      var items = this.getItems();
      datagrid.models.forEach(function (row) {
        if (items.includes(row.get(_this.config.columnName))) {
          row.set('is_checked', true);
        } else {
          row.set('is_checked', null);
        }
      });
      this.setItems(items);
    },

    /**
     * Remove an item from the basket (triggered by 'click .remove-item')
     *
     * @param {Event} event
     */
    removeItemFromBasket: function removeItemFromBasket(event) {
      this.removeItem(event.currentTarget.dataset.itemcode);

      if (this.datagridModel) {
        this.updateChecked(this.datagridModel);
      }
    },

    /**
     * Fetches the new items and render the basket.
     *
     * In the case where asset codes are integers, even if their order is correctly managed by the backend, the
     * fetcher will reorganize them, sorting them by code ascending. As "itemCodes" contains the codes in the
     * correct order, we reorder the assets according to this list of code.
     */
    updateBasket: function updateBasket(itemCodes) {
      var _this2 = this;

      FetcherRegistry.getFetcher(this.config.fetcher).fetchByIdentifiers(this.getItems()).then(function (items) {
        var orderedItems = [];
        itemCodes.forEach(function (itemCode) {
          orderedItems = orderedItems.concat(items.filter(function (item) {
            return item.code === itemCode;
          }));
        });

        _this2.renderBasket(orderedItems);

        _this2.delegateEvents();
      });
    },

    /**
     * Renders the basket to update its content
     * @param items
     */
    renderBasket: function renderBasket(items) {
      this.$('.basket').html(this.basketTemplate({
        items: items,
        title: __('pim_enrich.entity.product.module.basket.title'),
        emptyLabel: __('pim_enrich.entity.product.module.basket.empty_basket'),
        imagePathMethod: this.imagePathMethod.bind(this),
        columnName: this.config.columnName,
        identifierName: this.config.columnName,
        labelMethod: this.labelMethod.bind(this),
        itemCodeMethod: this.itemCodeMethod.bind(this)
      }));
    },

    /**
     * Updates the function generating the path of the basket images
     *
     * @param {Function} f
     */
    setImagePathMethod: function setImagePathMethod(f) {
      this.imagePathMethod = f;
    },

    /**
     * Updates the function generating the label of the basket images
     *
     * @param {Function} f
     */
    setLabelMethod: function setLabelMethod(f) {
      this.labelMethod = f;
    },

    /**
     * Allows overriding of the default title
     *
     * @param {String} title
     */
    setCustomTitle: function setCustomTitle(title) {
      this.title = title;
    },

    /**
     * Returns the method to display unique codes for basket deletion
     *
     * @param {Object} item
     * @returns {string}
     */
    itemCodeMethod: function itemCodeMethod(item) {
      return item[this.config.columnName];
    },

    /**
     * Get the current locale
     *
     * @return {string}
     */
    getLocale: function getLocale() {
      return UserContext.get('catalogLocale');
    },

    /**
     * Get the current scope
     *
     * @return {string}
     */
    getScope: function getScope() {
      return UserContext.get('catalogScope');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 64070:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/common/property.js ***!
  \****************************************************/
/***/ ((module, exports) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Property accessor extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
  return {
    /**
     * Access a property in an object
     *
     * @param {object} data
     * @param {string} path
     * @param {*}  defaultValue
     *
     * @return {*}
     */
    accessProperty: function accessProperty(data, path, defaultValue) {
      defaultValue = defaultValue || null;
      var pathPart = path.split('.');
      var part = pathPart[0].replace(/__DOT__/g, '.');

      if (undefined === data[part]) {
        return defaultValue;
      }

      return 1 === pathPart.length ? data[part] : this.accessProperty(data[part], pathPart.slice(1).join('.'), defaultValue);
    },

    /**
     * Update a property in an object
     *
     * @param {object} data
     * @param {string} path
     * @param {*}  value
     *
     * @return {*}
     */
    updateProperty: function updateProperty(data, path, value) {
      var pathPart = path.split('.');
      var part = pathPart[0].replace(/__DOT__/g, '.');
      data[part] = 1 === pathPart.length ? value : this.updateProperty(data[part], pathPart.slice(1).join('.'), value);
      return data;
    },

    /**
     * Create a safe path by concatenating escaped path segments to avoid dots of being incorrectly interpreted
     *
     * @param Array path
     *
     * @returns String
     */
    propertyPath: function propertyPath(path) {
      return path.map(function (e) {
        return e.replace(/\./g, '__DOT__');
      }).join('.');
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 81851:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/common/select2/family.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Get Select2 conf for families
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, FetcherRegistry, UserContext, i18n, Routing) {
  return {
    /**
     * Provide the config for a family select2 field
     *
     * @param {string} initialValue
     * @return {object}
     */
    getConfig: function getConfig(initialValue) {
      return {
        allowClear: true,
        ajax: {
          url: Routing.generate('pim_enrich_family_rest_index'),
          quietMillis: 250,
          cache: true,
          data: function data(term, page) {
            return {
              search: term,
              options: {
                limit: 20,
                page: page,
                locale: UserContext.get('catalogLocale')
              }
            };
          },
          results: function results(families) {
            var data = {
              more: 20 === _.keys(families).length,
              results: []
            };

            _.each(families, function (value, key) {
              data.results.push({
                id: key,
                text: i18n.getLabel(value.labels, UserContext.get('catalogLocale'), value.code)
              });
            });

            return data;
          }
        },
        initSelection: function initSelection(element, callback) {
          if (null !== initialValue) {
            FetcherRegistry.getFetcher('family').fetch(initialValue).then(function (family) {
              callback({
                id: family.code,
                text: i18n.getLabel(family.labels, UserContext.get('catalogLocale'), family.code)
              });
            });
          }
        }
      };
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 33694:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/association-type.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/page-title */ 12764), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseController, FormBuilder, FetcherRegistry, UserContext, Dialog, PageTitle, i18n) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      return FetcherRegistry.getFetcher('association-type').fetch(route.params.code, {
        cached: false
      }).then(function (associationType) {
        if (!_this.active) {
          return;
        }

        PageTitle.set({
          'association type.label': i18n.getLabel(associationType.labels, UserContext.get('catalogLocale'), associationType.code)
        });
        return FormBuilder.build(associationType.meta.form).then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(associationType);
          form.trigger('pim_enrich:form:entity:post_fetch', associationType);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 32293:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/attribute-group/create.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute group create controller
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseController, FormBuilder) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm() {
      var _this = this;

      if (!this.active) {
        return;
      }

      return FormBuilder.build('pim-attribute-group-create-form').then(function (form) {
        _this.on('pim:controller:can-leave', function (event) {
          form.trigger('pim_enrich:form:can-leave', event);
        });

        form.setData({
          code: '',
          labels: {}
        });
        form.setElement(_this.$el).render();
        return form;
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 99678:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/attribute-group/edit.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute group edit controller
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/page-title */ 12764), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseController, FormBuilder, FetcherRegistry, UserContext, Dialog, PageTitle, i18n) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      return FetcherRegistry.getFetcher('attribute-group').fetch(route.params.identifier, {
        cached: false
      }).then(function (attributeGroup) {
        if (!_this.active) {
          return;
        }

        PageTitle.set({
          'group.label': i18n.getLabel(attributeGroup.labels, UserContext.get('catalogLocale'), attributeGroup.code)
        });
        return FormBuilder.build('pim-attribute-group-edit-form').then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(attributeGroup);
          form.trigger('pim_enrich:form:entity:post_fetch', attributeGroup);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 49689:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/attribute/create.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseController, FormBuilder, fetcherRegistry, UserContext) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm() {
      var _this = this;

      if (!this.active) {
        return;
      }

      fetcherRegistry.getFetcher('attribute-group').clear();
      fetcherRegistry.getFetcher('locale').clear();
      fetcherRegistry.getFetcher('measure').clear();
      var code = this.getQueryParam(location.href, 'code');
      var type = this.getQueryParam(location.href, 'attribute_type');
      var label = this.getQueryParam(location.href, 'label');
      var labels = {};

      if (label) {
        labels[UserContext.get('catalogLocale')] = label;
      }

      return FormBuilder.getFormMeta('pim-attribute-create-form').then(FormBuilder.buildForm).then(function (form) {
        if (code) {
          form.setCode(code);
        }

        form.setType(type);

        if (label) {
          form.setLabels(labels);
        }

        return form.configure().then(function () {
          return form;
        });
      }).then(function (form) {
        _this.on('pim:controller:can-leave', function (event) {
          form.trigger('pim_enrich:form:can-leave', event);
        });

        form.setData(_this.getNewAttribute(type, code, labels));
        form.setElement(_this.$el).render();
        return form;
      });
    },

    /**
     * Extracts the value of a given parameter from the query string.
     *
     * @param {String} url
     * @param {String} paramName
     *
     * @return  {String}
     */
    getQueryParam: function getQueryParam(url, paramName) {
      var _URL;

      var searchParams = (_URL = new URL(url.replace('/#/', '/'))) === null || _URL === void 0 ? void 0 : _URL.searchParams;
      return searchParams === null || searchParams === void 0 ? void 0 : searchParams.get(paramName);
    },

    /**
     * @param {String} type
     *
     * @return {Object}
     */
    getNewAttribute: function getNewAttribute(type, code, labels) {
      return {
        code: code !== null && code !== void 0 ? code : '',
        labels: labels,
        type: type,
        available_locales: []
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62726:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/attribute/edit.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/page-title */ 12764), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseController, FormBuilder, fetcherRegistry, UserContext, PageTitle, i18n) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      if (!this.active) {
        return;
      }

      fetcherRegistry.getFetcher('attribute-group').clear();
      fetcherRegistry.getFetcher('locale').clear();
      fetcherRegistry.getFetcher('measure').clear();
      return fetcherRegistry.getFetcher('attribute').fetch(route.params.code, {
        cached: false,
        apply_filters: false
      }).then(function (attribute) {
        var label = i18n.getLabel(attribute.labels, UserContext.get('catalogLocale'), attribute.code);
        PageTitle.set({
          'attribute.label': label
        });
        return FormBuilder.getFormMeta('pim-attribute-edit-form').then(FormBuilder.buildForm).then(function (form) {
          form.setType(attribute.type);
          return form.configure().then(function () {
            return form;
          });
        }).then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(attribute);
          form.trigger('pim_enrich:form:entity:post_fetch', attribute);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 88191:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/controller/base.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone) {
  return Backbone.View.extend({
    active: false,

    /**
     * Render the route given in parameter
     *
     * @param {String} route
     * @param {String} path
     *
     * @return {Promise}
     */
    renderRoute: function renderRoute() {
      throw new Error('Method renderRoute is abstract and must be implemented!');
    },
    remove: function remove() {
      this.setActive(false);
    },
    setActive: function setActive(active) {
      this.active = active;
    },

    /**
     * Return if whether or not the user can leave the page
     *
     * @return {boolean}
     */
    canLeave: function canLeave() {
      var event = {
        canLeave: true
      };
      this.trigger('pim:controller:can-leave', event);
      return event.canLeave;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 39371:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/channel/edit.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/page-title */ 12764), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseController, FormBuilder, FetcherRegistry, UserContext, Dialog, PageTitle, i18n) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      FetcherRegistry.getFetcher('locale').clear();

      if (undefined === route.params.code) {
        var label = 'pim_enrich.entity.channel.label.create';
        return createForm.call(this, this.$el, {
          code: '',
          currencies: [],
          locales: [],
          category_tree: '',
          conversion_units: [],
          labels: {},
          meta: {}
        }, label, 'pim-channel-create-form');
      } else {
        return FetcherRegistry.getFetcher('channel').fetch(route.params.code, {
          cached: false,
          filter_locales: 0
        }).then(function (channel) {
          var label = i18n.getLabel(channel.labels, UserContext.get('catalogLocale'), channel.code);
          return createForm.call(_this, _this.$el, channel, label, channel.meta.form);
        });
      }

      function createForm(domElement, channel, label, formExtension) {
        var _this2 = this;

        PageTitle.set({
          'channel.label': label
        });
        return FormBuilder.build(formExtension).then(function (form) {
          _this2.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(channel);
          form.trigger('pim_enrich:form:entity:post_fetch', channel);
          form.setElement(domElement).render();
          return form;
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 97366:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/common/index.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseController, FormBuilder) {
  return BaseController.extend({
    initialize: function initialize(options) {
      this.options = options;
    },

    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm() {
      var _this = this;

      return FormBuilder.build('pim-' + this.options.config.entity + '-index').then(function (form) {
        form.setElement(_this.$el).render();
        return form;
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 55056:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/entity-with-family-variant.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/page-title */ 12764)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseController, FormBuilder, FetcherRegistry, UserContext, Dialog, PageTitle) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      return FetcherRegistry.getFetcher(this.options.config.entity).fetch(route.params.uuid || route.params.id, {
        cached: false
      }).then(function (product) {
        if (!_this.active) {
          return;
        }

        PageTitle.set({
          'product.label': product.meta.label[UserContext.get('catalogLocale')]
        });
        return FormBuilder.build(product.meta.form).then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(product);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 66268:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/controller/family.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/page-title */ 12764), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseController, FormBuilder, FetcherRegistry, UserContext, Dialog, PageTitle, i18n) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      return FetcherRegistry.getFetcher('family').fetch(route.params.code, {
        cached: false,
        full_attributes: false
      }).then(function (family) {
        if (!_this.active) {
          return;
        }

        PageTitle.set({
          'family.label': i18n.getLabel(family.labels, UserContext.get('catalogLocale'), family.code)
        });
        return FormBuilder.build(family.meta.form).then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(family);
          form.trigger('pim_enrich:form:entity:post_fetch', family);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 87026:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/controller/form.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/controller/template */ 28333), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! jquery.form */ 19849)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, mediator, TemplateController, router) {
  return TemplateController.extend({
    events: {
      'submit form': 'submitForm'
    },

    /**
     * Handle form submission on the page
     *
     * @param {Event} event
     *
     * @return {boolean}
     */
    submitForm: function submitForm(event) {
      var _this = this;

      var $form = $(event.currentTarget);
      router.showLoadingMask();
      $form.ajaxSubmit({
        complete: function complete(xhr) {
          _this.afterSubmit(xhr, $form);
        }
      });
      return false;
    },

    /**
     * Called after a successful submit (after a submitForm)
     *
     * @param {Object} xhr
     */
    afterSubmit: function afterSubmit(xhr) {
      if (!this.active) {
        return;
      }

      if (xhr.responseJSON && xhr.responseJSON.route) {
        router.redirectToRoute(xhr.responseJSON.route, xhr.responseJSON.params ? xhr.responseJSON.params : {}, {
          trigger: true
        });
      } else {
        this.renderTemplate(xhr.responseText);
        mediator.trigger('route_complete pim:reinit');
        router.hideLoadingMask();
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 834:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/js/controller/front.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/base */ 88191), __webpack_require__(/*! pim/error */ 84879)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseController, Error) {
  return BaseController.extend({
    formPromise: null,

    /**
     * {@inheritdoc}
     */
    renderRoute: function renderRoute(route, path) {
      var _this = this;

      this.formPromise = this.renderForm(route, path).fail(function (response) {
        var message = response && response.responseJSON ? response.responseJSON.message : __('pim_enrich.entity.fallback.generic_error');
        var status = response && response.status ? response.status : 500;
        var errorView = new Error(message, status);
        errorView.setElement(_this.$el).render();
      });
      return this.formPromise;
    },

    /**
     * Render the from for given route
     *
     * @param {String} route
     * @param {String} path
     *
     * @return {Promise}
     */
    renderForm: function renderForm() {
      throw new Error('Method renderForm is abstract and must be implemented!');
    },

    /**
     * {@inheritdoc}
     */
    remove: function remove() {
      if (null === this.formPromise) {
        return;
      }

      this.formPromise.then(function (form) {
        if (form && typeof form.shutdown === 'function') {
          form.shutdown();
        }
      });
      BaseController.prototype.remove.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 28758:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/controller/group-type.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/page-title */ 12764), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseController, FormBuilder, FetcherRegistry, UserContext, Dialog, PageTitle, i18n) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      return FetcherRegistry.getFetcher('group-type').fetch(route.params.code, {
        cached: false
      }).then(function (groupType) {
        if (!_this.active) {
          return;
        }

        PageTitle.set({
          'group type.label': i18n.getLabel(groupType.labels, UserContext.get('catalogLocale'), groupType.code)
        });
        return FormBuilder.build('pim-group-type-edit-form').then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(groupType);
          form.trigger('pim_enrich:form:entity:post_fetch', groupType);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 73789:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/js/controller/group.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"fetcher":"group"} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/page-title */ 12764), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseController, FormBuilder, FetcherRegistry, UserContext, Dialog, PageTitle, i18n) {
  return BaseController.extend({
    initialize: function initialize() {
      this.config = __moduleConfig;
    },

    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      return FetcherRegistry.getFetcher(this.config.fetcher).fetch(route.params.code, {
        cached: false
      }).then(function (group) {
        if (!_this.active) {
          return;
        }

        PageTitle.set({
          'group.label': i18n.getLabel(group.labels, UserContext.get('catalogLocale'), group.code)
        });
        return FormBuilder.build(group.meta.form).then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(group);
          form.trigger('pim_enrich:form:entity:post_fetch', group);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 31746:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/job-instance.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/page-title */ 12764)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseController, FormBuilder, FetcherRegistry, UserContext, Dialog, PageTitle) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      var type = route.name.indexOf('pim_importexport_import') === -1 ? 'export' : 'import';
      var mode = route.name.indexOf('_profile_show') === -1 ? 'edit' : 'show';
      return FetcherRegistry.getFetcher('job-instance-' + type).fetch(route.params.code, {
        cached: false
      }).then(function (jobInstance) {
        if (!_this.active) {
          return;
        }

        PageTitle.set({
          'job.label': jobInstance.label
        });
        return FormBuilder.build(jobInstance.meta.form + '-' + mode).then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          form.setData(jobInstance);
          form.trigger('pim_enrich:form:entity:post_fetch', jobInstance);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 11454:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/controller/logout.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/controller/base */ 88191), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseController, router) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderRoute: function renderRoute(route, path) {
      return $.get(path).then(function () {
        window.location = router.generate('pim_user_security_login');
      }).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 95170:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/controller/mass-edit.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseController, FormBuilder, Routing, analytics) {
  var ACTION_PRODUCT_GRID = 'product-edit';
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    initialize: function initialize(options) {
      this.config = options.config;
    },

    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route, path) {
      var _this = this;

      var query = path.replace(route.route.tokens[0][1], '');

      var parameters = _.chain(query.split('&')).map(function (parameter) {
        return parameter.split('=');
      }).map(function (parameter) {
        return {
          key: parameter[0].replace('?', ''),
          value: parameter[1]
        };
      }).value();

      var actionName = _.find(parameters, function (parameter) {
        return 'actionName' === parameter.key;
      }).value.replace(new RegExp('_', 'g'), '-');

      var values = _.find(parameters, function (parameter) {
        return 'values' === parameter.key;
      }).value.split(',');

      var queryWithoutValues = query.replace(/&values=[^&]+/, '');
      analytics.track('grid:mass-edit:clicked', {
        name: actionName
      });
      var url = actionName === ACTION_PRODUCT_GRID ? Routing.generate(this.config.route) : Routing.generate(this.config.route) + queryWithoutValues;
      var data = actionName === ACTION_PRODUCT_GRID ? query : {
        values: values
      };
      return $.post(url, data).then(function (response) {
        var filters = response.filters;
        var itemsCount = response.itemsCount;
        return FormBuilder.build('pim-mass-' + actionName).then(function (form) {
          form.setData({
            filters: filters,
            jobInstanceCode: null,
            actions: [],
            itemsCount: itemsCount
          });
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 96942:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/controller/product/index.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/provider/sequential-edit-provider */ 83436)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, BaseController, FormBuilder, UserContext, mediator, Routing, fetcherRegistry, sequentialEditProvider) {
  return BaseController.extend({
    config: {
      gridExtension: 'pim-product-index',
      gridName: 'product-grid'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(options) {
      this.config = Object.assign(this.config, options.config || {});
      return BaseController.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm() {
      var _this = this;

      this.selectMenuTab();
      var _this$config = this.config,
          gridName = _this$config.gridName,
          gridExtension = _this$config.gridExtension;
      fetcherRegistry.getFetcher('datagrid-view').clear();
      sequentialEditProvider.clear();
      return FormBuilder.build(gridExtension).then(function (form) {
        _this.setupLocale();

        _this.setupMassEditAttributes();

        form.setElement(_this.$el).render({
          gridName: gridName
        });
        return form;
      });
    },

    /**
     * {@inheritdoc}
     */
    renderTemplate: function renderTemplate(content) {
      if (!this.active) {
        return;
      }

      this.$el.html(content);
    },

    /**
     * Get the locale from url and set to UserContext
     */
    setupLocale: function setupLocale() {
      var locale = window.location.hash.split('?dataLocale=')[1];

      if (locale) {
        UserContext.set('catalogLocale', locale);
      }
    },

    /**
     * Clear mass edit selected attributes
     */
    setupMassEditAttributes: function setupMassEditAttributes() {
      sessionStorage.setItem('mass_edit_selected_attributes', JSON.stringify([]));
    },

    /**
     * Select products menu tab
     */
    selectMenuTab: function selectMenuTab() {
      mediator.trigger('pim_menu:highlight:tab', {
        extension: 'pim-menu-products'
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 34928:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/controller/redirect.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/controller/base */ 88191), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseController, router) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderRoute: function renderRoute(route, path) {
      return $.get(path).then(this.redirect.bind(this)).promise();
    },

    /**
     * Redirect to the given route
     *
     * @param {Object} response
     */
    redirect: function redirect(response) {
      if (!this.active) {
        return;
      }

      router.redirectToRoute(response.route, response.params ? response.params : {}, {
        trigger: true
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 81665:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/controller/registry.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"controllers":{"akeneo_measurements_settings_index":{"module":"pim/controller/measurements/settings","aclResourceId":"akeneo_measurements_manage_settings"},"akeneo_measurements_settings_any":{"module":"pim/controller/measurements/settings","aclResourceId":"akeneo_measurements_manage_settings"},"pim_user_index":{"module":"pim/controller/common/index","config":{"entity":"user"}},"pim_user_edit":{"module":"pim/controller/user"},"pim_user_role_index":{"module":"pim/controller/common/index","config":{"entity":"user-role"}},"pim_user_role_create":{"module":"pim/controller/form"},"pim_user_role_update":{"module":"pim/controller/role"},"pim_user_group_create":{"module":"pim/controller/form"},"pim_user_group_index":{"module":"pim/controller/common/index","config":{"entity":"user-group"}},"pim_user_group_update":{"module":"pim/controller/form"},"pim_user_profile_update":{"module":"pim/controller/form"},"pim_analytics_system_info_index":{"module":"pim-analytics-system-info-controller"},"pim_settings_index":{"module":"pim/controller/settings"},"pim_system_index":{"module":"pim/controller/system-index"},"pim_dashboard_index":{"module":"pim/controller/dashboard"},"pim_enrich_associationtype_edit":{"module":"pim/controller/association-type/edit","aclResourceId":"pim_enrich_associationtype_edit"},"pim_enrich_associationtype_index":{"module":"pim/controller/association-type/index","aclResourceId":"pim_enrich_associationtype_index"},"pim_enrich_attribute_create":{"module":"pim/controller/attribute/create","aclResourceId":"pim_enrich_attribute_create"},"pim_enrich_attribute_edit":{"module":"pim/controller/attribute/edit","aclResourceId":"pim_enrich_attribute_edit"},"pim_enrich_attributegroup_create":{"module":"pim/controller/attribute-group/create","aclResourceId":"pim_enrich_attributegroup_create"},"pim_enrich_attributegroup_index":{"module":"pim/controller/attribute-group/index","aclResourceId":"pim_enrich_attributegroup_index","config":{"entity":"attribute-group"}},"pim_enrich_attributegroup_edit":{"module":"pim/controller/attribute-group/edit","aclResourceId":"pim_enrich_attributegroup_edit"},"pim_enrich_categorytree_create":{"module":"pim/controller/form","aclResourceId":"pim_enrich_product_category_create"},"pim_enrich_categorytree_edit":{"module":"pim/controller/categories/index","aclResourceId":"pim_enrich_product_category_edit"},"pim_enrich_categorytree_index":{"module":"pim/controller/categories/index","aclResourceId":"pim_enrich_product_category_list"},"pim_enrich_categorytree_tree":{"module":"pim/controller/categories/index","aclResourceId":"pim_enrich_product_category_list"},"pim_category_template_edit":{"module":"pim/controller/categories/index","aclResourceId":"pim_enrich_product_category_template"},"pim_enrich_channel_edit":{"module":"pim/controller/channel/edit","aclResourceId":"pim_enrich_channel_edit"},"pim_enrich_channel_create":{"module":"pim/controller/channel/edit","aclResourceId":"pim_enrich_channel_create"},"pim_enrich_grouptype_edit":{"module":"pim/controller/group-type","aclResourceId":"pim_enrich_grouptype_edit"},"pim_enrich_product_edit":{"module":"pim/controller/entity-with-family-variant","config":{"entity":"product"}},"pim_enrich_product_model_edit":{"module":"pim/controller/entity-with-family-variant","config":{"entity":"product-model"}},"pim_enrich_product_edit_categories":{"module":"pim/controller/entity-categories-with-family-variant","config":{"entity":"product","redirectRouteName":"pim_enrich_product_edit","redirectTabName":"pim-product-edit-form-categories"}},"pim_enrich_product_model_edit_categories":{"module":"pim/controller/entity-categories-with-family-variant","config":{"entity":"product-model","redirectRouteName":"pim_enrich_product_model_edit","redirectTabName":"pim-product-edit-form-categories"}},"pim_enrich_group_edit":{"module":"pim/controller/group","aclResourceId":"pim_enrich_group_edit"},"pim_enrich_channel_index":{"module":"pim/controller/common/index","aclResourceId":"pim_enrich_channel_index","config":{"entity":"channel"}},"pim_importexport_export_profile_index":{"module":"pim/controller/common/index","aclResourceId":"pim_importexport_export_profile_index","config":{"entity":"export-profile"}},"pim_importexport_import_profile_index":{"module":"pim/controller/common/index","aclResourceId":"pim_importexport_import_profile_index","config":{"entity":"import-profile"}},"pim_importexport_export_profile_edit":{"module":"pim/controller/job-instance","aclResourceId":"pim_importexport_export_profile_edit"},"pim_importexport_import_profile_edit":{"module":"pim/controller/job-instance","aclResourceId":"pim_importexport_import_profile_edit"},"pim_importexport_import_profile_show":{"module":"pim/controller/job-instance","aclResourceId":"pim_importexport_import_profile_show"},"pim_importexport_export_profile_show":{"module":"pim/controller/job-instance","aclResourceId":"pim_importexport_export_profile_show"},"pim_enrich_currency_index":{"module":"pim/controller/common/index","aclResourceId":"pim_enrich_currency_index","config":{"entity":"currency"}},"pim_enrich_currency_toggle":{"module":"pim/controller/redirect","aclResourceId":"pim_enrich_currency_toggle"},"pim_enrich_mass_edit_action_sequential_edit":{"module":"pim/controller/redirect"},"pim_enrich_mass_edit_action":{"module":"pim/controller/mass-edit","config":{"route":"pim_enrich_mass_edit_rest_get_filter"},"aclResourceId":"pim_enrich_mass_edit"},"pim_enrich_family_index":{"module":"pim/controller/common/index","aclResourceId":"pim_enrich_family_index","config":{"entity":"family"}},"pim_enrich_family_edit":{"module":"pim/controller/family","aclResourceId":"pim_enrich_family_index"},"pim_importexport_import_profile_launch_upload":{"module":"pim/controller/redirect","aclResourceId":"pim_importexport_import_profile_launch_upload"},"pim_importexport_import_profile_launch":{"module":"pim/controller/redirect","aclResourceId":"pim_importexport_import_profile_launch"},"pim_importexport_import_profile_remove":{"module":"pim/controller/redirect","aclResourceId":"pim_importexport_import_profile_remove"},"pim_importexport_export_profile_launch":{"module":"pim/controller/redirect","aclResourceId":"pim_importexport_export_profile_launch"},"pim_importexport_export_profile_remove":{"module":"pim/controller/redirect","aclResourceId":"pim_importexport_export_profile_remove"},"pim_enrich_locale_index":{"module":"pim/controller/locales/index","aclResourceId":"pim_enrich_locale_index"},"pim_enrich_attribute_index":{"module":"pim/controller/common/index","aclResourceId":"pim_enrich_attribute_index","config":{"entity":"attribute"}},"pim_enrich_attribute_sort":{"module":"pim/controller/template","aclResourceId":"pim_enrich_attribute_sort"},"pim_enrich_attribute_remove":{"module":"pim/controller/template","aclResourceId":"pim_enrich_attribute_remove"},"pim_enrich_product_index":{"module":"pim/controller/product/index","aclResourceId":"pim_enrich_product_index"},"pim_enrich_product_create":{"module":"pim/controller/template","aclResourceId":"pim_enrich_product_create"},"pim_enrich_group_index":{"module":"pim/controller/common/index","aclResourceId":"pim_enrich_group_index","config":{"entity":"group"}},"pim_enrich_group_create":{"module":"pim/controller/template","aclResourceId":"pim_enrich_group_create"},"pim_enrich_group_history":{"module":"pim/controller/template","aclResourceId":"pim_enrich_group_history"},"pim_enrich_associationtype_create":{"module":"pim/controller/template","aclResourceId":"pim_enrich_associationtype_create"},"pim_enrich_grouptype_index":{"module":"pim/controller/common/index","aclResourceId":"pim_enrich_grouptype_index","config":{"entity":"group-type"}},"pim_enrich_grouptype_create":{"module":"pim/controller/template","aclResourceId":"pim_enrich_grouptype_create"},"pim_enrich_grouptype_remove":{"module":"pim/controller/template","aclResourceId":"pim_enrich_grouptype_remove"},"oro_config_configuration_system":{"module":"pim/controller/config"},"pim_enrich_catalog_volume_index":{"module":"pim/controller/catalog-volume"},"pim_user_security_logout":{"module":"pim/controller/logout"},"akeneo_connectivity_connection_connect_marketplace":{"module":"pim/controller/connectivity/connection/connect/marketplace"},"akeneo_connectivity_connection_connect_marketplace_profile":{"module":"pim/controller/connectivity/connection/connect/marketplace"},"akeneo_connectivity_connection_connect_marketplace_test_app_create":{"module":"pim/controller/connectivity/connection/connect/marketplace"},"akeneo_connectivity_connection_connect_marketplace_test_app_delete":{"module":"pim/controller/connectivity/connection/connect/marketplace"},"akeneo_connectivity_connection_connect_apps_activate":{"module":"pim/controller/connectivity/connection/connect/apps"},"akeneo_connectivity_connection_connect_apps_authorize":{"module":"pim/controller/connectivity/connection/connect/apps"},"akeneo_connectivity_connection_connect_apps_authenticate":{"module":"pim/controller/connectivity/connection/connect/apps"},"akeneo_connectivity_connection_error_management_dashboard":{"module":"pim/controller/connectivity/connection/error-management"},"akeneo_connectivity_connection_error_management_connection_monitoring":{"module":"pim/controller/connectivity/connection/error-management","aclResourceId":"akeneo_connectivity_connection_manage_settings"},"akeneo_connectivity_connection_webhook_edit":{"module":"pim/controller/connectivity/connection/webhook","aclResourceId":"akeneo_connectivity_connection_manage_settings"},"akeneo_connectivity_connection_webhook_regenerate_secret":{"module":"pim/controller/connectivity/connection/webhook","aclResourceId":"akeneo_connectivity_connection_manage_settings"},"akeneo_connectivity_connection_webhook_event_logs":{"module":"pim/controller/connectivity/connection/webhook","aclResourceId":"akeneo_connectivity_connection_manage_settings"},"akeneo_connectivity_connection_settings_index":{"module":"pim/controller/connectivity/connection/settings","aclResourceId":"akeneo_connectivity_connection_manage_settings"},"akeneo_connectivity_connection_settings_edit":{"module":"pim/controller/connectivity/connection/settings","aclResourceId":"akeneo_connectivity_connection_manage_settings"},"akeneo_connectivity_connection_settings_any":{"module":"pim/controller/connectivity/connection/settings","aclResourceId":"akeneo_connectivity_connection_manage_settings"},"akeneo_connectivity_connection_audit_index":{"module":"pim/controller/connectivity/connection/audit"},"akeneo_connectivity_connection_audit_any":{"module":"pim/controller/connectivity/connection/audit"},"akeneo_connectivity_connection_connect_connected_apps":{"module":"pim/controller/connectivity/connection/connect/connected-apps"},"akeneo_connectivity_connection_connect_connected_apps_edit":{"module":"pim/controller/connectivity/connection/connect/connected-apps"},"akeneo_connectivity_connection_connect_connected_apps_delete":{"module":"pim/controller/connectivity/connection/connect/connected-apps"},"akeneo_connectivity_connection_connect_connected_apps_open":{"module":"pim/controller/connectivity/connection/connect/connected-apps"},"akeneo_connectivity_connection_connect_connected_apps_catalogs_edit":{"module":"pim/controller/connectivity/connection/connect/connected-apps"},"akeneo_data_quality_insights_dashboard":{"module":"akeneo-data-quality-insights-dqi-dashboard-index"},"akeneo_job_process_tracker_index":{"module":"akeneojob/controller/process-tracker","aclResourceId":"pim_enrich_job_tracker_index"},"akeneo_job_process_tracker_details":{"module":"akeneojob/controller/process-tracker","aclResourceId":"pim_enrich_job_tracker_index"},"akeneo_identifier_generator_index":{"module":"akeneoidentifiergenerator/js/controller/identifier-generator","feature":"identifier_generator"},"akeneo_identifier_generator_edit":{"module":"akeneoidentifiergenerator/js/controller/identifier-generator","feature":"identifier_generator"}},"defaultController":{"module":"pim/controller/template"}} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, requireContext) {
  var config = __moduleConfig;
  var controllers = config.controllers || {};
  var defaultController = config.defaultController;
  return {
    /**
     * Get the controller for the given name
     *
     * @param {String} name
     *
     * @return {Promise}
     */
    get: function get(name) {
      var deferred = $.Deferred();
      var controller = controllers[name] || defaultController;
      var Controller = requireContext(controller.module);
      controller["class"] = Controller;
      deferred.resolve(controller);
      return deferred.promise();
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 12523:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/controller/role.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/controller/form */ 87026), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/form-config-provider */ 91598), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, FormController, securityContext, configProvider, router) {
  return FormController.extend({
    /**
     * {@inheritdoc}
     */
    renderRoute: function renderRoute(route, path) {
      var _this = this;

      return securityContext.initialize().then(function () {
        if (!securityContext.isGranted('pim_user_role_edit')) {
          router.redirectToRoute('pim_dashboard_index');
          return;
        }

        return $.get(path).then(_this.renderTemplate.bind(_this)).promise();
      });
    },

    /**
     * {@inheritdoc}
     */
    afterSubmit: function afterSubmit() {
      securityContext.initialize();
      configProvider.clear();
      FormController.prototype.afterSubmit.apply(this, arguments);

      if (!this.$('#entity-updated span').is(':visible')) {
        location.reload();
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 87703:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/controller/system.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseController, FormBuilder, Routing) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm() {
      var _this = this;

      return $.when(FormBuilder.build('oro-system-config-form'), $.get(Routing.generate('oro_config_configuration_system_get'))).then(function (form, response) {
        _this.on('pim:controller:can-leave', function (event) {
          form.trigger('pim_enrich:form:can-leave', event);
        });

        form.setData(response[0]);
        form.setElement(_this.$el).render();
        return form;
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 28333:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/controller/template.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/controller/base */ 88191)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseController) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderRoute: function renderRoute(route, path) {
      return $.get(path).then(this.renderTemplate.bind(this)).promise();
    },

    /**
     * Add the given content to the current container
     *
     * @param {String} content
     */
    renderTemplate: function renderTemplate(content) {
      if (!this.active) {
        return;
      }

      this.$el.html(content);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 52835:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/controller/user.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/controller/front */ 834), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/page-title */ 12764), __webpack_require__(/*! pim/form-builder */ 16371)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseController, FetcherRegistry, PageTitle, FormBuilder) {
  return BaseController.extend({
    /**
     * {@inheritdoc}
     */
    renderForm: function renderForm(route) {
      var _this = this;

      return FetcherRegistry.getFetcher('user').fetch(route.params.identifier).then(function (user) {
        if (!_this.active) {
          return;
        }

        PageTitle.set({
          username: user.username
        });
        return FormBuilder.build(user.meta.form).then(function (form) {
          _this.on('pim:controller:can-leave', function (event) {
            form.trigger('pim_enrich:form:can-leave', event);
          });

          var previousCatalogScope = user.catalog_default_scope;
          var previousDefaultCategoryTree = user.default_category_tree;
          var previousUserLocale = user.user_default_locale;
          var previousCatalogLocale = user.catalog_default_locale;
          var previousAvatarFilePath = user.avatar ? user.avatar.filePath : null;
          form.on('pim_enrich:form:entity:post_save', function (data) {
            var dataAvatarFilePath = data.avatar ? data.avatar.filePath : null;

            if (data.user_default_locale !== previousUserLocale || data.catalog_default_locale !== previousCatalogLocale || data.catalog_default_scope !== previousCatalogScope || data.default_category_tree !== previousDefaultCategoryTree || dataAvatarFilePath !== previousAvatarFilePath) {
              previousUserLocale = data.user_default_locale;
              previousCatalogLocale = data.catalog_default_locale;
              previousCatalogScope = data.catalog_default_scope;
              previousDefaultCategoryTree = data.default_category_tree;
              previousAvatarFilePath = dataAvatarFilePath; // Prevent warning message (Firefox only)

              form.getExtension('state').collectAndRender(); // Reload the page to reload new user interface variables

              location.reload();
            }
          });
          form.on('pim_enrich:form:entity:pre_save', function () {
            var data = form.getFormData();
            data.current_password = null;
            data.new_password = null;
            data.new_password_repeat = null;
            form.setData(data);
          });
          form.setData(user);
          form.trigger('pim_enrich:form:entity:post_fetch', user);
          form.setElement(_this.$el).render();
          return form;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 51458:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/create/form/properties/general.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the generals properties of a create entity form
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/create/tab/properties/general */ 98661), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, FetcherRegistry, template, UserContext, mediator, propertyAccessor) {
  return BaseForm.extend({
    className: 'tabsection',
    template: _.template(template),
    catalogLocale: UserContext.get('catalogLocale'),
    errors: [],
    events: {
      'change input.code': 'updateCode'
    },

    /**
     * @param {Object} meta
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.setValidationErrors.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.render.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_save', this.resetValidationErrors.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template({
        code: this.getFormData().code,
        hasId: _.has(this.getFormData().meta, 'id'),
        sectionTitle: __(this.config.title),
        catalogLocale: this.catalogLocale,
        errors: this.getValidationErrorsForField('code'),
        label: __(this.config.codeLabel),
        requiredLabel: __('pim_common.required_label')
      }));
      this.delegateEvents();
      this.renderExtensions();
    },

    /**
     * Updates state of code property on event.
     *
     * @param {Object} event
     */
    updateCode: function updateCode(event) {
      var data = this.getFormData();
      data.code = event.target.value;
      this.setData(data);
    },

    /**
     * Get the validation errors for the given field
     *
     * @param {string} field
     *
     * @return {mixed}
     */
    getValidationErrorsForField: function getValidationErrorsForField(field) {
      return propertyAccessor.accessProperty(this.errors, field, []);
    },

    /**
     * Sets errors
     *
     * @param {Object} errors
     */
    setValidationErrors: function setValidationErrors(errors) {
      this.errors = errors.response;
    },
    resetValidationErrors: function resetValidationErrors() {
      this.errors = {};
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 5552:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/js/datagrid/action/delete-product-action.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/delete-action */ 44878), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/security-context */ 34770)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteAction, Router, SecurityContext) {
  return DeleteAction.extend({
    /** @property {Boolean} */
    noHref: true,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.launcherOptions.enabled = this.isEnabled();
      return DeleteAction.prototype.initialize.apply(this, arguments);
    },
    getLink: function getLink() {
      var productType = this.model.get('document_type');
      var id = this.model.get('technical_id');

      if (productType === 'product') {
        return Router.generate('pim_enrich_product_rest_remove', {
          uuid: id
        });
      }

      return Router.generate('pim_enrich_' + productType + '_rest_remove', {
        id: id
      });
    },
    getEntityHint: function getEntityHint() {
      return this.model.get('document_type').replace('_', ' ');
    },

    /**
     * {@inheritdoc}
     */
    isEnabled: function isEnabled() {
      var productType = this.model.get('document_type');
      return SecurityContext.isGranted('pim_enrich_product_model_remove') && productType === 'product_model' || SecurityContext.isGranted('pim_enrich_product_remove') && productType === 'product';
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13605:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/datagrid/action/edit-in-modal-action.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/datagrid/abstract-action */ 8744), __webpack_require__(/*! pim/common/form-modal-creator */ 2081)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, AbstractAction, formModalCreator) {
  return AbstractAction.extend({
    /**
     * {@inheritdoc}
     */
    execute: function execute() {
      return formModalCreator.createModal(this.model.get(this.propertyCode), this.fetcher);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 56486:
/*!**********************************************************************************************!*\
  !*** ./public/bundles/pimui/js/datagrid/action/navigate-product-and-product-model-action.js ***!
  \**********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/datagrid/navigate-action */ 42498), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, NavigateAction, Router) {
  return NavigateAction.extend({
    tabRedirects: {},
    links: {},

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      return NavigateAction.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    getLink: function getLink() {
      var productType = this.model.get('document_type');
      var id = this.model.get('technical_id');

      if (typeof this.links[productType] !== 'undefined') {
        if ((id + '').match(/^\d+$/)) {
          return Router.generate(this.links[productType], {
            id: id
          });
        } else {
          return Router.generate(this.links[productType], {
            uuid: id
          });
        }
      }

      if (productType === 'product') {
        return Router.generate('pim_enrich_product_edit', {
          uuid: id
        });
      }

      return Router.generate('pim_enrich_' + productType + '_edit', {
        id: id
      });
    },

    /**
     * {@inheritdoc}
     */
    run: function run() {
      if (null !== this.tabRedirects) {
        var productType = this.model.get('document_type');
        var tab = this.tabRedirects[productType];

        if (tab) {
          sessionStorage.setItem('redirectTab', "#".concat(tab));
          sessionStorage.setItem('current_column_tab', tab);
        }
      }

      return NavigateAction.prototype.run.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 28794:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/js/datagrid/action/toggle-product-action.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/datagrid/ajax-action */ 66623), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (AjaxAction, Router) {
  return AjaxAction.extend({
    /** @property {Boolean} */
    noHref: true,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.launcherOptions.enabled = this.isEnabled();
      AjaxAction.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    isEnabled: function isEnabled() {
      return this.model.get('document_type') !== 'product_model';
    },

    /**
     * {@inheritdoc}
     */
    getMethod: function getMethod() {
      return 'POST';
    },
    getLink: function getLink() {
      var productType = this.model.get('document_type');
      var id = this.model.get('technical_id');

      if (productType === 'product') {
        return Router.generate('pim_enrich_product_toggle_status', {
          uuid: id
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 24846:
/*!*************************************************!*\
  !*** ./public/bundles/pimui/js/date-context.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Routing) {
  var contextData = {};
  return {
    /**
     * Fetches data from the back then stores it.
     *
     * @returns {Promise}
     */
    initialize: function initialize() {
      return $.get(Routing.generate('pim_localization_format_date')).then(function (response) {
        return contextData = response;
      });
    },

    /**
     * Returns the value corresponding to the specified key.
     *
     * @param {String} key
     *
     * @returns {*}
     */
    get: function get(key) {
      return contextData[key];
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 91558:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/delete-confirmation.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, Backbone) {
  'use strict';
  /**
   * Confirm deletion dialog
   *
   * @export  oro/delete-confirmation
   * @class   oro.DeleteConfirmation
   * @extends oro.Modal
   */

  return Backbone.BootstrapModal.extend({
    /**
     * @param {Object} options
     */
    initialize: function initialize(options) {
      options = _.extend({
        title: __('pim_common.confirm_deletion'),
        okText: __('pim_common.ok'),
        buttonClass: 'AknButton--important',
        illustrationClass: 'delete',
        cancelText: __('pim_common.cancel')
      }, options);
      arguments[0] = options;
      Backbone.BootstrapModal.prototype.initialize.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 57340:
/*!******************************************!*\
  !*** ./public/bundles/pimui/js/error.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/app */ 10501), __webpack_require__(/*! pim/error */ 84879)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, routing, app, Error) {
  'use strict';

  var defaults = {
    header: 'Server error',
    message: 'Error! Incorrect server response.',
    forbiddenAccess: 'You do not have the permission to open this page'
  };
  /**
   * @export oro/error
   * @name oro.error
   */

  var error = {
    dispatch: function dispatch(model, xhr, options) {
      var self = error.dispatch;
      self.init(model, xhr, _.extend({}, defaults, options));
    }
  };
  var sync = Backbone.sync; // Override default Backbone.sync

  Backbone.sync = function (method, model, options) {
    options = options || {};

    if (!_.has(options, 'error')) {
      options.error = error.dispatch;
    }

    sync.call(Backbone, method, model, options);
  };

  _.extend(error.dispatch, {
    /**
     * Error dispatch
     *
     * @param {Object} model
     * @param {Object} xhr
     * @param {Object} options
     */
    init: function init(model, xhr, options) {
      if (xhr.status === 401) {
        this._processRedirect();
      } else if (xhr.readyState === 4) {
        if (xhr.status === 403) {
          options.message = options.forbiddenAccess;
        }

        this._displayError(xhr, options);
      }
    },
    _displayError: function _displayError(xhr, options) {
      var message = options.message;

      if (app.debug) {
        message += '<br><b>Debug:</b>' + xhr.responseText;
      }

      var errorView = new Error(message, xhr.status);
      errorView.setElement($('#container')).render();
    },

    /**
     * Redirects to login
     * @private
     */
    _processRedirect: function _processRedirect() {
      document.location.href = routing.generate('pim_user_security_login');
    }
  });

  return error;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 84879:
/*!************************************************!*\
  !*** ./public/bundles/pimui/js/error/error.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/error/error */ 44192)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, template) {
  return Backbone.View.extend({
    template: _.template(template),
    initialize: function initialize(message, statusCode) {
      this.message = message;
      this.statusCode = statusCode;
    },
    render: function render() {
      this.$el.html(this.template({
        message: this.message,
        statusCode: this.statusCode
      }));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 49863:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/family-variant/form/attribute-set.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family variant attribute set form
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/template/family-variant/attribute-set */ 83355), __webpack_require__(/*! pim/template/family-variant/attribute-group */ 71708), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, i18n, UserContext, fetcherRegistry, Dialog, template, attributeGroupTemplate, analytics) {
  var sortOrdered = function sortOrdered(first, second) {
    return first.sort_order - second.sort_order;
  };
  /**
   * Group attributes by attribute group
   */


  var groupAttributes = function groupAttributes(attributes, attributeGroups) {
    return function (attributeCodes, lockedAttributes) {
      return Object.values(attributeGroups).sort(sortOrdered).map(function (attributeGroup) {
        var groupAttributes = attributes.filter(function (attribute) {
          return attribute.group === attributeGroup.code && attributeCodes.indexOf(attribute.code) !== -1;
        }).sort(sortOrdered);
        var locked = groupAttributes.filter(function (attribute) {
          return !lockedAttributes.includes(attribute.code);
        }).length === 0;
        return {
          attributeGroup: Object.assign({}, attributeGroup, {
            locked: locked
          }),
          attributes: groupAttributes
        };
      }).filter(function (section) {
        return section.attributes.length !== 0;
      });
    };
  };
  /**
   * Get attribute from attribute code
   */


  var getAttribute = function getAttribute(attributes) {
    return function (attributeCode) {
      return attributes.find(function (attribute) {
        return attribute.code === attributeCode;
      });
    };
  };

  return BaseForm.extend({
    events: {
      'click .delete-attribute': 'removeAttributeFromVariantAttributeSet',
      'click .delete-attribute-group': 'removeAttributeGroupFromVariantAttributeSet'
    },
    template: _.template(template),
    attributeGroupTemplate: _.template(attributeGroupTemplate),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      if (!this.configured) {
        return this;
      }

      var familyVariant = this.getFormData();
      fetcherRegistry.getFetcher('family').fetch(familyVariant.family).then(function (family) {
        var axesAttributeCodes = familyVariant.variant_attribute_sets.reduce(function (result, attributeSet) {
          return result.concat(attributeSet.attributes);
        }, []);
        var attributeCodes = axesAttributeCodes.concat(family.attributes.map(function (attribute) {
          return attribute.code;
        })).filter(function (code, index, codes) {
          return codes.indexOf(code) === index;
        });
        analytics.track('family:variant:attribute-set', {
          codes: axesAttributeCodes
        });
        return $.when(fetcherRegistry.getFetcher('attribute-group').fetchAll(), fetcherRegistry.getFetcher('attribute').fetchByIdentifiers(attributeCodes, {
          rights: 0
        }), axesAttributeCodes, family);
      }).then(function (attributeGroups, attributes, axesAttributeCodes, family) {
        var commonAttributes = family.attributes.map(function (attribute) {
          return attribute.code;
        }).filter(function (attributeCode) {
          return axesAttributeCodes.indexOf(attributeCode) === -1;
        });
        var axesAttributes = familyVariant.variant_attribute_sets.map(function (set) {
          return set.axes;
        }).reduce(function (allAxes, axes) {
          return allAxes.concat(axes);
        });

        var lockedAttributes = _this.getLockedAttributes(family, axesAttributes);

        _this.$el.empty().append(_this.template({
          lockedAttributes: lockedAttributes,
          axesAttributes: axesAttributes,
          familyVariant: familyVariant,
          attributeGroups: attributeGroups,
          family: family,
          commonAttributes: commonAttributes,
          UserContext: UserContext,
          i18n: i18n,
          __: __,
          groupAttributes: groupAttributes(attributes, attributeGroups),
          getAttribute: getAttribute(attributes),
          renderSection: function renderSection(level, attributes, movable) {
            return _this.attributeGroupTemplate({
              lockedAttributes: lockedAttributes,
              level: level,
              movable: movable,
              attributes: attributes,
              i18n: i18n,
              UserContext: UserContext,
              __: __,
              axesAttributes: axesAttributes
            });
          }
        }));

        _this.$("#attributes-column-level-0,\n                            #attributes-column-level-1,\n                            #attributes-column-level-2").sortable({
          connectWith: '.connected-sortable',
          tolerance: 'pointer',
          cursor: 'move',
          cancel: 'div.alert',
          items: '.movable',
          receive: _this.moveAttribute(lockedAttributes)
        }).disableSelection();

        _this.$("#attribute-groups-column-level-0,\n                            #attribute-groups-column-level-1,\n                            #attribute-groups-column-level-2").sortable({
          connectWith: '.connected-group-sortable',
          tolerance: 'pointer',
          cursor: 'move',
          cancel: 'div.alert',
          items: '.movable-group',
          receive: _this.moveAttributes(lockedAttributes)
        }).disableSelection();

        _this.renderExtensions();

        _this.delegateEvents();
      });
      return this;
    },

    /**
     * Handle single attribute drop on a landing zone
     *
     * @param {Array} lockedAttributes
     *
     * @return {Function}
     */
    moveAttribute: function moveAttribute(lockedAttributes) {
      var _this2 = this;

      return function (event, ui) {
        var originLevel = parseInt(ui.sender[0].dataset.level);
        var destinationLevel = parseInt(ui.item[0].parentNode.dataset.level);
        var movedAttributes = [ui.item[0].dataset.attributeCode].filter(function (movedAttribute) {
          return !lockedAttributes.includes(movedAttribute);
        });

        _this2.handleAttributesMove(originLevel, destinationLevel, movedAttributes);
      };
    },

    /**
     * Handle multiple attributes drop on a landing zone
     *
     * @param {Array} lockedAttributes
     *
     * @return {Function}
     */
    moveAttributes: function moveAttributes(lockedAttributes) {
      var _this3 = this;

      return function (event, ui) {
        var destinationLevel = parseInt(ui.item[0].parentNode.dataset.level);
        var originLevel = parseInt(ui.sender[0].dataset.level);
        var movedAttributes = Object.values(ui.item[0].querySelectorAll('li')).map(function (domElement) {
          return domElement.dataset.attributeCode;
        }).filter(function (movedAttribute) {
          return !lockedAttributes.includes(movedAttribute);
        });

        _this3.handleAttributesMove(originLevel, destinationLevel, movedAttributes);
      };
    },

    /**
     * Handle click on single attribute removal
     *
     * @param {Event} event
     */
    removeAttributeFromVariantAttributeSet: function removeAttributeFromVariantAttributeSet(event) {
      var $attributeToRemove = $(event.currentTarget.parentElement);
      var variantAttributeSetLevel = $attributeToRemove.closest('[data-level]').data('level');
      var removedAttributes = [$attributeToRemove.data('attribute-code')];
      this.handleAttributesRemoval(variantAttributeSetLevel, removedAttributes);
    },

    /**
     * Handle click on attribute group removal
     *
     * @param {Event} event
     */
    removeAttributeGroupFromVariantAttributeSet: function removeAttributeGroupFromVariantAttributeSet(event) {
      var $attributeGroupToRemove = $(event.currentTarget).parents('.attribute-group-section');
      var variantAttributeSetLevel = $attributeGroupToRemove.parent().data('level');
      var removedAttributes = $attributeGroupToRemove.find('.attribute.deletable').toArray().map(function (element) {
        return element.dataset.attributeCode;
      });
      this.handleAttributesRemoval(variantAttributeSetLevel, removedAttributes);
    },

    /**
     * Handle multiple attribute move
     *
     * @param {Number} originLevel
     * @param {Number} destinationLevel
     * @param {Array} movedAttributes
     */
    handleAttributesMove: function handleAttributesMove(originLevel, destinationLevel, movedAttributes) {
      if (originLevel >= destinationLevel) {
        this.render();
        return;
      }

      var data = this.getFormData();
      data.variant_attribute_sets.forEach(function (attributeSet) {
        if (attributeSet.level === originLevel) {
          attributeSet.attributes = attributeSet.attributes.filter(function (attributeCode) {
            return movedAttributes.indexOf(attributeCode) === -1;
          });
        }

        if (attributeSet.level === destinationLevel) {
          var _attributeSet$attribu;

          (_attributeSet$attribu = attributeSet.attributes).push.apply(_attributeSet$attribu, _toConsumableArray(movedAttributes));
        }

        return attributeSet;
      });
      this.setData(data);
      this.render();
    },

    /**
     * Handle multiple attribute remove
     *
     * @param {Number} level
     * @param {Array} removedAttributes
     */
    handleAttributesRemoval: function handleAttributesRemoval(level, removedAttributes) {
      var _this4 = this;

      Dialog.confirm(__('pim_enrich.entity.family_variant.module.edit.confirm_attribute_removal_message'), __('pim_enrich.entity.family_variant.module.edit.confirm_attribute_removal_title'), function () {
        var data = _this4.getFormData();

        data.variant_attribute_sets.forEach(function (attributeSet) {
          if (attributeSet.level === level) {
            attributeSet.attributes = attributeSet.attributes.filter(function (item) {
              return -1 === removedAttributes.indexOf(item);
            });
          }
        });
        analytics.track('family:variant:attribute-remove', {
          codes: removedAttributes
        });

        _this4.setData(data);

        _this4.render();
      }, null, null, null, 'families');
    },
    getLockedAttributes: function getLockedAttributes(family, axesAttributes) {
      return family.attributes.filter(function (attribute) {
        var isUnique = attribute.unique;
        var isAxis = axesAttributes.includes(attribute.code);
        return isAxis || isUnique;
      }).map(function (attribute) {
        return attribute.code;
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 19114:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/family-variant/form/delete.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension for family variants
 *
 * @author    Samir Boulil <samir.boulil@akeneo.com>
 * @copyright 2018 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/family-variant */ 75682)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, FamilyVariantRemover) {
  return DeleteForm.extend({
    remover: FamilyVariantRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 14405:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/family-variant/form/labels-container.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * @author Mathias Métayer <mathias.metayer@akeneo.com>
 * @copyright 2018 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/family-variant/labels-container */ 86697)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template) {
  return BaseForm.extend({
    render: function render() {
      this.$el.html(_.template(template)({
        __: __,
        familyVariant: this.getFormData()
      }));
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 537:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/family-variant/form/save.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family variant save extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/save */ 21153), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/saver/family-variant */ 95016), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseSave, messenger, FamilyVariantSaver, FieldManager, i18n, UserContext, mediator, analytics) {
  return BaseSave.extend({
    updateSuccessMessage: __('pim_enrich.entity.family_variant.flash.update.success'),
    updateFailureMessage: __('pim_enrich.entity.family_variant.flash.update.fail'),

    /**
     * {@inheritdoc}
     */
    save: function save() {
      var familyVariant = $.extend(true, {}, this.getFormData());
      delete familyVariant.meta;
      var notReadyFields = FieldManager.getNotReadyFields();

      if (0 < notReadyFields.length) {
        var fieldLabels = _.map(notReadyFields, function (field) {
          return i18n.getLabel(field.attribute.label, UserContext.get('catalogLocale'), field.attribute.code);
        });

        messenger.notify('error', __('pim_enrich.entity.family_variant.info.field_not_ready', {
          fields: fieldLabels.join(', ')
        }));
        return;
      }

      this.showLoadingMask();
      this.getRoot().trigger('pim_enrich:form:entity:pre_save');
      return FamilyVariantSaver.save(familyVariant.code, familyVariant, 'PUT').then(function (data) {
        this.postSave();
        this.setData(data);
        this.getRoot().trigger('pim_enrich:form:entity:post_fetch', data);
        this.getRoot().trigger('pim_enrich:form:entity:post_save', data);
        mediator.trigger('datagrid:doRefresh:family-variant-grid');
        analytics.track('family:variant:saved');
      }.bind(this)).fail(this.fail.bind(this)).always(this.hideLoadingMask.bind(this));
    },
    fail: function fail(response) {
      switch (response.status) {
        case 422:
        case 400:
          this.getRoot().trigger('pim_enrich:form:entity:bad_request', {
            sentData: this.getFormData(),
            response: response.responseJSON
          });
          break;

        case 500:
          /* global console */
          var message = response.responseJSON ? response.responseJSON : response;
          console.error('Errors:', message);
          this.getRoot().trigger('pim_enrich:form:entity:error:save', message);
          break;

        default:
      }

      var responseJSON = response.responseJSON;

      if (Array.isArray(responseJSON)) {
        var _iterator = _createForOfIteratorHelper(responseJSON),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var errorPayload = _step.value;
            messenger.notify('error', errorPayload.message);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      } else {
        messenger.notify('error', this.updateFailureMessage);
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 92545:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/attributes.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attributes tabs view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/family/tab/attributes */ 23306)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, FetcherRegistry, template) {
  return BaseForm.extend({
    className: 'attributes',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: this.code,
        label: __(this.config.label)
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template());
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 72461:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/attributes/attributes.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family attributes settings table view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/family/tab/attributes/attributes */ 70213), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! oro/mediator */ 27615)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, $, BaseForm, template, UserContext, SecurityContext, i18n, FetcherRegistry, Dialog, Messenger, LoadingMask, mediator) {
  return BaseForm.extend({
    className: 'tabsection-content tab-content',
    attributeRequiredIconClass: 'AknAcl-icon AknAcl-icon--granted icon-ok required',
    attributeNotRequiredIconClass: 'AknAcl-icon icon-circle non-required',
    collapsedClass: 'AknGrid-bodyContainer--collapsed',
    requiredLabel: __('pim_enrich.entity.family.module.attributes.required_label'),
    notRequiredLabel: __('pim_enrich.entity.family.module.attributes.not_required_label'),
    template: _.template(template),
    errors: [],
    catalogLocale: UserContext.get('catalogLocale'),
    channels: null,
    events: {
      'click .group': 'toggleGroup',
      'click .attribute-requirement i': 'toggleAttribute',
      'click .remove-attribute': 'onRemoveAttribute'
    },
    readOnly: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:update_read_only', function (readOnly) {
        _this.readOnly = readOnly;

        _this.render();
      });
      this.listenTo(mediator, 'mass-edit:form:lock', function () {
        _this.readOnly = true;
      });
      this.listenTo(mediator, 'mass-edit:form:unlock', function () {
        _this.readOnly = false;
      });
      this.listenTo(this.getRoot(), 'add-attribute:add', this.onAddAttributes);
      this.listenTo(this.getRoot(), 'add-attribute-group:add', this.onAddAttributesByAttributeGroups);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this2 = this;

      if (!this.configured) {
        return this;
      }

      this.getTemplateContext().then(function (context) {
        _this2.$el.html(_this2.template(context));

        $(_this2.$el).find('[data-original-title]').tooltip();

        _this2.delegateEvents();

        _this2.renderExtensions();
      });
    },
    getTemplateContext: function getTemplateContext() {
      var _this3 = this;

      var data = this.getFormData();

      var attributeGroupsToFetch = _.unique(_.pluck(data.attributes, 'group'));

      return $.when(FetcherRegistry.getFetcher('channel').fetchAll(), FetcherRegistry.getFetcher('attribute-group').fetchByIdentifiers(attributeGroupsToFetch, {
        full_attributes: false,
        apply_filters: false,
        options: {
          limit: -1
        }
      })).then(function (channels, attributeGroups) {
        _this3.channels = channels;

        var sortedAttributes = _.sortBy(data.attributes, function (attribute) {
          return _.findWhere(attributeGroups, {
            code: attribute.group
          }).sort_order;
        });

        var groupedAttributes = _.groupBy(sortedAttributes, 'group');

        _.each(groupedAttributes, function (attributes, group) {
          attributes = _.sortBy(attributes, function (attribute) {
            return attribute.sort_order;
          });
          groupedAttributes[group] = attributes;
        });

        return {
          label: __(_this3.config.label),
          groupedAttributes: groupedAttributes,
          channels: _this3.channels,
          attributeGroups: _.map(attributeGroups, function (group) {
            var panel = $('tbody[data-group="' + group.code + '"]');
            group.collapsed = $(panel).hasClass(_this3.collapsedClass);
            return group;
          }),
          colspan: _this3.channels.length + 1,
          i18n: i18n,
          identifierAttributeType: _this3.identifierAttributeType,
          catalogLocale: _this3.catalogLocale,
          readOnly: _this3.readOnly,
          isAttributeRequirementRequired: _this3.isAttributeRequirementRequired.bind(_this3),
          isAttributeEditable: _this3.isAttributeEditable.bind(_this3),
          getAttributeRequirementTooltip: _this3.getAttributeRequirementTooltip.bind(_this3)
        };
      });
    },

    /**
     * @param {Object} attribute
     * @param {Object} channel
     *
     * @returns {boolean}
     */
    isAttributeRequirementRequired: function isAttributeRequirementRequired(attribute, channel) {
      var attributeRequirements = this.getFormData().attribute_requirements;

      if (undefined === attributeRequirements[channel.code]) {
        return false;
      }

      return -1 < attributeRequirements[channel.code].indexOf(attribute.code);
    },

    /**
     * @param {Object} attribute
     * @param {Object} channel
     *
     * @returns {string}
     */
    getAttributeRequirementTooltip: function getAttributeRequirementTooltip(attribute, channel) {
      return this.isAttributeRequirementRequired(attribute, channel) ? this.requiredLabel : this.notRequiredLabel;
    },

    /**
     * Toggle expand/collapse attribute group accordion
     *
     * @param {Object} event
     */
    toggleGroup: function toggleGroup(event) {
      var target = event.currentTarget;
      $(target).find('div').toggleClass('AknGrid-expand--expanded');
      $(target).parent().toggleClass(this.collapsedClass);
      return this;
    },

    /**
     * Toggle attribute requirement
     *
     * @param {Object} event
     */
    toggleAttribute: function toggleAttribute(event) {
      var attributeCode = event.currentTarget.dataset.attribute;
      var channelCode = event.currentTarget.dataset.channel;

      if (!SecurityContext.isGranted('pim_enrich_family_edit_attributes')) {
        return;
      }

      if (!this.isAttributeEditable()) {
        return;
      }

      if ('true' === event.currentTarget.dataset.required) {
        this.removeFromAttributeRequirements(attributeCode, channelCode);
      } else {
        this.addToAttributeRequirements(attributeCode, channelCode);
      }

      this.render();
    },

    /**
     * Checks if attribute is editable
     * @returns {boolean}
     */
    isAttributeEditable: function isAttributeEditable() {
      return !this.readOnly;
    },

    /**
     * Adds attribute to channel requirements
     *
     * @param {string} attribute
     * @param {string} channel
     */
    addToAttributeRequirements: function addToAttributeRequirements(attribute, channel) {
      var data = this.getFormData();
      var requirements = data.attribute_requirements[channel] || [];
      requirements.push(attribute);
      data.attribute_requirements[channel] = requirements;
      return this.setData(data);
    },

    /**
     * Removes attribute from channels requirements
     *
     * @param {string} attribute
     * @param {string} channel
     */
    removeFromAttributeRequirements: function removeFromAttributeRequirements(attribute, channel) {
      var data = this.getFormData();
      data.attribute_requirements[channel] = data.attribute_requirements[channel] ? data.attribute_requirements[channel].filter(function (item) {
        return attribute !== item;
      }) : [];
      this.setData(data);
    },

    /**
     * Removes attribute from family upon user confirmation
     *
     * Checks if user has rights to remove attributes
     * Checks if attribute is not used as label
     * Checks if attribute is not used as image
     * Checks if attribute is not used as axis in a family variant
     *
     * @param {Object} event
     */
    onRemoveAttribute: function onRemoveAttribute(event) {
      if (this.readOnly) {
        return;
      }

      event.preventDefault();
      var attributeAsLabel = this.getFormData().attribute_as_label;
      var attributeAsImage = this.getFormData().attribute_as_image;
      var attributesUsedAsAxis = this.getFormData().meta.attributes_used_as_axis;

      if (!SecurityContext.isGranted('pim_enrich_family_edit_attributes')) {
        return false;
      }

      var attributeToRemove = event.currentTarget.dataset.attribute;

      if (attributeAsLabel === attributeToRemove) {
        Messenger.notify('error', __('pim_enrich.entity.family.flash.update.cant_remove_attribute_as_label'));
        return false;
      } else if (attributeAsImage === attributeToRemove) {
        Messenger.notify('error', __('pim_enrich.entity.family.flash.update.cant_remove_attribute_as_image'));
        return false;
      } else if (_.contains(attributesUsedAsAxis, attributeToRemove)) {
        Messenger.notify('error', __('pim_enrich.entity.family.flash.update.cant_remove_attribute_used_as_axis'));
        return false;
      }

      this.removeAttribute(attributeToRemove);
    },

    /**
     * Adds selected attributes to family
     *
     * @param {Object} event
     */
    onAddAttributes: function onAddAttributes(event) {
      var _this4 = this;

      var options = {
        options: {
          identifiers: event.codes,
          limit: event.codes.length
        }
      };
      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo(this.getRoot().$el).show();
      $.when(FetcherRegistry.getFetcher('attribute').search(options)).then(function (attributes) {
        _.each(attributes, function (attribute) {
          _this4.addAttribute(attribute);
        });

        _this4.render();
      }).always(function () {
        loadingMask.hide().$el.remove();
      });
    },

    /**
     * Adds attributes associated with selected groups
     *
     * @param {Object} event
     */
    onAddAttributesByAttributeGroups: function onAddAttributesByAttributeGroups(event) {
      var _this5 = this;

      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo(this.getRoot().$el).show();
      $.when(FetcherRegistry.getFetcher('attribute-group').search({
        options: {
          identifiers: event.codes,
          limit: event.codes.length
        }
      }), FetcherRegistry.getFetcher('attribute').getIdentifierAttribute()).then(function (attributeGroups, identifier) {
        var existingAttributes = _.pluck(_this5.getFormData().attributes, 'code');

        var groupsAttributes = [].concat.apply([], _.pluck(attributeGroups, 'attributes'));

        var attributesToAdd = _.filter(groupsAttributes, function (attribute) {
          return !_.contains(existingAttributes, attribute) && attribute !== identifier.code;
        });

        return _this5.getPaginatedAttributes(attributesToAdd);
      }).then(function (attributes) {
        _.each(attributes, function (attribute) {
          _this5.addAttribute(attribute);
        });

        _this5.render();
      }).always(function () {
        loadingMask.hide().$el.remove();
      });
    },
    getPaginatedAttributes: function getPaginatedAttributes(attributesToAdd) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var chunkSize, result, i, chunk, attributes;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                chunkSize = 200;
                result = [];
                i = 0;

              case 3:
                if (!(i < attributesToAdd.length)) {
                  _context.next = 12;
                  break;
                }

                chunk = attributesToAdd.slice(i, i + chunkSize);
                _context.next = 7;
                return FetcherRegistry.getFetcher('attribute').search({
                  options: {
                    identifiers: chunk,
                    limit: chunk.length
                  }
                });

              case 7:
                attributes = _context.sent;
                result = result.concat(attributes);

              case 9:
                i += chunkSize;
                _context.next = 3;
                break;

              case 12:
                return _context.abrupt("return", result);

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    },

    /**
     * Removes attribute from family
     *
     * @return {Object}
     */
    removeAttribute: function removeAttribute(attribute) {
      var _this6 = this;

      _.each(this.channels, function (channel) {
        _this6.removeFromAttributeRequirements(attribute, channel.code);
      });

      var data = this.getFormData();
      data.attributes.splice(_.pluck(data.attributes, 'code').indexOf(attribute), 1);
      this.setData(data);
      return this.render();
    },

    /**
     * Adds attribute to family
     *
     * @param {Object} attribute
     */
    addAttribute: function addAttribute(attribute) {
      var data = this.getFormData();

      if ('undefined' !== typeof _.findWhere(data.attributes, {
        code: attribute.code
      })) {
        return this;
      }

      data.attributes.push(attribute);
      this.setData(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 74161:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/attributes/toolbar.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attributes tab top toolbar view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/family/tab/attributes/toolbar */ 39694)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknGridToolbar',
    template: _.template(template),
    readOnly: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:update_read_only', function (readOnly) {
        this.readOnly = readOnly;
        this.render();
      }.bind(this));
      BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      if (this.readOnly) {
        this.$el.empty();
        return this;
      }

      this.$el.html(this.template({}));
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 73622:
/*!*****************************************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/attributes/toolbar/add-select/attribute-group/select.js ***!
  \*****************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family add attribute group select extension view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/common/add-select */ 64191)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseAddSelect) {
  return BaseAddSelect.extend({
    className: 'AknButtonList-item add-attribute-group',

    /**
     * Returns a set of attribute groups that are not empty, and not already added to the family.
     *
     * @param {Object} loadedGroups
     */
    filterItems: function filterItems(loadedGroups) {
      var _this = this;

      var allowedGroups = {};
      Object.entries(loadedGroups).forEach(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            group = _ref2[0],
            data = _ref2[1];

        var familyAttributes = _this.getRoot().getFormData().attributes.filter(function (attribute) {
          return attribute.group === group;
        }).map(function (attribute) {
          return attribute.code;
        });

        var groupIsNotEmpty = data.attributes.length > 0;
        var groupIsIncomplete = data.attributes.length !== familyAttributes.length;

        if (groupIsNotEmpty && groupIsIncomplete) {
          allowedGroups[group] = data;
        }
      });
      return allowedGroups;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 45210:
/*!***********************************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/attributes/toolbar/add-select/attribute/select.js ***!
  \***********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family edit form add attribute select extension view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/product/add-select/attribute */ 24018), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, AddAttributeSelect, FetcherRegistry, analytics) {
  return AddAttributeSelect.extend({
    /**
     * {@inheritdoc}
     */
    fetchItems: function fetchItems(searchParameters) {
      return this.getItemsToExclude().then(function (attributeCodes) {
        searchParameters.options.excluded_identifiers = attributeCodes;
        return FetcherRegistry.getFetcher(this.mainFetcher).search(searchParameters).then(function (attributes) {
          var groupCodes = _.unique(_.pluck(attributes, 'group'));

          return FetcherRegistry.getFetcher('attribute-group').fetchByIdentifiers(groupCodes).then(function (attributeGroups) {
            return this.populateGroupProperties(attributes, attributeGroups);
          }.bind(this));
        }.bind(this));
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    getItemsToExclude: function getItemsToExclude() {
      return $.Deferred().resolve(this.getFormData().attributes.map(function (attribute) {
        return attribute.code;
      }));
    },

    /**
     * {@inheritdoc}
     */
    addItems: function addItems() {
      this.getRoot().trigger(this.addEvent, {
        codes: this.selection
      });
      analytics.track('family-grid:mass-edit:attributes-added', {
        codes: this.selection
      });
    },

    /**
     * {@inheritdoc}
     */
    getSelectSearchParameters: function getSelectSearchParameters() {
      return _.extend({}, AddAttributeSelect.prototype.getSelectSearchParameters.apply(this, arguments), {
        rights: 0
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 7275:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/delete.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family delete extension
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/family */ 37490)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, FamilyRemover) {
  return DeleteForm.extend({
    remover: FamilyRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 94792:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/family-variant.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/common/grid */ 30820), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/common/form-modal-creator */ 2081), __webpack_require__(/*! pim/template/family/tab/family-variant */ 4972), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, mediator, Grid, __, UserContext, formModalCreator, template, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'tabbable variant',
    variantGrid: null,

    /**
     * @param {Object} meta
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, meta.config);
      this.config.modelDependent = false;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      this.trigger('tab:register', {
        code: this.config.tabCode ? this.config.tabCode : this.code,
        label: __(this.config.title)
      });
      this.listenTo(this.getRoot(), 'pim_enrich.entity.family.family_variant.post_create', function (familyVariant) {
        mediator.trigger("datagrid:doRefresh:".concat(_this.config.gridName));
        formModalCreator.createModal(familyVariant.code, 'family-variant');
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.variantGrid) {
        this.variantGrid = new Grid(this.config.gridName, {
          family_id: this.getFormData().meta.id,
          localeCode: UserContext.get('catalogLocale')
        });
      }

      analytics.track('family:edit:variant-selected', {
        code: this.code
      });
      this.$el.html(this.template());
      this.renderExtensions();
      this.getZone('grid').appendChild(this.variantGrid.render().el);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 33212:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/properties/general.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Extension used for family properties tab general tab section
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/template/form/tab/section */ 27238), __webpack_require__(/*! oro/loading-mask */ 13284)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, FetcherRegistry, propertyAccessor, template, LoadingMask) {
  return BaseForm.extend({
    className: 'tabsection',
    template: _.template(template),
    errors: [],

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        __: __,
        sectionTitle: this.config.label,
        dropZone: this.config.dropZone
      }));
      this.renderExtensions();
    },

    /**
     * Get the validation errors for the given field
     *
     * @param {string} field
     *
     * @return {mixed}
     */
    getValidationErrorsForField: function getValidationErrorsForField(field) {
      return propertyAccessor.accessProperty(this.errors, field, []);
    },

    /**
     * Sets errors
     *
     * @param {Object} errors
     */
    setValidationErrors: function setValidationErrors(errors) {
      this.errors = errors.response;
    },

    /**
     * Resets validation errors
     */
    resetValidationErrors: function resetValidationErrors() {
      this.errors = {};
      this.render();
    },

    /**
     * Shows the loading mask
     */
    showLoadingMask: function showLoadingMask() {
      this.loadingMask = new LoadingMask();
      this.loadingMask.render().$el.appendTo(this.getRoot().$el).show();
    },

    /**
     * Hides the loading mask
     */
    hideLoadingMask: function hideLoadingMask() {
      this.loadingMask.hide().$el.remove();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 48550:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/properties/general/attribute-as-image.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attributes used as label field view
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/template/family/tab/general/attribute-as-image */ 4469), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, FetcherRegistry, i18n, UserContext, SecurityContext, template) {
  return BaseForm.extend({
    className: 'AknFieldContainer',
    template: _.template(template),
    errors: [],
    catalogLocale: UserContext.get('catalogLocale'),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.getAvailableAttributes().then(function (attributes) {
        this.$el.html(this.template({
          i18n: i18n,
          catalogLocale: this.catalogLocale,
          attributes: attributes,
          currentAttribute: this.getFormData().attribute_as_image,
          fieldBaseId: this.config.fieldBaseId,
          errors: this.errors,
          label: __(this.config.label),
          emptyLabel: __(this.config.emptyLabel),
          isReadOnly: !SecurityContext.isGranted('pim_enrich_family_edit_properties')
        }));
        this.$('.select2').select2().on('change', this.updateState.bind(this));
        this.renderExtensions();
      }.bind(this));
    },

    /**
     * Update object state on property change
     *
     * @param event
     */
    updateState: function updateState(event) {
      var data = this.getFormData();
      var value = event.currentTarget.value;
      data.attribute_as_image = 'no_attribute_as_image' === value ? null : event.currentTarget.value;
      this.setData(data);
    },

    /**
     * Returns the list of available attributes for this extension:
     * - Should belong to the family
     * - Should be a valid attribute type
     * - Should not be neither localizable nor scopable
     *
     * @returns {Promise}
     */
    getAvailableAttributes: function getAvailableAttributes() {
      var _this = this;

      var imageAttributes = this.getFormData().attributes.filter(function (attribute) {
        return _this.config.validAttributeTypes.includes(attribute.type);
      });

      var imageAttributeCodes = _.pluck(imageAttributes, 'code');

      return FetcherRegistry.getFetcher('attribute').fetchByIdentifiers(imageAttributeCodes).then(function (attributes) {
        return _.where(attributes, {
          scopable: false,
          localizable: false
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 38894:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/properties/general/attribute-as-label.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attributes used as label field view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/template/family/tab/general/attribute-as-label */ 7176), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, FetcherRegistry, i18n, UserContext, SecurityContext, template) {
  return BaseForm.extend({
    className: 'AknFieldContainer',
    template: _.template(template),
    errors: [],
    catalogLocale: UserContext.get('catalogLocale'),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template({
        i18n: i18n,
        catalogLocale: this.catalogLocale,
        attributes: _.filter(this.getFormData().attributes, function (attribute) {
          return attribute.type === 'pim_catalog_text' || attribute.type === 'pim_catalog_identifier';
        }),
        currentAttribute: this.getFormData().attribute_as_label,
        fieldBaseId: this.config.fieldBaseId,
        errors: this.errors,
        label: __(this.config.label),
        requiredLabel: __('pim_common.required_label'),
        isReadOnly: !SecurityContext.isGranted('pim_enrich_family_edit_properties')
      }));
      this.$('.select2').select2().on('change', this.updateState.bind(this));
      this.renderExtensions();
    },

    /**
     * Update object state on property change
     *
     * @param event
     */
    updateState: function updateState(event) {
      var data = this.getFormData();
      data.attribute_as_label = event.currentTarget.value;
      this.setData(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 56014:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/properties/general/code.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Code field view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/properties/input */ 34696)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template) {
  return BaseForm.extend({
    className: 'input',
    template: _.template(template),
    errors: [],

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template({
        fieldName: this.config.fieldBaseId + 'code',
        className: 'family-code',
        value: this.getFormData().code,
        errors: [],
        label: __(this.config.label),
        requiredLabel: __('pim_common.required_label'),
        isRequired: true,
        isReadOnly: true
      }));
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 72123:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/properties/general/translation.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family label translation fields view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/common/properties/translation */ 11390), __webpack_require__(/*! pim/security-context */ 34770)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseTranslation, SecurityContext) {
  return BaseTranslation.extend({
    /**
     * {@inheritdoc}
     */
    isReadOnly: function isReadOnly() {
      return !SecurityContext.isGranted('pim_enrich_family_edit_properties');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 20808:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/save.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family save extension
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/save */ 21153), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/saver/family */ 63108), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/security-context */ 34770)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseSave, messenger, FamilySaver, FieldManager, i18n, UserContext) {
  return BaseSave.extend({
    updateSuccessMessage: __('pim_enrich.entity.family.flash.update.success'),
    updateFailureMessage: __('pim_enrich.entity.family.flash.update.fail'),

    /**
     * {@inheritdoc}
     */
    save: function save() {
      var family = $.extend(true, {}, this.getFormData());
      family.attributes = _.pluck(family.attributes, 'code');
      delete family.meta;
      var notReadyFields = FieldManager.getNotReadyFields();

      if (0 < notReadyFields.length) {
        var fieldLabels = _.map(notReadyFields, function (field) {
          return i18n.getLabel(field.attribute.label, UserContext.get('catalogLocale'), field.attribute.code);
        });

        messenger.notify('error', __('pim_enrich.entity.family.flash.update.fields_not_ready', {
          fields: fieldLabels.join(', ')
        }));
        return;
      }

      this.showLoadingMask();
      this.getRoot().trigger('pim_enrich:form:entity:pre_save');
      return FamilySaver.save(family.code, family, 'PUT').then(function (data) {
        this.postSave();
        this.setData(data);
        this.getRoot().trigger('pim_enrich:form:entity:post_fetch', data);
      }.bind(this)).fail(this.fail.bind(this)).always(this.hideLoadingMask.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 78254:
/*!*********************************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/variants/add-family-variant-fields-container.js ***!
  \*********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Fields container of the create family variant form.
 * This module contains all the fields and the logic to update the family variant model.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/family-variant/add-variant-form-fields-container */ 41766)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, UserContext, FetcherRegistry, initSelect2, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),
    queryTimer: null,
    validationErrors: [],
    events: {
      'change select, input[name="code"], input[name="label"]': function changeSelectInputNameCodeInputNameLabel() {
        this.updateModel();
        this.render();
      }
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_save', this.resetValidationErrors.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', this.setValidationErrors.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', this.render.bind(this));
      this.setData(this.getNewFamilyVariant());
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var catalogLocale = UserContext.get('catalogLocale');

      var familyVariant = _.defaults(this.getFormData(), this.getNewFamilyVariant());

      var label = this.getEntityLabel(familyVariant, catalogLocale);
      var axes1 = familyVariant.variant_attribute_sets[0].axes.join(',');
      var axes2 = familyVariant.variant_attribute_sets[1] ? familyVariant.variant_attribute_sets[1].axes.join(',') : '';
      var globalErrors = this.validationErrors.filter(function (error) {
        return true === error.global || undefined === error.path || 'variant_attribute_sets' === error.path;
      });

      var fieldErrors = _.groupBy(this.validationErrors, 'path');

      this.$el.html(this.template({
        __: __,
        familyVariant: familyVariant,
        catalogLocale: catalogLocale,
        axes1: axes1,
        axes2: axes2,
        label: label,
        globalErrors: globalErrors,
        fieldErrors: fieldErrors
      }));
      this.initializeSelectWidgets();
    },

    /**
     * Initialize the select2 widgets for axis fields. These select2 fetch attributes available as axis
     * for the family variant.
     */
    initializeSelectWidgets: function initializeSelectWidgets() {
      var _this = this;

      var $selects = this.$('input[type="hidden"]');

      _.each($selects, function (select) {
        var $select = $(select);
        var options = {
          dropdownCssClass: '',
          closeOnSelect: false,
          multiple: true,
          query: _this.queryAvailableAxes.bind(_this),
          initSelection: _this.initSelection.bind(_this)
        };
        var dropdown = initSelect2.init($select, options);
        dropdown.on('change', function () {
          _this.updateModel();
        });
      });
    },

    /**
     * This methods fetches available axis attributes for the family this family variant is based on.
     *
     * The options parameter is the one needed by select2, it contains the 'term' for the search, and the
     * 'callback' method for the results.
     *
     * @param {Object} options
     */
    queryAvailableAxes: function queryAvailableAxes(options) {
      var _this2 = this;

      var familyCode = this.getFormData().family;
      clearTimeout(this.queryTimer);
      this.queryTimer = setTimeout(function () {
        FetcherRegistry.getFetcher('family').fetchAvailableAxes(familyCode).then(function (attributes) {
          var catalogLocale = UserContext.get('catalogLocale');

          var attributeResults = _this2.searchOnResults(options.term, attributes);

          var entities = _.map(attributeResults, function (attribute) {
            var label = _this2.getEntityLabel(attribute, catalogLocale);

            return {
              id: attribute.code,
              text: label
            };
          });

          var sortedEntities = _.sortBy(entities, 'text');

          options.callback({
            results: sortedEntities
          });
        });
      }, 400);
    },

    /**
     * Return all attributes that have a label that match the given term.
     *
     * @param {string} term
     * @param {array} attributes
     *
     * @returns {array}
     */
    searchOnResults: function searchOnResults(term, attributes) {
      var _this3 = this;

      var catalogLocale = UserContext.get('catalogLocale');
      term = term.toLowerCase();
      return attributes.filter(function (entity) {
        var label = _this3.getEntityLabel(entity, catalogLocale).toLowerCase();

        return -1 !== label.search(term);
      });
    },

    /**
     * Initialize selection of select2 widgets. We need to fetch labels of selected attributes, because we
     * only have their code.
     *
     * @param {Object} element
     * @param {Function} callback
     */
    initSelection: function initSelection(element, callback) {
      var attributeCodes = element.val().split(',');
      var catalogLocale = UserContext.get('catalogLocale');

      var fetchAttributesPromises = _.map(attributeCodes, function (attributeCode) {
        return FetcherRegistry.getFetcher('attribute').fetch(attributeCode).promise();
      });

      $.when.apply($, fetchAttributesPromises).then(function () {
        var _this4 = this;

        var data = _.map(arguments, function (attribute) {
          var label = _this4.getEntityLabel(attribute, catalogLocale);

          return {
            id: attribute.code,
            text: label
          };
        });

        callback(data);
      }.bind(this));
    },

    /**
     * Update the family variant model
     */
    updateModel: function updateModel() {
      var catalogLocale = UserContext.get('catalogLocale');

      var axisLevelOne = _.compact(this.$('input[name="axes1"]').val().split(','));

      var numberOfLevels = parseInt(this.$('select[name="numberOfLevels"]').val());
      var attributeSets = [];
      attributeSets.push({
        level: 1,
        axes: axisLevelOne,
        attributes: []
      });

      if (numberOfLevels > 1) {
        var axisLevelTwo = _.compact(this.$('input[name="axes2"]').val().split(','));

        attributeSets.push({
          level: 2,
          axes: axisLevelTwo,
          attributes: []
        });
      }

      var labels = {};
      labels[catalogLocale] = this.$('input[name="label"]').val();
      this.setData({
        code: this.$('input[name="code"]').val(),
        labels: labels,
        variant_attribute_sets: attributeSets
      });
    },

    /**
     * Get a new empty family variant object.
     *
     * @returns {Object}
     */
    getNewFamilyVariant: function getNewFamilyVariant() {
      var catalogLocale = UserContext.get('catalogLocale');
      return {
        code: '',
        labels: _defineProperty({}, catalogLocale, ''),
        variant_attribute_sets: [{
          level: 1,
          axes: [],
          attributes: []
        }]
      };
    },

    /**
     * Reset the validation errors of the form.
     */
    resetValidationErrors: function resetValidationErrors() {
      this.validationErrors = [];
    },

    /**
     * Set the validation errors of the form.
     */
    setValidationErrors: function setValidationErrors(errors) {
      this.validationErrors = errors;
    },

    /**
     * Return the label/code of a serialized entity.
     *
     * @param {string} entity
     * @param {string} locale
     * @returns {string}
     */
    getEntityLabel: function getEntityLabel(entity, locale) {
      if (0 === entity.labels.length || entity.labels[locale] === undefined) {
        return '[' + entity.code + ']';
      }

      return entity.labels[locale];
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 12741:
/*!*********************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/variants/add-family-variant-form.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Creation form of a family variant.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/family-variant/add-variant-form */ 94453)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Routing, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),
    render: function render() {
      // This can probably be refactored using 'pim/template/common/modal-with-illustration'
      this.$el.html(this.template({
        okLabel: __('pim_common.create')
      }));
      this.renderExtensions();
    },

    /**
     * Save the family variant in the backend.
     */
    saveFamilyVariant: function saveFamilyVariant() {
      var _this = this;

      this.trigger('pim_enrich:form:entity:pre_save');
      return $.post(Routing.generate('pim_enrich_family_variant_rest_create'), JSON.stringify(this.getFormData())).fail(function (xhr) {
        _this.trigger('pim_enrich:form:entity:validation_error', xhr.responseJSON);
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 35487:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/variants/add-family-variant-header.js ***!
  \***********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Creation form of a family variant.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/family-variant/add-variant-form-header */ 1406)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, i18n, UserContext, FetcherRegistry, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      var catalogLocal = UserContext.get('catalogLocale');
      FetcherRegistry.getFetcher('family').fetch(this.getFormData().family).then(function (family) {
        _this.$el.html(_this.template({
          __: __,
          familyName: i18n.getLabel(family.labels, catalogLocal, family.code)
        }));
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 72927:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/form/variants/add-family-variant.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Button that handles the opening of the "create new family variant" modal.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/form-modal */ 77154)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, messenger, BaseForm, FormModal) {
  return BaseForm.extend({
    className: 'AknButton AknButton--action AknButton--small add-variant',
    modal: null,
    events: {
      click: 'openModal'
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(__('pim_enrich.entity.family_variant.module.create.label'));
      this.delegateEvents();
      return BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * Open the modal containing the form to create a new family variant.
     */
    openModal: function openModal() {
      var modalParameters = {
        className: 'modal modal--fullPage add-family-variant-modal',
        content: '',
        cancelText: __('pim_common.cancel'),
        okText: __('pim_common.create'),
        okCloses: false
      };
      var formModal = new FormModal('pim-family-variant-create-form', this.submitForm.bind(this), modalParameters, {
        family: this.getFormData().code
      });
      formModal.open();
    },

    /**
     * Action made when user submit the modal.
     */
    submitForm: function submitForm(formModal) {
      var _this = this;

      return formModal.saveFamilyVariant().then(function (familyVariant) {
        messenger.notify('success', _.__('pim_enrich.entity.family_variant.flash.create.success'));

        _this.getRoot().trigger('pim_enrich.entity.family.family_variant.post_create', familyVariant);
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 634:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/family/mass-edit/attributes.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family mass edit attributes requirements table view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/family-edit-form/attributes/attributes */ 72461), __webpack_require__(/*! oro/mediator */ 27615)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseAttributesView, mediator) {
  return BaseAttributesView.extend({
    lock: false,

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      mediator.on('mass-edit:form:lock', this.onLock.bind(this));
      mediator.on('mass-edit:form:unlock', this.onUnlock.bind(this));
      return BaseAttributesView.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    toggleAttribute: function toggleAttribute() {
      if (this.lock) {
        return false;
      }

      BaseAttributesView.prototype.toggleAttribute.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    onRemoveAttribute: function onRemoveAttribute() {
      if (this.lock) {
        return false;
      }

      BaseAttributesView.prototype.onRemoveAttribute.apply(this, arguments);
    },

    /**
     * Lock event callback
     */
    onLock: function onLock() {
      this.lock = true;
    },

    /**
     * Unlock event callback
     */
    onUnlock: function onUnlock() {
      this.lock = false;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 31057:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/mass-edit/form-model-updater.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Mass edit attribute requirements
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, BaseForm) {
  return BaseForm.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:update_state', this.triggerModelUpdate);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.triggerModelUpdate);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Update the root model after fake product save
     */
    triggerModelUpdate: function triggerModelUpdate() {
      var data = this.getFormData();
      data.attributes = _.pluck(data.attributes, 'code');
      delete data.meta;
      this.getRoot().trigger('pim_enrich:mass_edit:model_updated', data);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 45691:
/*!*****************************************************************************************!*\
  !*** ./public/bundles/pimui/js/family/mass-edit/toolbar/add-select/attribute/select.js ***!
  \*****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family mass edit form add attribute select extension view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/family-edit-form/attributes/toolbar/add-select/attribute */ 45210)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, FetcherRegistry, FamilyAddAttributeSelect) {
  return FamilyAddAttributeSelect.extend({
    fetchAttributeGroups: function fetchAttributeGroups(attributes) {
      var _this = this;

      var groupCodes = _.unique(_.pluck(attributes, 'group'));

      return FetcherRegistry.getFetcher('attribute-group').fetchByIdentifiers(groupCodes).then(function (attributeGroups) {
        return _this.populateGroupProperties(attributes, attributeGroups);
      });
    },

    /**
     * {@inheritdoc}
     */
    fetchItems: function fetchItems(searchParameters) {
      var _this2 = this;

      return this.getItemsToExclude().then(function (identifiersToExclude) {
        searchParameters.options.excluded_identifiers = identifiersToExclude;
        return FetcherRegistry.getFetcher(_this2.mainFetcher).search(searchParameters).then(function (attributes) {
          return _this2.fetchAttributeGroups(attributes);
        });
      });
    },

    /**
     * {@inheritdoc}
     */
    getItemsToExclude: function getItemsToExclude() {
      return FetcherRegistry.getFetcher(this.mainFetcher).getIdentifierAttribute().then(function (identifier) {
        var existingAttributes = _.pluck(this.getFormData().attributes, 'code');

        if (!_.contains(existingAttributes, identifier.code)) {
          existingAttributes.push(identifier.code);
        }

        return existingAttributes;
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 2366:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/attribute-fetcher.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/base-fetcher */ 77289), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseFetcher, Routing) {
  return BaseFetcher.extend({
    identifierPromise: null,
    fetchByTypesPromises: [],

    /**
     * Return the identifier attribute
     *
     * @return {Promise}
     */
    getIdentifierAttribute: function getIdentifierAttribute() {
      if (null === this.identifierPromise) {
        this.identifierPromise = $.Deferred();
        return this.fetchByTypes([this.options.identifier_type]).then(function (attributes) {
          if (attributes.length > 0) {
            this.identifierPromise.resolve(attributes[0]).promise();
            return this.identifierPromise;
          }

          return this.identifierPromise.reject().promise();
        }.bind(this));
      }

      return this.identifierPromise;
    },

    /**
     * Fetch attributes by types
     *
     * @param {Array} attributeTypes
     *
     * @return {Promise}
     */
    fetchByTypes: function fetchByTypes(attributeTypes) {
      var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var cacheKey = attributeTypes.sort().join('');

      if (!_.has(this.fetchByTypesPromises, cacheKey) || !useCache) {
        this.fetchByTypesPromises[cacheKey] = this.getJSON(this.options.urls.list, {
          types: attributeTypes.join(','),
          options: options
        }).then(_.identity).promise();
      }

      return this.fetchByTypesPromises[cacheKey];
    },
    search: function search(searchOptions) {
      var url = Routing.generate(this.options.urls.list);
      return $.ajax({
        data: JSON.stringify(searchOptions),
        contentType: 'application/json',
        type: 'POST',
        url: url
      }).then(_.identity).promise();
    },

    /**
     * This method overrides the base method, to send a POST query instead of a GET query, because the request
     * URI can be too long.
     * TODO Should be deleted to set it back to GET.
     *
     * {@inheritdoc}
     */
    getJSON: function getJSON(url, parameters) {
      return $.post(Routing.generate(url), parameters, null, 'json');
    },

    /**
     * {@inheritdoc}
     */
    clear: function clear() {
      BaseFetcher.prototype.clear.apply(this, arguments);
      this.fetchByTypesPromises = [];
      this.identifierPromise = null;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 6574:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/attribute-group-fetcher.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute group fetcher
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/base-fetcher */ 77289), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseFetcher, Routing) {
  return BaseFetcher.extend({
    /**
     * Overrides base method, to send query using POST instead GET,
     * because the request URI can be too long.
     * TODO Should be deleted to set it back to GET.
     * SEE attribute fetcher
     *
     * {@inheritdoc}
     */
    getJSON: function getJSON(url, parameters) {
      return $.post(Routing.generate(url), parameters, null, 'json');
    },

    /**
     * Overrides bas method to remove the limit and fetch all the attribute groups.
     *
     * {@inheritdoc}
     */
    fetchAll: function fetchAll(options) {
      options = options || {};

      if (null === this.entityListPromise || false === options.cached) {
        if (!_.has(this.options.urls, 'list')) {
          return $.Deferred().reject().promise();
        }

        this.entityListPromise = $.getJSON(Routing.generate(this.options.urls.list)).then(_.identity).promise();
      }

      return this.entityListPromise;
    },

    /**
     * Fetch all entities for the given identifiers
     *
     * @param {Array} identifiers
     *
     * @return {Promise}
     */
    fetchByIdentifiers: function fetchByIdentifiers(identifiers, options) {
      options = options || {};

      if (0 === identifiers.length) {
        return $.Deferred().resolve([]).promise();
      }

      var uncachedIdentifiers = _.difference(identifiers, _.keys(this.entityPromises));

      if (0 === uncachedIdentifiers.length) {
        return this.getObjects(_.pick(this.entityPromises, identifiers));
      }

      options.options = options.options || {};
      options.options.limit = uncachedIdentifiers.length;
      return $.when(this.getJSON(this.options.urls.list, _.extend({
        identifiers: uncachedIdentifiers.join(',')
      }, options)).then(_.identity), this.getIdentifierField()).then(function (entities, identifierCode) {
        _.each(entities, function (entity) {
          this.entityPromises[entity[identifierCode]] = $.Deferred().resolve(entity).promise();
        }.bind(this));

        return this.getObjects(_.pick(this.entityPromises, identifiers));
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 77289:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/base-fetcher.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global console */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, Routing) {
  return Backbone.Model.extend({
    entityListPromise: null,
    entityPromises: {},

    /**
     * @param {Object} options
     */
    initialize: function initialize(options) {
      this.entityListPromise = null;
      this.entityPromises = {};
      this.options = options || {};
    },

    /**
     * Fetch all elements of the collection
     *
     * @return {Promise}
     */
    fetchAll: function fetchAll(searchOptions) {
      if (!this.entityListPromise) {
        if (!_.has(this.options.urls, 'list')) {
          return $.Deferred().reject().promise();
        }

        this.entityListPromise = $.getJSON(Routing.generate(this.options.urls.list, searchOptions)).then(_.identity).promise();
      }

      return this.entityListPromise;
    },

    /**
     * Search elements of the collection
     *
     * @return {Promise}
     */
    search: function search(searchOptions) {
      var url = '';

      if (!_.has(this.options.urls, 'search')) {
        if (!_.has(this.options.urls, 'list')) {
          return $.Deferred().reject().promise();
        } else {
          url = this.options.urls.list;
        }
      } else {
        url = this.options.urls.search;
      }

      return this.getJSON(url, searchOptions).then(_.identity).promise();
    },

    /**
     * Fetch an element based on its identifier
     *
     * @param {string} identifier
     * @param {Object} options
     *
     * @return {Promise}
     */
    fetch: function fetch(identifier, options) {
      options = options || {};

      if (!(identifier in this.entityPromises) || false === options.cached) {
        var deferred = $.Deferred();

        if (this.options.urls.get && !options.force_list_method) {
          $.getJSON(Routing.generate(this.options.urls.get, _.extend({
            identifier: identifier
          }, options))).then(_.identity).done(function (entity) {
            deferred.resolve(entity);
          }).fail(function (promise, status, error) {
            console.error('Error during fetching: ', error);
            return deferred.reject(promise);
          });
        } else {
          this.fetchAll().done(function (entities) {
            var entity = _.findWhere(entities, {
              code: identifier
            });

            if (entity) {
              deferred.resolve(entity);
            } else {
              deferred.reject();
            }
          });
        }

        this.entityPromises[identifier] = deferred.promise();
      }

      return this.entityPromises[identifier];
    },

    /**
     * Fetch all entities for the given identifiers
     *
     * @param {Array} identifiers
     *
     * @return {Promise}
     */
    fetchByIdentifiers: function fetchByIdentifiers(identifiers, options) {
      options = options || {};

      if (0 === identifiers.length) {
        return $.Deferred().resolve([]).promise();
      }

      var uncachedIdentifiers = _.difference(identifiers, _.keys(this.entityPromises));

      if (0 === uncachedIdentifiers.length) {
        return this.getObjects(_.pick(this.entityPromises, identifiers));
      }

      return $.when(this.getJSON(this.options.urls.list, _.extend({
        identifiers: uncachedIdentifiers.join(',')
      }, options)).then(_.identity), this.getIdentifierField()).then(function (entities, identifierCode) {
        _.each(entities, function (entity) {
          this.entityPromises[entity[identifierCode]] = $.Deferred().resolve(entity).promise();
        }.bind(this));

        return this.getObjects(_.pick(this.entityPromises, identifiers));
      }.bind(this));
    },

    /**
     * Get the list of elements in JSON format.
     *
     * @param {string} url
     * @param {Object} parameters
     *
     * @returns {Promise}
     */
    getJSON: function getJSON(url, parameters) {
      return $.getJSON(Routing.generate(url, parameters));
    },

    /**
     * Get the identifier attribute of the collection
     *
     * @return {Promise}
     */
    getIdentifierField: function getIdentifierField() {
      return $.Deferred().resolve('code');
    },

    /**
     * Clear cache of the fetcher
     *
     * @param {string|null} identifier
     */
    clear: function clear(identifier) {
      if (identifier) {
        delete this.entityPromises[identifier];
      } else {
        this.entityListPromise = null;
        this.entityPromises = {};
      }
    },

    /**
     * Wait for promises to resolve and return the promises results wrapped in a Promise
     *
     * @param {Array|Object} promises
     *
     * @return {Promise}
     */
    getObjects: function getObjects(promises) {
      return $.when.apply($, _.toArray(promises)).then(function () {
        return 0 !== arguments.length ? _.toArray(arguments) : [];
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 96858:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/channel-fetcher.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/base-fetcher */ 77289)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseFetcher) {
  return BaseFetcher.extend({
    /**
     * Fetch only the parent category tree
     * User right will not be apply.
     * @return {Promise}
     */
    fetchCategoryTree: function fetchCategoryTree() {
      return this.getJSON(this.options.urls.list_channel_category_tree).then(_.identity).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 5180:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/family-fetcher.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/base-fetcher */ 77289)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseFetcher) {
  return BaseFetcher.extend({
    /**
     * Fetch attributes available as axes for the given family
     *
     * @param {String} familyCode
     *
     * @return {Promise}
     */
    fetchAvailableAxes: function fetchAvailableAxes(familyCode) {
      return this.getJSON(this.options.urls.available_axes, {
        code: familyCode
      }).then(_.identity).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 60701:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/fetcher-registry.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"fetchers":{"user":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_user_user_rest_get"}}},"user-group":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_user_user_group_rest_index"}}},"user-role":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_user_user_role_rest_index"}}},"user-profiles":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_user_rest_find_all_profiles"}}},"reference-data-configuration":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_reference_data_configuration_rest_get"}}},"datagrid-view":{"module":"pim/datagrid-view-fetcher","options":{"urls":{"list":"pim_datagrid_view_rest_index","get":"pim_datagrid_view_rest_get","columns":"pim_datagrid_view_rest_default_columns","userDefaultView":"pim_datagrid_view_rest_default_user_view"}}},"default":"pim/base-fetcher","association-type":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_enrich_associationtype_rest_index","get":"pim_enrich_associationtype_rest_get"}}},"group-type":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_enrich_grouptype_rest_index","get":"pim_enrich_grouptype_rest_get"}}},"attribute-group":{"module":"pim/attribute-group-fetcher","options":{"urls":{"search":"pim_enrich_attributegroup_rest_search","list":"pim_enrich_attributegroup_rest_index","get":"pim_enrich_attributegroup_rest_get"}}},"attribute":{"module":"pim/attribute-fetcher","options":{"identifier_type":"pim_catalog_identifier","urls":{"list":"pim_enrich_attribute_rest_index","get":"pim_enrich_attribute_rest_get"}}},"attribute-type":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_enrich_attribute_type_index"}}},"family":{"module":"pim/family-fetcher","options":{"urls":{"list":"pim_enrich_family_rest_index","get":"pim_enrich_family_rest_get","available_axes":"pim_enrich_family_rest_get_available_axes"}}},"family-variant":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_enrich_family_variant_rest_get"}}},"channel":{"module":"pim/channel-fetcher","options":{"urls":{"list":"pim_enrich_channel_rest_index","get":"pim_enrich_channel_rest_get","list_channel_category_tree":"pim_enrich_channel_category_trees_get"}}},"locale":{"module":"pim/locale-fetcher","options":{"urls":{"list":"pim_enrich_locale_rest_index"}}},"measure":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_enrich_measures_rest_index"}}},"currency":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_enrich_currency_rest_index"}}},"group":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_enrich_group_rest_get"}}},"sequential-edit":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_enrich_mass_edit_action_sequential_edit_get"}}},"product-model-history":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_enrich_product_model_history_rest_get"}}},"product-history":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_enrich_product_history_rest_get"}}},"product":{"module":"pim/product-fetcher","options":{"urls":{"get":"pim_enrich_product_rest_get","list":"pim_enrich_product_rest_index"}}},"product-model":{"module":"pim/product-model-fetcher","options":{"urls":{"get":"pim_enrich_product_model_rest_get","children":"pim_enrich_product_model_rest_children_list","list":"pim_enrich_product_model_rest_index"}}},"product-model-by-code":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_enrich_product_model_rest_get_by_code"}}},"category":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_enrich_category_rest_list","get":"pim_enrich_category_rest_get"}}},"job-instance-export":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_enrich_job_instance_rest_export_get"}}},"job-instance-import":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_enrich_job_instance_rest_import_get"}}},"formats":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_localization_format_index"}}},"job-execution":{"module":"pim/base-fetcher","options":{"urls":{"get":"pim_enrich_job_execution_rest_get"}}},"ui-locale":{"module":"pim/base-fetcher","options":{"urls":{"list":"pim_localization_locale_index"}}}}} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/base-fetcher */ 77289), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseFetcher, requireContext) {
  return {
    fetchers: {},
    initializePromise: null,

    /**
     * @return Promise
     */
    initialize: function initialize() {
      if (null === this.initializePromise) {
        var fetcherList = __moduleConfig.fetchers;
        var deferred = $.Deferred();
        var defaultFetcher = 'pim/base-fetcher';
        var fetchers = {};

        _.each(fetcherList, function (config, name) {
          config = _.isString(config) ? {
            module: config
          } : config;
          config.options = config.options || {};
          fetchers[name] = config;
        });

        for (var fetcher in fetcherList) {
          var moduleName = fetcherList[fetcher].module || defaultFetcher;
          var ResolvedModule = requireContext(moduleName);
          fetchers[fetcher].loadedModule = new ResolvedModule(fetchers[fetcher].options);
          fetchers[fetcher].options = fetcherList[fetcher].options;
        }

        this.fetchers = fetchers;
        deferred.resolve();
        this.initializePromise = deferred.promise();
      }

      return this.initializePromise;
    },

    /**
     * Get the related fetcher for the given collection name
     *
     * @param {String} entityType
     *
     * @return Fetcher
     */
    getFetcher: function getFetcher(entityType) {
      var fetcher = this.fetchers[entityType] || this.fetchers["default"];
      return fetcher.loadedModule;
    },

    /**
     * Clear the fetcher cache for the given collection name
     *
     * @param {String}         entityType
     * @param {String|integer} entity
     */
    clear: function clear(entityType, entity) {
      return this.getFetcher(entityType).clear(entity);
    },

    /**
     * Clear all fetchers cache
     */
    clearAll: function clearAll() {
      _.each(this.fetchers, function (fetcher) {
        fetcher.loadedModule.clear();
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 45202:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/locale-fetcher.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/base-fetcher */ 77289), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseFetcher, Routing) {
  return BaseFetcher.extend({
    activatedLocalesListPromise: null,
    nonFilteredActivatedLocalesListPromise: null,

    /**
     * @param {Object} options
     */
    initialize: function initialize(options) {
      this.options = options || {};
    },

    /**
     * Fetch all activated locales.
     *
     * @return {Promise}
     */
    fetchActivated: function fetchActivated(searchOptions) {
      searchOptions = _.extend({}, searchOptions);
      var nonFiltered = _.has(searchOptions, 'filter_locales') && false === searchOptions.filter_locales;
      var promise = this.activatedLocalesListPromise;

      if (true === nonFiltered) {
        promise = this.nonFilteredActivatedLocalesListPromise;
      }

      if (!promise) {
        if (!_.has(this.options.urls, 'list')) {
          return $.Deferred().reject().promise();
        }

        promise = $.getJSON(Routing.generate(this.options.urls.list), Object.assign({}, {
          activated: true
        }, searchOptions)).then(_.identity).promise();

        if (true === nonFiltered) {
          this.nonFilteredActivatedLocalesListPromise = promise;
        } else {
          this.activatedLocalesListPromise = promise;
        }
      }

      return promise;
    },

    /**
     * {inheritdoc}
     */
    clear: function clear() {
      this.activatedLocalesListPromise = null;
      this.nonFilteredActivatedLocalesListPromise = null;
      BaseFetcher.prototype.clear.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 15693:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/product-fetcher.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

var _excluded = ["silent"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/base-fetcher */ 77289), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/cache-invalidator */ 69072)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, BaseFetcher, Routing, mediator, CacheInvalidator) {
  return BaseFetcher.extend({
    /**
     * Fetch a product or a product_model based on its id or uuid
     *
     * @param {string} idOrUuid
     *
     * @return {Promise}
     */
    fetch: function fetch(idOrUuid) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var _options$silent = options.silent,
          silent = _options$silent === void 0 ? false : _options$silent,
          routeParams = _objectWithoutProperties(options, _excluded);

      var params = (idOrUuid + '').match(/^\d+$/) ? {
        id: idOrUuid
      } : {
        uuid: idOrUuid
      };
      return $.getJSON(Routing.generate(this.options.urls.get, _objectSpread(_objectSpread({}, routeParams), params))).then(function (product) {
        var cacheInvalidator = new CacheInvalidator();
        cacheInvalidator.checkStructureVersion(product);

        if (!silent) {
          mediator.trigger('pim_enrich:form:product:post_fetch', product);
        }

        return product;
      }).promise();
    },
    fetchByUuids: function fetchByUuids(uuids, options) {
      options = options || {};

      if (0 === uuids.length) {
        return Promise.resolve([]);
      }

      return this.getJSON(this.options.urls.list, _.extend({
        uuids: uuids.join(',')
      }, options)).then(_.identity).promise();
    },

    /**
     * {@inheritdoc}
     */
    getIdentifierField: function getIdentifierField() {
      return $.Deferred().resolve('identifier');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62524:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/fetcher/product-model-fetcher.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Fetcher for product models
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/product-fetcher */ 15693), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, ProductFetcher, UserContext, mediator, Routing) {
  return ProductFetcher.extend({
    /**
     * @param {Object} options
     */
    initialize: function initialize(options) {
      this.options = options || {};
      ProductFetcher.prototype.initialize.apply(this, [options]);
    },

    /**
     * {@inheritdoc}
     */
    getIdentifierField: function getIdentifierField() {
      return $.Deferred().resolve('code');
    },

    /**
     * Fetch all children of the given parent.
     *
     * @return {Promise}
     */
    fetchChildren: function fetchChildren(parentId) {
      if (!_.has(this.options.urls, 'children')) {
        return $.Deferred().reject().promise();
      }

      return $.getJSON(Routing.generate(this.options.urls.children), {
        id: parentId,
        scope: UserContext.get('catalogScope'),
        locale: UserContext.get('catalogLocale')
      }).then(_.identity).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 59356:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/attribute.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Abstract attribute filter
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/filter */ 53570), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/product-edit-form/scope-switcher */ 28295), __webpack_require__(/*! pim/product-edit-form/locale-switcher */ 31636)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, i18n, UserContext, ScopeSwitcher, LocaleSwitcher) {
  return BaseFilter.extend({
    /**
     * {@inherit}
     */
    initialize: function initialize(config) {
      if (undefined !== config) {
        this.config = config.config;
      }

      return BaseFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * Sets the scope code on which this filter operates.
     *
     * @param {string} scope
     * @param {Object} options
     */
    setScope: function setScope(scope, options) {
      var context = this.getFormData().context || {};
      context.scope = scope;
      this.setData({
        context: context
      }, options);
    },

    /**
     * Gets the scope code on which this filter operates.
     *
     * @return {string}
     */
    getScope: function getScope() {
      if (undefined === this.getFormData().context) {
        return null;
      }

      return this.getFormData().context.scope;
    },

    /**
     * Sets the locale code on which this filter operates.
     *
     * @param {string} locale
     * @param {Object} options
     */
    setLocale: function setLocale(locale, options) {
      var context = this.getFormData().context || {};
      context.locale = locale;
      this.setData({
        context: context
      }, options);
    },

    /**
     * Gets the locale code on which this filter operates.
     *
     * @return {string}
     */
    getLocale: function getLocale() {
      if (undefined === this.getFormData().context) {
        return null;
      }

      return this.getFormData().context.locale;
    },

    /**
     * {@inheritdoc}
     */
    renderElements: function renderElements() {
      FetcherRegistry.getFetcher('attribute').fetch(this.getCode()).then(function (attribute) {
        if (this.isEditable()) {
          this.addContextDropdowns(attribute);
        } else {
          this.addContextLabels(attribute);
        }
      }.bind(this)).then(function () {
        BaseFilter.prototype.renderElements.apply(this, arguments);
      }.bind(this));
    },

    /**
     * Adds the context dropdown to the filter in edit mode according to attribute information.
     *
     * @param {Object} attribute
     */
    addContextDropdowns: function addContextDropdowns(attribute) {
      var container = $('<span class="AknFieldContainer-contextContainer AknButtonList filter-context">');

      if (attribute.scopable) {
        var scopeSwitcher = new ScopeSwitcher({
          config: {
            context: 'base_product'
          }
        });
        scopeSwitcher.setDisplayInline(false);
        scopeSwitcher.setDisplayLabel(false);
        this.listenTo(scopeSwitcher, 'pim_enrich:form:scope_switcher:pre_render', this.initScope.bind(this));
        this.listenTo(scopeSwitcher, 'pim_enrich:form:scope_switcher:change', function (scopeEvent) {
          if ('base_product' === scopeEvent.context) {
            this.setScope(scopeEvent.scopeCode, {
              silent: true
            });
            this.trigger('pim_enrich:form:entity:post_update');
          }
        }.bind(this));
        container.append(scopeSwitcher.render().$el);
      }

      if (attribute.localizable) {
        var localeSwitcher = new LocaleSwitcher({
          config: {
            context: 'base_product'
          }
        });
        localeSwitcher.setDisplayInline(false);
        localeSwitcher.setDisplayLabel(false);
        this.listenTo(localeSwitcher, 'pim_enrich:form:locale_switcher:pre_render', this.initLocale.bind(this));
        this.listenTo(localeSwitcher, 'pim_enrich:form:locale_switcher:change', function (localeEvent) {
          if ('base_product' === localeEvent.context) {
            this.setLocale(localeEvent.localeCode, {
              silent: true
            });
            this.trigger('pim_enrich:form:entity:post_update');
          }
        }.bind(this));
        container.append(localeSwitcher.render().$el);
      }

      this.addElement('after-label', 'filter-context', container);
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      return $.when(BaseFilter.prototype.getTemplateContext.apply(this, arguments), FetcherRegistry.getFetcher('attribute').fetch(this.getCode())).then(function (templateContext, attribute) {
        return _.extend({}, templateContext, {
          label: i18n.getLabel(attribute.labels, UserContext.get('uiLocale'), attribute.code),
          attribute: attribute
        });
      }.bind(this));
    },

    /**
     * Adds the context labels to the filter in view mode according to attribute information.
     *
     * @param {Object} attribute
     */
    addContextLabels: function addContextLabels(attribute) {
      var promises = [];

      if (attribute.scopable && this.getScope()) {
        promises.push(FetcherRegistry.getFetcher('channel').fetch(this.getScope()).then(function (channel) {
          return $('<span>').html(channel.label);
        }));
      }

      if (attribute.localizable && this.getLocale()) {
        promises.push($.Deferred().resolve($('<span>').html(i18n.getFlag(this.getLocale()))).promise());
      }

      $.when.apply($, promises).then(function () {
        var container = $('<span class="AknButtonList filter-context">');

        _.each(_.toArray(arguments), function (item) {
          container.append(item);
        });

        this.addElement('after-input', 'filter-context', container);
      }.bind(this));
    },

    /**
     * Initialize the scope
     *
     * @param {Object} scopeEvent
     * @param {string} scopeEvent.context
     * @param {string} scopeEvent.scopeCode
     */
    initScope: function initScope(scopeEvent) {
      if (this.getScope()) {
        scopeEvent.scopeCode = this.getScope();
      } else {
        this.setScope(scopeEvent.scopeCode, {
          silent: true
        });
        this.trigger('pim_enrich:form:entity:post_update');
      }
    },

    /**
     * Initialize the locale
     *
     * @param {Object} localeEvent
     * @param {string} localeEvent.context
     * @param {string} localeEvent.localeCode
     */
    initLocale: function initLocale(localeEvent) {
      if (this.getLocale()) {
        localeEvent.localeCode = this.getLocale();
      } else {
        this.setLocale(localeEvent.localeCode, {
          silent: true
        });
        this.trigger('pim_enrich:form:entity:post_update');
      }
    },

    /**
     * Returns the list of the operator choices with their translations.
     *
     * @returns {object}
     */
    getLabelledOperatorChoices: function getLabelledOperatorChoices(shortName) {
      var result = {};
      this.config.operators.forEach(function (operator) {
        var key = 'pim_enrich.export.product.filter.' + shortName + '.operators.' + operator;

        var translation = __(key);

        if (translation === key) {
          translation = __('pim_common.operators.' + operator);
        }

        result[operator] = translation;
      });
      return result;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 30883:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/boolean.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Boolean attribute filter.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/attribute/attribute */ 59356), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/filter/attribute/boolean */ 62674), __webpack_require__(/*! bootstrap.bootstrapswitch */ 86049)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, UserContext, i18n, template) {
  return BaseFilter.extend({
    shortname: 'boolean',
    template: _.template(template),
    events: {
      'change [name="filter-value"]': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: '=',
          value: true
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend({}, templateContext, {
        value: this.getValue(),
        field: this.getField(),
        labels: {
          on: __('pim_common.yes'),
          off: __('pim_common.no')
        }
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('.switch').bootstrapSwitch();
    },

    /**
     * {@inheritdoc}
     */
    updateState: function updateState() {
      this.setData({
        field: this.getField(),
        operator: '=',
        value: this.$('[name="filter-value"]').is(':checked')
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 78982:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/date.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/attribute/attribute */ 59356), __webpack_require__(/*! pim/template/filter/attribute/date */ 90595), __webpack_require__(/*! datepicker */ 83586), __webpack_require__(/*! pim/formatter/date */ 54555), __webpack_require__(/*! pim/date-context */ 24846), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, template, Datepicker, DateFormatter, DateContext) {
  return BaseFilter.extend({
    shortname: 'date',
    template: _.template(template),
    events: {
      'change [name^="filter-"]': 'updateState'
    },

    /**
     * Date widget options
     */
    datetimepickerOptions: {
      format: DateContext.get('date').format,
      defaultFormat: DateContext.get('date').defaultFormat,
      language: DateContext.get('language')
    },

    /**
     * Model date format
     */
    modelDateFormat: 'yyyy-MM-dd',

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: _.first(_.values(this.config.operators))
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inherit}
     */
    isEmpty: function isEmpty() {
      var value = this.getValue();

      if (_.contains(['BETWEEN', 'NOT BETWEEN'], this.getOperator()) && (undefined === value || !_.isArray(value) || _.isEmpty(value[0]) || _.isEmpty(value[1]))) {
        return true;
      }

      if (!_.contains(['EMPTY', 'NOT EMPTY'], this.getOperator()) && (undefined === value || '' === value)) {
        return true;
      }

      return false;
    },

    /**
     * Initializes select2 and datepicker after rendering.
     */
    postRender: function postRender() {
      var startDate = this.$('.start-date-wrapper:first');
      var endDate = this.$('.end-date-wrapper:first');
      this.$('[name="filter-operator"]').select2();

      if (0 !== startDate.length) {
        Datepicker.init(startDate, this.datetimepickerOptions).on('changeDate', this.updateState.bind(this));
      }

      if (0 !== endDate.length) {
        Datepicker.init(endDate, this.datetimepickerOptions).on('changeDate', this.updateState.bind(this));
      }
    },

    /**
     * {@inherit}
     */
    renderInput: function renderInput() {
      var dateFormat = DateContext.get('date').format;
      var value = this.getValue();
      var startValue = DateFormatter.format(value, this.modelDateFormat, dateFormat);
      var endValue = null;

      if (_.isArray(value)) {
        startValue = DateFormatter.format(value[0], this.modelDateFormat, dateFormat);
        endValue = DateFormatter.format(value[1], this.modelDateFormat, dateFormat);
      }

      return this.template({
        isEditable: this.isEditable(),
        __: __,
        shortName: this.shortname,
        field: this.getField(),
        operator: this.getOperator(),
        startValue: startValue,
        endValue: endValue,
        operators: this.getLabelledOperatorChoices(this.shortname)
      });
    },

    /**
     * {@inherit}
     */
    updateState: function updateState() {
      this.$('.start-date-wrapper').datetimepicker('hide');
      this.$('.end-date-wrapper').datetimepicker('hide');
      var value = null;
      var operator = this.$('[name="filter-operator"]').val();

      if (!_.contains(['EMPTY', 'NOT EMPTY'], operator)) {
        var dateFormat = DateContext.get('date').format;
        var startValue = this.$('[name="filter-value-start"]').val();
        var formattedStartVal = DateFormatter.format(startValue, dateFormat, this.modelDateFormat);
        var valueEndField = this.$('[name="filter-value-end"]');
        value = formattedStartVal;

        if (0 !== valueEndField.length) {
          var endValue = valueEndField.val();
          var formattedEndVal = DateFormatter.format(endValue, dateFormat, this.modelDateFormat);
          value = [formattedStartVal, formattedEndVal];
        }
      }

      this.setData({
        field: this.getField(),
        operator: operator,
        value: value
      });
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 44645:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/identifier.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/filter */ 53570), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/template/filter/product/identifier */ 57884)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, UserContext, template) {
  return BaseFilter.extend({
    shortname: 'identifier',
    template: _.template(template),
    events: {
      'change [name="filter-value"]': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return _.isEmpty(this.getValue());
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput() {
      return this.template({
        __: __,
        value: _.isArray(this.getValue()) ? this.getValue().join(', ') : '',
        field: this.getField(),
        isEditable: this.isEditable()
      });
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      return BaseFilter.prototype.getTemplateContext.apply(this, arguments).then(function (templateContext) {
        return _.extend({}, templateContext, {
          removable: false
        });
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    updateState: function updateState() {
      var value = this.$('[name="filter-value"]').val().split(/[\s,]+/);

      var cleanedValues = _.reject(value, function (val) {
        return '' === val;
      });

      this.setData({
        field: this.getField(),
        operator: 'IN',
        value: cleanedValues
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 17275:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/media.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/attribute/attribute */ 59356), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/filter/attribute/media */ 44002), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, UserContext, i18n, template) {
  return BaseFilter.extend({
    shortname: 'media',
    template: _.template(template),
    events: {
      'change [name="filter-value"], [name="filter-operator"]': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          value: '',
          operator: _.first(this.config.operators)
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return !_.contains(['EMPTY', 'NOT EMPTY'], this.getOperator()) && (undefined === this.getValue() || '' === this.getValue());
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend({}, templateContext, {
        __: __,
        value: this.getValue(),
        field: this.getField(),
        operator: this.getOperator(),
        operators: this.getLabelledOperatorChoices(this.shortname)
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('.operator').select2({
        minimumResultsForSearch: -1
      });
    },

    /**
     * {@inheritdoc}
     */
    updateState: function updateState() {
      var value = this.$('[name="filter-value"]').val();
      var operator = this.$('[name="filter-operator"]').val();
      this.setData({
        field: this.getField(),
        operator: operator,
        value: value
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 48724:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/metric.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/attribute/attribute */ 59356), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/filter/attribute/metric */ 78735), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, UserContext, i18n, template) {
  return BaseFilter.extend({
    shortname: 'metric',
    template: _.template(template),
    events: {
      'change [name="filter-data"], [name="filter-operator"], select.unit': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      return $.when(FetcherRegistry.getFetcher('attribute').fetch(this.getCode()), BaseFilter.prototype.configure.apply(this, arguments)).then(function (attribute) {
        this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
          _.defaults(data, {
            field: this.getCode(),
            operator: _.first(_.values(this.config.operators)),
            value: {
              amount: '',
              unit: attribute.default_metric_unit
            }
          });
        }.bind(this));
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return !_.contains(['EMPTY', 'NOT EMPTY'], this.getOperator()) && (undefined === this.getValue() || undefined === this.getValue().amount || '' === this.getValue().amount);
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend({}, templateContext, {
        __: __,
        value: this.getValue(),
        field: this.getField(),
        operator: this.getOperator(),
        operators: this.getLabelledOperatorChoices(this.shortname)
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('.operator, .unit').select2({
        minimumResultsForSearch: -1
      });
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      return $.when(BaseFilter.prototype.getTemplateContext.apply(this, arguments), FetcherRegistry.getFetcher('measure').fetchAll()).then(function (templateContext, measures) {
        var measurementFamily = measures.find(function (family) {
          return family.code === templateContext.attribute.metric_family;
        });
        return _.extend({}, templateContext, {
          units: measurementFamily.units,
          i18n: i18n,
          locale: UserContext.get('uiLocale')
        });
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    updateState: function updateState() {
      var value = {
        amount: this.$('[name="filter-data"]').val(),
        unit: this.$('select[name="filter-unit"]').val()
      };
      var operator = this.$('[name="filter-operator"]').val();
      this.setData({
        field: this.getField(),
        operator: operator,
        value: value
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 3323:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/number.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/attribute/attribute */ 59356), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/filter/attribute/number */ 97798), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, UserContext, i18n, template) {
  return BaseFilter.extend({
    shortname: 'number',
    template: _.template(template),
    events: {
      'change [name="filter-operator"], [name="filter-value"]': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: _.first(_.values(this.config.operators))
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inherit}
     */
    isEmpty: function isEmpty() {
      return !_.contains(['EMPTY', 'NOT EMPTY'], this.getOperator()) && (undefined === this.getValue() || '' === this.getValue());
    },

    /**
     * {@inherit}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend({}, templateContext, {
        __: __,
        shortName: this.shortname,
        value: this.getValue(),
        field: this.getField(),
        operator: this.getOperator(),
        operators: this.getLabelledOperatorChoices(this.shortname)
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('.operator').select2({
        minimumResultsForSearch: -1
      });
    },

    /**
     * {@inherit}
     */
    updateState: function updateState() {
      var operator = this.$('[name="filter-operator"]').val();
      var value = null;

      if (!_.contains(['EMPTY', 'NOT EMPTY'], operator)) {
        value = this.$('[name="filter-value"]').val().trim();
      }

      this.setData({
        field: this.getField(),
        operator: operator,
        value: value
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71469:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/price-collection.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/attribute/attribute */ 59356), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/filter/attribute/price-collection */ 7765), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, UserContext, i18n, template) {
  return BaseFilter.extend({
    shortname: 'price-collection',
    template: _.template(template),
    events: {
      'change [name="filter-data"], [name="filter-operator"], select.currency': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: _.first(_.values(this.config.operators)),
          value: {
            amount: '',
            currency: ''
          }
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return !_.contains(['EMPTY', 'NOT EMPTY'], this.getOperator()) && (undefined === this.getValue() || undefined === this.getValue().amount || '' === this.getValue().amount);
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend({}, templateContext, {
        __: __,
        value: this.getValue(),
        field: this.getField(),
        operator: this.getOperator(),
        operators: this.getLabelledOperatorChoices(this.shortname)
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('.operator, .currency').select2({
        minimumResultsForSearch: -1
      });
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      return $.when(BaseFilter.prototype.getTemplateContext.apply(this, arguments), FetcherRegistry.getFetcher('currency').fetchAll()).then(function (templateContext, currencies) {
        return _.extend({}, templateContext, {
          currencies: currencies
        });
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    updateState: function updateState() {
      var value = {
        amount: this.$('[name="filter-data"]').val(),
        currency: this.$('select[name="filter-currency"]').val()
      };
      var operator = this.$('[name="filter-operator"]').val();
      this.setData({
        field: this.getField(),
        operator: operator,
        value: value
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16698:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/select.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/filter/attribute/attribute */ 59356), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/filter/attribute/select */ 13870), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Routing, BaseFilter, FetcherRegistry, UserContext, i18n, template) {
  return BaseFilter.extend({
    shortname: 'select',
    template: _.template(template),
    choicePromise: null,
    events: {
      'change [name="filter-value"], [name="filter-operator"]': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.choicePromise = null;
      return BaseFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode() + '.code'
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return !_.contains(['EMPTY', 'NOT EMPTY'], this.getOperator()) && (undefined === this.getValue() || _.isEmpty(this.getValue()));
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput() {
      if (undefined === this.getOperator()) {
        this.setOperator(_.first(_.values(this.config.operators)));
      }

      return this.template({
        __: __,
        value: this.getValue(),
        field: this.getField(),
        operator: this.getOperator(),
        editable: this.isEditable(),
        operators: this.getLabelledOperatorChoices(this.shortname)
      });
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender(templateContext) {
      this.$('.operator').select2({
        minimumResultsForSearch: -1
      });

      if (!_.contains(['EMPTY', 'NOT EMPTY'], this.getOperator())) {
        this.$('.value').select2(templateContext.select2Options);
      }
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      return FetcherRegistry.getFetcher('attribute').fetch(this.getCode()).then(function (attribute) {
        return this.cleanInvalidValues(attribute, this.getValue()).then(function (cleanedValues) {
          if (!_.isEqual(this.getValue(), cleanedValues)) {
            this.setValue(cleanedValues, {
              silent: false
            });
          }

          return {
            label: i18n.getLabel(attribute.labels, UserContext.get('uiLocale'), attribute.code),
            select2Options: this.getSelect2Options(attribute),
            removable: this.isRemovable(),
            editable: this.isEditable()
          };
        }.bind(this));
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    updateState: function updateState() {
      var cleanedValues = [];
      var operator = this.$('[name="filter-operator"]').val();

      if (!_.contains(['EMPTY', 'NOT EMPTY'], operator)) {
        var value = this.$('[name="filter-value"]').val().split(/[\s,]+/);
        cleanedValues = _.reject(value, function (val) {
          return '' === val;
        });
      }

      this.setData({
        field: this.getField(),
        operator: operator,
        value: cleanedValues
      });
      this.render();
    },

    /**
     * Return the choice options or reference data to populate the select2.
     *
     * @returns {Object}
     */
    getSelect2Options: function getSelect2Options(attribute) {
      var choiceUrl = this.getChoiceUrl(attribute);
      return {
        ajax: {
          url: choiceUrl,
          cache: true,
          data: function data(term) {
            return {
              search: term,
              options: {
                locale: UserContext.get('uiLocale')
              }
            };
          },
          results: function results(data) {
            return data;
          }
        },
        initSelection: function (element, callback) {
          this.getChoices(attribute).then(function (response) {
            var results = response.results;

            var choices = _.map($(element).val().split(','), function (choice) {
              return _.findWhere(results, {
                id: choice
              });
            });

            callback(choices);
          }.bind(this));
        }.bind(this),
        multiple: true
      };
    },

    /**
     * Return the select choice promise which, once resolved, return all possible choices
     * for the given select attribute.
     *
     * @param {string} attribute
     *
     * @returns {Promise}
     */
    getChoices: function getChoices(attribute) {
      var choiceUrl = this.getChoiceUrl(attribute);

      if (null === this.choicePromise) {
        this.choicePromise = $.get(choiceUrl);
      }

      return this.choicePromise;
    },

    /**
     * Get the string Url to access all select choices related to the given attribute.
     *
     * @param {string} attribute
     *
     * @returns {string}
     */
    getChoiceUrl: function getChoiceUrl(attribute) {
      return Routing.generate(this.config.url, {
        "class": this.config.entityClass,
        dataLocale: UserContext.get('uiLocale'),
        collectionId: attribute.meta.id,
        options: {
          type: 'code'
        },
        referenceDataName: attribute.reference_data_name
      });
    },

    /**
     * Clean invalid values by removing possibly non-existent options coming from database.
     * This method returns a promise which, once resolved, should return the attribute.
     *
     * @param {string} attribute
     * @param {array} currentValues
     *
     * @returns {Promise}
     */
    cleanInvalidValues: function cleanInvalidValues(attribute, currentValues) {
      return this.getChoices(attribute).then(function (response) {
        var possibleValues = _.pluck(response.results, 'id');

        currentValues = undefined !== currentValues ? currentValues : [];
        return _.intersection(currentValues, possibleValues);
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 63251:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/attribute/string.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/attribute/attribute */ 59356), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/template/filter/attribute/string */ 79412), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, UserContext, i18n, template) {
  return BaseFilter.extend({
    shortname: 'string',
    template: _.template(template),
    events: {
      'change [name="filter-operator"], [name="filter-value"]': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          value: '',
          operator: _.first(this.config.operators)
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inherit}
     */
    isEmpty: function isEmpty() {
      return !_.contains(['EMPTY', 'NOT EMPTY'], this.getOperator()) && (undefined === this.getValue() || '' === this.getValue());
    },

    /**
     * {@inherit}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend({}, templateContext, {
        __: __,
        value: this.getValue(),
        field: this.getField(),
        operator: this.getOperator(),
        operators: this.getLabelledOperatorChoices(this.shortname)
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('.operator').select2({
        minimumResultsForSearch: -1
      });
    },

    /**
     * {@inherit}
     */
    updateState: function updateState() {
      var value = this.$('[name="filter-value"]').val();
      var operator = this.$('[name="filter-operator"]').val();
      this.setData({
        field: this.getField(),
        operator: operator,
        value: value
      });
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 53570:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/filter/filter.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/filter/filter */ 52105)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, mediator, BaseForm, filterTemplate) {
  return BaseForm.extend({
    className: 'AknFieldContainer control-group filter-item',
    elements: {},
    editable: true,
    removable: false,
    filterTemplate: _.template(filterTemplate),
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode()
        });
      }.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Sets the parentForm code on which this filter operates.
     *
     * @param {string} parentForm
     */
    setParentForm: function setParentForm(parentForm) {
      this.parentForm = parentForm;
    },

    /**
     * Gets the parentForm code on which this filter operates.
     *
     * @return {string}
     */
    getParentForm: function getParentForm() {
      return this.parentForm;
    },

    /**
     * Sets the filter code  (code: 'categories', field: 'categories')
     *
     * @param {string} code
     */
    setCode: function setCode(code) {
      this.filterCode = code;
    },

    /**
     * Gets the filter code (code: 'categories', field: 'categories')
     *
     * @return {string}
     */
    getCode: function getCode() {
      return this.filterCode;
    },

    /**
     * Sets the field code on which this filter operates. (code: 'categories', field: 'categories')
     *
     * @param {string} field
     */
    setField: function setField(field) {
      this.setData({
        field: field
      }, {
        silent: true
      });
    },

    /**
     * Gets the field code on which this filter operates.  (code: 'categories', field: 'categories')
     *
     * @return {string}
     */
    getField: function getField() {
      return this.getFormData().field;
    },

    /**
     * Type setter
     *
     * @param {string} type
     */
    setType: function setType(type) {
      this.type = type;
    },

    /**
     * Get the type identifier
     *
     * @return {string}
     */
    getType: function getType() {
      return this.type;
    },

    /**
     * Set the field operator
     *
     * @param {string} operator
     */
    setOperator: function setOperator(operator) {
      this.setData({
        operator: operator
      }, {
        silent: true
      });
    },

    /**
     * Gets the current operator.
     *
     * @return {string}
     */
    getOperator: function getOperator() {
      return this.getFormData().operator;
    },

    /**
     * Sets the current value.
     *
     * @param {string} value
     * @param {object} [options]
     */
    setValue: function setValue(value, options) {
      options = options || {
        silent: true
      };
      this.setData({
        value: value
      }, options);
    },

    /**
     * Gets the current value.
     *
     * @return {string}
     */
    getValue: function getValue() {
      return this.getFormData().value;
    },

    /**
     * Sets this filter as editable or not.
     *
     * @param {boolean} editable
     */
    setEditable: function setEditable(editable) {
      this.editable = Boolean(editable);
    },

    /**
     * Is this filter editable?
     *
     * @returns {boolean}
     */
    isEditable: function isEditable() {
      return this.editable;
    },

    /**
     * Returns whether this filter is empty.
     *
     * @returns {boolean}
     */
    isEmpty: function isEmpty() {
      return false;
    },

    /**
     * Sets this filter as removable or not.
     *
     * @param {boolean} removable
     */
    setRemovable: function setRemovable(removable) {
      this.removable = removable;
    },

    /**
     * Is this filter removable?
     *
     * @return {boolean}
     */
    isRemovable: function isRemovable() {
      return this.removable;
    },

    /**
     * Triggers the filter removal event.
     */
    removeFilter: function removeFilter() {
      this.trigger('filter:remove', this.getField());
    },

    /**
     * Renders the filter.
     *
     * @return {Object}
     */
    render: function render() {
      var promises = [];
      this.elements = {};
      this.setEditable(true);
      mediator.trigger('pim_enrich:form:filter:extension:add', {
        filter: this,
        promises: promises
      });
      $.when.apply($, promises).then(this.getTemplateContext.bind(this)).then(function (templateContext) {
        this.el.dataset.name = this.getField();
        this.el.dataset.type = this.getType();
        this.$el.html(this.filterTemplate(templateContext));
        this.$('.remove').on('click', this.removeFilter.bind(this));
        this.$('.filter-input').replaceWith(this.renderInput(templateContext));
        this.renderElements();
        this.postRender(templateContext);
        this.delegateEvents();
      }.bind(this));
      return this;
    },

    /**
     * Gets the template context.
     *
     * @returns {Promise}
     */
    getTemplateContext: function getTemplateContext() {
      return $.Deferred().resolve({
        label: __('pim_enrich.export.product.filter.' + this.shortname + '.title'),
        removable: this.isRemovable(),
        editable: this.isEditable()
      }).promise();
    },

    /**
     * Renders the input inside the filter area.
     *
     * @throws {Error} if this method is not implemented
     */
    renderInput: function renderInput() {
      throw new Error('You should implement your filter template');
    },

    /**
     * Renders extension elements of the filter.
     */
    renderElements: function renderElements() {
      _.each(this.elements, function (elements, position) {
        var $container = this.$('.' + position + '-elements-container');
        $container.empty();

        _.each(elements, function (element) {
          if ('function' === typeof element.render) {
            $container.append(element.render().$el);
          } else {
            $container.append(element);
          }
        });
      }.bind(this));
    },

    /**
     * Called after rendering the input.
     */
    postRender: function postRender() {},

    /**
     * Adds an extension element to this filter.
     *
     * @param {string} position 'label', 'after-input' or 'below-input'
     * @param {string} code
     * @param {Object} element
     */
    addElement: function addElement(position, code, element) {
      if (!this.elements[position]) {
        this.elements[position] = {};
      }

      this.elements[position][code] = element;
    },
    shutdown: function shutdown() {
      this.doShutdown();
      Object.values(this.elements).forEach(function (positionnedElements) {
        Object.values(positionnedElements).forEach(function (element) {
          if ('function' === typeof element.shutdown) {
            element.shutdown();
          }
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 56155:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/product/category.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/filter/filter */ 53570), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/filter/product/category/selector */ 73344), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/filter/product/category */ 59444), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseFilter, Routing, CategoryTree, fetcherRegistry, template) {
  var TreeModal = Backbone.BootstrapModal.extend({});
  return BaseFilter.extend({
    shortname: 'category',
    template: _.template(template),
    className: 'AknFieldContainer control-group filter-item category-filter',
    events: {
      'click button': 'openSelector'
    },

    /**
     * {@inherit}
     */
    configure: function configure() {
      this.listenTo(this, 'channel:update:after', this.channelUpdated.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: 'IN CHILDREN',
          value: []
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * Returns rendered input.
     *
     * @return {String}
     */
    renderInput: function renderInput() {
      var categoryCount = 'IN CHILDREN' === this.getOperator() ? 0 : this.getValue().length;
      return this.template({
        isEditable: this.isEditable(),
        titleEdit: __('pim_connector.export.categories.selector.title'),
        labelEdit: __('pim_common.edit'),
        labelInfo: __('pim_connector.export.categories.selector.label', {
          count: categoryCount
        }, categoryCount),
        value: this.getValue()
      });
    },

    /**
     * Resets selection after channel has been modified then re-renders the view.
     */
    channelUpdated: function channelUpdated() {
      this.getCurrentChannel().then(function (channel) {
        this.setDefaultValues(channel);
        this.render();
      }.bind(this));
    },

    /**
     * {@inherit}
     */
    getTemplateContext: function getTemplateContext() {
      return $.when(BaseFilter.prototype.getTemplateContext.apply(this, arguments), this.getCurrentChannel()).then(function (templateContext, channel) {
        if ('IN CHILDREN' === this.getOperator()) {
          this.setDefaultValues(channel);
        }

        return templateContext;
      }.bind(this));
    },

    /**
     * Open the selector popin
     */
    openSelector: function openSelector() {
      var modal = new TreeModal({
        title: __('pim_connector.export.categories.selector.modal.title'),
        cancelText: __('pim_common.cancel'),
        okText: __('pim_common.confirm'),
        content: '',
        illustrationClass: 'categories'
      });
      modal.render();
      var tree = new CategoryTree({
        el: modal.$el.find('.modal-body'),
        attributes: {
          channel: this.getParentForm().getFilters().structure.scope,
          categories: 'IN CHILDREN' === this.getOperator() ? [] : _toConsumableArray(this.getValue())
        }
      });
      tree.render();
      modal.open();
      modal.on('cancel', function () {
        modal.remove();
        tree.remove();
      });
      modal.on('ok', function () {
        if (_.isEmpty(tree.getCategoryCodes())) {
          this.getCurrentChannel().then(function (channel) {
            this.setDefaultValues(channel);
          }.bind(this));
        } else {
          this.setData({
            field: this.getField(),
            operator: 'IN',
            value: tree.getCategoryCodes()
          });
        }

        modal.close();
        modal.remove();
        tree.remove();
        this.render();
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return false;
    },

    /**
     * Get the current selected channel
     *
     * @return {Promise}
     */
    getCurrentChannel: function getCurrentChannel() {
      return fetcherRegistry.getFetcher('channel').fetch(this.getParentForm().getFilters().structure.scope);
    },

    /**
     * Set the default values for the filter
     *
     * @param {object} channel
     */
    setDefaultValues: function setDefaultValues(channel) {
      if (this.getOperator() === 'IN CHILDREN' && _.isEqual(this.getValue(), [channel.category_tree])) {
        return;
      }

      this.setData({
        field: this.getField(),
        operator: 'IN CHILDREN',
        value: [channel.category_tree]
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 75328:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/product/completeness.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/filter */ 53570), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/template/filter/product/completeness */ 39224), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseFilter, Routing, template) {
  return BaseFilter.extend({
    shortname: 'completeness',
    template: _.template(template),
    events: {
      'change [name="filter-operator"]': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.parentForm.getRoot(), 'locales:update:after', this.updateState.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: _.first(this.config.operators),
          value: 100
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * Returns rendered input.
     *
     * @return {String}
     */
    renderInput: function renderInput() {
      return this.template({
        isEditable: this.isEditable(),
        __: __,
        operator: this.getOperator(),
        value: this.getValue(),
        operatorChoices: this.config.operators
      });
    },

    /**
     * Initializes select2 after rendering.
     */
    postRender: function postRender() {
      this.$('[name="filter-operator"]').select2({
        minimumResultsForSearch: -1
      });
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return this.config.neverEmpty ? false : 'ALL' === this.getOperator();
    },

    /**
     * Updates operator and value on fields change.
     */
    updateState: function updateState() {
      this.setData({
        field: this.getField(),
        operator: this.$('[name="filter-operator"]').val(),
        value: 100,
        context: {
          locales: this.getParentForm().getFilters().structure.locales
        }
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29718:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/filter/product/enabled.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__; //Should be reworked to be a boolean filter

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/filter */ 53570), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/template/filter/product/enabled */ 58335), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseFilter, Routing, template) {
  return BaseFilter.extend({
    shortname: 'enabled',
    template: _.template(template),
    removable: false,
    events: {
      'change [name="filter-value"]': 'updateState'
    },

    /**
     * {@inherit}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: '=',
          value: true
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * Returns rendered input.
     *
     * @return {String}
     */
    renderInput: function renderInput() {
      return this.template({
        isEditable: this.isEditable(),
        labels: {
          title: __('pim_common.status'),
          valueChoices: {
            all: __('pim_common.all'),
            enabled: __('pim_enrich.export.product.filter.enabled.value.enabled'),
            disabled: __('pim_enrich.export.product.filter.enabled.value.disabled')
          }
        },
        value: this.getValue()
      });
    },

    /**
     * Initializes select2 after rendering.
     */
    postRender: function postRender() {
      this.$('[name="filter-value"]').select2({
        minimumResultsForSearch: -1
      });
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return false;
    },

    /**
     * Updates operator and value on fields change.
     */
    updateState: function updateState() {
      var value = this.$('[name="filter-value"]').val();

      if ('all' === value) {
        this.setData({
          field: this.getField(),
          operator: 'ALL',
          value: null
        });
      } else {
        this.setData({
          field: this.getField(),
          operator: '=',
          value: 'enabled' === value
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 68438:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/filter/product/family.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/filter */ 53570), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/template/filter/product/family */ 8575), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseFilter, Routing, template, fetcherRegistry, userContext, i18n) {
  return BaseFilter.extend({
    shortname: 'family',
    config: {},
    template: _.template(template),
    events: {
      'change [name="filter-value"]': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      this.selectOptions = {
        allowClear: true,
        multiple: true,
        ajax: {
          url: Routing.generate(this.config.url),
          quietMillis: 250,
          cache: true,
          data: function data(term, page) {
            return {
              search: term,
              options: {
                limit: 20,
                page: page,
                locale: userContext.get('uiLocale')
              }
            };
          },
          results: function results(families) {
            var data = {
              more: 20 === _.keys(families).length,
              results: []
            };

            _.each(families, function (value, key) {
              data.results.push({
                id: key,
                text: i18n.getLabel(value.labels, userContext.get('uiLocale'), value.code)
              });
            });

            return data;
          }
        },
        initSelection: function (element, callback) {
          var families = this.getValue();

          if (null !== families) {
            fetcherRegistry.getFetcher('family').fetchByIdentifiers(families).then(function (families) {
              callback(_.map(families, function (family) {
                return {
                  id: family.code,
                  text: i18n.getLabel(family.labels, userContext.get('uiLocale'), family.code)
                };
              }));
            });
          }
        }.bind(this)
      };
      return BaseFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inherit}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: '='
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput() {
      return this.template({
        isEditable: this.isEditable(),
        __: __,
        field: this.getField(),
        value: this.getValue(),
        shortname: this.shortname
      });
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('[name="filter-value"]').select2(this.selectOptions);
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return _.isEmpty(this.getValue());
    },

    /**
     * {@inheritdoc}
     */
    updateState: function updateState() {
      var value = this.$('[name="filter-value"]').val();
      this.setData({
        field: this.getField(),
        operator: 'IN',
        value: '' === value ? [] : value.split(',')
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 2490:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/filter/product/quality-score.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/filter */ 53570), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/template/filter/product/quality-score-filter */ 78755), __webpack_require__(/*! pim/template/filter/product/quality-score */ 99063), __webpack_require__(/*! pim/template/filter/product/quality-score-operator */ 6655), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, FetcherRegistry, UserContext, mediator, filterTemplate, template, templateOperator) {
  return BaseFilter.extend({
    className: '',
    shortname: 'quality-score',
    filterTemplate: _.template(filterTemplate),
    template: _.template(template),
    templateOperator: _.template(templateOperator),
    events: {
      'change [name="filter-value"]': 'updateState',
      'change [name="filter-operator"]': 'updateState'
    },
    scoreChoices: [{
      id: 1,
      text: 'a'
    }, {
      id: 2,
      text: 'b'
    }, {
      id: 3,
      text: 'c'
    }, {
      id: 4,
      text: 'd'
    }, {
      id: 5,
      text: 'e'
    }],

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      this.selectScoreOptions = {};
      this.selectOperatorOptions = {
        minimumResultsForSearch: -1
      };
      return BaseFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: this.getOperator()
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return _.isEmpty(this.getValue());
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput() {
      return this.template({
        __: __,
        field: this.getField(),
        isEditable: this.isEditable(),
        value: this.getValue(),
        scoreChoices: this.scoreChoices,
        shortname: this.shortname
      });
    },
    renderOperator: function renderOperator() {
      return this.templateOperator({
        __: __,
        field: this.getField(),
        isEditable: this.isEditable() && this.getValue() !== undefined && this.getValue().length > 0,
        operator: this.getOperator(),
        operatorChoices: this.config.operators,
        shortname: this.shortname
      });
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var promises = [];
      this.elements = {};
      this.setEditable(true);
      mediator.trigger('pim_enrich:form:filter:extension:add', {
        filter: this,
        promises: promises
      });
      $.when.apply($, promises).then(this.getTemplateContext.bind(this)).then(function (templateContext) {
        this.el.dataset.name = this.getField();
        this.el.dataset.type = this.getType();
        this.$el.html(this.filterTemplate(templateContext));
        this.$('.remove').on('click', this.removeFilter.bind(this));
        this.$('.filter-input').replaceWith(this.renderInput(templateContext));
        this.$('.filter-operator').replaceWith(this.renderOperator(templateContext));
        this.renderElements();
        this.postRender(templateContext);
        this.delegateEvents();
      }.bind(this));
      return this;
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      return $.Deferred().resolve({
        label: __('pim_enrich.export.product.filter.' + this.shortname + '.title'),
        label_operator: __('pim_enrich.export.product.filter.' + this.shortname + '.operator_choice_title'),
        removable: false,
        editable: this.isEditable()
      }).promise();
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('[name="filter-operator"]').select2(this.selectOperatorOptions);
      this.$('[name="filter-value"]').select2(this.selectScoreOptions);
    },

    /**
     * {@inheritdoc}
     */
    updateState: function updateState() {
      var value = this.$('[name="filter-value"]').val();
      var operator = this.$('[name="filter-operator"]').val();

      var cleanedValues = _.reject(value, function (val) {
        return '' === val;
      });

      this.setData({
        field: this.getField(),
        operator: operator,
        value: cleanedValues,
        context: {
          locales: this.getParentForm().getFilters().structure.locales
        }
      });
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 54787:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/filter/product/updated.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/filter/filter */ 53570), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/template/filter/product/updated */ 40065), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! jquery.select2 */ 53142), __webpack_require__(/*! datepicker */ 83586), __webpack_require__(/*! pim/date-context */ 24846), __webpack_require__(/*! pim/formatter/date */ 54555)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseFilter, Routing, template, fetcherRegistry, userContext, i18n, initSelect2, Datepicker, DateContext, DateFormatter) {
  return BaseFilter.extend({
    shortname: 'updated',
    template: _.template(template),
    events: {
      'change [name="filter-operator"], [name="filter-value-updated"]': 'updateState'
    },

    /* Date widget options */
    datetimepickerOptions: {
      format: DateContext.get('date').format,
      defaultFormat: DateContext.get('date').defaultFormat,
      language: DateContext.get('language')
    },

    /* Model date format */
    modelDateFormat: 'yyyy-MM-dd HH:mm:ss',

    /**
     * Initializes configuration.
     *
     * @param config
     */
    initialize: function initialize(config) {
      this.config = config.config;
      return BaseFilter.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_update', function (data) {
        _.defaults(data, {
          field: this.getCode(),
          operator: _.first(_.values(this.config.operators))
        });
      }.bind(this));
      return BaseFilter.prototype.configure.apply(this, arguments);
    },

    /**
     * Returns rendered input.
     *
     * @return {String}
     */
    renderInput: function renderInput() {
      var value = this.getValue();
      var operator = this.getOperator();

      if ('SINCE LAST JOB' !== operator && 'SINCE LAST N DAYS' !== operator) {
        value = DateFormatter.format(value, this.modelDateFormat, DateContext.get('date').format);
      }

      return this.template({
        isEditable: this.isEditable(),
        __: __,
        field: this.getField(),
        operator: operator,
        value: value,
        operatorChoices: this.config.operators
      });
    },

    /**
     * Initializes select2 and datepicker after rendering.
     */
    postRender: function postRender() {
      this.$('[name="filter-operator"]').select2({
        minimumResultsForSearch: -1
      });

      if ('>' === this.getOperator()) {
        Datepicker.init(this.$('.date-wrapper:first'), this.datetimepickerOptions).on('changeDate', this.updateState.bind(this));
      }
    },

    /**
     * {@inheritdoc}
     */
    isEmpty: function isEmpty() {
      return !this.getOperator() || 'ALL' === this.getOperator();
    },

    /**
     * Updates operator and value on fields change.
     * Value is reset after operator has changed.
     */
    updateState: function updateState() {
      this.$('.date-wrapper:first').datetimepicker('hide');
      var oldOperator = this.getOperator();
      var value = this.$('[name="filter-value-updated"]').val();
      var operator = this.$('[name="filter-operator"]').val();

      if (operator !== oldOperator) {
        value = '';
      }

      if ('>' === operator) {
        value = DateFormatter.format(value, DateContext.get('date').format, this.modelDateFormat);
      } else if ('SINCE LAST JOB' === operator) {
        value = this.getParentForm().getFormData().code;
      } else if ('SINCE LAST N DAYS' === operator) {
        value = parseInt(value);
      }

      if (_.isUndefined(value)) {
        value = '';
      }

      this.setData({
        field: this.getField(),
        operator: operator,
        value: value
      });
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16371:
/*!*************************************************!*\
  !*** ./public/bundles/pimui/js/form/builder.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form-registry */ 27091), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, FormRegistry, requireContext) {
  var getFormMeta = function getFormMeta(formName) {
    return FormRegistry.getFormMeta(formName).then(function (formMeta) {
      if (undefined === formMeta) {
        throw new Error("\nThe extension \"".concat(formName, "\" was not found. Are you sure you registered it properly?\nCheck your form_extension files and be sure to clear your prod cache before proceeding\n                    "));
      }

      return formMeta;
    });
  };

  var buildForm = function buildForm(formMeta) {
    return FormRegistry.getFormExtensions(formMeta).then(function (extensionsMeta) {
      var FormClass = requireContext(formMeta.module);

      if (undefined === FormClass) {
        throw new Error("\nThe module \"".concat(formMeta.module, "\" is undefined.\nMost of the time it's because it's not well registered in your requirejs.yml file.\nHere is the documentation to fix this problem\nhttps://docs.akeneo.com/latest/design_pim/overview.html#register-it"));
      }

      if (typeof FormClass !== 'function') {
        throw new Error("\n                        The module \"".concat(formMeta.module, "\" must return a function.\n                        It returns: ").concat(_typeof(FormClass)));
      }

      var form = new FormClass(formMeta);
      form.code = formMeta.code;
      var filteredExtensionsMeta = extensionsMeta.filter(function (extensionsMeta) {
        return null !== extensionsMeta.module;
      });
      var extensionPromises = filteredExtensionsMeta.map(function (extension) {
        return getFormMeta(extension.code).then(buildForm).then(function (loadedModule) {
          extension.loadedModule = loadedModule;
          return extension;
        });
      });
      return $.when.apply($, extensionPromises).then(function () {
        filteredExtensionsMeta.forEach(function (extension) {
          form.addExtension(extension.code, extension.loadedModule, extension.targetZone, extension.position);
        });
        return form;
      });
    });
  };

  return {
    getFormMeta: getFormMeta,
    buildForm: buildForm,
    build: function build(formName) {
      return getFormMeta(formName).then(buildForm).then(function (form) {
        var promise = form.configure();

        if (undefined === promise || typeof promise.then !== 'function') {
          throw new Error("\nThe method configure for the module \"".concat(form.code, "\" must return a promise.\nIf you get this error, it often means that you forgot to return:\nBaseForm.prototype.configure.apply(this, arguments)\n(See details here: https://docs.akeneo.com/latest/design_pim/overview.html#useful-methods)\n                            "));
        }

        return promise.then(function () {
          return form;
        });
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 69072:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/form/cache-invalidator.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"events":["pim_enrich:form:entity:post_fetch"]} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, mediator, FetcherRegistry) {
  return BaseForm.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      _.each(__moduleConfig.events, function (event) {
        this.listenTo(this.getRoot(), event, this.checkStructureVersion);
      }.bind(this));

      this.listenTo(this.getRoot(), 'pim_enrich:form:cache:clear', this.clearCache);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Check if the given entity need e newer version of the cache
     *
     * @param {Object} entity
     */
    checkStructureVersion: function checkStructureVersion(entity) {
      if (entity.meta.structure_version !== this.getLocaleStructureVersion(entity.meta.model_type)) {
        this.clearCache();
      }

      this.setLocaleStructureVersion(entity.meta.model_type, entity.meta.structure_version);
    },

    /**
     * Get the in locale storage structure version
     *
     * @param {string} modelType
     *
     * @return {int}
     */
    getLocaleStructureVersion: function getLocaleStructureVersion(modelType) {
      return parseInt(sessionStorage.getItem('structure_version_' + modelType));
    },

    /**
     * Set the current locale structure version in locale storage
     *
     * @param {string} modelType
     * @param {int}    structureVersion
     */
    setLocaleStructureVersion: function setLocaleStructureVersion(modelType, structureVersion) {
      sessionStorage.setItem('structure_version_' + modelType, structureVersion);
    },

    /**
     * Clear the cache for all fetchers
     */
    clearCache: function clearCache() {
      FetcherRegistry.clearAll();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 26149:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/add-select/footer.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Common add select footer view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/form/add-select/footer */ 81627)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, template) {
  return Backbone.View.extend({
    template: _.template(template),
    buttonTitle: null,
    numberOfItems: 0,
    countTitle: null,
    addEvent: null,
    events: {
      'click button': 'onAdd'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.buttonTitle = this.options.buttonTitle;
      this.countTitle = this.options.countTitle;
      this.addEvent = this.options.addEvent;
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        buttonTitle: this.buttonTitle,
        numberOfItems: this.numberOfItems,
        countTitle: this.countTitle
      }));
      return this;
    },

    /**
     * Update the item counter line and re-render the view.
     *
     * @param {int|string} number
     */
    updateNumberOfItems: function updateNumberOfItems(number) {
      this.numberOfItems = number;
      this.render();
    },

    /**
     * Method called when the 'add' button is clicked
     */
    onAdd: function onAdd() {
      this.trigger(this.addEvent);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 67184:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/add-select/line.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Common add select line view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/form/add-select/line */ 53224)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, template) {
  return Backbone.View.extend({
    className: 'select2-results',
    template: _.template(template),
    checked: false,
    item: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.item = this.options.item;
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        item: this.item,
        checked: this.checked
      }));
      return this;
    },

    /**
     * Update the checkbox status then render the view
     *
     * @param {bool} checked
     */
    setCheckedCheckbox: function setCheckedCheckbox(checked) {
      this.checked = checked;
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 64191:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/add-select/select.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Common add select extension view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/form/add-select/select */ 53486), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/common/add-select/line */ 67184), __webpack_require__(/*! pim/common/add-select/footer */ 26149), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/formatter/choices/base */ 78464), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/initselect2 */ 3701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, template, BaseForm, LineView, FooterView, UserContext, FetcherRegistry, ChoicesFormatter, mediator, initSelect2) {
  return BaseForm.extend({
    tagName: 'div',
    targetElement: 'input[type="hidden"]',
    className: null,
    mainFetcher: null,
    template: _.template(template),
    lineView: LineView,
    footerView: FooterView,
    config: {},
    resultsPerPage: null,
    selection: [],
    itemViews: [],
    footerViewInstance: null,
    queryTimer: null,
    addEvent: null,
    disableEvent: null,
    enableEvent: null,
    disabled: false,
    defaultConfig: {
      select2: {
        placeholder: 'pim_common.add',
        title: '',
        buttonTitle: '',
        emptyText: '',
        classes: '',
        minimumInputLength: 0,
        dropdownCssClass: '',
        closeOnSelect: false,
        countTitle: 'pim_enrich.form.common.base-add-select.label.select_count'
      },
      resultsPerPage: 10,
      searchParameters: {},
      mainFetcher: null,
      events: {
        disable: null,
        enable: null,
        add: null
      }
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = $.extend(true, {}, this.defaultConfig, meta.config);

      if (_.isNull(this.config.mainFetcher)) {
        throw new Error('Fetcher code must be provided in config');
      }

      this.config.select2.placeholder = __(this.config.select2.placeholder);
      this.config.select2.title = __(this.config.select2.title);
      this.config.select2.buttonTitle = __(this.config.select2.buttonTitle);
      this.config.select2.emptyText = __(this.config.select2.emptyText);
      this.resultsPerPage = this.config.resultsPerPage;
      this.mainFetcher = this.config.mainFetcher;
      this.className = this.config.className;
      this.disableEvent = this.config.events.disable;
      this.enableEvent = this.config.events.enable;
      this.addEvent = this.config.events.add;
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      if (!_.isNull(this.enableEvent) && !_.isNull(this.disableEvent)) {
        mediator.on(this.disableEvent, this.onDisable.bind(this));
        mediator.on(this.enableEvent, this.onEnable.bind(this));
      }

      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Render this extension
     *
     * @return {Object}
     */
    render: function render() {
      this.$el.html(this.template());
      this.$('input[type="hidden"]').prop('readonly', this.disabled);
      this.initializeSelectWidget();
      this.delegateEvents();
      return this;
    },

    /**
     * Initialize select2 and format elements.
     */
    initializeSelectWidget: function initializeSelectWidget() {
      var $select = this.$(this.targetElement);
      var opts = {
        dropdownCssClass: 'select2--bigDrop select2--annotedLabels ' + this.config.select2.dropdownCssClass,
        formatResult: this.onGetResult.bind(this),
        query: this.onGetQuery.bind(this)
      };
      opts = $.extend(true, {}, this.config.select2, opts);
      $select = initSelect2.init($select, opts);
      mediator.once('hash_navigation_request:start', function () {
        $select.select2('close');
        $select.select2('destroy');
      });
      $select.on('select2-selecting', this.onSelecting.bind(this));
      $select.on('select2-open', this.onSelectOpen.bind(this));
      this.footerViewInstance = new this.footerView({
        buttonTitle: this.config.select2.buttonTitle,
        countTitle: this.config.select2.countTitle,
        addEvent: this.addEvent
      });
      this.footerViewInstance.on(this.addEvent, function () {
        $select.select2('close');

        if (0 < this.selection.length) {
          this.addItems();
        }
      }.bind(this));
      var $menu = this.$('.select2-drop');
      $menu.append(this.footerViewInstance.render().$el);
    },

    /**
     * Triggers configured event with items codes selected
     */
    addItems: function addItems() {
      this.getRoot().trigger(this.addEvent, {
        codes: this.selection
      });
    },

    /**
     * Gets search parameters
     *
     * @param {string} term
     * @param {int}    page
     *
     * @return {Object}
     */
    getSelectSearchParameters: function getSelectSearchParameters(term, page) {
      return $.extend(true, {}, this.config.searchParameters, {
        search: term,
        options: {
          limit: this.resultsPerPage,
          page: page,
          locale: UserContext.get('catalogLocale')
        }
      });
    },

    /**
     * Gets items to exclude
     *
     * @return {Promise}
     */
    getItemsToExclude: function getItemsToExclude() {
      return $.Deferred().resolve([]);
    },

    /**
     * @param {Object} items
     *
     * @return {Object}
     */
    prepareChoices: function prepareChoices(items) {
      return 0 === Object.keys(items).length ? items : _.chain(_.sortBy(items, function (item) {
        return item.sort_order;
      })).map(function (item) {
        return ChoicesFormatter.formatOne(item);
      }).value();
    },

    /**
     * Formats and updates list of items
     *
     * @param {Object} item
     *
     * @return {Object}
     */
    onGetResult: function onGetResult(item) {
      var line = _.findWhere(this.itemViews, {
        itemCode: item.id
      });

      if (_.isUndefined(line) || _.isNull(line)) {
        line = {
          itemCode: item.id,
          itemView: new this.lineView({
            checked: _.contains(this.selection, item.id),
            item: item
          })
        };
        this.itemViews.push(line);
      }

      return line.itemView.render().$el;
    },

    /**
     * Optionally filters items fetched from the server
     *
     * @param {Object} items
     */
    filterItems: function filterItems(items) {
      return items;
    },

    /**
     * Creates request according to recieved options
     *
     * @param {Object} options
     */
    onGetQuery: function onGetQuery(options) {
      clearTimeout(this.queryTimer);
      this.queryTimer = setTimeout(function () {
        var page = 1;

        if (options.context && options.context.page) {
          page = options.context.page;
        }

        var searchParameters = this.getSelectSearchParameters(options.term, page);
        this.fetchItems(searchParameters).then(function (items) {
          var choices = this.prepareChoices(this.filterItems(items));
          options.callback({
            results: choices,
            more: Object.keys(items).length === this.resultsPerPage,
            context: {
              page: page + 1
            }
          });
        }.bind(this));
      }.bind(this), 400);
    },

    /**
     * Fetches items from the backend.
     *
     * @param {Object} searchParameters
     *
     * @return {Promise}
     */
    fetchItems: function fetchItems(searchParameters) {
      return this.getItemsToExclude().then(function (identifiersToExclude) {
        searchParameters.options.excluded_identifiers = identifiersToExclude;
        return FetcherRegistry.getFetcher(this.mainFetcher).search(searchParameters);
      }.bind(this));
    },

    /**
     * Intercepts default select2 selecting event and handles it
     *
     * @param {Object} event
     */
    onSelecting: function onSelecting(event) {
      var itemCode = event.val;

      var alreadySelected = _.contains(this.selection, itemCode);

      if (alreadySelected) {
        this.selection = _.without(this.selection, itemCode);
      } else {
        this.selection.push(itemCode);
      }

      var line = _.findWhere(this.itemViews, {
        itemCode: itemCode
      });

      line.itemView.setCheckedCheckbox(!alreadySelected);
      this.updateSelectedCounter();
      event.preventDefault();
    },

    /**
     * Cleans select2 when open
     */
    onSelectOpen: function onSelectOpen() {
      this.selection = [];
      this.itemViews = [];
      this.updateSelectedCounter();
    },

    /**
     * Update counter of selected items
     */
    updateSelectedCounter: function updateSelectedCounter() {
      this.footerViewInstance.updateNumberOfItems(this.selection.length);
    },

    /**
     * Disable callback
     */
    onDisable: function onDisable() {
      this.disabled = true;
      this.render();
    },

    /**
     * Enable callback
     */
    onEnable: function onEnable() {
      this.disabled = false;
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 70017:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/attributes.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute tab extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/attribute-manager */ 41700), __webpack_require__(/*! pim/attribute-group-manager */ 35962), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/template/form/tab/attributes */ 37961), __webpack_require__(/*! pim/template/form/tab/attribute/attribute-group */ 25404), __webpack_require__(/*! pim/template/common/no-data */ 73183), __webpack_require__(/*! pim/provider/to-fill-field-provider */ 26682), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, mediator, Routing, BaseForm, FieldManager, FetcherRegistry, AttributeManager, AttributeGroupManager, UserContext, SecurityContext, formTemplate, attributeGroupTemplate, noDataTemplate, toFillFieldProvider, Dialog, messenger, i18n) {
  /**
   * Group field views by sections (attribute groups)
   *
   * @param {Array} attributeGroups
   * @param {Array} fieldsToFill
   *
   * @return {Object}
   */
  var groupFieldsBySection = function groupFieldsBySection(attributeGroups, fieldsToFill) {
    return function (fieldCollection, field) {
      var newFieldCollection = Object.assign({}, fieldCollection);

      if (undefined === newFieldCollection[field.attribute.group]) {
        newFieldCollection[field.attribute.group] = {
          attributeGroup: attributeGroups[field.attribute.group],
          fields: [],
          toFill: 0
        };
      }

      newFieldCollection[field.attribute.group].fields.push(field);

      if (-1 !== fieldsToFill.indexOf(field.attribute.code)) {
        newFieldCollection[field.attribute.group].toFill++;
      }

      return newFieldCollection;
    };
  };
  /**
   * Generate a section view for the given fields
   *
   * @param {Object}   fieldCollection
   * @param {function} template
   * @param {String}   label
   *
   * @return {view}
   */


  var createSectionView = function createSectionView(fieldCollection, template, label) {
    var view = document.createElement('div');
    view.className = 'AknSubsection';
    view.innerHTML = template({
      label: label,
      fieldCollection: fieldCollection,
      __: __
    });
    var container = fieldCollection.fields.sort(function (firstField, secondField) {
      return firstField.attribute.sort_order - secondField.attribute.sort_order;
    }).reduce(function (container, field) {
      _.defer(field.render.bind(field));

      container.appendChild(field.el);
      return container;
    }, document.createElement('div'));
    view.appendChild(container);
    return view;
  };

  return BaseForm.extend({
    template: _.template(formTemplate),
    attributeGroupTemplate: _.template(attributeGroupTemplate),
    noDataTemplate: _.template(noDataTemplate),
    className: 'tabbable object-attributes',
    events: {
      'click .remove-attribute': 'removeAttribute',
      'click .required-attribute-indicator': 'filterRequiredAttributes'
    },
    rendering: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      this.trigger('tab:register', {
        code: this.config.tabCode ? this.config.tabCode : this.code,
        label: __(this.config.tabTitle)
      });
      UserContext.off('change:catalogLocale change:catalogScope', this.render);
      this.listenTo(UserContext, 'change:catalogLocale change:catalogScope', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:add-attribute:after', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:show_attribute', this.showAttribute);
      this.listenTo(this.getRoot(), 'pim_enrich:form:scope_switcher:pre_render', this.initScope.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:scope_switcher:change', function (scopeEvent) {
        if ('base_product' === scopeEvent.context) {
          _this.setScope(scopeEvent.scopeCode, {
            silent: true
          });

          _this.setScope(scopeEvent.scopeCode);
        }
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:pre_render', this.initLocale.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', function (localeEvent) {
        if ('base_product' === localeEvent.context) {
          _this.setLocale(localeEvent.localeCode, {
            silent: true
          });
        }
      });
      FieldManager.clearFields();
      this.onExtensions('comparison:change', this.comparisonChange.bind(this));
      this.onExtensions('copy:copy-fields:after', this.render.bind(this));
      this.onExtensions('copy:select:after', this.render.bind(this));
      this.onExtensions('copy:context:change', this.render.bind(this));
      this.onExtensions('group:change', this.render.bind(this));
      this.onExtensions('attribute_filter:change', this.render.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this2 = this;

      if (!this.configured || this.rendering) {
        return this;
      }

      this.getRoot().trigger('pim_enrich:form:extension:render:before');
      this.getRoot().trigger('pim_enrich:form:attributes:render:before');
      this.rendering = true;
      this.$el.html(this.template({}));
      var data = this.getFormData();
      AttributeGroupManager.getAttributeGroupsForObject(data).then(function (attributeGroups) {
        _this2.getExtension('attribute-group-selector').setElements(_.indexBy(attributeGroups, 'code'));

        FieldManager.clearVisibleFields();
      }).then(function () {
        return _this2.filterValues(data.values);
      }).then(function (values) {
        return _this2.createFields(data, values);
      }).then(function (fields) {
        _this2.rendering = false;
        $.when(AttributeGroupManager.getAttributeGroupsForObject(data)).then(function (attributeGroups) {
          var scope = UserContext.get('catalogScope');
          var locale = UserContext.get('catalogLocale');
          var fieldsToFill = toFillFieldProvider.getMissingRequiredFields(data, scope, locale);

          var sections = _.values(fields.reduce(groupFieldsBySection(attributeGroups, fieldsToFill), {})).sort(function (firstSection, secondSection) {
            return firstSection.attributeGroup.sort_order - secondSection.attributeGroup.sort_order;
          });

          var fieldsView = document.createElement('div');

          var _iterator = _createForOfIteratorHelper(sections),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var section = _step.value;
              fieldsView.appendChild(createSectionView(section, _this2.attributeGroupTemplate, i18n.getLabel(section.attributeGroup.labels, UserContext.get('catalogLocale'), section.attributeGroup.code)));
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          var objectValuesDom = _this2.$('.object-values').empty();

          if (_.isEmpty(fields)) {
            objectValuesDom.append(_this2.noDataTemplate({
              hint: __('pim_datagrid.no_results', {
                entityHint: __('pim_enrich.entity.attribute.label')
              }),
              subHint: 'pim_datagrid.no_results_subtitle',
              imageClass: '',
              __: __
            }));
          } else {
            objectValuesDom.append(fieldsView);
          }

          _this2.renderExtensions();

          _this2.delegateEvents();

          _.defer(_this2.sticky.bind(_this2));
        }).then(function () {
          _this2.getRoot().trigger('pim_enrich:form:extension:render:after');

          _this2.getRoot().trigger('pim_enrich:form:attributes:render:after');
        });
      });

      if (null !== sessionStorage.getItem('filter_missing_required_attributes')) {
        sessionStorage.removeItem('filter_missing_required_attributes');
        this.filterRequiredAttributes();
      }

      return this;
    },

    /**
     * Render a single field
     *
     * @param {Object} object
     * @param {String} attributeCode
     * @param {Array} values
     *
     * @return {Promise}
     */
    createAttributeField: function createAttributeField(object, attributeCode, values) {
      var root = this.getRoot();
      return FieldManager.getField(attributeCode).then(function (field) {
        return $.when(new $.Deferred().resolve(field), FetcherRegistry.getFetcher('channel').fetchAll(), AttributeManager.isOptional(field.attribute, object));
      }).then(function (field, channels, isOptional) {
        var scope = _.findWhere(channels, {
          code: UserContext.get('catalogScope')
        });

        var locale = UserContext.get('catalogLocale');
        field.setContext({
          entity: this.getFormData(),
          locale: locale,
          scope: scope.code,
          scopeLabel: i18n.getLabel(scope.labels, locale, scope.code),
          uiLocale: UserContext.get('catalogLocale'),
          guidelinesLocale: UserContext.get('uiLocale'),
          optional: isOptional,
          removable: SecurityContext.isGranted(this.config.removeAttributeACL),
          root: root
        });
        field.setValues(values);
        FieldManager.addVisibleField(field.attribute.code);
        return field;
      }.bind(this));
    },

    /**
     * Remove an attribute from the collection
     *
     * @param {Event} event
     *
     * // TODO: Move this to product/form/mass-edit/attributes when the variant groups will be dropped.
     */
    removeAttribute: function removeAttribute(event) {
      if (!SecurityContext.isGranted(this.config.removeAttributeACL)) {
        return;
      }

      var attributeCode = event.currentTarget.dataset.attribute;
      var formData = this.getFormData();
      var fields = FieldManager.getFields();
      Dialog.confirm(__('pim_enrich.entity.attribute.module.delete.confirm_from_product'), __('pim_common.confirm_deletion'), function () {
        FetcherRegistry.getFetcher('attribute').fetch(attributeCode).then(function (attribute) {
          $.ajax({
            type: 'DELETE',
            url: this.generateRemoveAttributeUrl(attribute),
            contentType: 'application/json'
          }).then(function () {
            this.triggerExtensions('add-attribute:update:available-attributes');
            delete formData.values[attributeCode];
            delete fields[attributeCode];
            this.setData(formData);
            this.getRoot().trigger('pim_enrich:form:remove-attribute:after');
            this.render();
          }.bind(this)).fail(function () {
            messenger.notify('error', __(this.config.deletionFailed));
          });
        }.bind(this));
      }.bind(this));
    },

    /**
     * Generate the remove attribute url
     *
     * @return {String}
     */
    generateRemoveAttributeUrl: function generateRemoveAttributeUrl(attribute) {
      return Routing.generate(this.config.removeAttributeRoute, {
        code: this.getFormData().code,
        attributeId: attribute.meta.id
      });
    },

    /**
     * Initialize  the scope if there is none, or modify it by reference if there is already one
     *
     * @param {Object} scopeEvent
     * @param {String} scopeEvent.context
     * @param {String} scopeEvent.scopeCode
     */
    initScope: function initScope(scopeEvent) {
      if ('base_product' === scopeEvent.context) {
        if (undefined === this.getScope()) {
          this.setScope(scopeEvent.scopeCode, {
            silent: true
          });
        } else {
          scopeEvent.scopeCode = this.getScope();
        }
      }
    },

    /**
     * Set the current scope
     *
     * @param {String} scope
     * @param {Object} options
     */
    setScope: function setScope(scope, options) {
      UserContext.set('catalogScope', scope, options);
    },

    /**
     * Get the current scope
     */
    getScope: function getScope() {
      return UserContext.get('catalogScope');
    },

    /**
     * Initialize  the locale if there is none, or modify it by reference if there is already one
     *
     * @param {Object} eventLocale
     * @param {String} eventLocale.context
     * @param {String} eventLocale.localeCode
     */
    initLocale: function initLocale(eventLocale) {
      if ('base_product' === eventLocale.context) {
        if (undefined === this.getLocale()) {
          this.setLocale(eventLocale.localeCode, {
            silent: true
          });
        } else {
          eventLocale.localeCode = this.getLocale();
        }
      }
    },

    /**
     * Set the current locale
     *
     * @param {String} locale
     * @param {Object} options
     */
    setLocale: function setLocale(locale, options) {
      UserContext.set('catalogLocale', locale, options);
    },

    /**
     * Get the current locale
     */
    getLocale: function getLocale() {
      return UserContext.get('catalogLocale');
    },

    /**
     * Post save actions
     */
    postSave: function postSave() {
      FieldManager.clearFields();
      this.render();
    },

    /**
     * Switch to the given attribute
     *
     * @param {Event} event
     */
    showAttribute: function showAttribute(event) {
      this.getRoot().trigger('pim_enrich:form:form-tabs:change', this.code);
      var needRendering = false;

      if (event.scope) {
        this.setScope(event.scope, {
          silent: true
        });
        this.getRoot().trigger('pim_enrich:form:channel_switcher:change');
        needRendering = true;
      }

      if (event.locale) {
        this.setLocale(event.locale, {
          silent: true
        });
        this.getRoot().trigger('pim_enrich:form:locale_switcher:change', {
          localeCode: event.locale,
          context: 'base_product'
        });
        needRendering = true;
      }

      if (needRendering) {
        this.render();
      }

      var displayedAttributes = FieldManager.getFields();

      if (_.has(displayedAttributes, event.attribute)) {
        var field = displayedAttributes[event.attribute]; // TODO: the manager shouldn't be stateful, access the field by another way

        _.defer(field.setFocus.bind(field));
      }
    },

    /**
     * Toggle the comparison mode
     *
     * @param {Boolean} open
     */
    comparisonChange: function comparisonChange(open) {
      this.$el[open ? 'addClass' : 'removeClass']('comparison-mode');
      this.$el.find('.AknAttributeActions')[open ? 'addClass' : 'removeClass']('AknAttributeActions--comparisonMode');
    },

    /**
     * Filter values
     *
     * @param {Object} values
     *
     * @return {Promise}
     */
    filterValues: function filterValues(values) {
      if (!this.getExtension('attribute-group-selector').isAll()) {
        var filteredValues = {};
        var attributeGroup = this.getExtension('attribute-group-selector').getCurrentElement();
        attributeGroup.attributes.forEach(function (attributeCode) {
          if (undefined !== values[attributeCode]) {
            filteredValues[attributeCode] = values[attributeCode];
          }
        });
        values = filteredValues;
      }

      if (undefined === this.getExtension('attribute-filter')) {
        return $.Deferred().resolve(values);
      }

      return this.getExtension('attribute-filter').filterValues(values);
    },

    /**
     * Render all fields and return a collection of promises
     *
     * This method is pretty optimization oriented: We fetch the attributes as a collection
     * to avoid individual fetching afterward. We also don't use fat arrow functions because
     * we cannot get the 'arguments' object out of it
     *
     * @param {Object} data
     * @param {Object} values
     *
     * @return {Promise}
     */
    createFields: function createFields(data, values) {
      var _this3 = this;

      return FetcherRegistry.getFetcher('attribute').fetchByIdentifiers(Object.keys(values)).then(function (attributes) {
        attributes.sort(function (a, b) {
          if (a.sortOrder < b.sortOrder) {
            return -1;
          }

          if (a.sortOrder > b.sortOrder) {
            return 1;
          }

          return a.meta.id < b.meta.id ? -1 : 1;
        });
        return $.when.apply($, attributes.map(function (attribute) {
          return _this3.createAttributeField(data, attribute.code, values[attribute.code]);
        }));
      }).then(function () {
        return _.values(arguments);
      });
    },

    /**
     * Filter the required attributes and attribute group
     */
    filterRequiredAttributes: function filterRequiredAttributes() {
      this.getRoot().trigger('pim_enrich:form:switch_values_filter', 'missing_required');
    },

    /**
     * Make the header and section header sticky
     */
    sticky: function sticky() {
      var makeItSticky = function makeItSticky(position) {
        return function (element) {
          element.style.position = 'sticky';
          element.style.top = "".concat(position, "px");
        };
      };

      var header = this.getZone('header');
      makeItSticky(this.getRoot().headerSize())(header);
      var sectionTitles = this.el.querySelectorAll('.AknSubsection-title');

      _.each(sectionTitles, makeItSticky(header.offsetHeight + this.getRoot().headerSize()));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 98990:
/*!************************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/attributes/attribute-group-selector.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute group selector extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/group-selector */ 60593), __webpack_require__(/*! pim/attribute-group-manager */ 35962), __webpack_require__(/*! pim/template/form/tab/attribute/attribute-group-selector */ 71660), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/provider/to-fill-field-provider */ 26682)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, GroupSelectorForm, AttributeGroupManager, template, UserContext, i18n, toFillFieldProvider) {
  return GroupSelectorForm.extend({
    tagName: 'div',
    className: 'AknDropdown AknButtonList-item nav nav-tabs group-selector',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', this.onValidationError);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.onPostFetch);
      this.listenTo(this.getRoot(), 'pim_enrich:form:to-fill:cleared', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:switch_attribute_group', this.setAttributeGroup.bind(this));
      return GroupSelectorForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Triggered on validation error
     *
     * @param {Event} event
     */
    onValidationError: function onValidationError(event) {
      this.removeBadges();
      var object = event.sentData;

      var valuesErrors = _.uniq(event.response.values, function (error) {
        var errorClone = _.clone(error);

        delete errorClone.path;
        return JSON.stringify(errorClone);
      });

      if (valuesErrors) {
        AttributeGroupManager.getAttributeGroupsForObject(object).then(function (attributeGroups) {
          var globalErrors = [];

          _.each(valuesErrors, function (error) {
            if (error.global) {
              globalErrors.push(error);
            }

            var attributeGroup = AttributeGroupManager.getAttributeGroupForAttribute(attributeGroups, error.attribute);
            this.addToBadge(attributeGroup, 'invalid');
          }.bind(this)); // Don't force attributes tab if only global errors


          if (!_.isEmpty(valuesErrors) && valuesErrors.length > globalErrors.length) {
            this.getRoot().trigger('pim_enrich:form:show_attribute', _.first(valuesErrors));
          }
        }.bind(this));
      }
    },

    /**
     * Triggered on post fetch
     */
    onPostFetch: function onPostFetch() {
      this.removeBadges();
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      $.when(AttributeGroupManager.getAttributeGroupsForObject(this.getFormData())).then(function (attributeGroups) {
        var scope = UserContext.get('catalogScope');
        var locale = UserContext.get('catalogLocale');
        var attributes = toFillFieldProvider.getMissingRequiredFields(this.getFormData(), scope, locale);

        var toFillAttributeGroups = _.uniq(_.map(attributes, function (attribute) {
          return AttributeGroupManager.getAttributeGroupForAttribute(attributeGroups, attribute);
        }));

        this.$el.empty();
        this.ensureDefault();

        if (this.shouldBeDisplayed(this.getElements())) {
          this.$el.html(this.template({
            current: this.getCurrent(),
            elements: _.sortBy(this.getElements(), 'sort_order'),
            badges: this.badges,
            locale: UserContext.get('catalogLocale'),
            toFillAttributeGroups: toFillAttributeGroups,
            allAttributeCode: this.all.code,
            currentElement: _.findWhere(this.getElements(), {
              code: this.getCurrent()
            }),
            i18n: i18n,
            label: __('pim_enrich.entity.attribute_group.uppercase_label')
          }));
        }

        this.delegateEvents();
      }.bind(this));
      return this;
    },

    /**
     * Don't display the dropdown if there is no elements or if the only element is the "All" group.
     *
     * @param {Object} elements
     *
     * @returns {Boolean}
     */
    shouldBeDisplayed: function shouldBeDisplayed(elements) {
      var length = Object.keys(elements).length;
      return length > 1 || 1 === length && this.all.code !== Object.values(elements)[0].code;
    },

    /**
     * Set current group from event
     *
     * @param {[type]} attributeGroupCode [description]
     */
    setAttributeGroup: function setAttributeGroup(attributeGroupCode) {
      this.setCurrent(attributeGroupCode, {
        silent: true
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 23588:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/attributes/copy-field.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Copy field extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! pim/template/form/tab/attribute/copy-field */ 75236), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! oro/mediator */ 27615)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone, _, Field, template, i18n, mediator) {
  return Field.extend({
    tagName: 'div',
    field: null,
    template: _.template(template),
    selected: false,
    events: {
      click: 'onSelect'
    },

    /**
     * Initialize the view
     */
    initialize: function initialize() {
      this.selected = false;
      this.field = null;
      Field.prototype.initialize.apply(this, arguments);
    },

    /**
     * Render the copy field view
     * Delegates the render of the input itself to the Field.renderCopyInput() method
     *
     * @returns {Object}
     */
    render: function render() {
      this.$el.empty();
      var templateContext = {
        type: this.field.attribute.field_type,
        label: this.field.getLabel(),
        config: this.field.config,
        attribute: this.field.attribute,
        selected: this.selected,
        context: this.context,
        i18n: i18n
      };
      mediator.trigger('pim_enrich:form:field:extension:add', {
        field: this,
        promises: []
      });
      this.$el.html(this.template(templateContext));
      this.field.renderCopyInput(this.getCurrentValue()).then(function (render) {
        this.$('.field-input').html(render);
        this.renderElements();
        this.field.postRender();
      }.bind(this));
      this.delegateEvents();
      return this;
    },

    /**
     * Render elements of this field in different available positions.
     * In the copy case, only implements extension on input position.
     */
    renderElements: function renderElements() {
      _.each(this.elements, function (elements, position) {
        if ('field-input' === position) {
          var $container = this.$('.field-input');
          $container.empty();

          _.each(elements, function (element) {
            if (typeof element.render === 'function') {
              $container.append(element.render().$el);
            } else {
              $container.append(element);
            }
          }.bind(this));
        }
      }.bind(this));
    },

    /**
     * Bound this copy field to the original field
     *
     * @param {Field} field
     */
    setField: function setField(field) {
      this.field = field;
    },

    /**
     * Callback called when the copy field is clicked, toggle the select checkbox state
     */
    onSelect: function onSelect() {
      this.selected = !this.selected;
      this.$('.copy-field-selector').prop('checked', this.selected);
    },

    /**
     * Mark this copy field as selected or not
     *
     * @param {boolean} selected
     */
    setSelected: function setSelected(selected) {
      this.selected = selected;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 24561:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/attributes/copy.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Copy extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/template/form/tab/attribute/copy */ 42445), __webpack_require__(/*! pim/form/common/attributes/copy-field */ 23588), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/attribute-manager */ 41700), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseForm, mediator, template, CopyField, FieldManager, AttributeManager, UserContext, FetcherRegistry, i18n) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'AknAttributeActions-copyActions attribute-copy-actions',
    copyFields: {},
    copying: false,
    locale: null,
    scope: null,
    scopeLabel: null,
    events: {
      'click .stop-copying': 'stopCopying',
      'click .select-all': 'selectAll',
      'click .select-all-visible': 'selectAllVisible',
      'click .select-none': 'selectNone',
      'click .copy': 'copy'
    },

    /**
     * Configure this extension
     *
     * @returns {Promise}
     */
    configure: function configure() {
      this.locale = UserContext.get('catalogLocale');
      this.scope = UserContext.get('catalogScope');
      this.getScopeLabel(this.scope).then(function (scopeLabel) {
        this.scopeLabel = scopeLabel;
      }.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:field:extension:add', this.addFieldExtension);
      this.listenTo(this.getRoot(), 'pim_enrich:form:scope_switcher:pre_render', this.initScope.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:scope_switcher:change', function (eventScope) {
        if ('copy_product' === eventScope.context) {
          this.setScope(eventScope.scopeCode);
        }
      }.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:pre_render', this.initLocale.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', function (eventLocale) {
        if ('copy_product' === eventLocale.context) {
          this.setLocale(eventLocale.localeCode);
        }
      }.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:start_copy', this.startCopying.bind(this));
      return this.getScopeLabel(this.scope).then(function (scopeLabel) {
        this.scopeLabel = scopeLabel;
      }.bind(this)).then(function () {
        return BaseForm.prototype.configure.apply(this, arguments);
      }.bind(this));
    },

    /**
     * Return the values object from which data must be copied
     *
     * @returns {Object}
     */
    getSourceData: function getSourceData() {
      return this.getFormData().values;
    },

    /**
     * Render the copy panel
     *
     * @returns {Object}
     */
    render: function render() {
      this.trigger('comparison:change', this.copying);
      this.$el.html(this.template({
        copying: this.copying
      }));

      if (this.copying) {
        this.renderExtensions();
      }

      this.delegateEvents();
      return this;
    },

    /**
     * Render the copy element inside each field that can be copied
     *
     * @param {Object} event
     */
    addFieldExtension: function addFieldExtension(event) {
      var field = event.field;

      if (this.copying && this.canBeCopied(field)) {
        field.addElement('comparison', this.code, this.getCopyField(field));
      }
    },

    /**
     * Get or create a copy field object corresponding to the specified field
     *
     * @param {Field} field
     *
     * @returns {CopyField}
     */
    getCopyField: function getCopyField(field) {
      var code = field.attribute.code;

      if (!_.has(this.copyFields, code)) {
        var sourceData = this.getSourceData();
        var copyField = new CopyField(field.attribute);
        copyField.setContext({
          locale: this.locale,
          scope: this.scope,
          scopeLabel: i18n.getLabel(this.scopeLabel, this.locale, this.scope)
        });
        copyField.setValues(sourceData[code]);
        copyField.setField(field);
        this.copyFields[code] = copyField;
      }

      return this.copyFields[code];
    },

    /**
     * Indicate if the specified field can be copied
     *
     * @param {Field} field
     * @returns {boolean}
     */
    canBeCopied: function canBeCopied(field) {
      return (field.attribute.localizable || field.attribute.scopable) && (!field.attribute.is_locale_specific || _.contains(field.attribute.available_locales, this.getLocale()));
    },

    /**
     * Launch the copy process for selected fields
     */
    copy: function copy() {
      _.each(this.copyFields, function (copyField) {
        if (copyField.field && copyField.field.isEditable() && (copyField.selected || copyField.field.selected)) {
          var formValues = this.getFormModel().get('values');
          var oldValue = AttributeManager.getValue(formValues[copyField.field.attribute.code], copyField.field.attribute, UserContext.get('catalogLocale'), UserContext.get('catalogScope'));

          if (undefined === oldValue) {
            return;
          }

          var currentValue = copyField.getCurrentValue();

          if (undefined === currentValue) {
            return;
          }

          oldValue.data = currentValue.data;
          this.getRoot().trigger('pim_enrich:form:entity:update_state');
          copyField.setSelected(false);
        }
      }.bind(this));

      this.trigger('copy:copy-fields:after');
    },

    /**
     * Enter in copy mode
     */
    startCopying: function startCopying() {
      this.copying = true;
      this.triggerContextChange();
    },

    /**
     * Close copy mode
     */
    stopCopying: function stopCopying() {
      this.getRoot().trigger('pim_enrich:form:stop_copy');
      this.copying = false;
      this.triggerContextChange();
    },

    /**
     * Initialize  the locale if there is none, or modify it by reference if there is already one
     *
     * @param {Object} eventLocale
     * @param {String} eventLocale.context
     * @param {String} eventLocale.localeCode
     */
    initLocale: function initLocale(eventLocale) {
      if ('copy_product' === eventLocale.context) {
        if (undefined === this.getLocale()) {
          this.setLocale(eventLocale.localeCode);
        } else {
          eventLocale.localeCode = this.getLocale();
        }
      }
    },

    /**
     * Change the locale for copy context
     *
     * @param {string} locale
     */
    setLocale: function setLocale(locale) {
      this.locale = locale;
      this.triggerContextChange();
    },

    /**
     * Get the current locale for copy
     *
     * @returns {string}
     */
    getLocale: function getLocale() {
      return this.locale;
    },

    /**
     * Initialize  the scope if there is none, or modify it by reference if there is already one
     *
     * @param {Object} scopeEvent
     * @param {string} scopeEvent.context
     * @param {string} scopeEvent.scopeCode
     */
    initScope: function initScope(scopeEvent) {
      if ('copy_product' === scopeEvent.context) {
        if (undefined === this.getScope()) {
          this.setScope(scopeEvent.scopeCode);
        } else {
          scopeEvent.scopeCode = this.getScope();
        }
      }
    },

    /**
     * Change the scope for copy context
     *
     * @param {string} scopeCode
     */
    setScope: function setScope(scopeCode) {
      this.getScopeLabel(scopeCode).then(function (scopeLabel) {
        this.scopeLabel = scopeLabel;
        this.scope = scopeCode;
        this.triggerContextChange();
      }.bind(this));
    },

    /**
     * Get the current scope for copy
     *
     * @returns {string}
     */
    getScope: function getScope() {
      return this.scope;
    },

    /**
     * Reset copy fields cache then trigger the context change event
     */
    triggerContextChange: function triggerContextChange() {
      this.copyFields = {};
      this.trigger('copy:context:change');
    },

    /**
     * Mark all fields (from all attribute groups) as selected
     */
    selectAll: function selectAll() {
      var fieldPromises = [];

      _.each(this.getSourceData(), function (value, attributeCode) {
        fieldPromises.push(FieldManager.getField(attributeCode));
      }.bind(this));

      $.when.apply(this, fieldPromises).then(function () {
        this.selectFields(arguments);
      }.bind(this));
    },

    /**
     * Mark all visible fields (from active attribute group) as selected
     */
    selectAllVisible: function selectAllVisible() {
      this.selectFields(FieldManager.getVisibleFields());
    },

    /**
     * Mark all fields as unselected
     */
    selectNone: function selectNone() {
      this.selectFields([]);
    },

    /**
     * Unselect all field
     */
    unselectAll: function unselectAll() {
      _.each(this.copyFields, function (field) {
        field.setSelected(false);
      });
    },

    /**
     * Mark specified fields as selected and trigger the select event
     *
     * @param {Field[]} fields
     */
    selectFields: function selectFields(fields) {
      this.unselectAll();

      _.each(fields, function (field) {
        if (this.canBeCopied(field)) {
          this.getCopyField(field).setSelected(true);
        }
      }.bind(this));

      this.trigger('copy:select:after');
    },

    /**
     * Get the scope label with the given scope code
     *
     * @param {string} scopeCode
     *
     * @returns {Promise}
     */
    getScopeLabel: function getScopeLabel(scopeCode) {
      return FetcherRegistry.getFetcher('channel').fetchAll().then(function (channels) {
        var scope = _.findWhere(channels, {
          code: scopeCode
        });

        return scope.labels;
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 38645:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/column-tabs-navigation.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Display navigation links in column for the tab display
 *
 * Even if this module has the same design than `navigation-block`, it does not works like it, because this module is
 * not composed of extensions, but listen to the product edit form events to register its own tabs.
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/column-tabs-navigation */ 94134)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknColumn-block',
    template: _.template(template),
    tabs: [],
    currentTab: null,
    events: {
      'click .column-navigation-link': 'selectTab'
    },
    currentKey: 'current_column_tab',

    /**
     * @param {string} meta.config.title Translation key of the block title
     *
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.tabs = [];
      this.currentTab = sessionStorage.getItem(this.currentKey);
      this.listenTo(this.getRoot(), 'column-tab:register', this.registerTab);
      this.listenTo(this.getRoot(), 'column-tab:select-tab', this.setCurrentTab);
      this.listenTo(this.getRoot(), 'column-tab:change-tab', this.selectTab);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty().html(this.template({
        tabs: this.getTabs(),
        currentTab: this.getCurrentTabOrDefault(),
        title: __(this.config.title)
      }));
    },

    /**
     * Registers a new tab
     *
     * @param event
     */
    registerTab: function registerTab(event) {
      var tab = {
        code: event.code,
        isVisible: event.isVisible,
        label: event.label,
        route: event.code
      };
      var existingTab = this.tabs.find(function (currentTab) {
        return currentTab.code === tab.code;
      });

      if (undefined === existingTab) {
        this.tabs.push(tab);
      } else {
        existingTab.label = event.label;
        existingTab.isVisible = event.isVisible;
      }

      this.trigger('pim_menu:column:register_navigation_item', tab);
      this.render();
    },

    /**
     * Displays another tab
     *
     * @param event
     */
    selectTab: function selectTab(event) {
      this.getRoot().trigger('column-tab:select-tab', event);
      this.setCurrentTab(event.currentTarget.dataset.tab);
      this.render();
    },

    /**
     * Set the current tab
     *
     * @param {string} tabCode
     */
    setCurrentTab: function setCurrentTab(tabCode) {
      this.currentTab = tabCode;
    },

    /**
     * Returns the current tab.
     * If there is no selected tab, returns the first available tab.
     */
    getCurrentTabOrDefault: function getCurrentTabOrDefault() {
      var result = _.findWhere(this.getTabs(), {
        code: this.currentTab
      });

      return undefined !== result ? result.code : _.first(_.pluck(this.tabs, 'code'));
    },

    /**
     * Returns the list of visible tabs
     */
    getTabs: function getTabs() {
      return _.filter(this.tabs, function (tab) {
        return !_.isFunction(tab.isVisible) || tab.isVisible();
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 69607:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/column-tabs.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Form tabs extension
 * This is an extension of the form-tabs, to be able to display select buttons in a higher element.
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/form-tabs */ 55229), __webpack_require__(/*! pim/template/form/column-tabs */ 89875)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, FormTabs, template) {
  return FormTabs.extend({
    className: '',
    template: _.template(template),
    currentKey: 'current_column_tab',

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'column-tab:select-tab', this.selectTab);
      return FormTabs.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    registerTab: function registerTab(event) {
      FormTabs.prototype.registerTab.apply(this, arguments);
      this.getRoot().trigger('column-tab:register', event);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 61752:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/column.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Display a vertical column for navigation or filters
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/column */ 69167), __webpack_require__(/*! pim/template/form/column-navigation */ 66872)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template, navigationTemplate) {
  return BaseForm.extend({
    className: 'AknColumn',
    template: _.template(template),
    navigationTemplate: _.template(navigationTemplate),
    events: {
      'click .AknColumn-collapseButton': 'toggleColumn',
      'click .navigation-link': 'redirect'
    },
    navigationItems: [],

    /**
     * @param {string} meta.config.navigationTitle Title of the navigation dropdown
     * @param {string} meta.config.stateCode       This is a key to identify each module using column, to
     *                 store if the column is collapsed or not. If you want to use the different collapsed
     *                 states, use different "stateCode" value.
     *
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      this.navigationItems = [];
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.onExtensions('pim_menu:column:register_navigation_item', this.registerNavigationItem);
      this.getRoot().on('pim_menu:item:update_route_params', this.updateNavigationItemRouteParams, this);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty().append(this.template());

      if (!_.isEmpty(this.getNavigationItems())) {
        this.$el.find('.column-inner').prepend(this.navigationTemplate({
          navigationItems: this.getNavigationItems(),
          title: __(this.config.navigationTitle)
        }));
      }

      if (this.isCollapsed()) {
        this.setCollapsed(true);
      }

      this.delegateEvents();
      return BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    toggleColumn: function toggleColumn() {
      this.setCollapsed(!this.isCollapsed());
    },

    /**
     * Returns true if the column is collapsed.
     * It uses the session storage with a key attached to this module.
     * If no key was found, returns false by default.
     *
     * @returns {boolean}
     */
    isCollapsed: function isCollapsed() {
      var result = sessionStorage.getItem(this.getSessionStorageKey());

      if (null === result) {
        return false;
      }

      return '1' === result;
    },

    /**
     * Stores in the session storage if the column is collapsed or not.
     *
     * @param {boolean} value
     */
    setCollapsed: function setCollapsed(value) {
      sessionStorage.setItem(this.getSessionStorageKey(), value ? '1' : '0');
      var collapseModifier = '';

      if (this.config.collapsedModifier !== undefined) {
        collapseModifier = this.config.collapsedModifier;
      }

      if (value) {
        this.$el.addClass('AknColumn--collapsed ' + collapseModifier);
      } else {
        this.$el.removeClass('AknColumn--collapsed ' + collapseModifier);
      }
    },

    /**
     * Returns the key used by the session storage for this module.
     *
     * @returns {string}
     */
    getSessionStorageKey: function getSessionStorageKey() {
      return 'collapsedColumn_' + this.config.stateCode;
    },

    /**
     * Registers a new item to display on navigation template
     *
     * @param {Event}    navigationItem
     * @param {string}   navigationItem.label
     * @param {function} navigationItem.isVisible
     * @param {string}   navigationItem.code
     */
    registerNavigationItem: function registerNavigationItem(navigationItem) {
      this.navigationItems.push(navigationItem);
    },

    /**
     * Update a navigation item route params.
     *
     * @param {string} payload
     * @param {string} payload.route
     * @param {string} payload.routeParams
     */
    updateNavigationItemRouteParams: function updateNavigationItemRouteParams(payload) {
      var item = this.findNavigationItemByRoute(payload.route);

      if (undefined === item) {
        return;
      }

      item.routeParams = payload.routeParams;
    },

    /**
     * Find a navigation item by route.
     *
     * @param {string} route
     *
     * @return {(object|undefined)}
     */
    findNavigationItemByRoute: function findNavigationItemByRoute(route) {
      return this.navigationItems.find(function (item) {
        return item.route === route;
      });
    },

    /**
     * Returns the visible navigation items
     *
     * @returns {Array}
     */
    getNavigationItems: function getNavigationItems() {
      return _.filter(this.navigationItems, function (navigationItem) {
        return !_.isFunction(navigationItem.isVisible) || navigationItem.isVisible();
      });
    },

    /**
     * @param {Event} event
     */
    redirect: function redirect(event) {
      this.getRoot().trigger('column-tab:select-tab', event);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71293:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/creation/field.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Generic field to be added in a creation form
 *
 * @author    Alban Alnot <alban.alnot@consertotech.pro>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/creation/field */ 19882)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),
    dialog: null,
    events: {
      'keyup input': 'updateModel',
      'change input': 'updateModel'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      this.identifier = this.config.identifier || 'code';
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Model update callback
     */
    updateModel: function updateModel(event) {
      this.getFormModel().set(this.identifier, event.target.value || '');
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      if (!this.configured) this;
      var errors = this.getRoot().validationErrors || [];
      this.$el.html(this.template({
        identifier: this.identifier,
        label: __(this.config.label),
        requiredLabel: __('pim_common.required_label'),
        errors: errors.filter(function (error) {
          var id = _this.identifier;
          var path = error.path,
              attribute = error.attribute;
          return id === path || id === attribute;
        }),
        value: this.getFormData()[this.identifier]
      }));
      this.delegateEvents();
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71290:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/creation/job.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Group type select2 to be added in a creation form
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/form/creation/job */ 46837), __webpack_require__(/*! pim/base-fetcher */ 77289)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, Routing, BaseForm, UserContext, i18n, __, template, BaseFetcher) {
  return BaseForm.extend({
    options: {},
    template: _.template(template),
    events: {
      'change select': 'updateModel'
    },

    /**
     * Configure the form
     *
     * @return {Promise}
     */
    configure: function configure() {
      var _arguments = arguments,
          _this = this;

      var jobType = this.options.config.type;
      var fetcher = new BaseFetcher({
        urls: {
          list: this.options.config.url
        }
      });
      return fetcher.search({
        jobType: jobType
      }).then(function (jobs) {
        _this.jobs = jobs;
        BaseForm.prototype.configure.apply(_this, _arguments);
      });
    },

    /**
     * Model update callback
     */
    updateModel: function updateModel(event) {
      var option = this.$(event.target);
      var optionParent = $(':selected', option).closest('optgroup');
      this.getFormModel().set({
        alias: option.val(),
        connector: optionParent.attr('label')
      });
    },

    /**
     * Renders the form
     *
     * @return {Promise}
     */
    render: function render() {
      if (!this.configured) return this;
      var errors = this.getRoot().validationErrors || [];
      var identifier = this.options.config.identifier || 'alias';
      this.$el.html(this.template({
        label: __(this.options.config.label),
        jobs: this.jobs,
        required: __('pim_common.required_label'),
        selectedJobType: this.getFormData().alias,
        errors: errors.filter(function (error) {
          return error.path === identifier;
        }),
        __: __
      }));
      this.$el.find('.job-input').select2();
      this.delegateEvents();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 90906:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/creation/modal.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/template/form/creation/modal */ 77123), __webpack_require__(/*! pim/common/property */ 64070)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, Routing, BaseForm, FormBuilder, UserContext, LoadingMask, router, messenger, template, propertyAccessor) {
  return BaseForm.extend({
    config: {},
    template: _.template(template),
    validationErrors: [],

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        innerDescription: __(this.config.labels.content),
        fields: null,
        hint: this.config.hint ? __(this.config.hint.title).replace('{{link}}', this.config.hint.link) : null
      }));
      this.renderExtensions();
      return this;
    },

    /**
     * Opens the modal then instantiates the creation form inside it.
     * This function returns a rejected promise when the popin
     * is canceled and a resolved one when it's validated.
     *
     * @return {Promise}
     */
    open: function open() {
      var deferred = $.Deferred();
      var modal = new Backbone.BootstrapModal({
        title: __(this.config.labels.title),
        subtitle: __(this.config.labels.subTitle),
        picture: this.config.picture,
        content: '',
        okText: __('pim_common.save'),
        okCloses: false
      });
      modal.open();
      this.setElement(modal.$('.modal-body')).render(); // TODO Find why this is used. Probably behats.

      modal.$('.modal-body').addClass('creation');
      modal.on('cancel', function () {
        deferred.reject();
        modal.remove();
      });
      modal.on('ok', this.confirmModal.bind(this, modal, deferred));
      return deferred.promise();
    },

    /**
     * Confirm the modal and redirect to route after save
     * @param  {Object} modal    The backbone view for the modal
     * @param  {Promise} deferred Promise to resolve
     */
    confirmModal: function confirmModal(modal, deferred) {
      var _this = this;

      this.save().done(function (entity) {
        modal.close();
        modal.remove();
        deferred.resolve();
        var routerParams = {};

        if (_this.config.routerKey && _this.config.entityIdentifierParamName) {
          routerParams[_this.config.routerKey] = propertyAccessor.accessProperty(entity, _this.config.entityIdentifierParamName, '');
        } else if (_this.config.routerKey) {
          routerParams[_this.config.routerKey] = entity[_this.config.routerKey];
        } else {
          routerParams = {
            id: entity.meta.id
          };
        }

        _this.postSuccess(entity);

        router.redirectToRoute(_this.config.editRoute, routerParams);
      });
    },
    postSuccess: function postSuccess() {
      messenger.notify('success', __(this.config.successMessage));
    },

    /**
     * Normalize the path property for validation errors
     * @param  {Array} errors
     * @return {Array}
     */
    normalize: function normalize(errors) {
      var values = errors.values || [];
      return values.map(function (error) {
        if (!error.path) {
          error.path = error.attribute;
        }

        return error;
      });
    },

    /**
     * Save the form content by posting it to backend
     *
     * @return {Promise}
     */
    save: function save() {
      this.validationErrors = {};
      var loadingMask = new LoadingMask();
      this.$el.empty().append(loadingMask.render().$el.show());
      var data = $.extend(this.getFormData(), this.config.defaultValues || {});

      if (this.config.excludedProperties) {
        data = _.omit(data, this.config.excludedProperties);
      }

      return $.ajax({
        url: Routing.generate(this.config.postUrl),
        type: 'POST',
        data: JSON.stringify(data)
      }).fail(function (response) {
        if (response.responseJSON) {
          this.getRoot().trigger('pim_enrich:form:entity:bad_request', {
            sentData: this.getFormData(),
            response: response.responseJSON.values
          });
        }

        this.validationErrors = response.responseJSON ? this.normalize(response.responseJSON) : [{
          message: __('pim_enrich.entity.fallback.generic_error')
        }];
        this.render();
      }.bind(this)).always(function () {
        return loadingMask.remove();
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 39025:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/creation/modal/client.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/creation/modal */ 90906), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseModal, messenger, mediator, __) {
  return BaseModal.extend({
    /**
     * {@inheritdoc}
     */
    confirmModal: function confirmModal(modal, deferred) {
      var _this = this;

      this.save().done(function () {
        modal.close();
        modal.remove();
        deferred.resolve();
        messenger.notify('success', __(_this.config.successMessage));
        mediator.trigger('datagrid:doRefresh:' + _this.config.gridName);
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 6603:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/creation/modal/create-user.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/creation/modal */ 90906)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseModal) {
  return BaseModal.extend({
    events: {
      'keyup input': 'updateButtonState'
    },
    updateButtonState: function updateButtonState() {
      this.$el.parent().find('.AknButton.ok').toggleClass('AknButton--disabled', !this.isReadyToSubmit());
    },
    isReadyToSubmit: function isReadyToSubmit() {
      var _this = this;

      var data = this.getFormData();
      return !Object.keys(this.extensions).some(function (extensionKey) {
        var extension = _this.getExtension(extensionKey);

        return extension.config.required && (undefined === data[extension.fieldName] || '' === data[extension.fieldName]);
      });
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      BaseModal.prototype.render.apply(this, arguments);
      this.updateButtonState();
      return this;
    },

    /**
     * {@inheritdoc}
     */
    confirmModal: function confirmModal() {
      if (!this.isReadyToSubmit()) return;
      return BaseModal.prototype.confirmModal.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 69615:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/creation/type.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Group type select2 to be added in a creation form
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/template/form/creation/type */ 52844)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, Routing, BaseForm, UserContext, i18n, __, FetcherRegistry, initSelect2, template) {
  return BaseForm.extend({
    options: {},
    template: _.template(template),
    events: {
      'change input': 'updateModel'
    },

    /**
     * Model update callback
     */
    updateModel: function updateModel() {
      var model = this.getFormModel();
      var type = this.$('input').select2('val');
      model.set('type', type);
    },

    /**
     * Fetch group types
     * @param  {HTMLElement}   element  select2 element
     * @param  {Function} callback
     */
    fetchGroupTypes: function fetchGroupTypes(element, callback) {
      var _this = this;

      var fetcher = FetcherRegistry.getFetcher('group-type');
      var modelType = this.getFormData().type;
      fetcher.fetchAll().then(function (types) {
        var results = _this.parseResults(types).results;

        var selectedType = modelType || results[0].id;

        _this.getFormModel().set('type', selectedType);

        callback(results[0]);
      });
    },

    /**
     * Parses each group type for the select display
     *
     * @param  {Array} types The search results
     * @return {Object}
     */
    parseResults: function parseResults(types) {
      var locale = UserContext.get('catalogLocale');
      var data = {
        results: []
      };

      _.reject(types, {
        is_variant: !this.options.config.include_variant
      }).forEach(function (value) {
        var code = value.code,
            labels = value.labels;
        data.results.push({
          id: code,
          text: i18n.getLabel(labels, locale, code)
        });
      });

      return data;
    },

    /**
     * Renders the form
     *
     * @return {Promise}
     */
    render: function render() {
      if (!this.configured) return this;
      var formData = this.getFormData();
      var locale = UserContext.get('catalogLocale');
      this.$el.html(this.template({
        label: __('pim_common.type'),
        type: formData.type,
        required: __('pim_common.required_label'),
        isEditable: this.options.config.editable
      }));
      var options = {
        initSelection: this.fetchGroupTypes.bind(this),
        allowClear: false,
        ajax: {
          url: Routing.generate('pim_enrich_grouptype_rest_index'),
          results: this.parseResults.bind(this),
          quietMillis: 250,
          cache: true,
          data: function data(search) {
            return {
              search: search,
              options: {
                limit: 20,
                locale: locale
              }
            };
          }
        }
      };
      initSelect2.init(this.$('input'), options).select2('val', []);
      this.delegateEvents();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 60721:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/delete.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension
 *
 * @author    Clement Gautier <clement.gautier@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/delete */ 1653), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/dialog */ 42905)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template, router, LoadingMask, messenger, Dialog) {
  return BaseForm.extend({
    tagName: 'button',
    className: 'AknDropdown-menuLink delete',
    template: _.template(template),
    events: {
      click: 'delete'
    },

    /**
     * The remover should be injected / overridden by the concrete implementation
     * It is an object that define a remove function
     */
    remover: {
      remove: function remove() {
        throw 'Remove function should be implemented in remover';
      }
    },

    /**
     * @param {Object} meta
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, {
        trans: {
          title: 'pim_enrich.entity.fallback.module.delete.item',
          content: 'pim_common.confirm_deletion',
          success: 'pim_enrich.entity.fallback.flash.delete.success',
          fail: 'pim_enrich.entity.fallback.flash.delete.error',
          subTitle: '',
          buttonText: 'pim_common.delete'
        },
        redirect: 'oro_default'
      }, meta.config);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        __: __
      }));
      this.delegateEvents();
      return this;
    },

    /**
     * Open a dialog to ask the user to confirm the deletion
     */
    "delete": function _delete() {
      return Dialog.confirmDelete(__(this.config.trans.title), __(this.config.trans.content), this.doDelete.bind(this), __(this.config.trans.subTitle), __(this.config.trans.buttonText));
    },

    /**
     * Send a request to the backend in order to delete the element
     */
    doDelete: function doDelete() {
      var config = this.config;
      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo(this.getRoot().$el).show();
      this.remover.remove(this.getIdentifier()).done(function () {
        messenger.notify('success', __(this.config.trans.success));
        router.redirectToRoute(this.config.redirect);
      }.bind(this)).fail(function (xhr) {
        var message = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : __(config.trans.fail);
        messenger.notify('error', message);
      }.bind(this)).always(function () {
        loadingMask.hide().$el.remove();
      });
    },

    /**
     * Get the current form identifier
     *
     * @return {String}
     */
    getIdentifier: function getIdentifier() {
      return this.getFormData().code;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29814:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/download-file.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Download file extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Alban Alnot <alban.alnot@consertotech.pro>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/download-file */ 31170), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/common/property */ 64070)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template, Routing, UserContext, propertyAccessor) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.isVisible()) {
        return this;
      }

      this.$el.html(this.template({
        btnLabel: __(this.config.label),
        btnIcon: this.config.iconName,
        url: this.getUrl()
      }));
      return this;
    },

    /**
     * Get the url with parameters
     *
     * @returns {string}
     */
    getUrl: function getUrl() {
      var parameters = {};

      if (this.config.urlParams) {
        var formData = this.getFormData();
        this.config.urlParams.forEach(function (urlParam) {
          parameters[urlParam.property] = propertyAccessor.accessProperty(formData, urlParam.path);
        });
      }

      return Routing.generate(this.config.url, parameters);
    },

    /**
     * Returns true if the extension should be visible
     *
     * @returns {boolean}
     */
    isVisible: function isVisible() {
      return propertyAccessor.accessProperty(this.getFormData(), this.config.isVisiblePath);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 2891:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/edit-form.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"forwarded-events":{"pim_enrich:form:field:extension:add":"pim_enrich:form:field:extension:add","pim_enrich:form:filter:extension:add":"pim_enrich:form:filter:extension:add","pim_enrich:form:entity:pre_save":"pim_enrich:form:entity:pre_save","pim_enrich:form:entity:update_state":"pim_enrich:form:entity:update_state","pim_enrich:form:entity:post_fetch":"pim_enrich:form:entity:post_fetch"}} ; 'use strict';
/**
 * Edit form
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alps <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/common/default-template */ 39781), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! require-context */ 76925), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, Backbone, template, BaseForm, mediator, FetcherRegistry, FieldManager, formBuilder, RequireContext, messenger, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    scrollPosition: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(options) {
      options = options || {};

      if (options.config && options.config.template) {
        this.template = _.template(RequireContext(options.config.template));
      }
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      mediator.clear('pim_enrich:form');
      Backbone.Router.prototype.once('route', this.unbindEvents);

      if (_.has(__moduleConfig, 'forwarded-events')) {
        this.forwardMediatorEvents(__moduleConfig['forwarded-events']);
      }

      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.displayError.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:extension:render:before', function () {
        _this.saveScroll();
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:extension:render:after', function () {
        _this.setScroll();
      });
      this.listenTo(this.getRoot(), 'group:change', function () {
        _this.resetScroll();
      });
      this.onExtensions('save-buttons:register-button', function (button) {
        var saveButtonsExtension = this.getExtension('save-buttons');

        if (undefined === saveButtonsExtension) {
          throw Error('edit-form extension should declare save-buttons extension to be able to use ' + 'save extension');
        }

        saveButtonsExtension.trigger('save-buttons:add-button', button);
      }.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.getRoot().trigger('pim_enrich:form:render:before');
      this.getRoot().trigger('pim_enrich:form:extension:render:before');
      this.$el.html(this.template());
      this.renderExtensions();
      this.getRoot().trigger('pim_enrich:form:render:after');
      this.getRoot().trigger('pim_enrich:form:extension:render:after');
      analytics.track('form:edit:opened', {
        code: this.code,
        model: this.model
      });
    },

    /**
     * Save the current scroll position
     */
    saveScroll: function saveScroll() {
      var containerElement = this.el.querySelector('.edit-form');

      if (containerElement) {
        this.scrollPosition = containerElement.scrollTop;
      }
    },

    /**
     * Set the scroll position to its former value
     */
    setScroll: function setScroll() {
      var containerElement = this.el.querySelector('.edit-form');

      if (containerElement && null !== this.scrollPosition) {
        containerElement.scrollTop = this.scrollPosition;
      }
    },
    resetScroll: function resetScroll() {
      this.scrollPosition = 0;
    },

    /**
     * Clear the mediator
     */
    unbindEvents: function unbindEvents() {
      mediator.clear('pim_enrich:form');
    },

    /**
     * Clear the cached information
     */
    clearCache: function clearCache() {
      FetcherRegistry.clearAll();
      FieldManager.clearFields();
      this.render();
    },

    /**
     * Display validation error as flash message
     *
     * @param {Event} event
     */
    displayError: function displayError(event) {
      if (!Array.isArray(event.response) && event.response.global) {
        messenger.notify('error', event.response.message);
      } else {
        _.each(event.response, function (error) {
          if (error.global) {
            messenger.notify('error', error.message);
          }
        });
      }
    },

    /**
     * Get header size of the form
     *
     * @return {number}
     */
    headerSize: function headerSize() {
      var header = this.el.querySelector('header.navigation');
      return null !== header ? header.offsetHeight : 0;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 87558:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/exclusif-boolean.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/exclusif-boolean */ 39300)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var self = this;
      this.booleanExtensions = Object.values(this.extensions).filter(function (extension) {
        return self.isBooleanExtension(extension);
      });
      BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        fields: null
      }));
      var extensionChecked = this.getCheckedExtension();
      Object.values(this.booleanExtensions).forEach(function (extension) {
        extension.readOnly = extensionChecked && extensionChecked !== extension;
      });
      this.renderExtensions();
    },
    isBooleanExtension: function isBooleanExtension(extension) {
      return extension.options.module === 'pim/form/common/fields/boolean';
    },
    getCheckedExtension: function getCheckedExtension() {
      var formData = this.getFormData();
      var checkedExtension = Object.values(this.booleanExtensions).filter(function (extension) {
        return formData.hasOwnProperty(extension.fieldName) && formData[extension.fieldName] === true;
      });
      return checkedExtension[0] || null;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 46164:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/boolean.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! pim/template/form/common/fields/boolean */ 83865), __webpack_require__(/*! bootstrap.bootstrapswitch */ 86049)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseField, template) {
  return BaseField.extend({
    events: {
      'change input': function changeInput(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
        this.getRoot().render();
      }
    },
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      if (undefined === this.getModelValue() && _.has(this.config, 'defaultValue')) {
        this.updateModel(this.config.defaultValue);
      }

      return this.template(_.extend(templateContext, {
        value: this.getModelValue(),
        labels: {
          on: __('pim_common.yes'),
          off: __('pim_common.no')
        }
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('.switch').bootstrapSwitch();
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      return $(field).is(':checked');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 97136:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/date.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! datepicker */ 83586), __webpack_require__(/*! pim/formatter/date */ 54555), __webpack_require__(/*! pim/date-context */ 24846), __webpack_require__(/*! pim/template/form/common/fields/date */ 11847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseField, Datepicker, DateFormatter, DateContext, template) {
  return BaseField.extend({
    events: {
      'change input': function changeInput(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
        this.getRoot().render();
      }
    },
    template: _.template(template),
    modelDateFormat: 'yyyy-MM-dd',

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      var value = DateFormatter.format(this.getModelValue(), this.modelDateFormat, DateContext.get('date').format);
      return this.template(_.extend(templateContext, {
        value: value,
        readOnly: this.readOnly
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      Datepicker.init(this.$('.date-wrapper'), {
        format: DateContext.get('date').format,
        defaultFormat: DateContext.get('date').defaultFormat,
        language: DateContext.get('language')
      }).on('changeDate', function () {
        this.errors = [];
        this.updateModel(this.getFieldValue(this.$('input')[0]));
        this.$('.date-wrapper').datetimepicker('destroy');
        this.getRoot().render();
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      var dateFormat = DateContext.get('date').format;
      var value = $(field).val();
      return DateFormatter.format(value, dateFormat, this.modelDateFormat);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 74695:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/field.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Abstract attribute form field.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/common/tab */ 56135), __webpack_require__(/*! pim/template/form/common/fields/field */ 83102), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, propertyAccessor, Tab, template, analytics) {
  return BaseForm.extend({
    className: 'AknFieldContainer',
    containerTemplate: _.template(template),
    config: {},
    elements: {},
    fieldName: null,
    errors: [],
    warnings: [],
    readOnly: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;

      if (undefined === this.config.fieldName) {
        throw new Error('This view must be configured with a field name.');
      }

      this.fieldName = this.config.fieldName;
      this.readOnly = this.config.readOnly || false;
      this.errors = [];
      this.warnings = [];
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.onBadRequest.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_save', this.render.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * @param {Object} event
     */
    onBadRequest: function onBadRequest(event) {
      this.errors = this.getFieldErrors(event.response);
      this.render();

      if (this.errors.length) {
        this.getRoot().trigger('pim_enrich:form:form-tabs:add-errors', {
          tabCode: this.getTabCode(),
          errors: this.errors
        });
        this.getRoot().trigger('pim_enrich:form:form-tabs:change', this.getTabCode());
      }
    },

    /**
     * Filter errors to return only the ones related to this field.
     *
     * @param {Array} errors
     *
     * @returns {Array}
     */
    getFieldErrors: function getFieldErrors(errors) {
      var _this = this;

      return errors.filter(function (error) {
        var fieldNameParts = _this.fieldName.split('.');

        var lastPart = fieldNameParts[fieldNameParts.length - 1];

        if (error.path === undefined) {
          return lastPart === error.attribute || lastPart === undefined;
        }

        var splittedParts = error.path.split(/\[|\]/).filter(function (part) {
          return part !== '';
        });
        return lastPart === error.path || lastPart === error.attribute || JSON.stringify(fieldNameParts) === JSON.stringify(splittedParts);
      });
    },

    /**
     * Recursively search for the first tab ancestor if any, and returns its code. Sorry.
     *
     * @returns {String}
     */
    getTabCode: function getTabCode() {
      var parent = this.getParent();

      while (!(parent instanceof Tab)) {
        parent = parent.getParent();

        if (null === parent) {
          return null;
        }
      }

      return parent.code;
    },

    /**
     * Renders the container template.
     */
    render: function render() {
      if (!this.isVisible()) {
        this.$el.empty();
        return;
      }

      this.getTemplateContext().then(function (templateContext) {
        this.$el.html(this.containerTemplate(templateContext));
        this.$('.field-input').replaceWith(this.renderInput(templateContext));
        this.postRender(templateContext);
        this.renderExtensions();
        this.delegateEvents();
      }.bind(this));
      return this;
    },

    /**
     * Returns the context params that will be passed to templates.
     *
     * @returns {Promise}
     */
    getTemplateContext: function getTemplateContext() {
      var templateParams = this.config.templateParams || {};
      return $.Deferred().resolve(Object.assign({}, {
        fieldLabel: this.getLabel(),
        requiredLabel: this.getRequiredLabel(),
        fieldName: this.fieldName,
        fieldId: this.getFieldId(),
        errors: this.errors,
        warnings: this.warnings,
        readOnly: this.isReadOnly(),
        required: this.config.required || false,
        messageOnReadOnly: __(this.config.messageOnReadOnly) || '',
        __: __
      }, templateParams)).promise();
    },

    /**
     * Renders the input inside the field container.
     */
    renderInput: function renderInput() {
      throw new Error('Please implement the renderInput() method in your concrete field class.');
    },

    /**
     * Called after rendering the input.
     */
    postRender: function postRender() {},

    /**
     * @returns {string}
     */
    getLabel: function getLabel() {
      return undefined === this.config.label ? '[' + this.fieldName + ']' : __(this.config.label);
    },

    /**
     * @returns {string}
     */
    getRequiredLabel: function getRequiredLabel() {
      return undefined === this.config.requiredLabel ? __('pim_common.required_label') : __(this.config.requiredLabel);
    },

    /**
     * Should the field be displayed?
     *
     * @returns {Boolean}
     */
    isVisible: function isVisible() {
      return true;
    },

    /**
     * Should the field be in readonly mode?
     *
     * @returns {Boolean}
     */
    isReadOnly: function isReadOnly() {
      return this.readOnly;
    },

    /**
     * Sets the param readOnly of the field
     *
     * @param {Boolean} readOnly
     */
    setReadOnly: function setReadOnly(readOnly) {
      this.readOnly = Boolean(readOnly);
    },

    /**
     * Receives the new value and updates the data model with it.
     *
     * @param {*} value
     */
    updateModel: function updateModel(value) {
      var data = this.getFormData();
      propertyAccessor.updateProperty(data, this.fieldName, value);
      analytics.track('common:form:value-changed', {
        code: this.code,
        name: this.fieldName
      });
      this.setData(data);
    },

    /**
     * Reads and returns the field value from the model.
     *
     * @returns {*}
     */
    getModelValue: function getModelValue() {
      var value = propertyAccessor.accessProperty(this.getFormData(), this.fieldName);
      return null === value ? undefined : value;
    },

    /**
     * Returns a pseudo-unique code used as reference inside templates (as "for" attributes values for example).
     *
     * @returns {String}
     */
    getFieldId: function getFieldId() {
      return Math.random().toString(10).substring(2);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 14159:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/metric.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/form/common/fields/metric */ 17487), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseField, __, FetcherRegistry, template, UserContext, i18n) {
  return BaseField.extend({
    events: {
      'keyup input': function keyupInput() {
        this.errors = [];
        this.updateModel(this.getValue());
      },
      'change select': function changeSelect() {
        this.errors = [];
        this.updateModel(this.getValue());
        this.getRoot().render();
      }
    },
    template: _.template(template),
    metricFamily: null,
    defaultMetricUnit: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.metricFamily = null;
      this.defaultMetricUnit = null;
      return BaseField.prototype.initialize.apply(this, arguments);
    },

    /**
     * @param {String} metricFamily
     */
    setMetricFamily: function setMetricFamily(metricFamily) {
      this.metricFamily = metricFamily;
    },

    /**
     * @param {String} defaultMetricUnit
     */
    setDefaultMetricUnit: function setDefaultMetricUnit(defaultMetricUnit) {
      this.defaultMetricUnit = defaultMetricUnit;
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend(templateContext, {
        value: {
          amount: this.getModelValuePart('amount'),
          unit: this.getModelValuePart('unit')
        }
      }));
    },

    /**
     * @param {String} name
     *
     * @returns {*|null}
     */
    getModelValuePart: function getModelValuePart(name) {
      return undefined !== this.getModelValue() ? this.getModelValue()[name] : null;
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      var _this = this;

      return $.when(BaseField.prototype.getTemplateContext.apply(this, arguments), FetcherRegistry.getFetcher('measure').fetchAll()).then(function (parentContext, measures) {
        var measurementFamily = measures.find(function (family) {
          return family.code === _this.metricFamily;
        });
        return Object.assign({}, parentContext, {
          unitChoices: _this.formatChoices(measurementFamily.units),
          defaultUnit: _this.defaultMetricUnit
        });
      });
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('select.select2').select2({
        allowClear: true
      });
    },

    /**
     * Transforms:
     *
     * {
     *     BIT: {...},
     *     BYTE: {...}
     * }
     *
     * into:
     *
     * {
     *     BIT: "Bit",
     *     BYTE: "Octet"
     * }
     *
     * (for locale fr_FR)
     *
     * @param {Object} units
     */
    formatChoices: function formatChoices(units) {
      var choices = {};
      var locale = UserContext.get('uiLocale');
      units.forEach(function (unit) {
        return choices[unit.code] = i18n.getLabel(unit.labels, locale, unit.code);
      });
      return choices;
    },

    /**
     * @return {Object}
     */
    getValue: function getValue() {
      return {
        amount: this.$('.amount').val(),
        unit: this.$('.unit').val()
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 48400:
/*!**************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/multi-select-async.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2018 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form/common/fields/simple-select-async */ 29915)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, SimpleSelectAsync) {
  return SimpleSelectAsync.extend({
    /**
     * {@inheritdoc}
     */
    getSelect2Options: function getSelect2Options() {
      var parent = SimpleSelectAsync.prototype.getSelect2Options.apply(this, arguments);
      parent.multiple = true;
      return parent;
    },

    /**
     * {@inheritdoc}
     */
    select2InitSelection: function select2InitSelection(element, callback) {
      var _this = this;

      var strValues = $(element).val();
      var values = strValues.split(',');

      if (values.length > 0) {
        $.ajax({
          url: this.choiceUrl,
          data: {
            options: {
              identifiers: strValues
            }
          },
          type: this.choiceVerb
        }).then(function (response) {
          var selecteds = Object.values(response.results).filter(function (item) {
            return values.indexOf(item.code) > -1;
          });

          if (selecteds.length === 0) {
            selecteds = Object.values(response.results).filter(function (item) {
              return values.indexOf(item.id) > -1;
            });
          } else {
            selecteds = selecteds.map(function (selected) {
              return _this.convertBackendItem(selected);
            });
          }

          callback(selecteds);
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71364:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/select.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/form/common/fields/select */ 60191)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseField, __, template) {
  return BaseField.extend({
    events: {
      'change select': function changeSelect(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
        this.getRoot().render();
      }
    },
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      if (undefined === this.getModelValue() && _.has(this.config, 'defaultValue')) {
        this.updateModel(this.config.defaultValue);
      }

      return this.template(_.extend(templateContext, {
        value: this.getModelValue(),
        choices: this.formatChoices(this.config.choices || []),
        multiple: this.config.isMultiple,
        labels: {
          defaultLabel: this.getDefaultLabel()
        }
      }));
    },

    /**
     * Returns the default label for empty value
     *
     * @returns {string}
     */
    getDefaultLabel: function getDefaultLabel() {
      return '';
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('select.select2').select2({
        allowClear: this.config.allowClear !== undefined ? this.config.allowClear : true
      });
    },

    /**
     * @param {Array} choices
     */
    formatChoices: function formatChoices(choices) {
      return Array.isArray(choices) ? _.object(choices, choices) : _.mapObject(choices, __);
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      var value = '' === $(field).val() ? null : $(field).val();
      return this.config.isMultiple && null === value ? [] : value;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29915:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/simple-select-async.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/template/form/common/fields/simple-select-async */ 50427), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseField, __, i18n, initSelect2, UserContext, template, Routing) {
  return BaseField.extend({
    template: _.template(template),
    choiceUrl: null,
    resultsPerPage: 20,
    allowClear: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.choiceUrl = null;
      this.choiceVerb = 'GET';
      BaseField.prototype.initialize.apply(this, arguments);

      if (undefined !== this.config.choiceRoute) {
        this.setChoiceUrl(Routing.generate(this.config.choiceRoute));
      }

      if (undefined !== this.config.choiceVerb) {
        this.choiceVerb = this.config.choiceVerb;
      }
    },

    /**
     * Sets the URL that will be used by select2 to fetch choices from the backend.
     *
     * @param {String} choiceUrl
     */
    setChoiceUrl: function setChoiceUrl(choiceUrl) {
      this.choiceUrl = choiceUrl;
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend(templateContext, {
        value: this.getModelValue()
      }));
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender(templateContext) {
      var _this = this;

      var $select2 = this.$('.select2');
      initSelect2.init($select2, this.getSelect2Options(templateContext));

      var onChange = function onChange() {
        _this.errors = [];

        _this.updateModel(_this.getFieldValue($select2));

        _this.getRoot().render();
      };

      $select2.on('change', onChange);
    },

    /**
     * Returns the options for Select2 library
     *
     * @returns {Object}
     */
    getSelect2Options: function getSelect2Options() {
      return {
        ajax: {
          url: this.choiceUrl,
          cache: true,
          data: this.select2Data.bind(this),
          results: this.select2Results.bind(this),
          type: this.choiceVerb
        },
        initSelection: this.select2InitSelection.bind(this),
        formatResult: function formatResult(result, container, query, escapeMarkup) {
          container.attr('title', result.text);
          return $.fn.select2.defaults.formatResult(result, container, query, escapeMarkup);
        },
        formatSelection: function formatSelection(data, container, escapeMarkup) {
          container.attr('title', data.text);
          return $.fn.select2.defaults.formatSelection(data, container, escapeMarkup);
        },
        placeholder: undefined !== this.config.placeholder ? __(this.config.placeholder) : ' ',
        dropdownCssClass: '',
        allowClear: this.allowClear
      };
    },

    /**
     * Formatting callback for select2 choices.
     *
     * @param {String} term
     * @param {Number} page
     *
     * @returns {Object}
     */
    select2Data: function select2Data(term, page) {
      return {
        search: term,
        options: {
          limit: this.resultsPerPage,
          page: page,
          catalogLocale: UserContext.get('catalogLocale')
        }
      };
    },

    /**
     * Select2 customization for pagination.
     *
     * @param response
     *
     * @returns {Object}
     */
    select2Results: function select2Results(response) {
      var _this2 = this;

      var nbResults = response.results ? Object.keys(response.results).length : Object.keys(response).length;
      var more = this.resultsPerPage === nbResults; // The result is already formatted for select2

      if (response.results) {
        response.more = more;
        return response;
      } // The result is an array


      if (response.isArray) {
        return {
          more: more,
          results: response.map(function (item) {
            return _this2.convertBackendItem(item);
          })
        };
      } // The result is an object


      return {
        more: more,
        results: Object.values(response).map(function (item) {
          return _this2.convertBackendItem(item);
        })
      };
    },

    /**
     * Select2 callback to fetch the initial value and display it properly.
     *
     * @param {Element} element
     * @param {Function} callback
     */
    select2InitSelection: function select2InitSelection(element, callback) {
      var _this3 = this;

      var id = $(element).val();

      if ('' !== id) {
        $.ajax({
          url: this.choiceUrl,
          data: {
            options: {
              identifiers: [id]
            }
          },
          type: this.choiceVerb
        }).then(function (response) {
          var selected = _.findWhere(response, {
            code: id
          });

          if (!selected) {
            selected = _.findWhere(response.results, {
              id: id
            });
          } else {
            selected = _this3.convertBackendItem(selected);
          }

          callback(selected);
        });
      }
    },

    /**
     * Converts the item returned from the backend to fit select2 needs.
     *
     * @param {Object} item
     *
     * @returns {Object}
     */
    convertBackendItem: function convertBackendItem(item) {
      if (undefined !== item.label) {
        return {
          id: item.code,
          text: item.label
        };
      }

      return {
        id: item.code,
        text: i18n.getLabel(item.labels, UserContext.get('catalogLocale'), item.code)
      };
    },

    /**
     * @param {Element} field
     *
     * @returns {String}
     */
    getFieldValue: function getFieldValue(field) {
      return $(field).val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 53228:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/text.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! pim/template/form/common/fields/text */ 71957)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseField, template) {
  return BaseField.extend({
    template: _.template(template),
    events: {
      'input input': function inputInput(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target)); // Text fields don't trigger form render because there is no case of dependency with other fields.
        // Also, the fact the form is rendered when the focus is lost causes issues with other events triggering
        // (e.g. click on another field or on a button).
      }
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend(templateContext, {
        value: this.getModelValue()
      }));
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      return $(field).val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 57749:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/textarea.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/fields/field */ 74695), __webpack_require__(/*! pim/template/form/common/fields/textarea */ 37887)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseField, template) {
  return BaseField.extend({
    template: _.template(template),
    events: {
      'keyup textarea': function keyupTextarea(event) {
        this.errors = [];
        this.updateModel(this.getFieldValue(event.target));
      }
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(templateContext) {
      return this.template(_.extend(templateContext, {
        value: this.getModelValue()
      }));
    },

    /**
     * {@inheritdoc}
     */
    getFieldValue: function getFieldValue(field) {
      return $(field).val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 91557:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/values/boolean.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @author    Damien Carcel <damien.carcel@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/fields/boolean */ 46164), __webpack_require__(/*! pim/form/common/fields/values/values-behavior */ 25955)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseField, ValuesBehavior) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     */
    updateModel: function updateModel(value) {
      ValuesBehavior.writeValue.call(this, BaseField, value);
    },

    /**
     * {@inheritdoc}
     */
    getModelValue: function getModelValue() {
      return ValuesBehavior.readValue.call(this, BaseField);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 4713:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/values/metric.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @author    Damien Carcel <damien.carcel@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/fields/metric */ 14159), __webpack_require__(/*! pim/form/common/fields/values/values-behavior */ 25955)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseField, ValuesBehavior) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     */
    updateModel: function updateModel(value) {
      ValuesBehavior.writeValue.call(this, BaseField, value);
    },

    /**
     * {@inheritdoc}
     */
    getModelValue: function getModelValue() {
      return ValuesBehavior.readValue.call(this, BaseField);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 40080:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/values/simple-select-async.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @author    Damien Carcel <damien.carcel@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/fields/simple-select-async */ 29915), __webpack_require__(/*! pim/form/common/fields/values/values-behavior */ 25955)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseField, ValuesBehavior) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     */
    updateModel: function updateModel(value) {
      ValuesBehavior.writeValue.call(this, BaseField, value);
    },

    /**
     * {@inheritdoc}
     */
    getModelValue: function getModelValue() {
      return ValuesBehavior.readValue.call(this, BaseField);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 86871:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/values/text.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @author    Damien Carcel <damien.carcel@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/fields/text */ 53228), __webpack_require__(/*! pim/form/common/fields/values/values-behavior */ 25955)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseField, ValuesBehavior) {
  return BaseField.extend({
    /**
     * {@inheritdoc}
     */
    updateModel: function updateModel(value) {
      ValuesBehavior.writeValue.call(this, BaseField, value);
    },

    /**
     * {@inheritdoc}
     */
    getModelValue: function getModelValue() {
      return ValuesBehavior.readValue.call(this, BaseField);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 25955:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/fields/values/values-behavior.js ***!
  \******************************************************************************/
/***/ ((module, exports) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Use this logic in fields manipulating values in standard format.
 * For the moment we don't need to read/write scopable and/or localizable values, so this logic is not
 * implemented yet.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @author    Damien Carcel <damien.carcel@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
  return {
    /**
     * Formats the value according to the standard format then store it by calling the original field's method.
     *
     * @param {Object} BaseField
     * @param {*} value
     */
    writeValue: function writeValue(BaseField, value) {
      BaseField.prototype.updateModel.call(this, [{
        scope: null,
        locale: null,
        data: value
      }]);
    },

    /**
     * Read a standard formatted value and returns its data.
     *
     * @param {Object} BaseField
     *
     * @returns {*}
     */
    readValue: function readValue(BaseField) {
      var standardValues = BaseField.prototype.getModelValue.call(this);
      return undefined === standardValues ? undefined : standardValues[0].data;
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 55229:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/form-tabs.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Form tabs extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/form-tabs */ 95239)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'tabbable tabs-top',
    tabs: [],
    urlParsed: false,
    events: {
      'click header ul.nav-tabs li': 'selectTab'
    },
    currentKey: 'current_form_tab',
    config: {},

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, {
        centered: false
      }, meta.config);
      this.tabs = [];
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.onExtensions('tab:register', this.registerTab.bind(this));
      this.onExtensions('tab:refresh', this.refreshTab.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:form-tabs:change', this.setCurrentTab);
      this.listenTo(this.getRoot(), 'pim_enrich:form:form-tabs:add-errors', this.addError);
      this.listenTo(this.getRoot(), 'pim_enrich:form:form-tabs:remove-errors', this.removeError);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Register a tab into the form tab extension
     *
     * @param {Event} event
     */
    registerTab: function registerTab(event) {
      var existingTab = this.tabs.find(function (currentTab) {
        return currentTab.code === event.code;
      });

      if (undefined === existingTab) {
        this.tabs.push({
          code: event.code,
          isVisible: event.isVisible,
          label: event.label,
          fieldErrors: []
        });
        this.render();
      } else {
        existingTab.label = event.label;
        existingTab.isVisible = event.isVisible;
      }
    },
    refreshTab: function refreshTab(event) {
      var existingTab = this.tabs.find(function (currentTab) {
        return currentTab.code === event.code;
      });

      if (existingTab) {
        existingTab.label = event.label;
        this.render();
      }
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured || _.isEmpty(this.tabs)) {
        return this;
      }

      var tabs = this.getTabs();
      this.ensureDefault();
      this.$el.html(this.template({
        tabs: tabs,
        currentTab: this.getCurrentTab(),
        centered: this.config.centered
      }));
      this.delegateEvents();
      this.initializeDropZones();
      var currentTab = this.getTabExtension(this.getCurrentTab());

      if (currentTab) {
        var zone = this.getZone('container');
        zone.appendChild(currentTab.el);
        this.renderExtension(currentTab);
      }

      var panelsExtension = this.getExtension('panels');

      if (panelsExtension) {
        this.getZone('panels').appendChild(panelsExtension.el);
        this.renderExtension(panelsExtension);
      }

      return this;
    },

    /**
     * Get visible tabs
     *
     * @return {Array}
     */
    getTabs: function getTabs() {
      var tabs = _.clone(this.tabs);

      tabs = _.filter(tabs, function (tab) {
        return !_.isFunction(tab.isVisible) || tab.isVisible();
      });
      return tabs;
    },

    /**
     * Select a tab in the form-tabs
     *
     * @param {Event} event
     */
    selectTab: function selectTab(event) {
      this.getRoot().trigger('pim_enrich:form:form-tabs:change', event.currentTarget.dataset.tab);
    },

    /**
     * Set the current tab and ask render if needed
     *
     * @param {string} tab
     */
    setCurrentTab: function setCurrentTab(tab) {
      if (this.getCurrentTab() !== tab) {
        sessionStorage.setItem(this.currentKey, tab);
        this.render();
      }

      return this;
    },
    addError: function addError(_ref) {
      var tabCode = _ref.tabCode,
          errors = _ref.errors;
      var tab = this.tabs.find(function (currentTab) {
        return currentTab.code === tabCode;
      });

      if (tab) {
        tab.fieldErrors.push(errors);
        this.render();
      }
    },
    removeError: function removeError() {
      var dirty = false;
      this.tabs.forEach(function (tab) {
        if (tab.fieldErrors.length) {
          tab.fieldErrors = [];
          dirty = true;
        }
      });

      if (dirty) {
        this.render();
      }
    },

    /**
     * get the current tab
     *
     * @return {string}
     */
    getCurrentTab: function getCurrentTab() {
      return sessionStorage.getItem(this.currentKey);
    },

    /**
     * Ensure default value for the current tab
     */
    ensureDefault: function ensureDefault() {
      var tabs = this.getTabs();

      if (!_.isNull(sessionStorage.getItem('redirectTab')) && _.findWhere(tabs, {
        code: sessionStorage.getItem('redirectTab').substring(1)
      })) {
        this.setCurrentTab(sessionStorage.redirectTab.substring(1));
        sessionStorage.removeItem('redirectTab');
      }

      var currentTabIsNotDefined = _.isNull(this.getCurrentTab());

      var currentTabDoesNotExist = !_.findWhere(tabs, {
        code: this.getCurrentTab()
      });

      if ((currentTabIsNotDefined || currentTabDoesNotExist) && _.first(tabs)) {
        this.setCurrentTab(_.first(tabs).code);
      }
    },

    /**
     * Get a child tab extension
     *
     * @param {string} code
     *
     * @return {Object}
     */
    getTabExtension: function getTabExtension(code) {
      return this.extensions[_.find(this.extensions, function (extension) {
        var extensionCode = extension.config && extension.config.tabCode ? extension.config.tabCode : extension.code;
        var expectedPosition = extensionCode.length - code.length;
        return expectedPosition >= 0 && expectedPosition === extensionCode.indexOf(code, expectedPosition);
      }).code];
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 50314:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/grid-title.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Grid title extension
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/mediator */ 27615)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseForm, __, mediator) {
  return BaseForm.extend({
    count: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      mediator.once('grid_load:start', this.setupCount.bind(this));
      mediator.on('grid_load:complete', this.setupCount.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (null !== this.count) {
        this.$el.text(__(this.config.title, {
          count: this.count
        }, this.count));
      } else if (false === this.config.countable) {
        this.$el.text(__(this.config.title));
      }
    },

    /**
     * Setup the count from the collection
     *
     * @param {Object} collection
     */
    setupCount: function setupCount(collection) {
      this.count = collection.state.totalRecords;
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 30820:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/grid.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @deprecated
 * @TODO - Will be removed in TIP-733-2
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/datagrid-builder */ 10488), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/template/form/grid */ 97213), __webpack_require__(/*! oro/pageable-collection */ 3110), __webpack_require__(/*! pim/datagrid/state */ 30138), __webpack_require__(/*! oro/error */ 57340), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, datagridBuilder, Routing, mediator, template, PageableCollection, DatagridState, Error, requireContext) {
  return Backbone.View.extend({
    template: _.template(template),
    urlParams: {},

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(alias, options) {
      this.alias = alias;
      this.selection = options.selection || [];
      this.selection = _.map(this.selection, function (item) {
        return String(item);
      });
      this.options = options;
      var selectionIdentifier = options.selectionIdentifier || 'id';
      /*
       * Removing to be sure that this property will not be used in URLs generated to load the data
       * The selection is never used back side to load the data and it can generate an URL too long.
       * The rightful usages of the selection are done with the property "this.selection"
       */

      delete this.options.selection;
      mediator.on('datagrid:selectModel:' + this.alias, function (model) {
        this.addElement(model.get(selectionIdentifier));
      }.bind(this));
      mediator.on('datagrid:unselectModel:' + this.alias, function (model) {
        this.removeElement(model.get(selectionIdentifier));
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({}));
      this.renderGrid(this.alias, this.options);
      return this;
    },

    /**
     * Render the given grid
     *
     * @param {String} alias
     * @param {Object} params
     */
    renderGrid: function renderGrid(alias, params) {
      this.urlParams = $.extend(true, {}, params);
      this.urlParams.alias = alias;
      this.urlParams.params = $.extend(true, {}, params);
      this.urlParams[alias] = $.extend(true, {}, params);
      var viewStored = DatagridState.get(alias, ['view']);

      if (!viewStored.view) {
        DatagridState.refreshFiltersFromUrl(alias);
      }

      var state = DatagridState.get(alias, ['view', 'filters', 'columns']) || {};
      this.applyView(state.view, alias);
      this.applyFilters(state.filters, alias);
      this.applyColumns(state.columns, alias); //TODO Manage columns for product form (when refactoring product form index)
      //TODO Manage category filter (when refactoring category index)

      $.get(Routing.generate('pim_datagrid_load', this.urlParams)).then(function (response) {
        this.$el.find('.grid-drop').data({
          metadata: response.metadata,
          data: JSON.parse(response.data)
        });
        var modules = response.metadata.requireJSModules.concat('pim/datagrid/state-listener');
        var resolvedModules = [];

        _.each(modules, function (module) {
          resolvedModules.push(requireContext(module));
        });

        datagridBuilder(resolvedModules);
      }.bind(this)).fail(function (response) {
        Error.dispatch(null, response);
      });
    },

    /**
     * Get the current grid selection
     *
     * @return {Array}
     */
    getSelection: function getSelection() {
      return this.selection;
    },

    /**
     * Add an element to the selection
     *
     * @param {Object} element
     */
    addElement: function addElement(element) {
      this.selection = _.union(this.selection, [element]);
      this.trigger('grid:selection:updated', this.selection);
    },

    /**
     * Remove an element to the selection
     *
     * @param {Object} element
     */
    removeElement: function removeElement(element) {
      this.selection = _.without(this.selection, element);
      this.trigger('grid:selection:updated', this.selection);
    },

    /**
     * Ask for a refresh of the grid (aware that we should not call the mediator for that but we don't have
     * the choice for now)
     */
    refresh: function refresh() {
      mediator.trigger('datagrid:doRefresh:' + this.alias);
    },

    /**
     * Apply the view to the DatagridState
     * @param viewId
     * @param alias
     */
    applyView: function applyView(viewId, alias) {
      if (!viewId) {
        return;
      }

      this.urlParams[alias + '[_parameters][view][id]'] = viewId;
      DatagridState.set(alias, {
        view: viewId
      });
    },

    /**
     * Apply the filters to the DatagridState
     * @param rawFilters
     * @param alias
     */
    applyFilters: function applyFilters(rawFilters, alias) {
      if (!rawFilters) {
        return;
      }

      var filters = PageableCollection.prototype.decodeStateData(rawFilters);
      var options = {};

      if (!_.isEmpty(filters.filters)) {
        options = {
          state: {
            filters: _.omit(filters.filters, 'scope')
          }
        };
      }

      var collection = new PageableCollection(null, options);
      collection.processFiltersParams(this.urlParams, filters, alias + '[_filter]');

      for (var column in filters.sorters) {
        this.urlParams[alias + '[_sort_by][' + column + ']'] = 1 === parseInt(filters.sorters[column]) ? 'DESC' : 'ASC';
      }

      if (undefined !== filters.pageSize) {
        this.urlParams[alias + '[_pager][_per_page]'] = 25;
      }

      if (undefined !== filters.currentPage) {
        this.urlParams[alias + '[_pager][_page]'] = filters.currentPage;
      }

      DatagridState.set(alias, {
        filters: rawFilters
      });
    },

    /**
     * Apply the columns to the DatagridState
     * @param columns
     * @param alias
     */
    applyColumns: function applyColumns(columns, alias) {
      if (!columns) {
        return;
      }

      if (_.isArray(columns)) {
        columns = columns.join();
      }

      this.urlParams[alias + '[_parameters][view][columns]'] = columns;
      DatagridState.set(alias, {
        columns: columns
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 60593:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/group-selector.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Group selector extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/form/group-selector */ 56915), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, UserContext, BaseForm, mediator, fetcherRegistry, template, analytics) {
  return BaseForm.extend({
    tagName: 'ul',
    className: 'AknVerticalNavtab nav nav-tabs group-selector',
    all: {},
    template: _.template(template),
    elements: [],
    badges: {},
    events: {
      'click li': 'change'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.badges = {};
      this.elements = [];
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      return BaseForm.prototype.configure.apply(this, arguments).then(function () {
        return fetcherRegistry.getFetcher('locale').fetchActivated().then(function (locales) {
          _this.all = {
            code: 'all_attribute_groups',
            labels: {},
            sort_order: -1
          };
          locales.forEach(function (locale) {
            _this.all.labels[locale.code] = __('pim_common.all');
          });
        });
      });
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty();
      this.$el.html(this.template({
        current: this.getCurrent(),
        elements: this.getElements(),
        badges: this.badges
      }));
      this.delegateEvents();
      return this;
    },

    /**
     * Set the element collection
     *
     * @param {Array} elements
     */
    setElements: function setElements(elements) {
      this.elements = elements;
      this.elements[this.all.code] = this.all;
      this.ensureDefault();
    },

    /**
     * On attribute group change
     *
     * @param {Event} event
     */
    change: function change(event) {
      this.setCurrent(event.currentTarget.dataset.element);
    },

    /**
     * Get current attribute group
     *
     * @return {String}
     */
    getCurrent: function getCurrent() {
      return sessionStorage.getItem('current_select_group_' + this.code);
    },

    /**
     * Set current attribute group
     *
     * @param {String} current
     * @param {Object} options
     */
    setCurrent: function setCurrent(current, options) {
      options = options || {
        silent: false
      };

      if (current !== this.getCurrent()) {
        sessionStorage.setItem('current_select_group_' + this.code, current);

        if (!options.silent) {
          this.trigger('group:change');
          this.getRoot().trigger('group:change');
        }

        analytics.track('product-grid:attribute-group:selected', {
          code: current
        });
        this.render();
      }
    },

    /**
     * Ensure default values for the current attribute group
     */
    ensureDefault: function ensureDefault() {
      if (_.isUndefined(this.getCurrent()) || !this.getElements()[this.getCurrent()]) {
        if (!this.elements[this.all.code]) {
          this.elements[this.all.code] = this.all;
        }

        this.setCurrent(this.all.code, {
          silent: true
        });
      }
    },

    /**
     * Get the current attribute group
     *
     * @return {String}
     */
    getCurrentElement: function getCurrentElement() {
      return this.getElements()[this.getCurrent()];
    },

    /**
     * Get all attribute groups
     *
     * @return {object}
     */
    getElements: function getElements() {
      return this.elements;
    },

    /**
     * Increment count on attribute group for the given code
     *
     * @param {String} element
     * @param {String} code
     */
    addToBadge: function addToBadge(element, code) {
      if (!this.badges[element]) {
        this.badges[element] = {};
      }

      if (!this.badges[element][code]) {
        this.badges[element][code] = 0;
      }

      this.badges[element][code]++;
      this.render();
    },

    /**
     * Remove badges for all attribute groups
     *
     * @param {String} code
     */
    removeBadges: function removeBadges(code) {
      if (!code) {
        this.badges = {};
      } else {
        _.each(this.badges, function (badge) {
          delete badge[code];
        }.bind(this));
      }

      this.render();
    },
    isAll: function isAll() {
      return this.getCurrent() === this.all.code;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 86579:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/index/confirm-button.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Confirm button extension
 *
 * @author    Alban Alnot <alban.alnot@consertotech.pro>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/template/form/index/confirm-button */ 2037)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, Routing, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config || {};
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        buttonClass: this.config.buttonClass,
        buttonLabel: __(this.config.buttonLabel),
        title: __(this.config.title),
        message: __(this.config.message),
        url: Routing.generate(this.config.url),
        redirectUrl: Routing.generate(this.config.redirectUrl),
        errorMessage: __(this.config.errorMessage),
        successMessage: __(this.config.successMessage),
        subTitle: __(this.config.subTitle)
      }));
      this.renderExtensions();
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16483:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/index/create-button.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Create button
 *
 * @author    Alban Alnot <alban.alnot@consertotech.pro>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/index/create-button */ 36342), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/dialogform */ 29831), __webpack_require__(/*! pim/form-builder */ 16371)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, Routing, DialogForm, FormBuilder) {
  return BaseForm.extend({
    template: _.template(template),
    dialog: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        title: __(this.config.title),
        iconName: this.config.iconName,
        url: this.config.url ? Routing.generate(this.config.url) : ''
      }));

      if (this.config.modalForm) {
        this.$el.on('click', function () {
          FormBuilder.build(this.config.modalForm).then(function (modal) {
            modal.open();
          });
        }.bind(this));
        return this;
      } // TODO-Remove the following line when all entities will be managed (TIP-730 completed)


      this.dialog = new DialogForm('#create-button-extension');
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 56354:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/index/grid.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Generic grid renderer
 *
 * @author    Alban Alnot <alban.alnot@consertotech.pro>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/common/grid */ 30820), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseForm, Grid, UserContext) {
  return BaseForm.extend({
    grid: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var metaData = this.config.metadata || {};
      metaData[this.config.localeKey || 'localeCode'] = UserContext.get('catalogLocale');
      this.grid = new Grid(this.config.alias, metaData);
      BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty().append(this.grid.render().$el);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 8709:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/label.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Label extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! underscore */ 13469)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseForm, UserContext, i18n, _) {
  return BaseForm.extend({
    tagName: 'h1',
    className: 'AknTitleContainer-title',

    /**
     * @param {Object} meta
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, meta.config);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      UserContext.off('change:catalogLocale change:catalogScope', this.render);
      this.listenTo(UserContext, 'change:catalogLocale', this.render);
      this.listenTo(UserContext, 'change:catalogScope', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.text(this.getLabel());
      return this;
    },

    /**
     * Provide the object label
     *
     * @return {String}
     */
    getLabel: function getLabel() {
      var data = this.getFormData();

      if (this.config.field) {
        return data[this.config.field];
      }

      if (undefined === data.labels) {
        return '';
      }

      return i18n.getLabel(data.labels, UserContext.get('catalogLocale'), data.code);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 25163:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/main-image.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Main image extension
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/main-image */ 904), __webpack_require__(/*! pim/media-url-generator */ 72689), __webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, template, MediaUrlGenerator, $) {
  return BaseForm.extend({
    tagName: 'img',
    className: 'AknTitleContainer-image',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      this.imagePath = null;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (null === this.getPath()) {
        return;
      }

      this.el.src = this.getPath();
      this.$el.one('error', function () {
        $(this).attr('src', MediaUrlGenerator.getMediaShowUrl(null, 'thumbnail_small'));
      });
      return BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * Returns the path of the image to display
     *
     * @returns {string}
     */
    getPath: function getPath() {
      var _this$imagePath;

      if (undefined !== this.config.path) {
        return this.config.path;
      }

      var filePath = (_this$imagePath = this.imagePath) !== null && _this$imagePath !== void 0 ? _this$imagePath : _.result(this.getFormData().meta.image, 'filePath', null);

      if (filePath === null && undefined !== this.config.fallbackPath) {
        return this.config.fallbackPath;
      }

      return MediaUrlGenerator.getMediaShowUrl(filePath, 'thumbnail_small');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 84689:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/meta.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Displays a list of meta information
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/meta */ 78692)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),
    config: {},

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty();

      if (!_.isEmpty(this.extensions)) {
        this.$el.html(this.template({
          label: __(this.config.label)
        }));
      }

      return BaseForm.prototype.render.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 12139:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/meta/created.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Created at extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/meta/created */ 42183)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, formTemplate) {
  return BaseForm.extend({
    tagName: 'span',
    className: 'AknTitleContainer-metaItem',
    template: _.template(formTemplate),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      this.label = __(this.config.label);
      this.labelBy = __(this.config.labelBy);
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var product = this.getFormData();
      var html = '';

      if (product.meta.created) {
        html = this.template({
          label: this.label,
          labelBy: this.labelBy,
          loggedAt: _.result(product.meta.created, 'logged_at', null),
          author: _.result(product.meta.created, 'author', null)
        });
      }

      this.$el.html(html);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29572:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/meta/updated.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Updated at extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/template/form/meta/updated */ 55008)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, mediator, formTemplate) {
  return BaseForm.extend({
    tagName: 'span',
    className: 'AknTitleContainer-metaItem',
    template: _.template(formTemplate),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      this.label = __(this.config.label);
      this.labelBy = __(this.config.labelBy);
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var product = this.getFormData();
      var html = '';

      if (product.meta.updated) {
        html = this.template({
          label: this.label,
          labelBy: this.labelBy,
          loggedAt: _.result(product.meta.updated, 'logged_at', null),
          author: _.result(product.meta.updated, 'author', null)
        });
      }

      this.$el.html(html);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 18746:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/meta/uuid.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * @copyright 2022 Akeneo SAS (https://www.akeneo.com)
 * @license   https://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/meta/uuid */ 39005)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, formTemplate) {
  return BaseForm.extend({
    tagName: 'span',
    className: 'AknTitleContainer-metaItem',
    template: _.template(formTemplate),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      this.label = __(this.config.label);
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var product = this.getFormData();
      var html = this.template({
        label: this.label,
        uuid: _.result(product.meta, 'uuid', null)
      });
      this.$el.html(html);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 57815:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/product/create-button.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Create product and product-model extension
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/create-button */ 93066), __webpack_require__(/*! pim/template/product/create-modal-content */ 14702), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! bootstrap-modal */ 21430), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/template/common/modal-centered */ 94596)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseForm, template, modalContentTemplate, FetcherRegistry, BootstrapModal, FormBuilder, SecurityContext, modalTemplate) {
  return BaseForm.extend({
    template: _.template(template),
    modalTemplate: _.template(modalTemplate),
    modalContentTemplate: _.template(modalContentTemplate),
    events: {
      'click .create-product-button': 'openModal'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      this.modal = null;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Closes the selection modal and unbinds the click events
     */
    closeModal: function closeModal() {
      if (this.modal) {
        this.modal.close();
        this.modal.$el.off();
      }
    },

    /**
     * Returns a list of choices that are allowed by permissions
     * @return {Object} choices
     */
    getAllowedChoices: function getAllowedChoices(choices) {
      return Object.values(choices).filter(function (choice) {
        return SecurityContext.isGranted(choice.aclResourceId);
      });
    },

    /**
     * Opens the selection modal with the configured choices
     * If there's only one available choice, directly open the form
     * for that choice.
     *
     * @return {Backbone.BootstrapModal} The modal
     */
    openModal: function openModal() {
      if (this.modal) {
        this.closeModal();
      }

      var _this$config = this.config,
          choices = _this$config.choices,
          modalTitle = _this$config.modalTitle,
          subTitle = _this$config.subTitle;
      var allowedChoices = this.getAllowedChoices(choices);

      if (1 === allowedChoices.length) {
        var firstChoice = allowedChoices[0];
        return this.openFormModal(null, firstChoice.form);
      }

      var translatedChoices = [];
      Object.keys(allowedChoices).forEach(function (key) {
        translatedChoices[key] = allowedChoices[key];
        translatedChoices[key].title = __(translatedChoices[key].title);
      });
      this.modal = new Backbone.BootstrapModal({
        title: __(modalTitle),
        subtitle: __(subTitle),
        okText: '',
        template: this.modalTemplate,
        content: this.modalContentTemplate({
          choices: translatedChoices
        })
      }).open();
      this.modal.$el.on('click', '.cancel', this.closeModal.bind(this));
      this.modal.$el.on('click', '.product-choice', this.openFormModal.bind(this));
      return this.modal;
    },

    /**
     * {@inheritdoc}
     */
    shutdown: function shutdown() {
      if (this.modal) {
        this.modal.$el.off();
      }

      BaseForm.prototype.shutdown.apply(this, arguments);
    },

    /**
     * Opens a form model for the selected choice. If formName is passed in, it
     * overrides the formName from the event target element.
     *
     * @param  {jQuery.Event} event The click event from the selection modal
     * @param  {String} formName The name of the form extension defined for a choice
     * @return {Promise}
     */
    openFormModal: function openFormModal(event, formName) {
      var _this = this;

      var form = formName || $(event.currentTarget).attr('data-form');
      return FormBuilder.build(form).then(function (modal) {
        _this.closeModal();

        modal.open();
      });
    },

    /**
     * Render the create button
     * If the user is not allowed to access the forms for the choices
     * don't render the create button.
     */
    render: function render() {
      var _this$config2 = this.config,
          choices = _this$config2.choices,
          buttonTitle = _this$config2.buttonTitle;

      if (0 === this.getAllowedChoices(choices).length) {
        this.$el.hide();
        return;
      }

      this.$el.html(this.template({
        buttonTitle: __(buttonTitle)
      }));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 91532:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/properties/general.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the generals properties of an entity type
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/template/form/properties/general */ 95478), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, FetcherRegistry, propertyAccessor, template) {
  return BaseForm.extend({
    className: 'tabsection',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var config = this.options.config;
      this.$el.html(this.template({
        model: this.getFormData(),
        sectionTitle: __(config.sectionTitle),
        codeLabel: __(config.codeLabel),
        formRequired: __(config.formRequired),
        inputField: config.inputField,
        hasId: propertyAccessor.accessProperty(this.getFormData(), 'meta.id') !== null
      }));
      this.$el.find('select.select2').select2({});
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 11390:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/properties/translation.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the localized properties of an object
 *
 * @author    Nicolas Dupont <nicolas@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/form/properties/translation */ 62742), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseForm, FetcherRegistry, template, analytics) {
  return BaseForm.extend({
    className: 'translation-container',
    template: _.template(template),
    events: {
      'change .label-field': 'updateModel'
    },
    validationErrors: {},
    locales: [],

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_save', this.onPreSave);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.onValidationError);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:locales_updated', this.onLocalesUpdated.bind(this));
      return $.when(this.getLocales().then(function (locales) {
        this.locales = locales;
      }.bind(this)), BaseForm.prototype.configure.apply(this, arguments));
    },

    /**
     * Pre save callback
     */
    onPreSave: function onPreSave() {
      this.validationErrors = {};
      this.render();
    },

    /**
     * On validation callback
     *
     * @param {Event} event
     */
    onValidationError: function onValidationError(event) {
      var _this = this;

      this.validationErrors = event.response.translations ? event.response.translations : {};
      this.locales.forEach(function (locale) {
        var key = 'translations[' + locale.code + '].label';

        if (event.response[key]) {
          _this.validationErrors[locale.code] = event.response[key];
        }
      });
      this.render();
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        model: this.getFormData(),
        locales: this.locales,
        errors: this.validationErrors,
        label: this.config.label,
        fieldBaseId: this.config.fieldBaseId,
        isReadOnly: this.isReadOnly()
      }));
      this.delegateEvents();
      this.renderExtensions();
    },

    /**
     * @returns {Boolean}
     */
    isReadOnly: function isReadOnly() {
      return false;
    },

    /**
     * @param {Object} event
     */
    updateModel: function updateModel(event) {
      var data = this.getFormData();

      if (Array.isArray(data.labels)) {
        data.labels = {};
      }

      data.labels[event.target.dataset.locale] = event.target.value;
      analytics.track('translation:form:value-changed', {
        code: this.code,
        localeCode: event.target.dataset.locale
      });
      this.setData(data);
    },

    /**
     * Updates locales if were updated
     */
    onLocalesUpdated: function onLocalesUpdated() {
      this.getLocales().then(function (locales) {
        this.locales = locales;
        return this.render();
      }.bind(this));
    },

    /**
     * Fetches and returns activated locales.
     *
     * @returns {Promise}
     */
    getLocales: function getLocales() {
      return FetcherRegistry.getFetcher('locale').fetchActivated({
        filter_locales: false
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 47440:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/redirect.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Redirect button
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/template/form/redirect */ 32806)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, Routing, router, propertyAccessor, template) {
  return BaseForm.extend({
    template: _.template(template),
    events: {
      click: 'redirect'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.isVisible().then(function (isVisible) {
        if (!isVisible) {
          return this;
        }

        this.$el.html(this.template({
          label: __(this.config.label),
          buttonClass: this.config.buttonClass || 'AknButton--action',
          title: this.config.title ? __(this.config.title) : ''
        }));
      }.bind(this));
      return this;
    },

    /**
     * Redirect to the route given in the config
     */
    redirect: function redirect() {
      router.redirect(this.getUrl());
    },

    /**
     * Get the route to redirect to
     *
     * @return {string}
     */
    getUrl: function getUrl() {
      var params = {};

      if (this.config.identifier) {
        params[this.config.identifier.name] = propertyAccessor.accessProperty(this.getFormData(), this.config.identifier.path);
      }

      return Routing.generate(this.config.route, params);
    },

    /**
     * Should this extension render
     *
     * @return {Promise}
     */
    isVisible: function isVisible() {
      return $.Deferred().resolve(true).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62548:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/save-buttons.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save buttons extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/save-buttons */ 12715)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, mediator, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknTitleContainer-rightButton',
    template: _.template(template),
    buttonDefaults: {
      priority: 100,
      events: {}
    },
    events: {},

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.model = new Backbone.Model({
        buttons: []
      });
      this.events = {};
      this.on('save-buttons:add-button', this.addButton.bind(this));
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var buttons = this.model.get('buttons');

      if (buttons.length > 0) {
        this.$el.html(this.template({
          primaryButton: _.first(buttons),
          secondaryButtons: buttons.slice(1)
        }));
      }

      this.delegateEvents();
      return this;
    },

    /**
     * Add a button to the main button
     *
     * @param {Object} options
     */
    addButton: function addButton(options) {
      var button = _.extend({}, this.buttonDefaults, options);

      this.events = _.extend(this.events, button.events);
      var buttons = this.model.get('buttons');
      buttons.push(button);
      buttons = _.sortBy(buttons, 'priority').reverse();
      this.model.set('buttons', buttons);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 64169:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/save-form.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension for simple entity types
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/save */ 21153), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/saver/entity-saver */ 42775), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseSave, messenger, EntitySaver, FieldManager, i18n, UserContext, router, propertyAccessor, analytics) {
  return BaseSave.extend({
    /**
     * Sets message labels for updates
     */
    configure: function configure() {
      this.notReadyMessage = __(this.config.notReadyMessage);
      return BaseSave.prototype.configure.apply(this, arguments);
    },

    /**
     * Given an array of fields, return the translation for each in a map
     *
     * @param  {Array} fields         An array of field objects
     * @param  {String} catalogLocale The locale
     * @return {Array}                An array of labels
     */
    getFieldLabels: function getFieldLabels(fields, catalogLocale) {
      return _.map(fields, function (field) {
        return i18n.getLabel(field.attribute.label, catalogLocale, field.attribute.code);
      });
    },

    /**
     * Shows an error message for the given message text and labels
     *
     * @param  {String} message The given error message
     * @param  {Array} labels   An array of field names
     */
    showFlashMessage: function showFlashMessage(message, labels) {
      var flash = __(message, {
        fields: labels.join(', ')
      });

      messenger.notify('error', flash);
    },

    /**
     * {@inheritdoc}
     */
    save: function save() {
      var excludedProperties = _.union(this.config.excludedProperties, ['meta']);

      var entity = _.omit(this.getFormData(), excludedProperties);

      var notReadyFields = FieldManager.getNotReadyFields();

      if (0 < notReadyFields.length) {
        var catalogLocale = UserContext.get('catalogLocale');
        var fieldLabels = this.getFieldLabels(notReadyFields, catalogLocale);
        return this.showFlashMessage(this.notReadyMessage, fieldLabels);
      }

      this.showLoadingMask();
      this.getRoot().trigger('pim_enrich:form:entity:pre_save');
      var entityIdProperty = this.config.entityIdentifierParamName || 'code';
      var identifierProperty = 'identifier';

      if (this.config.identifierParamName !== undefined) {
        if (this.config.identifierParamName === 'undefined') {
          identifierProperty = undefined;
        } else {
          identifierProperty = this.configure.identifierParamName;
        }
      }

      var entityId = propertyAccessor.accessProperty(this.getFormData(), entityIdProperty, '');
      var redirectAfterRouteIdentifierParamName = this.config.redirectAfterRouteIdentifierParamName || 'identifier';
      return EntitySaver.setUrl(this.config.url).setIdentifierProperty(identifierProperty).save(entityId, entity, this.config.method || 'POST').then(function (data) {
        this.postSave(data);
        this.setData(data);
        this.getRoot().trigger('pim_enrich:form:entity:post_fetch', data);

        if (this.config.redirectAfter) {
          var params = {};
          params[redirectAfterRouteIdentifierParamName] = entityId;
          router.redirectToRoute(this.config.redirectAfter, params);
        }

        analytics.track('common:form:saved', {
          code: this.code
        });
      }.bind(this)).fail(this.fail.bind(this)).always(this.hideLoadingMask.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 21153:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/save.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! oro/messenger */ 80581)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseForm, mediator, LoadingMask, messenger) {
  return BaseForm.extend({
    loadingMask: null,
    updateFailureMessage: __('pim_enrich.entity.fallback.flash.update.fail'),
    updateSuccessMessage: __('pim_enrich.entity.fallback.flash.update.success'),
    sessionExpiredMessage: __('pim_enrich.entity.fallback.flash.update.fail_session_expired'),
    isFlash: true,
    label: __('pim_common.save'),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;

      if (this.config.hasOwnProperty('updateSuccessMessage')) {
        this.updateSuccessMessage = __(this.config.updateSuccessMessage);
      }

      if (this.config.hasOwnProperty('updateFailureMessage')) {
        this.updateFailureMessage = __(this.config.updateFailureMessage);
      }

      if (this.config.hasOwnProperty('sessionExpiredMessage')) {
        this.sessionExpiredMessage = __(this.config.sessionExpiredMessage);
      }

      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('save-buttons:register-button', {
        className: 'save',
        priority: 200,
        label: this.label,
        events: {
          'click .save': this.save.bind(this)
        }
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Save the current form
     */
    save: function save() {
      throw new Error('This method must be implemented');
    },

    /**
     * Show the loading mask
     */
    showLoadingMask: function showLoadingMask() {
      this.loadingMask = new LoadingMask();
      this.loadingMask.render().$el.appendTo(this.getRoot().$el).show();
    },

    /**
     * Hide the loading mask
     */
    hideLoadingMask: function hideLoadingMask() {
      this.loadingMask.hide().$el.remove();
    },

    /**
     * What to do after a save
     *
     * @param {any} data
     */
    postSave: function postSave(data) {
      this.getRoot().trigger('pim_enrich:form:entity:post_save', data);
      messenger.notify('success', this.updateSuccessMessage, {
        flash: this.isFlash
      });
    },

    /**
     * On save fail
     *
     * @param {Object} response
     */
    fail: function fail(response) {
      var errorMessage = this.updateFailureMessage;

      switch (response.status) {
        case 422:
        case 400:
          this.getRoot().trigger('pim_enrich:form:entity:bad_request', {
            sentData: this.getFormData(),
            response: response.responseJSON
          });
          break;

        case 401:
          errorMessage = this.sessionExpiredMessage;
          break;

        case 500:
          /* global console */
          var message = response.responseJSON ? response.responseJSON : response;
          console.error('Errors:', message);
          this.getRoot().trigger('pim_enrich:form:entity:error:save', message);
          break;

        default:
      }

      messenger.notify('error', errorMessage);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 70987:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/secondary-actions.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Displays a list of secondary actions
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/secondary-actions */ 54861)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknSecondaryActions AknDropdown AknButtonList-item secondary-actions',
    template: _.template(template),

    /**
     * When there is no extensions attached to this module, nothing is rendered.
     * Each extension represents a secondary action available for the user.
     *
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty();

      if (!_.isEmpty(this.extensions)) {
        this.$el.html(this.template({
          titleLabel: __('pim_datagrid.actions.other')
        }));
        this.renderExtensions();
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 8175:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/simple-view.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Basic view that simply renders a template.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, __, BaseForm, requireContext) {
  return BaseForm.extend({
    config: {},
    template: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;

      if (_.has(meta, 'forwarded-events')) {
        this.forwardMediatorEvents(meta['forwarded-events']);
      }

      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     *
     * Waiting for the template to be required.
     */
    configure: function configure() {
      if (undefined === this.config.template) {
        throw new Error('The view "' + this.code + '" must be configured with a template.');
      }

      this.template = requireContext(this.config.template);
      this.listenTo(this.getRoot(), 'grid:third_column:toggle', this.toggleThirdColumn.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var templateParams = this.config.templateParams || {};
      templateParams = _.extend({}, {
        __: __
      }, templateParams);
      this.$el.html(_.template(this.template)(templateParams));
      this.renderExtensions();
    },

    /**
     * Toggle the third column
     */
    toggleThirdColumn: function toggleThirdColumn() {
      var thirdColumn = this.$el.find('.AknDefault-thirdColumnContainer');
      var thirdColumnContent = this.$el.find('.AknDefault-thirdColumn');
      var width = thirdColumnContent.outerWidth() || 300;

      if (null !== thirdColumn) {
        thirdColumn.css({
          marginLeft: -width
        });
        thirdColumn.toggleClass('AknDefault-thirdColumnContainer--open');
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 76221:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/state.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * State manager extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/state */ 89215)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, Dialog, BaseForm, template) {
  return BaseForm.extend({
    className: 'updated-status',
    template: _.template(template),
    state: null,
    linkSelector: 'a[href^="/"]:not(".no-hash")',

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, {
        confirmationMessage: 'pim_enrich.entity.fallback.module.edit.discard_changes',
        confirmationTitle: 'pim_enrich.entity.fallback.module.edit.leave',
        message: 'pim_common.entity_updated'
      }, meta.config);
      this.confirmationMessage = __(this.config.confirmationMessage, {
        entity: __(this.config.entity)
      });
      this.confirmationTitle = __(this.config.confirmationTitle);
      this.message = __(this.config.message);
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * @inheritdoc
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:update_state', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.collectAndRender);
      this.listenTo(this.getRoot(), 'pim_enrich:form:state:confirm', this.onConfirmation);
      this.listenTo(this.getRoot(), 'pim_enrich:form:can-leave', this.linkClicked);
      $(window).on('beforeunload', this.beforeUnload.bind(this));
      Backbone.Router.prototype.on('route', this.unbindEvents);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Detach event listeners
     */
    unbindEvents: function unbindEvents() {
      $(window).off('beforeunload', this.beforeUnload);
    },

    /**
     * @inheritdoc
     */
    render: function render() {
      if (null === this.state || undefined === this.state) {
        this.collectState();
      }

      this.$el.html(this.template({
        message: this.message
      })).css('opacity', this.hasModelChanged() ? 1 : 0);
      return this;
    },

    /**
     * Store a stringified representation of the form model for further comparisons
     */
    collectState: function collectState() {
      this.state = JSON.stringify(this.getFormData());
    },

    /**
     * Force collect state and re-render
     */
    collectAndRender: function collectAndRender() {
      this.collectState();
      this.render();
    },

    /**
     * Callback triggered on beforeunload event
     */
    beforeUnload: function beforeUnload() {
      if (this.hasModelChanged()) {
        return this.confirmationMessage;
      }
    },

    /**
     * Callback triggered on any link click event to ask confirmation if there are unsaved changes
     *
     * @param {Object} event
     *
     * @return {boolean}
     */
    linkClicked: function linkClicked(event) {
      if (this.hasModelChanged()) {
        event.canLeave = confirm(this.confirmationMessage);
      }
    },

    /**
     * Check if current form model has changed compared to the stored model state
     *
     * @return {boolean}
     */
    hasModelChanged: function hasModelChanged() {
      return this.state !== JSON.stringify(this.getFormData());
    },

    /**
     * Display a dialog modal to ask an action confirmation if model has changed
     *
     * @param {string} message
     * @param {string} title
     * @param {function} action
     */
    confirmAction: function confirmAction(message, title, action) {
      if (this.hasModelChanged()) {
        Dialog.confirm(message, title, action);
      } else {
        action();
      }
    },

    /**
     * Callback that can be triggered from anywhere to ask an action confirmation
     *
     * @param {Object} event
     */
    onConfirmation: function onConfirmation(event) {
      this.confirmAction(event.message || this.confirmationMessage, event.title || this.confirmationTitle, event.action);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 8343:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/subsection.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Sub section extension
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/subsection */ 92117)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknSubsection',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty().append(this.template({
        title: __(this.config.title)
      }));
      return BaseForm.prototype.render.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 56135:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/tab.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseForm) {
  return BaseForm.extend({
    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.registerTab();
      return BaseForm.prototype.configure.apply(this, arguments);
    },
    registerTab: function registerTab() {
      this.trigger('tab:register', {
        code: this.code,
        label: __(this.config.label)
      });
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.empty();
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 86785:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/form/common/tab/history.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/common/grid */ 30820), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, Grid, __) {
  return BaseForm.extend({
    className: 'tabbable history',
    historyGrid: null,

    /**
     * @param {Object} meta
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, meta.config);
      this.config.modelDependent = false;
      return BaseForm.prototype.initialize.call(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: this.config.tabCode ? this.config.tabCode : this.code,
        label: __(this.config.title)
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.historyGrid) {
        this.historyGrid = new Grid('history-grid', {
          object_class: this.config["class"],
          object_id: this.getFormData().meta.id
        });
      }

      this.$el.empty().append(this.historyGrid.render().$el);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 91598:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/form/config-provider.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/feature-flags */ 5857)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, SecurityContext, FeatureFlags) {
  var promise = null;
  /**
   * Filters form extensions by ACL
   *
   * @param {Object} extensions
   */

  var filterByGranted = function filterByGranted(extensions) {
    return extensions.filter(function (extension) {
      return null === extension.aclResourceId || SecurityContext.isGranted(extension.aclResourceId);
    });
  };
  /**
   * Filters form extensions linked to a disabled feature.
   *
   * @param {Object} extensions
   */


  var filterDisabledFeatures = function filterDisabledFeatures(extensions) {
    return extensions.filter(function (extension) {
      return null === extension.feature || FeatureFlags.isEnabled(extension.feature);
    });
  };

  var loadConfig = function loadConfig() {
    if (null === promise) {
      promise = $.when($.get('/js/extensions.json', {
        version: Math.random().toString(36).substring(7)
      }), SecurityContext.initialize(), FeatureFlags.initialize()).then(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            config = _ref2[0];

        config.extensions = filterDisabledFeatures(filterByGranted(config.extensions));
        return config;
      }).fail(function () {
        throw Error("It seems that your web server is not well\n                     configured as we were not able to load the frontend\n                      configuration. The most likely reason is that the\n                       mod_rewrite module is not installed/enabled.");
      });
    }

    return promise;
  };

  return {
    /**
     * Returns configuration for extensions.
     *
     * @return {Promise}
     */
    getExtensionMap: function getExtensionMap() {
      return loadConfig().then(function (_ref3) {
        var extensions = _ref3.extensions;
        return extensions;
      });
    },

    /**
     * Returns configuration for attribute fields.
     *
     * @return {Promise}
     */
    getAttributeFields: function getAttributeFields() {
      return loadConfig().then(function (_ref4) {
        var attribute_fields = _ref4.attribute_fields;
        return attribute_fields;
      });
    },

    /**
     * Clear cache of form registry
     */
    clear: function clear() {
      promise = null;
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 77154:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/form/form-modal.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This service instantiates a modal with a custom form.
 * The custom form must be passed in as a service.
 *
 * A deferred object is returned on modal opening:
 * - Success: Resolved when the user clicks on the OK button, the callback contains the form data.
 * - Fail: the user canceled the modal form.
 *
 * Typical use example
 * ===================
 *
 * var onDataSubmission = function (form) {
 *     var deferred = $.Deferred();
 *     var formData = form.getFormData();
 *
 *     // validate your data...
 *
 *     if (validData) {
 *          deferred.resolve();
 *     } else {
 *          deferred.reject();
 *          // display errors on form, or whatever
 *     }
 *
 *     return deferred;
 * }
 *
 * var myFormModal = new FormModal('pim-product-edit-form', onDataSubmission);
 *
 * myFormModal.open()
 *      .then(function(myFormData) {
 *          // on success
 *      })
 *      .fail(function() {
 *          // user clicked Cancel button
 *      });
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/form-builder */ 16371)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, mediator, FormBuilder) {
  return Backbone.View.extend({
    /**
     * The form name the modal should display.
     * This service must be registered with RequireJS, eg: 'pim-product-edit-form'
     */
    formName: '',

    /**
     * Instance of the UI modal element.
     */
    modal: null,

    /**
     * Callback triggered on form submission.
     * This callback should return a promise, resolved when data validation check is OK.
     */
    submitCallback: null,

    /**
     * UI modal parameters
     */
    modalParameters: {
      okCloses: false,
      content: '',
      title: '[modal_title]',
      okText: __('pim_common.save'),
      modalOptions: {
        backdrop: 'static',
        keyboard: false
      }
    },

    /**
     * Initial form data of the modal
     */
    initialFormData: {},

    /**
     * @param {string}   formName
     * @param {function} submitCallback
     * @param {Object}   modalParameters
     * @param {Object}   initialFormData
     */
    initialize: function initialize(formName, submitCallback, modalParameters) {
      var initialFormData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      this.formName = formName;
      this.submitCallback = submitCallback;
      this.modalParameters = _.extend(this.modalParameters, modalParameters);
      this.initialFormData = initialFormData;
    },

    /**
     * Render the modal with the custom form service.
     * Returns the deferred object to catch success (OK) & fail (Cancel) event of the modal.
     *
     * @return {Promise}
     */
    open: function open() {
      var deferred = $.Deferred();
      FormBuilder.build(this.formName).then(function (form) {
        form.setData(this.initialFormData, {
          silent: true
        });
        this.modal = new Backbone.BootstrapModal(this.modalParameters);
        this.modal.open();
        form.setElement(this.modal.$('.modal-body')).render();
        mediator.on('pim_enrich:form:modal:ok_button:disable', function () {
          this.disableOkBtn();
        }.bind(this));
        mediator.on('pim_enrich:form:modal:ok_button:enable', function () {
          this.enableOkBtn();
        }.bind(this));
        this.modal.on('cancel', deferred.reject);
        this.modal.on('ok', function () {
          if (this.modal.$('.modal-footer .ok').hasClass('disabled')) {
            return;
          }

          this.submitCallback(form).then(function () {
            var data = form.getFormData();
            deferred.resolve(data);
            this.modal.close();
          }.bind(this));
        }.bind(this));
      }.bind(this));
      return deferred;
    },

    /**
     * Close the modal UI element.
     */
    close: function close() {
      this.modal.close();
    },

    /**
     * Enable the modal ok button.
     */
    enableOkBtn: function enableOkBtn() {
      this.modal.$('.ok').attr('disabled', null).removeClass('AknButton--disabled');
    },

    /**
     * Disable the modal ok button.
     */
    disableOkBtn: function disableOkBtn() {
      this.modal.$('.ok').attr('disabled', 'disabled').addClass('AknButton--disabled');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 27091:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/form/registry.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form-config-provider */ 91598)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, ConfigProvider) {
  var getFormExtensions = function getFormExtensions(formMeta) {
    return ConfigProvider.getExtensionMap().then(function (extensionMap) {
      return extensionMap.filter(function (extension) {
        return extension.parent === formMeta.code;
      });
    });
  };

  var getFormMeta = function getFormMeta(formName) {
    return ConfigProvider.getExtensionMap().then(function (extensionMap) {
      return extensionMap.find(function (extension) {
        return extension.code === formName;
      });
    });
  };

  return {
    getFormExtensions: getFormExtensions,
    getFormMeta: getFormMeta
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 18537:
/*!***********************************************!*\
  !*** ./public/bundles/pimui/js/form/state.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global confirm */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, mediator, __) {
  'use strict';

  var $ = Backbone.$;

  var formState = function formState() {
    this.initialize.apply(this, arguments);
  };

  _.extend(formState.prototype, {
    UNLOAD_EVENT: 'beforeunload.configFormState',
    LOAD_EVENT: 'ready.configFormState',
    FORM_SELECTOR: '.system-configuration-container form:first',
    CONFIRMATION_MESSAGE: __('pim_ui.flash.unsaved_changes'),
    data: null,
    initialize: function initialize() {
      mediator.once('hash_navigation_request:start', this._onDestroyHandler, this);
      $(window).on(this.LOAD_EVENT, _.bind(this._collectHandler, this));

      this._collectHandler();

      $(window).on(this.UNLOAD_EVENT, _.bind(function () {
        if (this.isChanged()) {
          return this.CONFIRMATION_MESSAGE;
        }
      }, this));
      mediator.on('hash_navigation_click', this._confirmHashChange, this);
    },

    /**
     * Check is form changed
     *
     * @returns {boolean}
     */
    isChanged: function isChanged() {
      if (!_.isNull(this.data)) {
        return this.data !== this.getState();
      }

      return false;
    },

    /**
     * Collect form state
     *
     * @returns {*}
     */
    getState: function getState() {
      var form = $(this.FORM_SELECTOR);

      if (form.length) {
        return JSON.stringify(_.reject($(this.FORM_SELECTOR).serializeArray(), function (el) {
          return el.name === 'input_action';
        }));
      }

      return false;
    },

    /**
     * Hash change event handler
     *
     * @param event
     * @private
     */
    _confirmHashChange: function _confirmHashChange(event) {
      if (this.isChanged()) {
        event.stoppedProcess = !confirm(this.CONFIRMATION_MESSAGE);
      }
    },

    /**
     * Collecting event handler
     *
     * @private
     */
    _collectHandler: function _collectHandler() {
      this.data = this.getState();
    },

    /**
     * Destroys event handlers
     *
     * @private
     */
    _onDestroyHandler: function _onDestroyHandler() {
      if (_.isNull(this.data)) {
        // data was not collected disable listener
        mediator.off('hash_navigation_request:complete', this._collectHandler, this);
      } else {
        this.data = null;
      }

      mediator.off('hash_navigation_click', this._confirmHashChange, this);
      $(window).off(this.UNLOAD_EVENT);
      $(document).off(this.LOAD_EVENT);
    }
  });

  return formState;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 35598:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/form/system/tab/loading-message.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/system/tab/loading-message */ 50031), __webpack_require__(/*! bootstrap.bootstrapswitch */ 86049)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, $, BaseForm, template) {
  return BaseForm.extend({
    events: {
      'change input[type="checkbox"]': 'updateBoolean',
      'change textarea': 'updateText'
    },
    isGroup: true,
    label: __('oro_config.form.config.group.loading_message.title'),
    template: _.template(template),
    code: 'oro_config_loading_message',

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: this.code,
        label: this.label
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        loading_message_enabled: this.getFormData().pim_ui___loading_message_enabled.value,
        loading_messages: this.getFormData().pim_ui___loading_messages.value
      }));
      this.$el.find('.switch').bootstrapSwitch();
      this.delegateEvents();
      return BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * Update model after value change
     *
     * @param {Event} event
     */
    updateBoolean: function updateBoolean(event) {
      var data = this.getFormData();
      data.pim_ui___loading_message_enabled.value = $(event.target).prop('checked') ? '1' : '0';
      this.setData(data);
    },

    /**
     * Update model after value change
     *
     * @param {Event} event
     */
    updateText: function updateText(event) {
      var data = this.getFormData();
      data.pim_ui___loading_messages.value = $(event.target).val();
      this.setData(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 81066:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/form/user/login-details.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Display formatted user login details
 *
 * @author    Valentin Dijkstra <valentin.dijkstra@akeneo.com>
 * @copyright 2019 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/user/login-details */ 62678)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var user = this.getFormData();
      var createdDate = new Date(user.meta.created * 1000);
      var updatedDate = new Date(user.meta.updated * 1000);
      var lastLoginDate = new Date(user.last_login * 1000);
      this.$el.html(this.template({
        __: __,
        created: createdDate.toLocaleString(),
        updated: updatedDate.toLocaleString(),
        lastLoggedIn: lastLoginDate.toLocaleString(),
        loginCount: user.login_count
      }));
      return BaseForm.prototype.render.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 78464:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/formatter/choices/base.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, UserContext, i18n) {
  return {
    /**
     * Format a collection of entities into a list of choices as follows.
     * From :
     * [
     *     {
     *         code: 'webcams',
     *         labels: {
     *             en_US:'Webcams',
     *             fr_FR:'Webcams',
     *             de_DE:'Webcams'
     *         }
     *     },
     *     {
     *         code: 'mugs',
     *         labels: {
     *             en_US: 'Mugs',
     *             fr_FR: 'Chopes\/Mugs',
     *             de_DE: 'Tassen'
     *         }
     *     }
     * ]
     *
     * to (for locale "de_DE") :
     *
     * [
     *     { id: 'webcams', text: 'Webcams' },
     *     { id: 'mugs', text: 'Tassen' }
     * ]
     *
     * @param {Array} entities
     *
     * @return {Array}
     */
    format: function format(entities) {
      var choices = [];

      _.each(entities, function (entity) {
        choices.push(this.formatOne(entity));
      }.bind(this));

      return choices;
    },

    /**
     * Format an entity into a choice as follows.
     * From :
     * {
     *     code: 'webcams',
     *     label: {
     *         en_US:'Webcams',
     *         fr_FR:'Webcams',
     *         de_DE:'Webcams'
     *     }
     * }
     *
     * to (for locale "de_DE") :
     *
     * { id: 'webcams', text: 'Webcams' }
     *
     * @param {Object} entity
     *
     * @return {Object}
     */
    formatOne: function formatOne(entity) {
      return {
        id: entity.code,
        text: i18n.getLabel(entity.labels, UserContext.get('catalogLocale'), entity.code)
      };
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 54555:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/formatter/date-formatter.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Format a date according to specified format.
 * It instantiates a datepicker on-the-fly to perform the conversion.
 *
 * @author    Willy Mesnage <willy.mesnage@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! datepicker */ 83586), __webpack_require__(/*! pim/date-context */ 24846)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Datepicker, DateContext) {
  return {
    /**
     * Date widget options
     */
    datetimepickerOptions: {
      format: DateContext.get('date').format,
      defaultFormat: DateContext.get('date').defaultFormat,
      language: DateContext.get('language')
    },

    /**
     * Format a date according to specified format.
     * It instantiates a datepicker on-the-fly to perform the conversion. Not possible to use the "real"
     * ones since we need to format a date even when the UI is not initialized yet.
     *
     * @param {String} date
     * @param {String} fromFormat
     * @param {String} toFormat
     *
     * @return {String}
     */
    format: function format(date, fromFormat, toFormat) {
      if (_.isEmpty(date) || _.isUndefined(date) || _.isArray(date)) {
        return null;
      }

      var options = $.extend({}, this.datetimepickerOptions, {
        format: fromFormat
      });
      var fakeDatepicker = Datepicker.init($('<input>'), options).data('datetimepicker');

      if (null !== fakeDatepicker.parseDate(date)) {
        fakeDatepicker.setValue(date);
        fakeDatepicker.format = toFormat;

        fakeDatepicker._compileFormat();
      }

      return fakeDatepicker.formatDate(fakeDatepicker.getDate());
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 60847:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/fos-routing-wrapper.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Routing = __webpack_require__(/*! fos-routing-base */ 60839);

var routes = __webpack_require__(/*! routes */ 25805);

Routing.setRoutingData(routes);

Routing.generateHash = function (route, routeParams) {
  return "#".concat(Routing.generate(route, routeParams));
};

module.exports = Routing;

/***/ }),

/***/ 72689:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/generator/media-url-generator.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Routing) {
  return {
    /**
     * Get the show media URL
     *
     * @param string filePath
     * @param string filter
     *
     * @return {string}
     */
    getMediaShowUrl: function getMediaShowUrl(filePath, filter) {
      var filename = encodeURIComponent(filePath); // In case the filepath is already a direct URL to an asset preview, directly returns it

      if (filePath && filePath.includes('rest/asset_manager/image_preview')) {
        return filePath;
      }

      return Routing.generate('pim_enrich_media_show', {
        filename: filename,
        filter: filter
      });
    },

    /**
     * Get the download media URL
     *
     * @param string filePath
     *
     * @return {string}
     */
    getMediaDownloadUrl: function getMediaDownloadUrl(filePath) {
      var filename = encodeURIComponent(filePath);
      return Routing.generate('pim_enrich_media_download', {
        filename: filename
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 28137:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/grid/mass-actions.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This extension will display the mass actions panel with all the actions available for checked items in a grid.
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/grid/mass-actions */ 84115), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseForm, template, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'AknDefault-bottomPanel AknDefault-bottomPanel--hidden AknMassActions mass-actions',
    collection: null,
    count: 0,
    events: {
      'click .select-all': 'selectAll',
      'click .select-none': 'selectNone',
      'click .select-visible': 'selectVisible',
      'click .select-button': 'toggleButton'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      var setCollection = function setCollection(collection, datagrid) {
        if (null === _this.collection) {
          _this.listenTo(collection, 'backgrid:selected', _this.select.bind(_this));
        }

        _this.collection = collection;
        _this.datagrid = datagrid;

        _this.updateView();
      };

      this.listenTo(this.getRoot(), 'grid_load:start', setCollection);
      this.listenTo(this.getRoot(), 'grid_load:complete', setCollection);
      BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        select: __('pim_datagrid.select.title'),
        selectAll: __('pim_common.all'),
        selectVisible: __('pim_datagrid.select.all_visible'),
        selectNone: __('pim_common.none')
      }));
      this.updateView();
      BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * Updates the count after clicking in a single event
     *
     * @param {Object}  model The selected model
     * @param {boolean} checked
     */
    select: function select(model, checked) {
      if (checked) {
        this.count = Math.min(this.count + 1, this.collection.state.totalRecords);
      } else {
        this.count = Math.max(this.count - 1, 0);
      }

      analytics.track('grid:item:number-selected', {
        inputName: this.collection.inputName,
        count: this.count
      });
      this.updateView();
    },

    /**
     * Updates the count after clicking in "Select all" button
     */
    selectAll: function selectAll() {
      this.count = this.collection.state.totalRecords;
      this.collection.trigger('backgrid:selectAll');
      analytics.track('grid:item:all-selected', {
        inputName: this.collection.inputName
      });
      this.updateView();
    },

    /**
     * Updates the count after clicking in "Select all visible" button
     */
    selectVisible: function selectVisible() {
      if (this.count === this.collection.state.totalRecords) {
        this.count = 0;
      }

      this.collection.trigger('backgrid:selectAllVisible');
      this.updateView();
    },

    /**
     * Updates the count after clicking in "Select none" button
     */
    selectNone: function selectNone() {
      this.count = 0;
      this.collection.trigger('backgrid:selectNone');
      this.updateView();
    },

    /**
     * Updates the count (select all or select none), regarding the current count.
     */
    toggleButton: function toggleButton() {
      if (this.count === this.collection.state.totalRecords) {
        this.selectNone();
      } else {
        this.selectAll();
      }
    },

    /**
     * Updates the current view.
     *
     * In this function, we do not use render() method because:
     * - We need to animate this extension (with CSS)
     * - The events of the sub extensions are lost after re-render.
     */
    updateView: function updateView() {
      var count = this.countEntities();

      if (count > 0) {
        this.$el.removeClass('AknDefault-bottomPanel--hidden');

        if (count >= this.collection.state.totalRecords) {
          this.$el.find('.AknSelectButton').removeClass('AknSelectButton--partial').addClass('AknSelectButton--selected');
        } else {
          this.$el.find('.AknSelectButton').removeClass('AknSelectButton--selected').addClass('AknSelectButton--partial');
        }
      } else {
        this.$el.addClass('AknDefault-bottomPanel--hidden');
        this.$el.find('.AknSelectButton').removeClass('AknSelectButton--selected').removeClass('AknSelectButton--partial');
      }

      this.$el.find('.count').text(__(this.config.label, {
        count: count
      }, count));
    },
    countEntities: function countEntities() {
      var count = this.count;

      if (this.datagrid) {
        var selectionState = this.datagrid.getSelectionState();

        if (!selectionState.inset) {
          count = this.collection.state.totalRecords - Object.keys(selectionState.selectedModels).length;
        }
      }

      return count;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 77344:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/grid/view-selector-create-view.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Create extension for the Datagrid View Selector.
 * It displays a button near the selector to allow the user to create a new view.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/grid/view-selector/create-view */ 91575), __webpack_require__(/*! pim/template/form/creation/modal */ 77123), __webpack_require__(/*! pim/template/grid/view-selector/create-view-inputs */ 65602), __webpack_require__(/*! pim/datagrid/state */ 30138), __webpack_require__(/*! pim/saver/datagrid-view */ 9165), __webpack_require__(/*! oro/messenger */ 80581)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseForm, template, templateModalContent, templateInput, DatagridState, DatagridViewSaver, messenger) {
  return BaseForm.extend({
    template: _.template(template),
    templateModalContent: _.template(templateModalContent),
    templateInput: _.template(templateInput),
    tagName: 'span',
    className: 'create-button',
    events: {
      'click .create': 'promptCreateView'
    },
    isPrivateView: true,

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if ('view' !== this.getRoot().currentViewType) {
        this.$el.html('');
        return this;
      }

      this.$el.html(this.template({
        label: __('pim_datagrid.view_selector.create_view')
      }));
      this.$('[data-toggle="tooltip"]').tooltip();
      return this;
    },

    /**
     * Prompt the view creation modal.
     */
    promptCreateView: function promptCreateView() {
      var _this = this;

      this.getRoot().trigger('grid:view-selector:close-selector');
      var modal = new Backbone.BootstrapModal({
        subtitle: __('pim_datagrid.view_selector.view'),
        title: __('pim_common.create'),
        picture: 'illustrations/Views.svg',
        okText: __('pim_common.save'),
        okCloses: false,
        content: this.templateModalContent({
          fields: this.templateInput({
            __: __
          })
        })
      });
      modal.open();
      var $submitButton = modal.$el.find('.ok').addClass('AknButton--disabled');
      var $typeSelector = modal.$el.find('.AknCreateView-typeSelector');
      modal.on('ok', this.saveView.bind(this, modal));
      modal.on('cancel', function () {
        modal.remove();
      }.bind(this));
      modal.$('input[name="new-view-label"]').on('input', function (event) {
        var label = event.target.value;

        if (!label.length) {
          $submitButton.addClass('AknButton--disabled');
        } else {
          $submitButton.removeClass('AknButton--disabled');
        }
      });
      modal.$('input[name="new-view-label"]').on('keypress', function (event) {
        if (13 === (event.keyCode || event.which) && event.target.value.length) {
          $submitButton.trigger('click');
        }
      });
      $typeSelector.on('click', function () {
        $typeSelector.toggleClass('AknSelectButton--selected');
        _this.isPrivateView = !_this.isPrivateView;
      });
    },

    /**
     * Save the current Datagrid view in database and triggers an event to the parent
     * to select it.
     *
     * @param {object} modal
     */
    saveView: function saveView(modal) {
      if ($('.modal .ok').hasClass('AknButton--disabled')) {
        return;
      }

      var gridState = DatagridState.get(this.getRoot().gridAlias, ['filters', 'columns']);
      var newView = {
        filters: gridState.filters,
        columns: gridState.columns,
        label: modal.$('input[name="new-view-label"]').val(),
        type: this.isPrivateView ? 'private' : 'public'
      };
      DatagridViewSaver.save(newView, this.getRoot().gridAlias).done(function (response) {
        this.getRoot().trigger('grid:view-selector:view-created', response.id);
        modal.close();
        modal.remove();
      }.bind(this)).fail(function (response) {
        _.each(response.responseJSON, function (error) {
          messenger.notify('error', error);
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 64957:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/grid/view-selector-current.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module to display the current view in the Datagrid View Selector.
 * This module accepts extensions to display more info beside the view.
 *
 * @author    Adrien Petremann <adrien.petremann@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/grid/view-selector/current */ 51555)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),
    datagridView: null,
    dirtyColumns: false,
    dirtyFilters: false,

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'grid:view-selector:state-changed', this.onDatagridStateChange.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        view: this.datagridView,
        dirtyFilters: this.dirtyFilters,
        dirtyColumns: this.dirtyColumns
      }));
      this.renderExtensions();
      return this;
    },

    /**
     * Method called on datagrid state change (when columns or filters are modified).
     * Set the state to dirty if it's the case then re-render this extension.
     *
     * @param {Object} datagridState
     */
    onDatagridStateChange: function onDatagridStateChange(datagridState) {
      if (null === datagridState.columns) {
        datagridState.columns = '';
      }

      var initialView = this.getRoot().initialView;
      var initialViewExists = null !== initialView && 0 !== initialView.id;
      var filtersModified = this.areFiltersModified(initialView.filters, datagridState.filters);
      var columnsModified = !_.isEqual(initialView.columns, datagridState.columns.split(','));

      if (initialViewExists) {
        this.dirtyFilters = filtersModified;
        this.dirtyColumns = columnsModified;
      } else {
        var isDefaultFilters = '' === datagridState.filters;

        var isDefaultColumns = _.isEqual(this.getRoot().defaultColumns, datagridState.columns.split(','));

        this.dirtyFilters = !isDefaultFilters;
        this.dirtyColumns = !isDefaultColumns;
      }

      this.render();
    },

    /**
     * Set the view of this module.
     *
     * @param {Object} view
     */
    setView: function setView(view) {
      this.datagridView = view;
    },

    /**
     * Check if current datagrid state filters are modified regarding the initial view
     *
     * @param {Object} initialViewFilters
     * @param {Object} datagridStateFilters
     *
     * @return {boolean}
     */
    areFiltersModified: function areFiltersModified(initialViewFilters, datagridStateFilters) {
      return initialViewFilters !== datagridStateFilters;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13149:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/grid/view-selector-line.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module to display a line in the Select2 dropdown of the Datagrid View Selector.
 * This module accepts extensions to display more info beside the view.
 *
 * @author    Adrien Petremann <adrien.petremann@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/grid/view-selector/line */ 78504)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),
    datagridView: null,
    datagridViewType: null,
    currentViewId: null,

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        view: this.datagridView,
        isCurrent: this.currentViewId === this.datagridView.id
      }));
      this.renderExtensions();
      return this;
    },

    /**
     * Set the view of this module.
     *
     * @param {Object}  view
     * @param {String}  viewType
     * @param {int}     currentViewId
     */
    setView: function setView(view, viewType, currentViewId) {
      this.datagridView = view;
      this.datagridViewType = viewType;
      this.currentViewId = currentViewId;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 33329:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/grid/view-selector-remove-view.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Remove extension for the Datagrid View Selector.
 * It displays a button near the selector to allow the user to remove the current view.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/grid/view-selector/remove-view */ 62276), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/remover/datagrid-view */ 62514), __webpack_require__(/*! oro/messenger */ 80581)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, Dialog, UserContext, DatagridViewRemover, messenger) {
  return BaseForm.extend({
    template: _.template(template),
    tagName: 'span',
    className: 'remove-button',
    events: {
      'click .remove': 'promptDeletion'
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if ('view' !== this.getRoot().currentViewType || this.getRoot().currentView.id === 0 || UserContext.get('meta').id !== this.getRoot().currentView.owner_id) {
        this.$el.html('');
        return this;
      }

      this.$el.html(this.template({
        label: __('pim_datagrid.view_selector.remove')
      }));
      this.$('[data-toggle="tooltip"]').tooltip();
      return this;
    },

    /**
     * Prompt the datagrid view deletion modal.
     */
    promptDeletion: function promptDeletion(event) {
      event.stopPropagation();
      Dialog.confirm(__('pim_datagrid.view_selector.confirmation.remove'), __('pim_common.delete'), function () {
        this.removeView(this.getRoot().currentView);
      }.bind(this));
    },

    /**
     * Remove the current Datagrid View and triggers an event to the parent.
     *
     * @param {Object} view
     */
    removeView: function removeView(view) {
      DatagridViewRemover.remove(view).done(function () {
        this.getRoot().trigger('grid:view-selector:view-removed');
      }.bind(this)).fail(function (response) {
        messenger.notify('error', response.responseJSON);
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16137:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/grid/view-selector-save-view.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension for the Datagrid View Selector.
 * It displays a button near the selector to allow the user to save the current changes
 * to the current view.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/grid/view-selector/save-view */ 60649), __webpack_require__(/*! pim/datagrid/state */ 30138), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/saver/datagrid-view */ 9165), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, DatagridState, Dialog, Routing, UserContext, DatagridViewSaver, messenger, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    tagName: 'span',
    className: 'save-button',
    events: {
      'click .save': 'saveView'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'grid:view-selector:state-changed', this.onDatagridStateChange);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if ('view' !== this.getRoot().currentViewType || UserContext.get('meta').id !== this.getRoot().currentView.owner_id) {
        this.$el.html('');
        return;
      }

      this.$el.html(this.template({
        dirty: this.dirty,
        label: __('pim_datagrid.view_selector.save_changes')
      }));
      this.$('[data-toggle="tooltip"]').tooltip();
    },

    /**
     * Method called on datagrid state change (when columns or filters are modified)
     *
     * @param {Object} datagridState
     */
    onDatagridStateChange: function onDatagridStateChange(datagridState) {
      var initialView = this.getRoot().initialView;
      var initialViewExists = null !== initialView && 0 !== initialView.id;

      if (initialViewExists) {
        var filtersModified = initialView.filters !== datagridState.filters;
        var columnsModified = !_.isEqual(initialView.columns, datagridState.columns.split(','));
        this.dirty = filtersModified || columnsModified;
        this.render();
      }
    },

    /**
     * Save the current Datagrid view in database and triggers an event to the parent
     * to select it.
     */
    saveView: function saveView() {
      var gridState = DatagridState.get(this.getRoot().gridAlias, ['filters', 'columns']);
      var currentView = $.extend(true, {}, this.getRoot().currentView);
      currentView.filters = gridState.filters;
      currentView.columns = gridState.columns;
      DatagridViewSaver.save(currentView, this.getRoot().gridAlias).done(function (response) {
        this.getRoot().trigger('grid:view-selector:view-saved', response.id);
        analytics.track('product-grid:view:saved', {
          name: currentView.label
        });
      }.bind(this)).fail(function (response) {
        _.each(response.responseJSON, function (error) {
          messenger.notify('error', error);
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 53158:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/grid/view-selector.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"forwarded-events":{"grid:product-grid:state_changed":"grid:product-grid:state_changed"}} ; 'use strict';
/**
 * Main module for the Datagrid View Selector.
 * Mainly composed by a Select2 component with several extension points.
 *
 * Allow the user to search & select a Grid View in a list.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/grid/view-selector */ 15168), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/datagrid/state */ 30138), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseForm, template, initSelect2, DatagridState, FetcherRegistry, FormBuilder, mediator, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    resultsPerPage: 20,
    queryTimer: null,
    config: {},
    currentViewType: null,
    currentView: null,
    initialView: null,
    defaultColumns: [],
    defaultUserView: null,
    gridAlias: null,
    select2Instance: null,
    viewTypeSwitcher: null,
    currentLoadingPage: null,
    currentLoadingTerm: null,
    events: {
      'click .view-type-item': 'switchViewType'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = Object.assign({}, meta.config);
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure(gridAlias) {
      this.gridAlias = gridAlias;

      if (_.has(__moduleConfig, 'forwarded-events')) {
        this.forwardMediatorEvents(__moduleConfig['forwarded-events']);
      }

      this.listenTo(this.getRoot(), 'grid:view-selector:view-created', this.onViewCreated.bind(this));
      this.listenTo(this.getRoot(), 'grid:view-selector:view-saved', this.onViewSaved.bind(this));
      this.listenTo(this.getRoot(), 'grid:view-selector:view-removed', this.onViewRemoved.bind(this));
      this.listenTo(this.getRoot(), 'grid:view-selector:close-selector', this.closeSelect2.bind(this));
      this.listenTo(this.getRoot(), 'grid:product-grid:state_changed', this.onGridStateChange.bind(this));
      Backbone.Router.prototype.on('route', this.unbindEvents.bind(this));
      return FetcherRegistry.getFetcher('datagrid-view').defaultColumns(this.gridAlias).then(function (columns) {
        this.defaultColumns = columns;
        return BaseForm.prototype.configure.apply(this, arguments);
      }.bind(this));
    },

    /**
     * Detach event listeners
     */
    unbindEvents: function unbindEvents() {
      this.off();
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.initializeSelection().then(function () {
        this.initializeViewTypes();
        this.$el.html(this.template({
          __: __,
          currentViewType: this.currentViewType,
          displaySwitcher: this.config.viewTypes.length > 1,
          viewTypes: this.config.viewTypes
        }));
        this.initializeSelectWidget();
        this.renderExtensions();
      }.bind(this));
    },

    /**
     * Initialize the view type to display at initialization.
     */
    initializeViewTypes: function initializeViewTypes() {
      this.currentViewType = 'view';
    },

    /**
     * Initialize the Select2 component and format elements.
     */
    initializeSelectWidget: function initializeSelectWidget() {
      var $select = this.$('input[type="hidden"]');
      var options = {
        dropdownCssClass: 'grid-view-selector',
        closeOnSelect: false,
        formatResult: this.formatResult.bind(this),
        formatSelection: this.formatSelection.bind(this),
        query: this.query.bind(this),
        initSelection: function (element, callback) {
          /**
           * Initialize the select2 with current selected view. If no current view is selected,
           * we select the user's one. If he doesn't have one, we create a default one for him!
           */
          callback(this.currentView);
        }.bind(this)
      };
      this.select2Instance = initSelect2.init($select, options);
      this.select2Instance.on('select2-selecting', function (event) {
        var view = event.object;
        this.selectView(view);
      }.bind(this));
      this.select2Instance.on('select2-close', function () {
        this.currentLoadingPage = null;
        this.currentLoadingTerm = null;
      }.bind(this));
    },

    /**
     * Do the Select2 query for the selector view
     *
     * @param options
     */
    query: function query(options) {
      clearTimeout(this.queryTimer);
      this.queryTimer = setTimeout(function () {
        var page = 1;

        if (options.context && options.context.page) {
          page = options.context.page;
        }

        var searchParameters = this.getSelectSearchParameters(options.term, page);
        var fetcher = this.config.fetchers[this.currentViewType];

        if (this.currentLoadingPage === page && this.currentLoadingTerm === options.term) {
          return;
        }

        this.currentLoadingPage = page;
        this.currentLoadingTerm = options.term;
        FetcherRegistry.getFetcher(fetcher).search(searchParameters).then(function (response) {
          var views = response.results || response;
          var choices = this.toSelect2Format(views);
          var more = typeof response.more === 'undefined' ? choices.length === this.getResultsPerPage() : response.more;

          if (page === 1 && !options.term) {
            choices = this.ensureDefaultView(choices);
          }

          options.callback({
            results: choices,
            more: more,
            context: {
              page: page + 1
            }
          });
        }.bind(this));
      }.bind(this), 400);
    },

    /**
     * Format result (datagrid view list) method of select2.
     * This way we can display views and their infos beside them.
     */
    formatResult: function formatResult(item, $container) {
      FormBuilder.build('pim-grid-view-selector-line').then(function (form) {
        form.setParent(this);
        form.setView(item, this.currentViewType, this.currentView.id);
        $container.append(form.render().$el);
      }.bind(this));
    },

    /**
     * Format current selection method of select2.
     */
    formatSelection: function formatSelection(item, $container) {
      FormBuilder.getFormMeta('pim-grid-view-selector-current').then(FormBuilder.buildForm).then(function (form) {
        form.setParent(this);
        form.setView(item);
        return form.configure().then(function () {
          $container.append(form.render().$el);
          this.onGridStateChange();
        }.bind(this));
      }.bind(this));
    },

    /**
     * Method called on view type switching.
     *
     * @param {Event} event
     */
    switchViewType: function switchViewType(event) {
      this.currentViewType = $(event.target).data('value');
      this.render();
    },

    /**
     * Initialize the Select2 selection based on the DatagridState.
     * Could be the User default one, or an existing view edited or whatever.
     *
     * @return {Promise}
     */
    initializeSelection: function initializeSelection() {
      var activeViewId = DatagridState.get(this.gridAlias, 'view');
      var isDefaultView = '0' === activeViewId;
      var deferred = $.Deferred();
      this.getUserDefaultView().then(function (userDefaultView) {
        if (userDefaultView && (!activeViewId || isDefaultView)) {
          // User is on default view but has a custom default one
          userDefaultView.text = userDefaultView.label;
          deferred.resolve(userDefaultView);
        } else if (activeViewId && !isDefaultView) {
          // User is on an existing view
          FetcherRegistry.getFetcher('datagrid-view').fetch(activeViewId, {
            alias: this.gridAlias,
            cached: false
          }).then(this.postFetchDatagridView.bind(this)).then(function (view) {
            deferred.resolve(view);
          }).fail(function () {
            this.selectView(userDefaultView ? userDefaultView : this.getDefaultView());
          }.bind(this));
        } else {
          // Other, set the default view
          deferred.resolve(this.getDefaultView());
        }
      }.bind(this));
      deferred.then(function (initView) {
        var datagridState = DatagridState.get(this.gridAlias, ['filters', 'columns']);
        this.initialView = $.extend(true, {}, initView);
        this.currentView = $.extend(true, {}, initView);

        if (0 !== this.initialView.id && datagridState.columns !== null) {
          this.currentView.filters = datagridState.filters;
          this.currentView.columns = datagridState.columns.split(',');
        }

        DatagridState.set(this.gridAlias, {
          initialViewState: this.initialView.filters
        });
        this.getRoot().trigger('grid:view-selector:initialized', this.currentView);
        mediator.trigger('grid:view:selected', this.currentView);
        return initView;
      }.bind(this));
      return deferred;
    },

    /**
     * Method called right after fetching the view from the backend.
     * This is where we can handle the view before it goes to select2.
     *
     * @param {Object} view
     *
     * @return {Promise}
     */
    postFetchDatagridView: function postFetchDatagridView(view) {
      view.text = view.label;
      return $.Deferred().resolve(view).promise();
    },

    /**
     * Return the default view object which contains default columns & no filter.
     *
     * @return {Object}
     */
    getDefaultView: function getDefaultView() {
      return {
        id: 0,
        text: __('pim_datagrid.view_selector.default_view'),
        columns: this.defaultColumns,
        type: 'view',
        filters: ''
      };
    },

    /**
     * Return the default user view object.
     *
     * @return {Object}
     */
    getUserDefaultView: function getUserDefaultView() {
      return FetcherRegistry.getFetcher('datagrid-view').defaultUserView(this.gridAlias).then(function (defaultUserView) {
        this.defaultUserView = defaultUserView.view;
        return defaultUserView.view;
      }.bind(this));
    },

    /**
     * Ensure given choices contain a default view if user doesn't have one.
     *
     * @param {array} choices
     *
     * @return {array}
     */
    ensureDefaultView: function ensureDefaultView(choices) {
      if (null !== this.defaultUserView || 'view' !== this.currentViewType) {
        return choices;
      }

      choices.unshift(this.getDefaultView());
      return choices;
    },

    /**
     * Method called when the grid state changes.
     * It allows this selector to react to new filters / columns etc..
     */
    onGridStateChange: function onGridStateChange() {
      var datagridState = DatagridState.get(this.gridAlias, ['filters', 'columns']);

      if (null === datagridState.columns) {
        datagridState.columns = '';
      }

      if (null !== this.currentView) {
        this.currentView.filters = datagridState.filters;
        this.currentView.columns = datagridState.columns.split(',');
      }

      this.getRoot().trigger('grid:view-selector:state-changed', datagridState);
    },

    /**
     * Method called when a new view has been created.
     * This method fetches the newly created view thanks to its id, then selects it.
     *
     * @param {int} viewId
     */
    onViewCreated: function onViewCreated(viewId) {
      FetcherRegistry.getFetcher('datagrid-view').clear();
      FetcherRegistry.getFetcher('datagrid-view').fetch(viewId, {
        alias: this.gridAlias
      }).then(function (view) {
        this.selectView(view);
      }.bind(this));
    },

    /**
     * Method called when a view has been saved.
     * This method fetches the saved view thanks to its id, then selects it.
     *
     * @param {int} viewId
     */
    onViewSaved: function onViewSaved(viewId) {
      this.onViewCreated(viewId);
    },

    /**
     * Method called when a view is removed.
     * We reset all filters on the grid.
     */
    onViewRemoved: function onViewRemoved() {
      FetcherRegistry.getFetcher('datagrid-view').clear();
      this.selectView(this.getDefaultView());
    },

    /**
     * Close the Select2 instance of this View Selector
     */
    closeSelect2: function closeSelect2() {
      if (null !== this.select2Instance) {
        this.select2Instance.select2('close');
      }
    },

    /**
     * Method called when the user selects a view through this selector.
     *
     * @param {Object} view The selected view
     */
    selectView: function selectView(view) {
      var _view$label;

      DatagridState.set(this.gridAlias, {
        view: view.id,
        filters: view.filters,
        columns: view.columns.join(',')
      });
      this.currentView = view;
      this.trigger('grid:view-selector:view-selected', view);
      mediator.trigger('grid:view:selected', view);
      FetcherRegistry.getFetcher('locale').clear();
      analytics.track('product-grid:view:selected', {
        name: (_view$label = view.label) !== null && _view$label !== void 0 ? _view$label : view.text
      });
      this.reloadPage();
    },

    /**
     * Get grid view fetcher search parameters by giving select2 search term & page
     *
     * @param {string} term
     * @param {int}    page
     *
     * @return {Object}
     */
    getSelectSearchParameters: function getSelectSearchParameters(term, page) {
      return $.extend(true, {}, this.config.searchParameters, {
        search: term,
        alias: this.gridAlias,
        options: {
          limit: this.getResultsPerPage(),
          page: page
        }
      });
    },

    /**
     * Take incoming data and format them to have all required parameters
     * to be used by the select2 module.
     *
     * @param {array} data
     *
     * @return {array}
     */
    toSelect2Format: function toSelect2Format(data) {
      return _.map(data, function (view) {
        view.text = view.label;

        if (!_.has(view, 'id') && _.has(view, 'code')) {
          view.id = view.code;
        }

        return view;
      });
    },

    /**
     * Reload the page.
     */
    reloadPage: function reloadPage() {
      var url = window.location.hash;
      Backbone.history.fragment = new Date().getTime();
      Backbone.history.navigate(url, true);
    },
    getResultsPerPage: function getResultsPerPage() {
      return this.resultsPerPage;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 41494:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/group-type/form/delete.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension for group type
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/group-type */ 26785)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, GroupTypeRemover) {
  return DeleteForm.extend({
    remover: GroupTypeRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 5587:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/group/form/delete.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension for groups
 *
 * @author    Nicolas Dupont <nicolas@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/group */ 7374)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, GroupRemover) {
  return DeleteForm.extend({
    remover: GroupRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 58018:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/group/form/meta/product-count.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Group meta extension to display number of products this group contains
 *
 * @author    Nicolas Dupont <nicolas@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/group/meta/product-count */ 30509)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, formTemplate) {
  return BaseForm.extend({
    tagName: 'span',
    template: _.template(formTemplate),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var group = this.getFormData();
      var html = '';

      if (_.has(group, 'products')) {
        html = this.template({
          label: __(this.config.productCountLabel),
          productCount: group.products.length
        });
      }

      this.$el.html(html);
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 26494:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/group/form/products.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the product datagrid in a group
 *
 * @author    Nicolas Dupont <nicolas@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/common/grid */ 30820)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, BaseForm, FetcherRegistry, UserContext, Grid) {
  return BaseForm.extend({
    className: 'products',

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: this.code,
        label: __(this.config.label)
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      if (!this.productGroupGrid) {
        this.productGroupGrid = new Grid(this.config.gridId, {
          locale: UserContext.get('catalogLocale'),
          currentGroup: this.getFormData().meta.id,
          id: this.getFormData().meta.id,
          selection: this.getFormData().products,
          selectionIdentifier: 'id'
        });
        this.productGroupGrid.on('grid:selection:updated', function (selection) {
          this.setData('products', selection);
        }.bind(this));
        this.getRoot().on('pim_enrich:form:entity:post_fetch', function () {
          var shouldRefresh = _this.code === _this.getParent().getCurrentTab();

          if (shouldRefresh) _this.productGroupGrid.refresh();
        });
      }

      this.$el.empty().append(this.productGroupGrid.render().$el);
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29982:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/group/form/properties/general.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Module used to display the generals properties of a group
 *
 * @author    Nicolas Dupont <nicolas@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/group/tab/properties/general */ 37933), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, FetcherRegistry, template) {
  return BaseForm.extend({
    className: 'tabsection',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        model: this.getFormData(),
        sectionTitle: __('pim_common.general_properties'),
        codeLabel: __('pim_common.code'),
        typeLabel: __('pim_common.type'),
        __: __
      }));
      this.$el.find('select.select2').select2({});
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 52498:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/group/form/save.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension for Group
 *
 * @author    Nicolas Dupont <nicolas@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/save */ 21153), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/saver/group */ 17073), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseSave, messenger, GroupSaver, FieldManager, i18n, UserContext) {
  return BaseSave.extend({
    updateSuccessMessage: __('pim_enrich.entity.group.flash.update.success'),
    updateFailureMessage: __('pim_enrich.entity.group.flash.update.fail'),

    /**
     * {@inheritdoc}
     */
    save: function save() {
      var group = $.extend(true, {}, this.getFormData());
      delete group.meta;
      var notReadyFields = FieldManager.getNotReadyFields();

      if (0 < notReadyFields.length) {
        var fieldLabels = _.map(notReadyFields, function (field) {
          return i18n.getLabel(field.attribute.label, UserContext.get('catalogLocale'), field.attribute.code);
        });

        messenger.notify('error', __('pim_enrich.entity.group.flash.update.fields_not_ready', {
          fields: fieldLabels.join(', ')
        }));
        return;
      }

      this.showLoadingMask();
      this.getRoot().trigger('pim_enrich:form:entity:pre_save');
      return GroupSaver.save(group.code, group).then(function (data) {
        this.postSave();
        this.setData(data);
        this.getRoot().trigger('pim_enrich:form:entity:post_fetch', data);
      }.bind(this)).fail(this.fail.bind(this)).always(this.hideLoadingMask.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 97158:
/*!******************************************!*\
  !*** ./public/bundles/pimui/js/index.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form-builder */ 16371)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, formBuilder) {
  formBuilder.build('pim-app').then(function (form) {
    form.setElement($('.app'));
    form.render();
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 47534:
/*!************************************************!*\
  !*** ./public/bundles/pimui/js/init-layout.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/app */ 10501), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/layout */ 76896), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! bootstrap */ 16486), __webpack_require__(/*! jquery-setup */ 22379)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Backbone, _, router, __, app, mediator, layout, Dialog, messenger) {
  /* ============================================================
   * from layout.js
   * ============================================================ */
  return function () {
    mediator.once('tab:changed', function () {
      setTimeout(function () {
        // emulates 'document ready state' for selenium tests
        document['page-rendered'] = true;
        mediator.trigger('page-rendered');
      }, 50);
    });
    layout.init();
    /* ============================================================
     * from height_fix.js
     * ============================================================ */

    /* dynamic height for central column */

    var debugBar = $('.sf-toolbar');
    var anchor = $('#bottom-anchor');
    var content = false;

    var initializeContent = function initializeContent() {
      if (!content) {
        content = $('.scrollable-container').filter(':parents(.ui-widget)');
        content.css('overflow', 'auto');
      }
    };

    var adjustHeight = function adjustHeight() {
      initializeContent();
      var debugBarHeight = debugBar.length && debugBar.is(':visible') ? debugBar.height() : 0;
      var anchorTop = anchor.position().top;
      $(content.get().reverse()).each(function (pos, el) {
        el = $(el);
        el.height(anchorTop - el.position().top - debugBarHeight);
      });
      layout.adjustScrollspy();
    };

    var tries = 0;

    var waitForDebugBar = function waitForDebugBar() {
      if (debugBar.children().length) {
        window.setTimeout(adjustHeight, 500);
      } else if (tries < 100) {
        tries += 1;
        window.setTimeout(waitForDebugBar, 500);
      }
    };

    var adjustReloaded = function adjustReloaded() {
      content = false;
      adjustHeight();
    };

    if (!anchor.length) {
      anchor = $('<div id="bottom-anchor"></div>').css({
        position: 'fixed',
        bottom: '0',
        left: '0',
        width: '1px',
        height: '1px'
      }).appendTo($(document.body));
    }

    mediator.once('page-rendered', function () {
      if (debugBar.length) {
        waitForDebugBar();
      } else {
        adjustHeight();
      }
    });
    $(window).on('resize', adjustHeight);
    mediator.bind('route_complete', adjustReloaded);
    /* ============================================================
     * from form_buttons.js
     * ============================================================ */

    $(document).on('click', '.action-button', function () {
      var actionInput = $('input[name = "input_action"]');
      actionInput.val($(this).attr('data-action'));
      $('#' + actionInput.attr('data-form-id')).submit();
    });
    /* ============================================================
     * from remove.confirm.js
     * ============================================================ */

    $(document).on('click', '.remove-button', function () {
      var el = $(this);
      var message = el.data('message');
      var subTitle = el.data('subtitle');

      var doDelete = function doDelete() {
        router.showLoadingMask();
        $.ajax({
          url: el.data('url'),
          type: 'DELETE',
          success: function success() {
            el.trigger('removesuccess');
            messenger.enqueueMessage('success', el.data('success-message'), {
              hashNavEnabled: true
            });

            if (el.data('redirect')) {
              $.isActive(true);
              Backbone.history.navigate('#' + el.data('redirect'));
            } else {
              router.hideLoadingMask();
            }
          },
          error: function error(response) {
            router.hideLoadingMask();
            var contentType = response.getResponseHeader('content-type');

            var message = __('Unexpected error occurred. Please contact system administrator.');

            if (contentType.indexOf('application/json') !== -1) {
              var decodedResponse = JSON.parse(response.responseText);

              if (undefined !== decodedResponse.message) {
                message = decodedResponse.message;
              }
            }

            messenger.notify('error', el.data('error-message') || message, {
              flash: false
            });
          }
        });
      };

      this.confirmModal = Dialog.confirmDelete(message, __('pim_common.confirm_deletion'), doDelete, subTitle);
      return false;
    });
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 80318:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/init-translator.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387).initTranslator;

/***/ }),

/***/ 55039:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit-button.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Redirect button
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2020 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/common/redirect */ 47440), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, translate, BaseRedirect, FetcherRegistry, router) {
  return BaseRedirect.extend({
    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      this.isVisible().then(function (isVisible) {
        var _this$config$buttonCl;

        _this.$el.html(_this.template({
          label: translate(_this.config.label),
          buttonClass: "".concat((_this$config$buttonCl = _this.config.buttonClass) !== null && _this$config$buttonCl !== void 0 ? _this$config$buttonCl : 'AknButton--action').concat(isVisible ? '' : ' AknButton--disabled'),
          title: isVisible ? '' : translate(_this.config.title)
        }));
      });
      return this;
    },

    /**
     * Redirect to the route given in the config
     */
    redirect: function redirect() {
      var _this2 = this;

      this.isVisible().then(function (isVisible) {
        isVisible && router.redirect(_this2.getUrl());
      });
    },

    /**
     * {@inheritdoc}
     */
    isVisible: function isVisible() {
      var _FetcherRegistry$getF,
          _FetcherRegistry$getF2,
          _this3 = this;

      //If we are in CE, the permission registry does not exists so the button is visible
      if (undefined === ((_FetcherRegistry$getF = FetcherRegistry.getFetcher('permission')) === null || _FetcherRegistry$getF === void 0 ? void 0 : (_FetcherRegistry$getF2 = _FetcherRegistry$getF.options) === null || _FetcherRegistry$getF2 === void 0 ? void 0 : _FetcherRegistry$getF2.urls)) return $.Deferred().resolve(true);
      return FetcherRegistry.getFetcher('permission').fetchAll().then(function (permissions) {
        var _permission$edit;

        var permission = permissions.job_instances.find(function (_ref) {
          var code = _ref.code;
          return _this3.getFormData().code === code;
        });
        return (_permission$edit = permission === null || permission === void 0 ? void 0 : permission.edit) !== null && _permission$edit !== void 0 ? _permission$edit : false;
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 37873:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/content/data/help.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Extension to add a help tooltip on filters.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/export/product/edit/content/data/help */ 5986)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:filter:extension:add', this.addFilterExtension.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Adds the extension to filters.
     * If the translation is not here the tooltip won't be displayed at all.
     *
     * @param {Object} event
     */
    addFilterExtension: function addFilterExtension(event) {
      var key = 'pim_enrich.export.product.filter.' + event.filter.shortname + '.help';

      var text = __(key);

      if (key === text) {
        return;
      }

      var $content = $(this.template({
        text: text
      }));
      $content.find('[data-toggle="tooltip"]').tooltip();
      event.filter.addElement('after-input', 'help', $content);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 68932:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/field/decimal-separator.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Decimal separator field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/job/common/edit/field/select */ 19553)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, FetcherRegistry, SelectField) {
  return SelectField.extend({
    /**
     * {@inherit}
     */
    configure: function configure() {
      return $.when(FetcherRegistry.getFetcher('formats').fetchAll(), SelectField.prototype.configure.apply(this, arguments)).then(function (formats) {
        this.config.options = formats.decimal_separators;
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29072:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/field/field.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Base field form extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/template/export/common/edit/field/field */ 60257)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, propertyAccessor, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template(this.getTemplateContext()));
      this.$('.field-input').prepend(this.renderInput(this.getTemplateContext()));
      this.$('[data-toggle="tooltip"]').tooltip();
      this.delegateEvents();
      return this;
    },

    /**
     * Render the input itself
     *
     * @param {object} templateContext
     *
     * @return {string}
     */
    renderInput: function renderInput(templateContext) {
      return this.fieldTemplate(templateContext);
    },

    /**
     * Get the template object for the field
     *
     * @return {object}
     */
    getTemplateContext: function getTemplateContext() {
      return {
        __: __,
        value: this.getValue(),
        config: this.config,
        error: this.getParent().getValidationErrorsForField(this.getFieldCode())
      };
    },

    /**
     * Get the current value of the field
     *
     * @return {mixed}
     */
    getValue: function getValue() {
      return propertyAccessor.accessProperty(this.getFormData(), this.getFieldCode());
    },

    /**
     * Get the field code of the property
     *
     * @return {strign}
     */
    getFieldCode: function getFieldCode() {
      return this.config.fieldCode;
    },

    /**
     * Update the model after dom update
     */
    updateState: function updateState() {
      var data = propertyAccessor.updateProperty(this.getFormData(), this.getFieldCode(), this.getFieldValue());
      this.setData(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 19553:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/field/select.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Select field extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/job/common/edit/field/field */ 29072), __webpack_require__(/*! pim/template/export/common/edit/field/select */ 21380), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseField, fieldTemplate) {
  return BaseField.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change select': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      BaseField.prototype.render.apply(this, arguments);
      this.$('.select2').select2();
    },

    /**
     * Get the field dom value
     *
     * @return {string}
     */
    getFieldValue: function getFieldValue() {
      return this.$('select').val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 50698:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/field/switch.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Switch view extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/job/common/edit/field/field */ 29072), __webpack_require__(/*! pim/template/export/common/edit/field/switch */ 37939), __webpack_require__(/*! bootstrap.bootstrapswitch */ 86049)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseField, fieldTemplate) {
  return BaseField.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change input': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      BaseField.prototype.render.apply(this, arguments);
      this.$('.switch').bootstrapSwitch();
    },

    /**
     * Get the field dom value
     *
     * @return {string}
     */
    getFieldValue: function getFieldValue() {
      return this.$('input[type="checkbox"]').prop('checked');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 90147:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/field/text.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Text view extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/job/common/edit/field/field */ 29072), __webpack_require__(/*! pim/template/export/common/edit/field/text */ 96367)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseField, fieldTemplate) {
  return BaseField.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change input': 'updateState'
    },

    /**
     * Get the field dom value
     *
     * @return {string}
     */
    getFieldValue: function getFieldValue() {
      return this.$('input').val();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 9881:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/label.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Title extension for jobs
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/label */ 8709), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseLabel, __) {
  return BaseLabel.extend({
    /**
     * Provide the object label
     *
     * @return {String}
     */
    getLabel: function getLabel() {
      // The key is for example 'pim_import_export.entity.import_profile.uppercase_label'
      var prefix = __('pim_import_export.entity.' + this.getFormData().type + '_profile.uppercase_label');

      return prefix + ' - ' + this.getFormData().label;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 97710:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/launch.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Launch button
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/template/export/common/edit/launch */ 32032), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, Routing, router, propertyAccessor, messenger, LoadingMask, template, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    events: {
      'click .AknButton': 'launch'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.isVisible().then(function (isVisible) {
        var _this$config$buttonCl;

        this.$el.empty();

        if (!isVisible) {
          return this;
        }

        this.$el.html(this.template({
          label: __(this.config.label),
          buttonClass: (_this$config$buttonCl = this.config.buttonClass) !== null && _this$config$buttonCl !== void 0 ? _this$config$buttonCl : '',
          title: this.config.title ? __(this.config.title) : ''
        }));
      }.bind(this));
      this.delegateEvents();
      return this;
    },

    /**
     * Launch the job
     */
    launch: function launch() {
      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo(this.getRoot().$el).show();
      $.post(this.getUrl()).then(function (response) {
        if (response.redirectUrl) {
          router.redirect(response.redirectUrl);
        } else {
          router.reloadPage();
        }

        analytics.track('job-instance:export:launched', {
          url: this.url
        });
      }).fail(function () {
        messenger.notify('error', __('pim_import_export.form.job_instance.fail.launch'));
      }).always(function () {
        loadingMask.hide().$el.remove();
      });
    },

    /**
     * Get the route to launch the job
     *
     * @return {string}
     */
    getUrl: function getUrl() {
      var params = {};
      params[this.config.identifier.name] = propertyAccessor.accessProperty(this.getFormData(), this.config.identifier.path);
      return Routing.generate(this.config.route, params);
    },

    /**
     * Should this extension render
     *
     * @return {Promise}
     */
    isVisible: function isVisible() {
      return $.Deferred().resolve(true).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 24751:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/meta.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Label extension for jobs
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/export/common/edit/meta */ 29031)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseForm, _, __, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        jobInstance: this.getFormData(),
        __: __
      }));
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 53853:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/properties.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Properties form
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/export/common/edit/properties */ 16673), __webpack_require__(/*! pim/common/tab */ 56135), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/edition */ 18747)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, template, BaseTab, propertyAccessor, pimEdition) {
  return BaseTab.extend({
    template: _.template(template),
    errors: {},

    /**
     * {@inherit}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.resetValidationErrors.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', this.setValidationErrors.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', this.render.bind(this));
      return BaseTab.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inherit}
     */
    registerTab: function registerTab() {
      var _this = this;

      this.trigger('tab:register', {
        code: this.config.tabCode ? this.config.tabCode : this.code,
        label: __(this.config.tabTitle),
        isVisible: function isVisible() {
          return !(_this.config.hideForCloudEdition && pimEdition.isCloudEdition());
        }
      });
    },

    /**
     * Set validation errors after save request failure
     *
     * @param {event} event
     */
    setValidationErrors: function setValidationErrors(event) {
      this.errors = event.response;
    },

    /**
     * Remove validation error
     */
    resetValidationErrors: function resetValidationErrors() {
      if (Object.entries(this.errors).length >= 0) {
        this.getRoot().trigger('pim_enrich:form:form-tabs:remove-errors');
        this.errors = {};
      }
    },

    /**
     * Get the validtion errors for the given field
     *
     * @param {string} field
     *
     * @return {mixed}
     */
    getValidationErrorsForField: function getValidationErrorsForField(field) {
      return propertyAccessor.accessProperty(this.errors, field, null);
    },

    /**
     * {@inherit}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template({
        __: __
      }));
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 25261:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/save.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension for job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/save */ 21153), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseSave, messenger, FieldManager, i18n, UserContext, Routing, router, analytics) {
  return BaseSave.extend({
    updateSuccessMessage: __('pim_import_export.entity.job_instance.flash.update.success'),
    updateFailureMessage: __('pim_import_export.entity.job_instance.flash.update.fail'),

    /**
     * {@inheritdoc}
     */
    save: function save() {
      var jobInstance = $.extend(true, {}, this.getFormData());
      delete jobInstance.meta;
      delete jobInstance.connector;
      this.showLoadingMask();
      this.getRoot().trigger('pim_enrich:form:entity:pre_save');
      return this.getJobInstanceSaver().save(jobInstance.code, jobInstance).then(function (data) {
        this.postSave();
        this.setData(data);
        this.getRoot().trigger('pim_enrich:form:entity:post_fetch', data);
        analytics.track('job-instance:form-edit:saved', {
          code: jobInstance.code
        });
        router.redirectToRoute(this.config.redirectPath, {
          code: jobInstance.code
        });
      }.bind(this)).fail(this.fail.bind(this)).always(this.hideLoadingMask.bind(this));
    },

    /**
     * @inheritDoc
     */
    fail: function fail(response) {
      switch (response.status) {
        case 400:
          this.getRoot().trigger('pim_enrich:form:entity:bad_request', {
            sentData: this.getFormData(),
            response: response.responseJSON
          });
          break;

        case 500:
          /* global console */
          var message = response.responseJSON ? response.responseJSON : response;
          console.error('Errors:', message);
          this.getRoot().trigger('pim_enrich:form:entity:error:save', message);
          break;

        default:
      }

      messenger.notify('error', response.responseJSON.message ? __(response.responseJSON.message) : this.updateFailureMessage);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 54691:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/upload-launch.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Upload and launch button
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/job/common/edit/launch */ 97710), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! oro/loading-mask */ 13284)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseLaunch, router, messenger, LoadingMask) {
  return BaseLaunch.extend({
    /**
     * {@inherit}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:job:file_updated', this.render.bind(this));
      return BaseLaunch.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inherit}
     */
    launch: function launch() {
      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo(this.getRoot().$el).show();

      if (this.getFormData().file) {
        var formData = new FormData();
        formData.append('file', this.getFormData().file);
        $.ajax({
          url: this.getUrl(),
          method: 'POST',
          data: formData,
          contentType: false,
          cache: false,
          processData: false
        }).then(function (response) {
          if (response.redirectUrl) {
            router.redirect(response.redirectUrl);
          } else {
            router.reloadPage();
          }
        }).fail(function (response) {
          if (undefined !== response.responseJSON.message) {
            messenger.notify('error', __(response.responseJSON.message));
          } else {
            messenger.notify('error', __('pim_import_export.form.job_instance.fail.launch'));
          }
        }).always(function () {
          loadingMask.hide().$el.remove();
        });
      } else {
        loadingMask.hide().$el.remove();
      }
    },

    /**
     * {@inherit}
     */
    isVisible: function isVisible() {
      return $.Deferred().resolve(this.getFormData().file).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 11079:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/upload.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Displays a drop zone to upload a file.
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/export/common/edit/upload */ 20693)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template) {
  return BaseForm.extend({
    template: _.template(template),
    events: {
      'change input[type="file"]': 'addFile',
      'click .clear-field': 'removeFile'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        file: this.getFormData().file,
        type: this.config.type,
        __: __
      }));
      this.delegateEvents();
      return this;
    },

    /**
     * When a file is added to the dom input
     */
    addFile: function addFile() {
      var input = this.$('input[type="file"]').get(0);

      if (!input || 0 === input.files.length) {
        return;
      }

      this.setData({
        file: input.files[0]
      });
      this.getRoot().trigger('pim_enrich:form:job:file_updated');
      this.render();
    },

    /**
     * When the user remove the file from the input
     */
    removeFile: function removeFile() {
      this.setData({
        file: null
      });
      this.getRoot().trigger('pim_enrich:form:job:file_updated');
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 91449:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/edit/validation.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/export/common/edit/validation */ 93095), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/common/property */ 64070)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, messenger, propertyAccessor) {
  return BaseForm.extend({
    template: _.template(template),
    errors: [],

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:filter:extension:add', this.addFilterExtension.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.setValidationErrors.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },
    setValidationErrors: function setValidationErrors(event) {
      this.errors = event.response;
      this.getRoot().trigger('pim_enrich:form:entity:validation_error', event);
    },

    /**
     * Adds the extension to filters.
     * If there is an error for the current filter, we add an element to it.
     *
     * @param {Object} event
     */
    addFilterExtension: function addFilterExtension(event) {
      var filter = event.filter;

      if (null !== propertyAccessor.accessProperty(this.errors, 'configuration.filters.data' + filter.getField())) {
        var content = $(this.template({
          errors: propertyAccessor.accessProperty(this.errors, 'configuration.filters.data' + filter.getField())
        }));
        event.filter.addElement('below-input', 'validation', content);
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 84269:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/job/common/file-path.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Displays the file path to upload
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/import/file-path */ 32282), __webpack_require__(/*! akeneo-design-system */ 96541)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template, _ref) {
  var Badge = _ref.Badge;
  return BaseForm.extend({
    className: 'AknCenteredBox',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this$getStorageInfo = this.getStorageInfo(),
          label = _this$getStorageInfo.label,
          path = _this$getStorageInfo.path,
          badge = _this$getStorageInfo.badge;

      this.$el.html(this.template({
        label: label,
        path: path
      }));
      this.renderBadge(badge);
      this.delegateEvents();
      return BaseForm.prototype.render.apply(this, arguments);
    },
    renderBadge: function renderBadge(badge) {
      if (null === badge) return;
      this.renderReact(Badge, {
        children: badge,
        level: 'secondary'
      }, this.$el.find('.storage_type')[0]);
    },
    getStorageInfo: function getStorageInfo() {
      var _configuration$storag, _configuration$storag2, _configuration$storag3, _configuration$storag4;

      var _this$getFormData = this.getFormData(),
          configuration = _this$getFormData.configuration;

      var storageType = (_configuration$storag = (_configuration$storag2 = configuration.storage) === null || _configuration$storag2 === void 0 ? void 0 : _configuration$storag2.type) !== null && _configuration$storag !== void 0 ? _configuration$storag : 'none';
      var filePath = (_configuration$storag3 = (_configuration$storag4 = configuration.storage) === null || _configuration$storag4 === void 0 ? void 0 : _configuration$storag4.file_path) !== null && _configuration$storag3 !== void 0 ? _configuration$storag3 : '';

      switch (storageType) {
        case 'sftp':
        case 'amazon_s3':
        case 'microsoft_azure':
        case 'google_cloud_storage':
          return {
            badge: __("pim_import_export.form.job_instance.storage_form.connection.".concat(storageType)),
            label: __(this.config.label),
            path: filePath
          };

        case 'local':
        case 'none':
        default:
          return {
            badge: null,
            label: __(this.config.label),
            path: filePath
          };
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 54658:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/job/export/edit/delete.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension for job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/job-instance-export */ 77893)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, JobInstanceRemover) {
  return DeleteForm.extend({
    remover: JobInstanceRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 7770:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/job/export/edit/save.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension for job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/job-instance-edit-form/save */ 25261), __webpack_require__(/*! pim/saver/job-instance-export */ 62805)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseSave, JobInstanceSaver) {
  return BaseSave.extend({
    /**
     * {@inheritdoc}
     */
    getJobInstanceSaver: function getJobInstanceSaver() {
      return JobInstanceSaver;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 68691:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/job/import/edit/delete.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete extension for job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/job-instance-import */ 40215)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, JobInstanceRemover) {
  return DeleteForm.extend({
    remover: JobInstanceRemover
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 79051:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/job/import/edit/save.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension for job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/job-instance-edit-form/save */ 25261), __webpack_require__(/*! pim/saver/job-instance-import */ 88150)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseSave, JobInstanceSaver) {
  return BaseSave.extend({
    /**
     * {@inheritdoc}
     */
    getJobInstanceSaver: function getJobInstanceSaver() {
      return JobInstanceSaver;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 35158:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/job/import/switcher-item.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Import switcher item extension
 * This extension is related to src/Pim/Bundle/EnrichBundle/Resources/public/js/job/import/switcher.js
 * It will register new items to the main switcher.
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/edition */ 18747), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (__, pimEdition, BaseForm) {
  return BaseForm.extend({
    visible: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'switcher:switch', this["switch"]);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _configuration$storag, _configuration$storag2;

      this.$el.empty();

      var _this$getRoot$getForm = this.getRoot().getFormData(),
          configuration = _this$getRoot$getForm.configuration;

      var storageType = (_configuration$storag = (_configuration$storag2 = configuration.storage) === null || _configuration$storag2 === void 0 ? void 0 : _configuration$storag2.type) !== null && _configuration$storag !== void 0 ? _configuration$storag : 'none';

      if (pimEdition.isCloudEdition() && this.config.hideForCloudEdition && storageType === 'none') {
        return;
      }

      this.getRoot().trigger('switcher:register', {
        label: __(this.config.label),
        code: this.code,
        allowedKey: this.config.allowedKey
      });

      if (this.visible) {
        return BaseForm.prototype.render.apply(this, arguments);
      }

      this.delegateEvents();
    },

    /**
     * This will enable or disable the current item.
     *
     * @param {Object} event
     * @param {String} event.code The code of the current switcher item
     */
    "switch": function _switch(event) {
      this.visible = event.code === this.code;
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 77411:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/job/import/switcher.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Import switcher extension.
 * This will display all the main actions related to import (upload, import now)
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/import/switcher */ 8250)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknButtonList',
    template: _.template(template),
    actions: [],
    events: {
      'click .switcher-action': 'switch'
    },
    currentActionCode: null,

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.actions = [];
      this.listenTo(this.getRoot(), 'switcher:register', this.registerAction);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (_.isEmpty(this.actions)) {
        return;
      }

      var _this$getRoot$getForm = this.getRoot().getFormData(),
          configuration = _this$getRoot$getForm.configuration;

      this.actions = this.filterByPermission(this.actions, configuration || {});

      if (null === this.currentActionCode) {
        this.setCurrentActionCode(_.first(this.actions).code);
      }

      if (this.actions.length > 1) {
        this.$el.empty().append(this.template({
          actions: this.actions,
          current: this.currentActionCode
        }));
      }

      return BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * This function filters actions based on whether they are allowed to be shown. The allowedKey is defined
     * on switcher-items and corresponds to a property in the import profile configuration.
     *
     * @param actions
     * @param configuration
     * @returns {*}
     */
    filterByPermission: function filterByPermission(actions, configuration) {
      return actions.filter(function (_ref) {
        var allowedKey = _ref.allowedKey;

        if (allowedKey === undefined || configuration[allowedKey] === undefined) {
          return true;
        }

        return configuration[allowedKey];
      });
    },

    /**
     * Registers a new main action
     *
     * @param {Object} actionToRegister
     * @param {String} actionToRegister.label The label to display in this switcher
     * @param {String} actionToRegister.code  The extension code to display on click
     */
    registerAction: function registerAction(actionToRegister) {
      var actionExist = this.actions.some(function (action) {
        return action.code === actionToRegister.code;
      });
      this.actions = actionExist ? this.actions.map(function (action) {
        return action.code === actionToRegister ? actionToRegister : action;
      }) : [].concat(_toConsumableArray(this.actions), [actionToRegister]);
      this.render();
    },

    /**
     * Switches a new action to display
     *
     * @param {Event} event
     */
    "switch": function _switch(event) {
      this.setCurrentActionCode(event.target.dataset.code);
      this.render();
    },

    /**
     * Sets the new displayed action
     *
     * @param {String} code The code of the current extension
     */
    setCurrentActionCode: function setCurrentActionCode(code) {
      this.currentActionCode = code;
      this.getRoot().trigger('switcher:switch', {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 68122:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Content form
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/export/product/edit/content */ 21039), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/analytics */ 22499), __webpack_require__(/*! @akeneo-pim-community/shared */ 58387)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, Backbone, template, BaseForm, analytics, _ref) {
  var filterErrors = _ref.filterErrors;
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      this.trigger('tab:register', {
        code: this.getTabCode(),
        label: __(this.config.tabTitle)
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', this.render.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_save', function () {
        _this.getRoot().trigger('pim_enrich:form:form-tabs:remove-errors');
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', function (event) {
        var validationErrors = event.response.normalized_errors;
        var errors = filterErrors(validationErrors, '[filters]');

        if (errors.length > 0) {
          _this.getRoot().trigger('pim_enrich:form:form-tabs:add-errors', {
            tabCode: _this.getTabCode(),
            errors: errors
          });
        }
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },
    getTabCode: function getTabCode() {
      return this.config.tabCode ? this.config.tabCode : this.code;
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template({}));
      analytics.track('export-profile:product:content-tab-opened', {
        code: this.code
      });
      this.renderExtensions();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 2106:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/data.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This extension manages the data filter collection and its generation.
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/export/product/edit/content/data */ 18874), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/common/property */ 64070)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, template, BaseForm, fetcherRegistry, formBuilder, PropertyAccessor) {
  return BaseForm.extend({
    filterViews: [],
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.onExtensions('add-attribute:add', function (event) {
        this.addFilters(event.codes).then(function () {
          this.updateModel();
          this.render();
        }.bind(this));
      }.bind(this));
      this.filterViews = [];
      return $.when(BaseForm.prototype.configure.apply(this, arguments), this.addConfigFilters());
    },

    /**
     * Add a collection of filters
     *
     * @param {array} fieldCodes Can be attributes or product field codes
     */
    addFilters: function addFilters(fieldCodes) {
      // We pre-fetch the attributes to add to avoid multiple http requests
      return fetcherRegistry.getFetcher('attribute').fetchByIdentifiers(fieldCodes).then(function () {
        return $.when.apply($, _.map(fieldCodes, this.addFilter.bind(this)));
      }.bind(this)).then(function () {
        if (!_.isEmpty(this.getFormData())) {
          this.updateFiltersData(_.extend({}, this.getFilters().data));
        }
      }.bind(this));
    },

    /**
     * Add a single filter
     *
     * @param {string} fieldCode
     */
    addFilter: function addFilter(fieldCode) {
      var deferred = $.Deferred();
      this.getFilterConfig(fieldCode).then(this.buildFilterView.bind(this)).then(function (filterView) {
        //condition to avoid adding the same filter twice
        if (this.filterViews.some(function (filterView) {
          return filterView.filterCode === fieldCode;
        })) {
          return;
        }

        this.listenTo(filterView, 'pim_enrich:form:entity:post_update', this.updateModel.bind(this));
        this.listenTo(filterView, 'filter:remove', this.removeFilter.bind(this));
        this.listenTo(this.getRoot(), 'channel:update:after', function (scope) {
          filterView.trigger('channel:update:after', scope);
        }.bind(this));
        this.filterViews.push(filterView);
      }.bind(this))["catch"](function (error) {
        console.error(error);
      }).always(function () {
        deferred.resolve();
      });
      return deferred.promise();
    },

    /**
     * Build a filter view
     *
     * @param {Object} filterConfig
     *
     * @return {Promise}
     */
    buildFilterView: function buildFilterView(filterConfig) {
      return formBuilder.getFormMeta(filterConfig.view).then(formBuilder.buildForm).then(function (filterView) {
        filterView.setRemovable(filterConfig.isRemovable);
        filterView.setType(filterConfig.view);
        filterView.setParentForm(this);
        filterView.setCode(filterConfig.field);
        return filterView.configure().then(function () {
          var data = {};
          filterView.trigger('pim_enrich:form:entity:pre_update', data);
          filterView.setData(data, {
            silent: true
          });
          return filterView;
        });
      }.bind(this));
    },

    /**
     * Get filter configuration for the giver field
     *
     * @param {string} fieldCode
     *
     * @return {Promise}
     */
    getFilterConfig: function getFilterConfig(fieldCode) {
      var filterConfig = _.findWhere(this.config.filters, {
        field: fieldCode
      });

      if (undefined !== filterConfig) {
        filterConfig.isRemovable = false;
        return $.Deferred().resolve(filterConfig).promise();
      }

      return fetcherRegistry.getFetcher('attribute').fetch(fieldCode).then(function (attribute) {
        return {
          field: attribute.code,
          view: attribute.filter_types['product-export-builder'],
          isRemovable: true
        };
      });
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this$config$sectionT;

      if (!this.configured || _.isEmpty(this.getFormData())) {
        return this;
      }

      this.$el.html(this.template({
        sectionTitle: __((_this$config$sectionT = this.config.sectionTitle) !== null && _this$config$sectionT !== void 0 ? _this$config$sectionT : 'pim_enrich.export.product.data.title')
      }));
      $.when(fetcherRegistry.getFetcher('attribute').getIdentifierAttribute(), this.addExistingFilters()).always(function (identifier) {
        var filtersContainer = this.$('.filters').empty();

        var configuredFieldCodes = _.pluck(this.config.filters, 'field');

        var savedFieldCodes = _.pluck(this.filterViews, 'filterCode').sort();

        var fieldCodes = _.union(configuredFieldCodes, _.without(savedFieldCodes));

        if (identifier) {
          fieldCodes = _.union(configuredFieldCodes, _.without(savedFieldCodes, identifier.code), [identifier.code]);
        }

        var filterViews = _.map(fieldCodes, function (code) {
          var view = _.findWhere(this.filterViews, {
            filterCode: code
          });

          if (undefined === view) {
            return;
          }

          return view.render().$el;
        }.bind(this));

        filtersContainer.append(filterViews);
        this.renderExtensions();
      }.bind(this));
      return this;
    },

    /**
     * Returns the current filters as an array of fields.
     *
     * @return {array}
     */
    getCurrentFilters: function getCurrentFilters() {
      return _.map(this.filterViews, function (filterView) {
        return filterView.getCode();
      });
    },

    /**
     * Add filters from the configuration (the field filters and identifier)
     */
    addConfigFilters: function addConfigFilters() {
      var promises = [];
      this.getRoot().trigger('pim_enrich:form:filter:set-default', promises);
      return $.when.apply($, promises).then(function () {
        var defaultFieldCodes = 0 !== arguments.length ? _.union(_.flatten(_.toArray(arguments))) : [];

        var configFilterCodes = _.pluck(this.config.filters, 'field');

        return _.union(configFilterCodes, defaultFieldCodes);
      }.bind(this)).then(function (defaultFilterCodes) {
        return this.addFilters(defaultFilterCodes);
      }.bind(this));
    },

    /**
     * Add filter stored in the backend (filters added by the user and saved)
     */
    addExistingFilters: function addExistingFilters() {
      var filterCodes = _.map(_.pluck(this.getFilters().data, 'field'), function (field) {
        return field.replace(/\.code$/, '');
      });

      var existingFilterCodes = _.map(this.filterViews, function (filterView) {
        return filterView.getCode();
      });

      return this.addFilters(_.difference(filterCodes, existingFilterCodes));
    },

    /**
     * Returns default filter fields. They can be set by config or other extensions.
     *
     * @returns {Promise}
     */
    getDefaultFilterFields: function getDefaultFilterFields() {
      var promises = [];
      this.getRoot().trigger('pim_enrich:form:filter:set-default', promises);
      return $.when.apply($, promises).then(function () {
        var defaultFields = 0 !== arguments.length ? _.union(_.flatten(_.toArray(arguments))) : [];

        var configFields = _.pluck(this.config.filters, 'field');

        return _.union(configFields, defaultFields);
      }.bind(this));
    },

    /**
     * Update the model of each filter views
     *
     * @param {Object} data
     */
    updateFiltersData: function updateFiltersData(data) {
      _.each(this.filterViews, function (filterView) {
        var filterData = _.findWhere(data, {
          field: filterView.getField()
        });

        filterData = filterData || {};
        filterView.trigger('pim_enrich:form:entity:pre_update', filterData);
        filterView.setData(filterData, {
          silent: true
        });
      }.bind(this));

      this.updateModel();
    },

    /**
     * Updates the form model by iterating over filter views
     */
    updateModel: function updateModel() {
      var _this = this;

      var data = this.getFormData();

      if (_.isEmpty(data)) {
        return;
      }

      var dataFilterCollection = PropertyAccessor.accessProperty(data, 'configuration.filters.data', []); // Remove deleted filters

      dataFilterCollection = dataFilterCollection.filter(function (filter) {
        return _this.filterViews.findIndex(function (filterView) {
          return !filterView.isEmpty() && filterView.getFormData().field === filter.field;
        }) !== -1;
      }); // Update or add new filters

      _.each(this.filterViews, function (filterView) {
        if (!filterView.isEmpty()) {
          var field = filterView.getFormData().field;
          var index = dataFilterCollection.findIndex(function (data) {
            return data.field === field;
          });

          if (index === -1) {
            dataFilterCollection.push(filterView.getFormData());
          } else {
            dataFilterCollection[index] = filterView.getFormData();
          }
        }
      });

      var newData = PropertyAccessor.updateProperty(data, 'configuration.filters.data', dataFilterCollection);
      this.setData(newData);
    },

    /**
     * Removes the filter for the given field then renders the whole view.
     *
     * @param {string} fieldCode
     */
    removeFilter: function removeFilter(fieldCode) {
      var cleanedFieldCode = fieldCode.replace(/\.code$/, '');
      this.filterViews = _.filter(this.filterViews, function (filterView) {
        return filterView.getCode() !== cleanedFieldCode;
      });
      this.updateModel();
      this.render();
    },

    /**
     * Get filters
     *
     * @return {object}
     */
    getFilters: function getFilters() {
      return this.getFormData().configuration.filters;
    },
    shutdown: function shutdown() {
      this.doShutdown();
      Object.values(this.filterViews).forEach(function (filterView) {
        return filterView.shutdown();
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29777:
/*!**********************************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/data/add-select/attribute/select.js ***!
  \**********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Product export profile edit form attribute add select extension view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/product/add-select/attribute */ 24018)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, AddAttributeSelect) {
  return AddAttributeSelect.extend({
    /**
     * {@inheritdoc}
     */
    getItemsToExclude: function getItemsToExclude() {
      return $.Deferred().resolve(this.getParent().getCurrentFilters());
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 36757:
/*!********************************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/data/default-attribute-filters.js ***!
  \********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Extension to add a "remove" button on an optional filter.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, fetcherRegistry) {
  return BaseForm.extend({
    /**
     * {@inherit}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inherit}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:filter:set-default', this.addFilter.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Adds filters to the collection.
     *
     * @param {Object} event
     */
    addFilter: function addFilter(event) {
      event.push(fetcherRegistry.getFetcher('attribute').fetchByTypes(this.config.types).then(function (attributes) {
        return _.pluck(attributes, 'code');
      }));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 14666:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/readonly.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Extension to set all filters in readonly mode.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, BaseForm) {
  return BaseForm.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:filter:extension:add', this.addFilterExtension.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Sets filters in readonly mode.
     *
     * @param {Object} event
     */
    addFilterExtension: function addFilterExtension(event) {
      event.filter.setEditable(false);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 68922:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/structure.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Structure section
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/export/product/edit/content/structure */ 19685), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/common/property */ 64070)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, template, BaseForm, propertyAccessor) {
  return BaseForm.extend({
    className: 'structure-filters',
    errors: {},
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.setValidationErrors.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.resetValidationErrors.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Set the validation errors after validation fail
     *
     * @param {event} event
     */
    setValidationErrors: function setValidationErrors(event) {
      this.errors = event.response;
    },

    /**
     * Rest validation error after fetch
     */
    resetValidationErrors: function resetValidationErrors() {
      this.errors = {};
    },

    /**
     * Get the validtion errors for the given field
     *
     * @param {string} field
     *
     * @return {mixed}
     */
    getValidationErrorsForField: function getValidationErrorsForField(field) {
      return propertyAccessor.accessProperty(this.errors, 'configuration.filters.structure.' + field, []);
    },

    /**
     * Renders this view.
     *
     * @return {Object}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      this.$el.html(this.template({
        __: __
      }));
      this.renderExtensions();
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 22294:
/*!*******************************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/structure/attributes-selector.js ***!
  \*******************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute selector
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/export/product/edit/content/structure/attributes-selector */ 65072), __webpack_require__(/*! pim/template/export/product/edit/content/structure/attribute-list */ 77166), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, i18n, userContext, fetcherRegistry, template, attributeListTemplate, analytics) {
  return Backbone.View.extend({
    events: {
      'click .attribute-groups li': 'changeAttributeGroup',
      'keyup .search-field': 'updateSearch',
      'click .clear': 'clear',
      'click .remove': 'removeAttribute'
    },
    search: '',
    curentFetchId: 0,
    attributeListPage: 1,
    isFetching: false,
    selected: [],
    currentGroup: null,
    template: _.template(template),
    attributeListTemplate: _.template(attributeListTemplate),
    initialize: function initialize() {
      this.listenTo(this, 'selected:update:after', function (selected) {
        this.$('.empty-message').addClass(0 === selected.length ? '' : 'AknMessageBox--hide').removeClass(0 === selected.length ? 'AknMessageBox--hide' : '');
      });
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      $.when(fetcherRegistry.getFetcher('attribute-group').fetchAll(), fetcherRegistry.getFetcher('attribute').fetchByIdentifiers(this.getSelected())).then(function (attributeGroups, selectedAttributes) {
        var scrollPositions = {};

        _.each(this.$('[data-scroll-container]'), function (element) {
          scrollPositions[element.dataset.scrollContainer] = element.scrollTop;
        });

        this.attributeListPage = 1;
        this.isFetching = false;
        var attributeCount;

        if (null === this.currentGroup) {
          attributeCount = _.reduce(attributeGroups, function (count, attributeGroup) {
            return count + attributeGroup.attributes.length;
          }, 0);
        } else {
          attributeCount = _.findWhere(attributeGroups, {
            code: this.currentGroup
          }).attributes.length;
        }

        this.$el.empty().append(this.template({
          __: __,
          i18n: i18n,
          userContext: userContext,
          attributeGroups: attributeGroups,
          attributeCount: attributeCount,
          currentGroup: this.currentGroup,
          selectedAttributes: selectedAttributes
        }));
        this.initializeSortable();
        this.updateAttributeList().then(function () {
          _.each(scrollPositions, function (scrollPosition, key) {
            this.$('[data-scroll-container="' + key + '"]').scrollTop(scrollPosition);
          }.bind(this));
        }.bind(this));
        this.$('.attributes div').on('scroll', this.updateAttributeList.bind(this));
      }.bind(this));
    },

    /**
     * Set currently selected attributes
     *
     * @param {array} selected
     */
    setSelected: function setSelected(selected) {
      this.selected = selected;
      analytics.track('export-profile:product:attribute-added', {
        column: this.selected.join(',')
      });
      this.trigger('selected:update:after', this.selected);
      this.updateAttributeList();
    },

    /**
     * Get currently selected attributes
     *
     * @return {array}
     */
    getSelected: function getSelected() {
      return this.selected;
    },

    /**
     * Change the current attribute group
     *
     * @param {event} event
     */
    changeAttributeGroup: function changeAttributeGroup(event) {
      var newGroup = event.currentTarget.dataset.attributeGroupCode;
      newGroup = '' !== newGroup ? newGroup : null;
      this.search = '';
      this.currentGroup = newGroup;
      this.render();
    },

    /**
     * Called each time the user type a letter on the search field
     */
    updateSearch: function updateSearch() {
      this.search = this.$('.search-field').val();
      this.attributeListPage = 1;
      this.isFetching = false;
      this.$('.attributes ul').empty();
      this.updateAttributeList();
    },

    /**
     * Clear the selected attributes
     */
    clear: function clear() {
      this.setSelected([]);
      this.search = '';
      this.render();
    },

    /**
     * Called on each render, each, search event and each scroll event
     */
    updateAttributeList: function updateAttributeList() {
      var attributeContainer = this.$('.attributes > .AknColumnConfigurator-listContainer');
      var attributeList = attributeContainer.children('.AknVerticalList');
      var needFetching = 0 > attributeList.height() - attributeContainer.scrollTop() - 2 * attributeContainer.height();

      if (needFetching && !this.isFetching) {
        this.curentFetchId++;
        var fetchId = Number(this.curentFetchId);
        var searchOptions = {
          search: this.search,
          options: {
            excluded_identifiers: this.getSelected(),
            page: this.attributeListPage,
            limit: 20,
            locale: userContext.get('catalogLocale')
          }
        };

        if (null !== this.currentGroup) {
          searchOptions.options.attribute_groups = [this.currentGroup];
        }

        this.isFetching = true;
        return fetcherRegistry.getFetcher('attribute').search(searchOptions).then(function (attributes) {
          attributes = _.filter(attributes, function (attribute) {
            return attribute.type !== 'pim_catalog_identifier';
          });

          if (fetchId !== this.curentFetchId) {
            return;
          }

          attributeList.append(this.attributeListTemplate({
            attributes: attributes,
            i18n: i18n,
            userContext: userContext
          }));
          this.toggleRemoveButtons();

          if (0 !== attributes.length) {
            this.attributeListPage++;
            this.isFetching = false;
          }
        }.bind(this));
      }
    },

    /**
     * Called to initialize the dropzones
     */
    initializeSortable: function initializeSortable() {
      this.$('.attributes ul, .selected-attributes ul').sortable({
        connectWith: '.attributes ul, .selected-attributes ul',
        containment: this.$el,
        tolerance: 'pointer',
        cursor: 'move',
        stop: function () {
          this.setSelected(_.map(this.$('.selected-attributes li'), function (element) {
            return element.dataset.attributeCode;
          }));
          this.toggleRemoveButtons();
        }.bind(this)
      }).disableSelection();
    },

    /**
     * Remove the clicked row from the selected attributes
     *
     * @param {event} event
     */
    removeAttribute: function removeAttribute(event) {
      var element = $(event.currentTarget).parents('li');
      var selectedAttributes = this.getSelected();
      selectedAttributes = _.without(selectedAttributes, element.data('attributeCode'));
      this.setSelected(selectedAttributes);
      this.$('.attributes > div ul').append(element);
      this.toggleRemoveButtons();
    },

    /**
     * Toggle all "remove" buttons depending on whether the attribute is in the
     * selected or available column (we need to display "remove" buttons only in the selected column)
     */
    toggleRemoveButtons: function toggleRemoveButtons() {
      _.map(this.$('.selected-attributes li'), function (element) {
        $(element).find('.remove').removeClass('AknIconButton--hide');
      });

      _.map(this.$('.attributes li'), function (element) {
        $(element).find('.remove').addClass('AknIconButton--hide');
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 22349:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/structure/attributes.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attributes structure filter
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/export/product/edit/content/structure/attributes */ 64575), __webpack_require__(/*! pim/template/common/modal-centered */ 94596), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/job/product/edit/content/structure/attributes-selector */ 22294), __webpack_require__(/*! pim/analytics */ 22499), __webpack_require__(/*! react */ 67294), __webpack_require__(/*! akeneo-design-system */ 96541)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, template, modalTemplate, BaseForm, LoadingMask, fetcherRegistry, UserContext, AttributeSelector, analytics, React, _ref) {
  var Helper = _ref.Helper,
      Link = _ref.Link;
  return BaseForm.extend({
    className: 'AknFieldContainer attributes',
    template: _.template(template),
    modalTemplate: _.template(modalTemplate),
    events: {
      'click button': 'openSelector'
    },

    /**
     * Initializes configuration.
     *
     * @param {Object} config
     */
    initialize: function initialize(config) {
      this.config = config.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      var attributes = this.getFilters().structure.attributes || [];
      this.$el.html(this.template({
        __: __,
        isEditable: this.isEditable(),
        titleEdit: __('pim_enrich.entity.attribute.plural_label'),
        labelEdit: __('pim_common.edit'),
        labelInfo: __('pim_enrich.export.product.filter.attributes.label', {
          count: attributes.length
        }, attributes.length),
        errors: this.getParent().getValidationErrorsForField('attributes')
      }));
      this.delegateEvents();
      this.$('[data-toggle="tooltip"]').tooltip();
      this.renderExtensions();
    },

    /**
     * Returns whether this filter is editable.
     *
     * @returns {boolean}
     */
    isEditable: function isEditable() {
      return undefined !== this.config.readOnly ? !this.config.readOnly : true;
    },
    openSelector: function openSelector(e) {
      e.preventDefault();
      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo(this.getRoot().$el);
      loadingMask.show();
      var selectedAttributes = this.getFilters().structure.attributes || [];
      var attributeSelector = new AttributeSelector();
      attributeSelector.setSelected(selectedAttributes);
      var modal = new Backbone.BootstrapModal({
        modalOptions: {
          backdrop: 'static',
          keyboard: false
        },
        okCloses: false,
        title: __('pim_enrich.entity.attribute.plural_label'),
        innerDescription: __('pim_enrich.export.product.filter.attributes_selector.description'),
        content: '',
        okText: __('pim_common.apply'),
        template: this.modalTemplate
      });
      loadingMask.hide();
      loadingMask.$el.remove();
      modal.open();
      attributeSelector.setElement('.modal-body').render();
      this.renderModalHelper(modal.$el.find('.header-helper').get(0));
      modal.on('ok', function () {
        var values = attributeSelector.getSelected();
        var data = this.getFilters();
        data.structure.attributes = values;
        this.setData(data);
        modal.close();
        this.render();
        analytics.track('export-profile:product:attribute-applied');
      }.bind(this));
    },
    renderModalHelper: function renderModalHelper(nodeElement) {
      if (this.config.helper) {
        var children = this.config.helper.link ? [__(this.config.helper.text), ' ', React.createElement(Link, {
          key: 'link',
          target: '_blank',
          href: this.config.helper.link.href
        }, __(this.config.helper.link.text))] : __(this.config.helper.text);
        this.renderReact(Helper, {
          style: {
            margin: '0 20px 20px'
          },
          children: children
        }, nodeElement);
      }
    },

    /**
     * Get filters
     *
     * @return {object}
     */
    getFilters: function getFilters() {
      return this.getFormData().configuration.filters;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13029:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/structure/locales.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Locale structure filter
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/export/product/edit/content/structure/locales */ 579), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, template, BaseForm, fetcherRegistry) {
  return BaseForm.extend({
    className: 'AknFieldContainer',
    template: _.template(template),

    /**
     * Initializes configuration.
     *
     * @param {Object} config
     */
    initialize: function initialize(config) {
      this.config = config.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Configures this extension.
     *
     * @return {Promise}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'channel:update:after', this.channelUpdated.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Renders locales dropdown.
     *
     * @returns {Object}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      fetcherRegistry.getFetcher('channel').fetch(this.getFilters().structure.scope).always(function (scope) {
        this.$el.html(this.template({
          isEditable: this.isEditable(),
          __: __,
          locales: this.getLocales(),
          availableLocales: !scope ? [] : scope.locales,
          errors: this.getParent().getValidationErrorsForField('locales')
        }));
        this.$('.select2').select2().on('change', this.updateState.bind(this));
        this.$('[data-toggle="tooltip"]').tooltip();
        this.renderExtensions();
      }.bind(this));
      return this;
    },

    /**
     * Returns whether this filter is editable.
     *
     * @returns {boolean}
     */
    isEditable: function isEditable() {
      return undefined !== this.config.readOnly ? !this.config.readOnly : true;
    },

    /**
     * Sets new locales on field change.
     *
     * @param {Object} event
     */
    updateState: function updateState(event) {
      this.setLocales(event.val);
    },

    /**
     * Sets specified locales into root model.
     *
     * @param {Array} codes
     */
    setLocales: function setLocales(codes) {
      var data = this.getFilters();
      var before = data.structure.locales;
      data.structure.locales = codes;
      this.setData(data);

      if (before !== codes) {
        this.getRoot().trigger('locales:update:after', codes);
      }
    },

    /**
     * Gets locales from root model.
     *
     * @returns {Array}
     */
    getLocales: function getLocales() {
      var structure = this.getFilters().structure;

      if (_.isUndefined(structure)) {
        return [];
      }

      return _.isUndefined(structure.locales) ? [] : structure.locales;
    },

    /**
     * Resets locales after channel has been modified then re-renders the view.
     */
    channelUpdated: function channelUpdated() {
      this.initializeDefaultLocales().then(function () {
        this.render();
      }.bind(this));
    },

    /**
     * Sets locales corresponding to the current scope (default state).
     *
     * @return {Promise}
     */
    initializeDefaultLocales: function initializeDefaultLocales() {
      return fetcherRegistry.getFetcher('channel').fetch(this.getCurrentScope()).then(function (scope) {
        this.setLocales(_.pluck(scope.locales, 'code'));
      }.bind(this));
    },

    /**
     * Gets current scope from root model.
     *
     * @return {String}
     */
    getCurrentScope: function getCurrentScope() {
      return this.getFilters().structure.scope;
    },

    /**
     * Get filters
     *
     * @return {object}
     */
    getFilters: function getFilters() {
      return this.getFormData().configuration.filters;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 85812:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/content/structure/scope.js ***!
  \*****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Scope structure filter
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/template/export/product/edit/content/structure/scope */ 59679), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! jquery.select2 */ 53142), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, template, BaseForm, fetcherRegistry, UserContext, select2, i18n) {
  return BaseForm.extend({
    config: {},
    className: 'AknFieldContainer',
    template: _.template(template),

    /**
     * Initializes configuration.
     *
     * @param {Object} config
     */
    initialize: function initialize(config) {
      this.config = config.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Renders scopes dropdown.
     *
     * @return {Object}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      fetcherRegistry.getFetcher('channel').fetchAll().then(function (channels) {
        if (!this.getScope()) {
          this.setScope(_.first(channels).code);
        }

        this.$el.html(this.template({
          isEditable: this.isEditable(),
          __: __,
          channels: this.setChannelLabels(channels),
          scope: this.getScope(),
          errors: this.getParent().getValidationErrorsForField('scope')
        }));
        this.$('.select2').select2({
          minimumResultsForSearch: -1
        }).on('change', this.updateState.bind(this));
        this.$('[data-toggle="tooltip"]').tooltip();
        this.renderExtensions();
      }.bind(this));
      return this;
    },

    /**
     * Sets fallback labels for channels without a translation
     *
     * @param {Array} channels
     *
     * @return {Array}
     */
    setChannelLabels: function setChannelLabels(channels) {
      var locale = UserContext.get('uiLocale');
      return _.map(channels, function (channel) {
        channel.label = i18n.getLabel(channel.labels, locale, channel.code);
        return channel;
      });
    },

    /**
     * Returns whether this filter is editable.
     *
     * @returns {boolean}
     */
    isEditable: function isEditable() {
      return undefined !== this.config.readOnly ? !this.config.readOnly : true;
    },

    /**
     * Sets new scope on field change.
     *
     * @param {Object} event
     */
    updateState: function updateState(event) {
      this.setScope(event.target.value);
    },

    /**
     * Sets specified scope into root model.
     *
     * @param {String} code
     */
    setScope: function setScope(code) {
      var data = this.getFilters();
      var before = data.structure.scope;
      data.structure.scope = code;
      this.setData(data);

      if (before !== code) {
        this.getRoot().trigger('channel:update:after', data.structure.scope);
      }
    },

    /**
     * Gets scope from root model.
     *
     * @returns {String}
     */
    getScope: function getScope() {
      var structure = this.getFilters().structure;

      if (_.isUndefined(structure)) {
        return null;
      }

      return _.isUndefined(structure.scope) ? null : structure.scope;
    },

    /**
     * Get filters
     *
     * @return {object}
     */
    getFilters: function getFilters() {
      return this.getFormData().configuration.filters;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 14130:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/field/date-format.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Date format fetcher
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/job/common/edit/field/select */ 19553)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, FetcherRegistry, SelectField) {
  return SelectField.extend({
    /**
     * {@inherit}
     */
    configure: function configure() {
      return $.when(FetcherRegistry.getFetcher('formats').fetchAll(), SelectField.prototype.configure.apply(this, arguments)).then(function (formats) {
        this.config.options = formats.date_formats;
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29874:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/field/file-locale.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Label locales field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2020 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/job/common/edit/field/field */ 29072), __webpack_require__(/*! pim/job/common/edit/field/select */ 19553), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, FetcherRegistry, BaseField, SelectField, UserContext) {
  return SelectField.extend({
    /**
     * {@inherit}
     */
    configure: function configure() {
      var _this = this;

      this.listenTo(this.getRoot(), 'job.with_label.change', function () {
        _this.render();
      });
      return $.when(FetcherRegistry.getFetcher('locale').fetchActivated(), SelectField.prototype.configure.apply(this, arguments)).then(function (locales) {
        this.config.options = locales.reduce(function (result, locale) {
          return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, locale.code, locale.label));
        }, {});
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.getFormData().configuration.with_label) {
        this.$el.html('');
        return this;
      }

      BaseField.prototype.render.apply(this, arguments);
      var select2 = this.$('.select2');
      select2.select2();
      var fileLocale = this.getFormData().configuration.file_locale;

      if (undefined === fileLocale || null === fileLocale) {
        select2.val(UserContext.get('catalogLocale')).change();
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 23807:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/field/header-with-label.js ***!
  \*****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Switch view extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/job/common/edit/field/field */ 29072), __webpack_require__(/*! pim/template/export/common/edit/field/switch */ 37939), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! bootstrap.bootstrapswitch */ 86049)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseField, fieldTemplate, propertyAccessor) {
  return BaseField.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change input': 'updateState'
    },

    /**
     * {@inherit}
     */
    configure: function configure() {
      var _this = this;

      this.listenTo(this.getRoot(), 'job.with_label.change', function () {
        if (_this.getFormData().configuration.with_label) {
          var data = propertyAccessor.updateProperty(_this.getFormData(), _this.getFieldCode(), true);

          _this.setData(data);
        }

        _this.render();
      });
      return BaseField.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.getFormData().configuration.with_label) {
        this.$el.html('');
        return this;
      }

      BaseField.prototype.render.apply(this, arguments);
      this.$('.switch').bootstrapSwitch();
    },

    /**
     * Get the field dom value
     *
     * @return {string}
     */
    getFieldValue: function getFieldValue() {
      return this.$('input[type="checkbox"]').prop('checked');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 95771:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/job/product/edit/field/with-label.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Switch view extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/job/common/edit/field/field */ 29072), __webpack_require__(/*! pim/template/export/common/edit/field/switch */ 37939), __webpack_require__(/*! bootstrap.bootstrapswitch */ 86049)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseField, fieldTemplate) {
  return BaseField.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change input': 'updateState'
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      BaseField.prototype.render.apply(this, arguments);
      this.$('.switch').bootstrapSwitch();
    },

    /**
     * Get the field dom value
     *
     * @return {string}
     */
    getFieldValue: function getFieldValue() {
      return this.$('input[type="checkbox"]').prop('checked');
    },

    /**
     * Update the model after dom update
     */
    updateState: function updateState() {
      BaseField.prototype.updateState.apply(this, arguments);
      this.getRoot().trigger('job.with_label.change');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 22379:
/*!*************************************************!*\
  !*** ./public/bundles/pimui/js/jquery-setup.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {
  'use strict';

  $.ajaxSetup({
    headers: {
      'X-CSRF-Header': 1
    }
  });

  $.expr[':'].parents = function (a, i, m) {
    return $(a).parents(m[3]).length < 1;
  }; // used to indicate app's activity, such as AJAX request or redirection, etc.


  $.isActive = $.proxy(function (flag) {
    if ($.type(flag) !== 'undefined') {
      this.active = flag;
    }

    return $.active || this.active;
  }, {
    active: false
  });
  return $;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 76896:
/*!*******************************************!*\
  !*** ./public/bundles/pimui/js/layout.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! bootstrap */ 16486), __webpack_require__(/*! jquery-ui */ 5232)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {
  'use strict';

  var layout = {};

  layout.init = function (container) {
    container = $(container || document.body);
    container.find('[data-spy="scroll"]').each(function () {
      var $spy = $(this);
      $spy.scrollspy($spy.data());
      $spy = $(this).scrollspy('refresh');
      $('.scrollspy-nav ul.nav li').removeClass('active');
      $('.scrollspy-nav ul.nav li:first').addClass('active');
    });
    container.find('[data-toggle="tooltip"]').tooltip();

    var handlePopoverMouseout = function handlePopoverMouseout(e, popover) {
      var popoverHandler = $(e.relatedTarget).closest('.popover');

      if (!popoverHandler.length) {
        popover.data('popover-timer', setTimeout(function () {
          popover.popover('hide');
          popover.data('popover-active', false);
        }, 500));
      } else {
        popoverHandler.one('mouseout', function (evt) {
          handlePopoverMouseout(evt, popover);
        });
      }
    };

    $('form label [data-toggle="popover"]').popover({
      animation: true,
      delay: {
        show: 0,
        hide: 0
      },
      html: true,
      trigger: 'manual'
    }).on('mouseover', function () {
      var popoverEl = $(this);
      clearTimeout(popoverEl.data('popover-timer'));

      if (!popoverEl.data('popover-active')) {
        popoverEl.data('popover-active', true);
        $(this).popover('show');
      }
    }).on('mouseout', function (e) {
      var popover = $(this);
      setTimeout(function () {
        handlePopoverMouseout(e, popover);
      }, 500);
    });
    setTimeout(function () {
      layout.scrollspyTop();
    }, 500);
  };

  layout.adjustScrollspy = function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this);
      var spyHeight = $spy.innerHeight();
      var isMultipleRows = $spy.find('.responsive-section').length > 1;
      $spy.find('.responsive-section:last').each(function () {
        var $row = $(this);
        var titleHeight = $row.find('.scrollspy-title').outerHeight();
        var rowAdjHeight = isMultipleRows ? titleHeight + spyHeight : spyHeight;
        var rowOrigHeight = $row.data('originalHeight');

        if (!rowOrigHeight) {
          rowOrigHeight = $row.height();
          $row.data('originalHeight', rowOrigHeight);
        }

        if ($row.height() === rowAdjHeight) {
          return;
        }

        if (rowAdjHeight < rowOrigHeight) {
          rowAdjHeight = rowOrigHeight;
        }

        $row.outerHeight(rowAdjHeight);
      });
      $spy.scrollspy('refresh');
    });
  };

  layout.scrollspyTop = function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this);
      var targetSelector = $spy.data('target');
      var target = $(targetSelector);
      target.each(function () {
        var $target = $(this);
        var firstItemHref = $target.find('li.active:first a').attr('href');
        var $firstItem = $(firstItemHref);
        var top = $firstItem.position().top;
        $spy.scrollTop(top);
      });
    });
  };

  return layout;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 35962:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/manager/attribute-group-manager.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, FetcherRegistry) {
  return {
    /**
     * Get all the attribute group for the given product
     *
     * @param {Object} product
     *
     * @return {Promise}
     */
    getAttributeGroupsForObject: function getAttributeGroupsForObject(product) {
      return FetcherRegistry.getFetcher('attribute-group').fetchAll().then(function (attributeGroups) {
        return _.values(attributeGroups).reduce(function (result, attributeGroup) {
          //If one (or more) of the attributes of the attribute group is in the product we need to add it
          if (_.intersection(attributeGroup.attributes, _.keys(product.values)).length > 0) {
            result[attributeGroup.code] = attributeGroup;
          }

          return result;
        }, {});
      });
    },

    /**
     * Get the attribute group for the given attribute
     *
     * @param {Array} attributeGroups
     * @param {String} attributeCode
     *
     * @return {String}
     */
    getAttributeGroupForAttribute: function getAttributeGroupForAttribute(attributeGroups, attributeCode) {
      var result = null;

      _.each(attributeGroups, function (attributeGroup) {
        if (-1 !== attributeGroup.attributes.indexOf(attributeCode)) {
          result = attributeGroup.code;
        }
      });

      return result;
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 41700:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/manager/attribute-manager.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, FetcherRegistry) {
  return {
    /**
     * Check if an attribute is optional
     *
     * @param {Object} attribute
     * @param {Object} product
     *
     * @return {Promise}
     */
    isOptional: function isOptional(attribute, product) {
      var promise = new $.Deferred();

      if ('pim_catalog_identifier' === attribute.type) {
        promise.resolve(false);
      } else if (undefined !== product.family && null !== product.family) {
        promise = FetcherRegistry.getFetcher('family').fetch(product.family).then(function (family) {
          return !_.contains(_.pluck(family.attributes, 'code'), attribute.code);
        });
      } else {
        promise.resolve(true);
      }

      return promise;
    },

    /**
     * Get the value in the given collection for the given locale and scope
     *
     * @param {Array}  values
     * @param {Object} attribute
     * @param {string} locale
     * @param {string} scope
     *
     * @return {Object}
     */
    getValue: function getValue(values, attribute, locale, scope) {
      locale = attribute.localizable ? locale : null;
      scope = attribute.scopable ? scope : null;
      return _.findWhere(values, {
        scope: scope,
        locale: locale
      });
    },

    /**
     * Generate a single value for the given attribute, scope and locale
     *
     * @param {Object} attribute
     * @param {string} locale
     * @param {string} scope
     *
     * @return {Object}
     */
    generateValue: function generateValue(attribute, locale, scope) {
      locale = attribute.localizable ? locale : null;
      scope = attribute.scopable ? scope : null;
      return {
        locale: locale,
        scope: scope,
        data: attribute.empty_value
      };
    },

    /**
     * Generate all missing values for an attribute
     *
     * @param {Array}  values
     * @param {Object} attribute
     * @param {Array}  locales
     * @param {Array}  channels
     * @param {Array}  currencies
     *
     * @return {Array}
     */
    generateMissingValues: function generateMissingValues(values, attribute, locales, channels, currencies) {
      _.each(locales, function (locale) {
        _.each(channels, function (channel) {
          var newValue = this.getValue(values, attribute, locale.code, channel.code);

          if (!newValue) {
            newValue = this.generateValue(attribute, locale.code, channel.code);
            values.push(newValue);
          }

          if ('pim_catalog_price_collection' === attribute.type) {
            newValue.data = this.generateMissingPrices(newValue.data, currencies);
          }
        }.bind(this));
      }.bind(this));

      return values;
    },

    /**
     * Generate missing prices in the given collection for the given currencies
     *
     * @param {Array} prices
     * @param {Array} currencies
     *
     * @return {Array}
     */
    generateMissingPrices: function generateMissingPrices(prices, currencies) {
      var generatedPrices = [];

      _.each(currencies, function (currency) {
        var price = _.findWhere(prices, {
          currency: currency.code
        });

        if (!price) {
          price = {
            amount: null,
            currency: currency.code
          };
        }

        generatedPrices.push(price);
      });

      return _.sortBy(generatedPrices, 'currency');
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 99555:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/manager/group-manager.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, FetcherRegistry) {
  return {
    getProductGroups: function getProductGroups(product) {
      var promises = _.map(product.groups, function (groupCode) {
        return FetcherRegistry.getFetcher('group').fetch(groupCode);
      });

      return $.when.apply($, promises).then(function () {
        return _.toArray(arguments);
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 34304:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/choose.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Choose extension for mass edit
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/mass-edit/choose */ 38354), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'AknSquareList',
    events: {
      'click .operation': 'updateOperation'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, meta.config);
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        operations: this.getParent().getOperations(),
        currentOperation: this.getParent().getCurrentOperation()
      }));
      this.delegateEvents();
      return this;
    },

    /**
     * Update the mass edit model
     *
     * @param {Event} event
     */
    updateOperation: function updateOperation(event) {
      var code = $(event.target).closest('.operation').data('code');
      this.getParent().setCurrentOperation(code);
      this.render();
      analytics.track('grid:mass-edit:item-chosen', {
        code: code
      });
    },

    /**
     * {@inheritdoc}
     */
    getLabel: function getLabel() {
      var itemsCount = this.getFormData().itemsCount;
      return __(this.config.title, {
        itemsCount: itemsCount
      }, itemsCount);
    },

    /**
     * Returns the title of the operation
     *
     * @returns {string}
     */
    getTitle: function getTitle() {
      return __(this.config.title);
    },

    /**
     * Returns the label with the count of impacted elements
     *
     * @returns {String}
     */
    getLabelCount: function getLabelCount() {
      var itemsCount = this.getFormData().itemsCount;
      return __(this.config.labelCount, {
        itemsCount: itemsCount
      }, itemsCount);
    },

    /**
     * {@inheritdoc}
     */
    getDescription: function getDescription() {
      return '';
    },

    /**
     * {@inheritdoc}
     */
    getIllustrationClass: function getIllustrationClass() {
      return '';
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29644:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/family/set-requirements.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Set attributes requirements operation
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/mass-edit/family/set-requirements */ 34238), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, Routing, BaseOperation, UserContext, FormBuilder, propertyAccessor, FetcherRegistry, template, analytics) {
  return BaseOperation.extend({
    template: _.template(template),
    formPromise: null,

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (null === this.getValue()) {
        this.setValue([]);
      }

      var family = {
        attributes: [],
        attribute_requirements: {},
        meta: {}
      };

      if (!this.formPromise) {
        this.formPromise = FormBuilder.build('pim-mass-family-edit-form').then(function (form) {
          form.setData(family);
          form.trigger('pim_enrich:form:entity:post_fetch', family);
          this.listenTo(form, 'pim_enrich:mass_edit:model_updated', this.updateModel);
          return form;
        }.bind(this));
      }

      this.formPromise.then(function (form) {
        this.$el.html(this.template());
        form.setElement(this.$('.set-requirements')).render();
        form.trigger('pim_enrich:form:update_read_only', this.readOnly); // This method renders a complete PEF page, we need to remove useless elements manually.

        this.$el.find('.navigation').remove();
        this.$el.find('.AknDefault-mainContent').addClass('AknDefault-mainContent--withoutPadding');
      }.bind(this));
      return this;
    },

    /**
     * Update the mass edit model each time a requirement is changed
     *
     * @param {object} data
     */
    updateModel: function updateModel(data) {
      FetcherRegistry.getFetcher('channel').fetchAll().then(function (channels) {
        var attributeRequirements = [];

        _.each(data.attributes, function (attributeCode) {
          _.each(channels, function (channel) {
            attributeRequirements.push({
              attribute_code: attributeCode,
              channel_code: channel.code,
              is_required: _.contains(propertyAccessor.accessProperty(data.attribute_requirements, channel.code, []), attributeCode)
            });
          });
        });

        this.setValue(attributeRequirements);
      }.bind(this));
    },

    /**
     * Update the general model
     *
     * @param {Object} values
     */
    setValue: function setValue(values) {
      var data = this.getFormData();
      data.actions = values;
      analytics.track('grid:mass-edit:requirements-checked', {
        actions: data.actions
      });
      this.setData(data);
    },

    /**
     * Get the value of the model
     *
     * @return {object}
     */
    getValue: function getValue() {
      return this.getFormData().actions;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 47544:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/form.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Mass edit root form
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/form/common/edit-form */ 2891), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/template/mass-edit/form */ 76189), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, router, Routing, messenger, BaseForm, LoadingMask, template, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    currentStep: 'choose',
    events: {
      'click .wizard-action': function clickWizardAction(event) {
        this.applyAction(event.target.dataset.actionTarget);
      }
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, meta.config);
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'mass-edit:navigate:action', this.applyAction.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var step = this.currentStep === 'choose' ? this.getChooseExtension() : this.getOperationExtension(this.getCurrentOperation());
      var currentStepNumber;

      switch (this.currentStep) {
        case 'configure':
          currentStepNumber = 1;
          break;

        case 'confirm':
          currentStepNumber = 2;
          break;

        default:
          currentStepNumber = 0;
          break;
      }

      var itemsCount = this.getFormData().itemsCount;
      this.$el.html(this.template({
        currentStep: this.currentStep,
        currentStepNumber: currentStepNumber,
        currentOperation: this.getCurrentOperation(),
        label: step.getLabel(),
        description: step.getDescription(),
        title: step.getTitle(),
        labelCount: step.getLabelCount(),
        confirm: __(this.config.confirm, {
          itemsCount: itemsCount
        }, itemsCount),
        previousLabel: __('pim_common.previous'),
        nextLabel: __('pim_common.next'),
        confirmLabel: __('pim_common.confirm'),
        selectActionLabel: __('pim_datagrid.mass_action.default.select_action'),
        illustrationClass: step.getIllustrationClass(),
        __: __
      }));
      this.$('.step').empty().append(step.$el); // We need to have the step in the DOM as soon as possible for extensions that call render() and
      // postRender()

      step.render();
      this.delegateEvents();
    },

    /**
     * Provide the list of operations available
     *
     * @return {array}
     */
    getOperations: function getOperations() {
      return _.chain(this.extensions).filter(function (extension) {
        return extension.options.config.label !== undefined;
      }).map(function (extension) {
        return {
          code: extension.getCode(),
          label: extension.getLabel(),
          icon: extension.getIcon()
        };
      }).value();
    },

    /**
     * Get the chose extension
     *
     * @return {object}
     */
    getChooseExtension: function getChooseExtension() {
      return _.filter(this.extensions, function (extension) {
        return extension.targetZone === 'choose';
      })[0];
    },

    /**
     * The the porvided extension as the current one
     *
     * @param {object} operation
     */
    setCurrentOperation: function setCurrentOperation(operation) {
      var data = this.getFormData();
      data.operation = operation;
      data.jobInstanceCode = this.getOperationExtension(operation).getJobInstanceCode();
      this.setData(data);
      this.render();
    },

    /**
     * Provide the current oparation
     *
     * @return {string}
     */
    getCurrentOperation: function getCurrentOperation() {
      return this.getFormData().operation;
    },

    /**
     * Get the operation module corresponding to the given parameter
     *
     * @param {string} operationCode
     *
     * @return {object}
     */
    getOperationExtension: function getOperationExtension(operationCode) {
      return _.find(this.extensions, function (extension) {
        return typeof extension.getCode === 'function' && extension.getCode() === operationCode;
      });
    },

    /**
     * Apply the action triggered by a dom event
     *
     * @param {String} action
     */
    applyAction: function applyAction(action) {
      var _this = this;

      analytics.track('grid:mass-edit:action-step', {
        name: action
      });

      switch (action) {
        case 'grid':
          router.redirectToRoute(this.config.backRoute);
          break;

        case 'choose':
          this.currentStep = 'choose';
          this.render();
          break;

        case 'configure':
          var operationView = this.getOperationExtension(this.getCurrentOperation());

          if ('choose' === this.currentStep) {
            operationView.reset();
          }

          this.currentStep = 'configure';
          operationView.setReadOnly(false);
          this.render();
          break;

        case 'confirm':
          var operationView = this.getOperationExtension(this.getCurrentOperation());
          var loadingMask = new LoadingMask();
          loadingMask.render().$el.appendTo(this.getRoot().$el).show();
          operationView.validate().then(function (isValid) {
            if (isValid) {
              operationView.setReadOnly(true);
              _this.currentStep = 'confirm';

              _this.render();

              _this.getRoot().trigger('mass-edit:action:confirm');
            }
          }).always(function () {
            loadingMask.hide().$el.remove();
          });
          break;

        case 'validate':
          loadingMask = new LoadingMask();
          loadingMask.render().$el.appendTo(this.getRoot().$el).css({
            'z-index': '2000'
          }).show();
          $.ajax({
            method: 'POST',
            contentType: 'application/json',
            url: Routing.generate('pim_enrich_mass_edit_rest_launch'),
            data: JSON.stringify(this.getFormData())
          }).then(function () {
            router.redirectToRoute(_this.config.backRoute);
            messenger.notify('success', __(_this.config.launchedLabel, {
              operation: _this.getOperationExtension(_this.getCurrentOperation()).getLabel()
            }));
          }).fail(function () {
            messenger.notify('error', __(_this.config.launchErrorLabel));
          }).always(function () {
            loadingMask.hide().$el.remove();
          });
          break;
      }
    },

    /**
     * Disables the next button when the next step can not be accessed.
     */
    disableNextButton: function disableNextButton() {
      this.$el.find('.next').addClass('AknButton--disabled').removeClass('wizard-action');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 12396:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/add-to-group.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Add to group operation
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/template/mass-edit/product/add-to-group */ 87312)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, messenger, i18n, UserContext, BaseOperation, FetcherRegistry, propertyAccessor, template) {
  return BaseOperation.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    reset: function reset() {
      this.setValue([]);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template());
      this.renderExtensions();
      this.$el.find('input[name=group]').attr('disabled', this.readOnly ? 'disabled' : null);
      return this;
    },

    /**
     * Update the mass edit model
     *
     * @param {Event} event
     */
    updateModel: function updateModel(event) {
      this.transformValue(event.target.value, event.target.checked ? _.union : _.without);
    },

    /**
     * Update the model after dom event triggered
     *
     * @param {array} groups
     */
    setValue: function setValue(groups) {
      var data = this.getFormData();
      data.actions = [{
        field: 'groups',
        value: groups
      }];
      this.setData(data);
    },

    /**
     * Transform dom event to proper group array
     *
     * @param {string}   group
     * @param {function} method
     */
    transformValue: function transformValue(group, method) {
      var value = this.getValue();
      this.setValue(method(value, [group]));
    },

    /**
     * Get current value from mass edit model
     *
     * @return {array}
     */
    getValue: function getValue() {
      return _.findWhere(this.getFormData().actions, {
        field: 'group'
      });
    },

    /**
     * Checks there is at least one group selected to go to the next step
     */
    validate: function validate() {
      var data = this.getFormData();
      var groupsStr = propertyAccessor.accessProperty(data, 'group', '');
      var groups = groupsStr.split(',');
      this.setValue(groups);
      var hasUpdates = 0 !== groups.length;

      if (!hasUpdates) {
        messenger.notify('error', __('pim_enrich.mass_edit.product.operation.add_to_group.no_update'));
      }

      return $.Deferred().resolve(hasUpdates);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 87283:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/associate.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Mass associate
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/media-url-generator */ 72689), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/template/mass-edit/product/associate/pick */ 91610), __webpack_require__(/*! pim/template/mass-edit/product/associate/confirm */ 65579), __webpack_require__(/*! pim/template/common/modal-centered */ 94596), __webpack_require__(/*! pimui/js/product/form/quantified-associations/components/QuantifiedAssociations */ 73460)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, __, Routing, BaseOperation, UserContext, FormBuilder, FetcherRegistry, i18n, MediaUrlGenerator, LoadingMask, messenger, pickTemplate, confirmTemplate, modalTemplate, _ref) {
  var QuantifiedAssociations = _ref.QuantifiedAssociations;
  return BaseOperation.extend({
    className: 'AknGridToolbar',
    pickTemplate: _.template(pickTemplate),
    confirmTemplate: _.template(confirmTemplate),
    modalTemplate: _.template(modalTemplate),
    errors: null,
    formPromise: null,
    events: {
      'click .associations-list li': 'changeAssociationType',
      'click .add-associations': 'addAssociations'
    },

    /**
     * {@inheritdoc}
     */
    reset: function reset() {
      this.setValue([]);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      if ('' !== this.$el.html() && this.$('.association-type-selector').length === 0) {
        this.unmountReact();
      }

      if (!this.readOnly) {
        this.loadAssociationTypes().then(function (associationTypes) {
          var currentAssociationTypeCode = associationTypes.length ? _.first(associationTypes).code : null;

          if (null === _this.getCurrentAssociationTypeCode() || undefined === associationTypes.find(function (associationType) {
            return associationType.code === _this.getCurrentAssociationTypeCode();
          })) {
            _this.setCurrentAssociationType(currentAssociationTypeCode);
          }

          _this.$el.html(_this.pickTemplate({
            associationTypes: associationTypes,
            associationType: associationTypes.find(function (associationType) {
              return associationType.code === _this.getCurrentAssociationTypeCode();
            }),
            locale: UserContext.get('uiLocale'),
            i18n: i18n,
            label: __('pim_enrich.entity.product.module.associations.association_type_selector'),
            addAssociationsLabel: __('pim_enrich.entity.product.module.associations.add_associations')
          }));

          _this.resizeContent(associationTypes.length);

          _this.delegateEvents();
        });
      } else {
        this.loadAssociationTypes().then(function (associationTypes) {
          var loadingMask = new LoadingMask();

          _this.$el.empty().append(loadingMask.render().$el.show());

          var currentAssociationTypeCode = _this.getCurrentAssociationTypeCode();

          var value = _this.getValue()[currentAssociationTypeCode];

          if (null !== currentAssociationTypeCode && _this.isQuantifiedAssociation(associationTypes, currentAssociationTypeCode)) {
            _this.renderQuantifiedAssociations({
              products: value.product_uuids.map(function (uuid) {
                return {
                  uuid: uuid,
                  quantity: 1
                };
              }),
              product_models: value.product_models.map(function (identifier) {
                return {
                  identifier: identifier,
                  quantity: 1
                };
              })
            });
          } else {
            $.when(FetcherRegistry.getFetcher('product-model').fetchByIdentifiers(value.product_models), FetcherRegistry.getFetcher('product').fetchByUuids(value.product_uuids)).then(function (productModels, products) {
              var items = products.concat(productModels);

              _this.$el.html(_this.confirmTemplate({
                items: items,
                title: __('pim_enrich.entity.product.module.basket.title'),
                emptyLabel: __('pim_enrich.entity.product.module.basket.empty_basket'),
                confirmLabel: __('pim_enrich.mass_edit.product.operation.' + 'associate_to_product_and_product_model.confirm'),
                imagePathMethod: _this.imagePathMethod.bind(_this),
                labelMethod: _this.labelMethod.bind(_this),
                readOnly: _this.readOnly
              }));

              _this.delegateEvents();
            }).always(function () {
              loadingMask.remove();
            });
          }
        });
      }
    },
    isQuantifiedAssociation: function isQuantifiedAssociation(associationTypes, associationTypeCode) {
      if (!associationTypes || 0 === associationTypes.length) return false;
      var associationType = associationTypes.find(function (associationType) {
        return associationType.code === associationTypeCode;
      });

      if (undefined === associationType) {
        throw new Error("Cannot find association type ".concat(associationTypeCode));
      }

      return associationType.is_quantified;
    },
    renderQuantifiedAssociations: function renderQuantifiedAssociations(quantifiedAssociations) {
      var _this2 = this;

      var props = {
        quantifiedAssociations: quantifiedAssociations,
        parentQuantifiedAssociations: {
          products: [],
          product_models: []
        },
        errors: [],
        isCompact: true,
        isUserOwner: true,
        onAssociationsChange: function onAssociationsChange(updatedAssociations) {
          var currentAssociationTypeCode = _this2.getCurrentAssociationTypeCode();

          _this2.setValue(_defineProperty({}, currentAssociationTypeCode, updatedAssociations), true);
        },
        onOpenPicker: function onOpenPicker() {}
      };
      this.renderReact(QuantifiedAssociations, props, this.el);
    },

    /**
     * {@inheritdoc}
     */
    imagePathMethod: function imagePathMethod(item) {
      var filePath = null;

      if (item.meta.image !== null) {
        filePath = item.meta.image.filePath;
      }

      return MediaUrlGenerator.getMediaShowUrl(filePath, 'thumbnail_small');
    },

    /**
     * {@inheritdoc}
     */
    labelMethod: function labelMethod(item) {
      return item.meta.label[UserContext.get('catalogLocale')];
    },

    /**
     * Update the model after dom event triggered
     *
     * @param {string} group
     */
    setValue: function setValue(values) {
      var isQuantified = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var data = this.getFormData();
      data.actions = [{
        field: isQuantified ? 'quantified_associations' : 'associations',
        value: values
      }];
      this.setData(data);
    },

    /**
     * Get current value from mass edit model
     *
     * @return {string}
     */
    getValue: function getValue() {
      var action = _.first(this.getFormData().actions);

      return action ? action.value : null;
    },

    /**
     * Switch the current association type
     *
     * @param {Event} event
     */
    changeAssociationType: function changeAssociationType(event) {
      event.preventDefault();
      var associationType = event.currentTarget.dataset.associationType;
      this.setCurrentAssociationType(associationType);
      this.render();
    },

    /**
     * @param {string} associationType
     */
    setCurrentAssociationType: function setCurrentAssociationType(associationType) {
      sessionStorage.setItem('current_association_type', associationType);
    },

    /**
     * @returns {string}
     */
    getCurrentAssociationTypeCode: function getCurrentAssociationTypeCode() {
      return sessionStorage.getItem('current_association_type');
    },

    /**
     * Fetch all the association types
     *
     * @returns {Promise}
     */
    loadAssociationTypes: function loadAssociationTypes() {
      return FetcherRegistry.getFetcher('association-type').fetchAll();
    },

    /**
     * Opens the panel to select new products to associate
     */
    addAssociations: function addAssociations() {
      var _this3 = this;

      this.manageProducts().then(function (items) {
        var productUuids = [];
        var productModelIds = [];
        items.forEach(function (item) {
          if ('product' === item.document_type) {
            productUuids.push(item.technical_id);
          } else if ('product_model' === item.document_type) {
            productModelIds.push(item.id);
          }
        });

        var assocType = _this3.getCurrentAssociationTypeCode();

        var associations = {};
        associations[assocType] = {
          product_uuids: productUuids,
          product_models: productModelIds,
          groups: []
        };

        _this3.setValue(associations);

        _this3.getRoot().trigger('mass-edit:navigate:action', 'confirm');
      });
    },

    /**
     * Launch the association product picker
     *
     * @return {Promise}
     */
    manageProducts: function manageProducts() {
      var _this4 = this;

      var deferred = $.Deferred();
      FormBuilder.build('pim-associations-product-and-product-model-picker-modal').then(function (form) {
        FetcherRegistry.getFetcher('association-type').fetch(_this4.getCurrentAssociationTypeCode()).then(function (associationType) {
          var modal = new Backbone.BootstrapModal({
            modalOptions: {
              backdrop: 'static',
              keyboard: false
            },
            innerDescription: __('pim_enrich.entity.product.module.associations.mass_edit_description', {
              productCount: _this4.getFormData().itemsCount
            }),
            okCloses: false,
            title: __('pim_enrich.entity.product.module.associations.manage', {
              associationType: i18n.getLabel(associationType.labels, UserContext.get('catalogLocale'), associationType.code)
            }),
            content: '',
            cancelText: ' ',
            okText: __('pim_common.confirm'),
            template: _this4.modalTemplate,
            innerClassName: 'AknFullPage--full'
          });
          modal.open();
          modal.on('cancel', deferred.reject);
          modal.on('ok', function () {
            var products = form.getItems().sort(function (a, b) {
              return a.code < b.code;
            });
            modal.close();
            deferred.resolve(products);
          });
          form.setElement(modal.$('.modal-body')).render();
        });
      });
      return deferred.promise();
    },

    /**
     * Validate the model before confirmation
     *
     * @return {Promise}
     */
    validate: function validate() {
      var deferred = $.Deferred();

      if (_.isEmpty(this.getValue())) {
        messenger.notify('error', __('pim_enrich.mass_edit.product.operation.associate_to_product_and_product_model.validate'));
        deferred.resolve(false);
      } else {
        deferred.resolve(true);
      }

      return deferred;
    },

    /**
     * The dropdown and the mass edit layout have incompatible CSS displays.
     * We need to trick the height of the content box to avoid a too small zone to click.
     * The height is estimated from the count of association types.
     */
    resizeContent: function resizeContent(associationTypesLength) {
      var contentDom = $('.AknFullPage-content.AknFullPage-content--withIllustration');
      var headerHeight = $('.AknFullPage-titleContainer').outerHeight();
      var newHeight = headerHeight + associationTypesLength * 26 + 150;
      contentDom.css('min-height', Math.min(newHeight, $('body').outerHeight()) + 'px');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62647:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/category.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Mass change category
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714), __webpack_require__(/*! pim/tree/associate */ 41314), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/template/mass-edit/product/category */ 59472)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, messenger, i18n, UserContext, FetcherRegistry, BaseOperation, TreeAssociate, propertyAccessor, template) {
  return BaseOperation.extend({
    template: _.template(template),
    currentTree: null,
    categoryCache: {},
    selectedCategories: {},
    treePromise: null,
    view: null,
    trees: [],
    events: {
      'click .nav-tabs .tree-selector': 'changeTree',
      'change #hidden-tree-input': 'updateModel'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.trees = [];
      BaseOperation.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    reset: function reset() {
      this.setValue([]);
      this.treePromise = null;
      this.currentTree = null;
      this.selectedCategories = {};
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (null === this.treePromise) {
        FetcherRegistry.getFetcher(this.config.fetcher).clear();
        this.treePromise = FetcherRegistry.getFetcher(this.config.fetcher).fetchAll().then(function (trees) {
          this.trees = trees;

          if (null === this.currentTree) {
            this.currentTree = _.first(trees).code;
          }

          this.$el.html(this.template({
            i18n: i18n,
            locale: UserContext.get('catalogLocale'),
            trees: trees,
            currentTree: _.findWhere(trees, {
              code: this.currentTree
            }),
            selectedCategories: this.selectedCategories
          }));
          this.delegateEvents();
          this.toggleContentCache();
          return {
            treeAssociate: new TreeAssociate({
              list_categories: this.config.listRoute,
              children: this.config.childrenRoute
            }),
            trees: trees
          };
        }.bind(this));
      } else {
        this.toggleContentCache();
        this.delegateEvents();
      }

      return this;
    },

    /**
     * In this method, we don't re-render the trees because select elements on several trees is hell.
     * We simply hide or show the cache to avoid clicking on new elements during the confirm.
     **/
    toggleContentCache: function toggleContentCache() {
      if (this.readOnly) {
        this.$el.find('.content-cache').removeClass('AknTabContainer-contentCache--hidden');
      } else {
        this.$el.find('.content-cache').addClass('AknTabContainer-contentCache--hidden');
      }
    },

    /**
     * Update the mass edit model
     *
     * @param {Event} event
     */
    updateModel: function updateModel(event) {
      var selectedCategoryCodesByTreeId = JSON.parse(event.currentTarget.value);
      var allTreesCategoryCodes = [];
      Object.values(selectedCategoryCodesByTreeId).forEach(function (categoryCodes) {
        allTreesCategoryCodes = allTreesCategoryCodes.concat(categoryCodes);
      });
      this.setValue(allTreesCategoryCodes);
    },

    /**
     * Update the model after dom event triggered
     *
     * @param {string} categories
     */
    setValue: function setValue(categories) {
      var data = this.getFormData();
      data.actions = [{
        field: 'categories',
        value: categories
      }];
      this.setData(data);
    },

    /**
     * Get current value from mass edit model
     *
     * @return {string}
     */
    getValue: function getValue() {
      var action = _.findWhere(this.getFormData().actions, {
        field: 'categories'
      });

      return action ? action.value : null;
    },

    /**
     * Change the current tree
     *
     * @param {Event} event
     */
    changeTree: function changeTree(event) {
      this.currentTree = event.currentTarget.dataset.tree;
      this.treePromise.then(function (elements) {
        var tree = _.findWhere(elements.trees, {
          code: this.currentTree
        });

        elements.treeAssociate.switchTree(tree.id);
        $('.tree-selector').removeClass('active').removeClass('AknHorizontalNavtab-item--active');
        $(".tree-selector[data-tree=".concat(tree.code, "]")).addClass('active').addClass('AknHorizontalNavtab-item--active');
        this.delegateEvents();
      }.bind(this));
    },

    /**
     * Fetch category code from cache
     *
     * @param {integer} id
     *
     * @returns {string}
     */
    getCategoryCode: function getCategoryCode(id) {
      if (!this.categoryCache[id]) {
        var $categoryElement = this.$('#node_' + id);
        var $rootElement = $categoryElement.closest('.root-unselectable');
        this.categoryCache[id] = {
          code: String($categoryElement.data('code')),
          rootId: $rootElement.data('tree-id')
        };
      }

      return this.categoryCache[id].code;
    },

    /**
     * Checks there is at least one category selected to go to the next step
     */
    validate: function validate() {
      var data = this.getFormData();
      var categories = propertyAccessor.accessProperty(data, 'actions.0.value', []);
      var hasUpdates = 0 !== categories.length;

      if (!hasUpdates) {
        messenger.notify('error', __("pim_enrich.mass_edit.product.operation.".concat(data.operation, ".no_update")));
      }

      return $.Deferred().resolve(hasUpdates);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 31864:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/change-family.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Change family operation
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714), __webpack_require__(/*! pim/common/select2/family */ 81851), __webpack_require__(/*! pim/template/mass-edit/product/change-family */ 21898), __webpack_require__(/*! pim/initselect2 */ 3701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseOperation, Select2Configurator, template, initSelect2) {
  return BaseOperation.extend({
    template: _.template(template),
    events: {
      'change .family': 'updateModel'
    },

    /**
     * {@inheritdoc}
     */
    reset: function reset() {
      this.setValue(null);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        readOnly: this.readOnly,
        value: this.getValue(),
        label: __('pim_enrich.entity.family.uppercase_label')
      }));
      var options = Select2Configurator.getConfig(this.getValue());
      initSelect2.init(this.$('.family'), options);
      return this;
    },

    /**
     * Update the form model from a dom event
     *
     * @param {event} event
     */
    updateModel: function updateModel(event) {
      this.setValue(event.target.value);
    },

    /**
     * update the form model
     *
     * @param {string} family
     */
    setValue: function setValue(family) {
      var data = this.getFormData();
      data.actions = [{
        field: 'family',
        value: family
      }];
      this.setData(data);
    },

    /**
     * Get the current model value
     *
     * @return {string}
     */
    getValue: function getValue() {
      var action = _.findWhere(this.getFormData().actions, {
        field: 'family'
      });

      return action ? action.value : null;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 86992:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/change-status.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Change status operation
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714), __webpack_require__(/*! pim/template/mass-edit/product/change-status */ 21993), __webpack_require__(/*! bootstrap.bootstrapswitch */ 86049)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseOperation, template) {
  return BaseOperation.extend({
    template: _.template(template),
    events: {
      'change .switch': 'updateModel'
    },

    /**
     * {@inheritdoc}
     */
    reset: function reset() {
      this.setValue(false);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        value: this.getValue(),
        readOnly: this.readOnly,
        labels: {
          on: __('pim_common.yes'),
          off: __('pim_common.no'),
          field: __('pim_enrich.mass_edit.product.operation.change_status.field')
        }
      }));
      this.$('.switch').bootstrapSwitch();
      return this;
    },

    /**
     * Update the form model from a dom event
     *
     * @param {event} event
     */
    updateModel: function updateModel(event) {
      this.setValue(event.target.checked);
    },

    /**
     * update the form model
     *
     * @param {string} family
     */
    setValue: function setValue(enabled) {
      var data = this.getFormData();
      data.actions = [{
        field: 'enabled',
        value: enabled
      }];
      this.setData(data);
    },

    /**
     * Get the current model value
     *
     * @return {string}
     */
    getValue: function getValue() {
      var action = _.findWhere(this.getFormData().actions, {
        field: 'enabled'
      });

      return action ? action.value : null;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 74738:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/edit-common-attributes.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Edit common attributes operation
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/template/mass-edit/product/edit-common-attributes */ 59544), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, messenger, Routing, BaseOperation, UserContext, FormBuilder, FetcherRegistry, i18n, propertyAccessor, template, analytics) {
  return BaseOperation.extend({
    className: 'AknGridContainer--withoutNoDataPanel',
    template: _.template(template),
    errors: null,
    formPromise: null,
    channel: null,
    locales: [],

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      return $.when(FetcherRegistry.getFetcher('channel').fetch(UserContext.get('catalogScope'), {
        force_list_method: true
      }), FetcherRegistry.getFetcher('locale').search({
        activated: true,
        cached: false
      })).then(function (channel, locales) {
        _this.channel = channel;
        _this.locales = locales;
      });
    },

    /**
     * {@inheritdoc}
     */
    reset: function reset() {
      this.setValue({});
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var product = {
        meta: {},
        values: this.getValue()
      };

      if (!this.formPromise) {
        this.formPromise = FormBuilder.build(this.config.innerForm).then(function (form) {
          form.setData(product);
          form.trigger('pim_enrich:form:entity:post_fetch', product);
          this.listenTo(form, 'pim_enrich:mass_edit:model_updated', this.updateModel);
          return form;
        }.bind(this));
      }

      this.formPromise.then(function (form) {
        this.$el.html(this.template());
        form.setElement(this.$('.edit-common-attributes')).render();
        form.trigger('pim_enrich:form:update_read_only', this.readOnly); // This method renders a complete PEF page, we need to remove useless elements manually.

        this.$el.find('.navigation').remove();
        this.$el.find('.AknDefault-thirdColumnContainer').remove();
        this.$el.find('.AknDefault-mainContent').addClass('AknDefault-mainContent--withoutPadding').css({
          'overflow-x': 'hidden'
        });

        if (this.errors) {
          var event = {
            sentData: product,
            response: {
              values: this.errors
            }
          };
          form.trigger('pim_enrich:form:entity:bad_request', event);
        }
      }.bind(this));
      return this;
    },

    /**
     * Update the mass edit model
     *
     * @param {Event} event
     */
    updateModel: function updateModel(event) {
      this.setValue(event.values);
      analytics.track('product-grid:mass-edit:attributes-added', {
        values: event.values
      });
    },

    /**
     * {@inheritdoc}
     */
    getDescription: function getDescription() {
      return __(this.config.description, {
        locale: _.findWhere(this.locales, {
          code: UserContext.get('catalogLocale')
        }).label,
        scope: i18n.getLabel(this.channel.labels, UserContext.get('catalogLocale'), this.channel.code)
      });
    },

    /**
     * Update the model after dom event triggered
     *
     * @param {string} group
     */
    setValue: function setValue(values) {
      var data = this.getFormData();
      data.actions = [{
        normalized_values: values,
        ui_locale: UserContext.get('uiLocale'),
        attribute_locale: UserContext.get('catalogLocale'),
        attribute_channel: UserContext.get('catalogScope')
      }];
      this.setData(data);
    },

    /**
     * Get current value from mass edit model
     *
     * @return {string}
     */
    getValue: function getValue() {
      var action = _.first(this.getFormData().actions);

      return action ? action.normalized_values : null;
    },

    /**
     * Validate the model before confirmation
     *
     * @return {Promise}
     */
    validate: function validate() {
      var data = this.getFormData();
      var actions = propertyAccessor.accessProperty(data, 'actions.0.normalized_values', {});

      if (0 === Object.keys(actions).length) {
        messenger.notify('error', __('pim_enrich.mass_edit.product.operation.edit_common.no_update'));
        return $.Deferred().resolve(false);
      } else {
        return $.ajax({
          method: 'POST',
          contentType: 'application/json',
          data: JSON.stringify(this.getValue()),
          url: Routing.generate('pim_enrich_value_rest_validate')
        }).then(function (response) {
          if (!_.isEmpty(response.values)) {
            this.errors = response.values;
            this.render();
          } else {
            this.errors = {};
          }

          return _.isEmpty(this.errors);
        }.bind(this));
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 28859:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/mass-edit-field.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * This module displays a family with select2 for mass edit
 * The difference with standard select2 async is that this will listen to an event to enable or disable the element.
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/fields/simple-select-async */ 29915)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (SimpleSelectAsync) {
  return SimpleSelectAsync.extend({
    readOnly: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      SimpleSelectAsync.prototype.initialize.apply(this, arguments);
      this.readOnly = false;
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this, 'mass-edit:update-read-only', this.setReadOnly.bind(this));
      return SimpleSelectAsync.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    isReadOnly: function isReadOnly() {
      return this.readOnly || SimpleSelectAsync.prototype.isReadOnly.apply(this, arguments);
    },

    /**
     * Updates the readOnly parameter to avoid edition of the field
     *
     * @param {Boolean} readOnly
     */
    setReadOnly: function setReadOnly(readOnly) {
      this.readOnly = readOnly;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 34714:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/operation.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Base operation
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/edit-form */ 2891)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm) {
  return BaseForm.extend({
    readOnly: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = _.extend({}, meta.config);
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Called to reset the operation module
     */
    reset: function reset() {},

    /**
     * The label displayed in the operation list
     *
     * @return {String}
     */
    getLabel: function getLabel() {
      return __(this.config.label);
    },

    /**
     * Returns the title of the operation
     *
     * @returns {String}
     */
    getTitle: function getTitle() {
      return __(this.config.title);
    },

    /**
     * Returns the label with the count of impacted elements
     *
     * @returns {String}
     */
    getLabelCount: function getLabelCount() {
      var itemsCount = this.getFormData().itemsCount;
      return __(this.config.labelCount, {
        itemsCount: itemsCount
      }, itemsCount);
    },

    /**
     * Returns the main illustration of this operation
     *
     * @returns {String}
     */
    getIllustrationClass: function getIllustrationClass() {
      return this.config.illustration || 'products';
    },

    /**
     * Get the operation description
     *
     * @return {String}
     */
    getDescription: function getDescription() {
      return __(this.config.description);
    },

    /**
     * Get the operation code
     *
     * @return {String}
     */
    getCode: function getCode() {
      return this.config.code;
    },

    /**
     * Get the operation icon
     *
     * @return {String}
     */
    getIcon: function getIcon() {
      return this.config.icon;
    },

    /**
     * Get job instance code to launch
     *
     * @return {String}
     */
    getJobInstanceCode: function getJobInstanceCode() {
      return this.config.jobInstanceCode;
    },

    /**
     * Called when the operation should switch from read only or edit
     *
     * @param {boolean} readOnly
     */
    setReadOnly: function setReadOnly(readOnly) {
      this.readOnly = readOnly;
      this.triggerExtensions('mass-edit:update-read-only', this.readOnly);
    },

    /**
     * Called before the confirmation step to validate the model
     *
     * @return {promise}
     */
    validate: function validate() {
      return $.Deferred().resolve(true);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 66079:
/*!*******************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/product-model-field.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * This module displays a product model select2
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/mass-edit-form/product/mass-edit-field */ 28859), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/media-url-generator */ 72689), __webpack_require__(/*! pim/template/product/form/variant-navigation/product-model-item */ 86665)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, MassEditField, Routing, UserContext, FetcherRegistry, MediaUrlGenerator, templateProductModel) {
  return MassEditField.extend({
    previousFamilyVariant: null,
    templateProductModel: _.template(templateProductModel),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.onPostUpdate.bind(this));
      return MassEditField.prototype.configure.apply(this, arguments);
    },

    /**
     * When the model data is updated with a new family variant, drops the previous value and re-render the
     * field.
     */
    onPostUpdate: function onPostUpdate() {
      if (this.getFormData().family_variant !== this.previousFamilyVariant) {
        this.previousFamilyVariant = this.getFormData().family_variant;
        this.setData(_defineProperty({}, this.fieldName, null));
        this.render();
      }
    },

    /**
     * {@inheritdoc}
     *
     * This method overrides the previous one to be able to format the result and add an image and set a
     * custom template.
     */
    getSelect2Options: function getSelect2Options() {
      var _this = this;

      var options = MassEditField.prototype.getSelect2Options.apply(this, arguments);
      options.dropdownCssClass = 'variant-navigation';

      options.formatResult = function (item, $container) {
        var filePath = null !== item.image ? item.image.filePath : null;
        var entity = {
          label: item.text,
          image: MediaUrlGenerator.getMediaShowUrl(filePath, 'thumbnail_small')
        };
        $container.append(_this.templateProductModel({
          entity: entity,
          getClass: _this.getCompletenessBadgeClass
        }));
      };

      return options;
    },

    /**
     * {@inheritdoc}
     */
    select2Data: function select2Data() {
      var result = MassEditField.prototype.select2Data.apply(this, arguments);
      result.options.family_variant = this.getFormData().family_variant;
      return result;
    },

    /**
     * {@inheritdoc}
     */
    convertBackendItem: function convertBackendItem(item) {
      return {
        id: item.code,
        text: "".concat(item.code, " - ").concat(item.meta.label[UserContext.get('catalogLocale')]),
        image: item.meta.image || null
      };
    },

    /**
     * {@inheritdoc}
     */
    isReadOnly: function isReadOnly() {
      return !this.getFormData().family_variant || MassEditField.prototype.isReadOnly.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    select2InitSelection: function select2InitSelection(element, callback) {
      var _this2 = this;

      var id = $(element).val();

      if ('' !== id) {
        FetcherRegistry.getFetcher('product-model-by-code').fetch(id).then(function (productModel) {
          callback(_this2.convertBackendItem(productModel));
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13461:
/*!****************************************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/update-entity-with-family-variant-parent.js ***!
  \****************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Allow to search a product with family variant in order to update it
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/mass-edit-form/product/operation */ 34714), __webpack_require__(/*! pim/common/property */ 64070), __webpack_require__(/*! pim/template/mass-edit/product/update-entity-with-family-variant-parent */ 97494)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, messenger, BaseOperation, propertyAccessor, template) {
  return BaseOperation.extend({
    template: _.template(template),
    events: {},

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.updateModel);
      return BaseOperation.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        value: this.getValue(),
        readOnly: this.readOnly
      }));
      BaseOperation.prototype.render.apply(this, arguments);
      return this;
    },

    /**
     * Updates the model to store action
     *
     * @param {Object} formData
     */
    updateModel: function updateModel(formData) {
      if (this.getParent().getCurrentOperation() === this.getCode()) {
        formData.actions = [{
          field: 'productModelCode',
          value: formData.product_model
        }];
        this.setData(formData, {
          silent: true
        });
      }
    },

    /**
     * {@inheritdoc}
     */
    getValue: function getValue() {
      var action = _.findWhere(this.getFormData().actions, {
        field: 'productModelCode'
      });

      return action ? action.value : null;
    },

    /**
     * Checks there is one product model selected to go to the next step
     */
    validate: function validate() {
      var data = this.getFormData();
      var productModelCode = propertyAccessor.accessProperty(data, 'actions.0.value', null);
      var hasUpdate = null !== productModelCode;

      if (!hasUpdate) {
        messenger.notify('error', __('pim_enrich.mass_edit.product.operation.add_to_existing_product_model.no_update'));
      }

      return $.Deferred().resolve(hasUpdate);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 79166:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/mass-edit/form/product/variant-field.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * This module displays a variant field as select2
 * It is adapted for mass edit because it has ability to have readOnly option do disallow edit.
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/product-model/form/creation/variant */ 84948)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Variant) {
  return Variant.extend({
    readOnly: false,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      Variant.prototype.initialize.apply(this, arguments);
      this.readOnly = false;
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this, 'mass-edit:update-read-only', this.setReadOnly.bind(this));
      return Variant.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    isReadOnly: function isReadOnly() {
      return this.readOnly || !this.getFormData().family;
    },

    /**
     * Updates the readOnly parameter to avoid edition of the field
     *
     * @param {Boolean} readOnly
     */
    setReadOnly: function setReadOnly(readOnly) {
      this.readOnly = readOnly;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 27615:
/*!*********************************************!*\
  !*** ./public/bundles/pimui/js/mediator.js ***!
  \*********************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone) {
  'use strict';
  /**
   * @export oro/mediator
   * @name   oro.mediator
   */

  return _.extend({
    clear: function clear(namespace) {
      this._events = _.omit(this._events, function (events, code) {
        return 0 === code.indexOf(namespace);
      });

      _.each(this._events, _.bind(function (events, index) {
        var filtredEvents = [];

        _.each(events, function (event) {
          if (!_.isString(event.context) || 0 !== event.context.indexOf(namespace)) {
            filtredEvents.push(event);
          }
        });

        this._events[index] = filtredEvents;
      }, this));
    }
  }, Backbone.Events);
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 65773:
/*!**********************************************!*\
  !*** ./public/bundles/pimui/js/menu/logo.js ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Base extension forheadermenu
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/template/menu/logo */ 13168)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, router, template) {
  return BaseForm.extend({
    className: 'AknHeader-menuItemContainer',
    template: _.template(template),
    events: {
      click: 'backHome'
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template());
      return BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * Redirect the user to app's home
     */
    backHome: function backHome() {
      if (_.isUndefined(this.options.config.to)) {
        router.redirectToRoute('oro_default');
      } else {
        router.redirectToRoute(this.options.config.to);
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 80787:
/*!***************************************************!*\
  !*** ./public/bundles/pimui/js/menu/resizable.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Adds behavior to allow a div to be resized
 * Stores and restores the resized width
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {
  return {
    /**
     * @property {Number} maxWidth The maximum width of the panel in pixels
     * @property {Number} minWidth The minimum width of the panel in pixels
     * @property {String|HTMLElement} container A selector or element that will be resizable
     * @property {String} storageKey The name of the localStorage key to store the width
     */
    options: {
      maxWidth: null,
      minWidth: null,
      container: null,
      storageKey: null
    },

    /**
     * Set the div with the provided container as resizable
     * with jQuery UI.
     *
     * @param {Object} options
     */
    set: function set() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.options = Object.assign(this.options, options);
      var _this$options = this.options,
          maxWidth = _this$options.maxWidth,
          minWidth = _this$options.minWidth,
          container = _this$options.container;

      if (null === container) {
        throw new Error('You must specify the container as an element or CSS selector');
      }

      $(container).resizable({
        zIndex: 0,
        maxWidth: maxWidth,
        minWidth: minWidth,
        handles: 'e',
        create: this.restoreWidth.bind(this),
        stop: this.storeWidth.bind(this)
      });
    },

    /**
     * Destroy the resizable and handler events
     */
    destroy: function destroy() {
      var container = $(this.options.container);
      var resizableInstance = container.resizable('instance');

      if (undefined !== resizableInstance) {
        container.resizable('destroy');
      }
    },

    /**
     * Store the last resized width of the element in localStorage
     * @param  {jQuery.Event} event The jQuery event when the resize dragging stops
     * @param  {Object} ui The data for the resizable element
     */
    storeWidth: function storeWidth(event, ui) {
      var _this$options2 = this.options,
          minWidth = _this$options2.minWidth,
          storageKey = _this$options2.storageKey;
      var containerWidth = ui.size.width || minWidth;
      localStorage.setItem("resizable-".concat(storageKey), containerWidth);
    },

    /**
     * Get the stored width from localStorage and set it on the div.
     * If there is no previously stored width, use the minWidth
     */
    restoreWidth: function restoreWidth() {
      var _this$options3 = this.options,
          storageKey = _this$options3.storageKey,
          container = _this$options3.container,
          minWidth = _this$options3.minWidth;
      var width = localStorage.getItem("resizable-".concat(storageKey));
      $(container).outerWidth(width || minWidth);
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 34656:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/menu/user-navigation.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This extension will display the user navigation.
 * The user navigation contains:
 * - The link to display the user options
 * - The notification menu
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/notifications */ 93394), __webpack_require__(/*! akeneo/communication-channel */ 90312), __webpack_require__(/*! pim/media-url-generator */ 72689), __webpack_require__(/*! pim/template/menu/user-navigation */ 51348), __webpack_require__(/*! pim/feature-flags */ 5857)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, router, UserContext, Notifications, CommunicationChannel, MediaUrlGenerator, template, FeatureFlags) {
  return BaseForm.extend({
    className: 'AknTitleContainer-userMenu',
    template: _.template(template),
    events: {
      'click .logout': 'logout',
      'click .user-account': 'userAccount'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.html(this.template({
        firstName: UserContext.get('first_name'),
        lastName: UserContext.get('last_name'),
        avatar: this.getAvatar(),
        logoutLabel: __(this.config.logout),
        userAccountLabel: __(this.config.userAccount),
        freeTrialEnabled: FeatureFlags.isEnabled('free_trial')
      }));
      var notificationView = new Notifications({
        imgUrl: 'bundles/pimimportexport/images/loading.gif',
        loadingText: __('pim_common.loading'),
        noNotificationsMessage: __('pim_notification.no_notifications'),
        markAsReadMessage: __('pim_notification.mark_all_as_read')
      });
      notificationView.setElement(this.$('.notification')).render();
      notificationView.refresh();

      if (FeatureFlags.isEnabled('communication_channel')) {
        var communicationChannelView = new CommunicationChannel();
        communicationChannelView.setElement(this.$('.communication-channel')).render();
      }

      this.delegateEvents();
      return BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * Redirect user to logout
     */
    logout: function logout() {
      window.location = router.generate('pim_user_logout_redirect');
    },

    /**
     * Redirect user it's account details
     */
    userAccount: function userAccount() {
      router.redirectToRoute('pim_user_edit', {
        identifier: UserContext.get('meta').id
      });
    },

    /**
     * Return user's avatar
     */
    getAvatar: function getAvatar() {
      var filePath = UserContext.get('avatar').filePath;

      if (null === filePath || undefined === filePath) {
        return null;
      }

      return MediaUrlGenerator.getMediaShowUrl(UserContext.get('avatar').filePath, 'thumbnail_small');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 10501:
/*!********************************************!*\
  !*** ./public/bundles/pimui/js/oro-app.js ***!
  \********************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _) {
  'use strict';
  /**
   * Main Application
   *
   * @export oro/app
   * @name oro.app
   */

  return {
    /** @type {boolean} */
    debug: false,

    /**
     * Pack object to string
     *
     * Object {foo: 'x', 'bar': 'y'} will be converted to string "foo=x&bar=y".
     *
     * @param {Object} object
     * @return {String}
     */
    packToQueryString: function packToQueryString(object) {
      return $.param(object);
    },

    /**
     * Unpack string to object. Reverse from packToQueryString.
     *
     * @param {String} query
     * @return {Object}
     */
    unpackFromQueryString: function unpackFromQueryString(query) {
      var setValue = function setValue(root, path, value) {
        if (path.length > 1) {
          var dir = path.shift();

          if (typeof root[dir] === 'undefined') {
            root[dir] = path[0] === '' ? [] : {};
          }

          setValue(root[dir], path, value);
        } else {
          if (root instanceof Array) {
            root.push(value);
          } else {
            root[path] = value;
          }
        }
      };

      var nvp = query.split('&');
      var data = {};

      for (var i = 0; i < nvp.length; i++) {
        var pair = nvp[i].split('=');

        var name = this._decodeComponent(pair[0]);

        var value = this._decodeComponent(pair[1]);

        var path = name.match(/(^[^\[]+)(\[.*\]$)?/);
        var first = path[1];

        if (path[2]) {
          //case of 'array[level1]' || 'array[level1][level2]'
          path = path[2].match(/(?=\[(.*)\]$)/)[1].split('][');
        } else {
          //case of 'name'
          path = [];
        }

        path.unshift(first);
        setValue(data, path, value);
      }

      return data;
    },

    /**
     * Decode URL encoded component
     *
     * @param {String} string
     * @return {String}
     * @protected
     */
    _decodeComponent: function _decodeComponent(string) {
      var result = string.replace(/\+/g, '%20');
      result = decodeURIComponent(result);
      return result;
    },

    /**
     * Invert object keys.
     *
     * Example of usage:
     *
     * oro.app.invertKeys({foo: 'x', bar: 'y'}, {foo: 'f', bar: 'b'})
     * will return {f: 'x', b: 'y'}
     *
     * @param {Object} object
     * @param {Object} keys
     * @return {Object}
     */
    invertKeys: function invertKeys(object, keys) {
      var result = _.extend({}, object);

      for (var key in keys) {
        var mirrorKey;
        var baseKey;
        baseKey = key;
        mirrorKey = keys[key];

        if (baseKey in result) {
          result[mirrorKey] = result[baseKey];
          delete result[baseKey];
        }
      }

      return result;
    },

    /**
     * Loosely compare two values
     *
     * @param {*} value1
     * @param {*} value2
     * @return {Boolean} TRUE if values are equal, otherwise - FALSE
     */
    isEqualsLoosely: function isEqualsLoosely(value1, value2) {
      if (!_.isObject(value1)) {
        if (_.isNumber(value1) || _.isNumber(value2)) {
          var toNumber = function toNumber(v) {
            if (_.isString(v) && v === '') {
              return NaN;
            }

            return Number(v);
          };

          return toNumber(value1) == toNumber(value2);
        }

        return (value1 || '') == (value2 || '');
      } else if (_.isObject(value1)) {
        var valueKeys = _.keys(value1);

        if (_.isObject(value2)) {
          valueKeys = _.unique(valueKeys.concat(_.keys(value2)));
        }

        for (var index in valueKeys) {
          var key = valueKeys[index];

          if (!_.has(value2, key) || !this.isEqualsLoosely(value1[key], value2[key])) {
            return false;
          }
        }

        return true;
      } else {
        return value1 == value2;
      }
    },

    /**
     * Deep clone a value
     *
     * @param {*} value
     * @return {*}
     */
    deepClone: function deepClone(value) {
      return $.extend(true, {}, value);
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 12764:
/*!***********************************************!*\
  !*** ./public/bundles/pimui/js/page-title.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/translator */ 16393)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (router, __) {
  var routeParams = {};

  var render = function render(name, params) {
    document.title = __('pim_title.' + name, params);
  };

  router.on('route_complete', function (name) {
    render(name, routeParams);
  });
  return {
    set: function set(params) {
      routeParams = params;
    },
    render: render
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 86113:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/pim-async-tab.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/loading-mask */ 13284)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, LoadingMask) {
  'use strict';

  return function (tab) {
    var $tab = $(tab);
    var target = $tab.attr('href');

    if (!target || target === '#' || target.indexOf('javascript') === 0) {
      return;
    }

    var $target = $(target);

    if (!$target.attr('data-loaded') && !$target.attr('data-loading') && $target.attr('data-url')) {
      $target.attr('data-loading', 1);

      if (!$target.hasClass('active')) {
        $target.addClass('active');
      }

      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo($target).css({
        position: 'absolute',
        width: '100%',
        height: '80%'
      });
      loadingMask.show();
      $.get($target.attr('data-url'), function (data) {
        $target.html(data).attr('data-loaded', 1).removeAttr('data-loading');
        loadingMask.hide().$el.remove();
        $target.closest('form').trigger('tab.loaded', $target);
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 3865:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/pim-attributeoptionview.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/template/attribute-option/index */ 43324), __webpack_require__(/*! pim/template/attribute-option/edit */ 10055), __webpack_require__(/*! pim/template/attribute-option/show */ 58000), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! jquery-ui */ 5232)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, __, Routing, mediator, LoadingMask, Dialog, indexTemplate, editTemplate, showTemplate, messenger) {
  'use strict';

  var AttributeOptionItem = Backbone.Model.extend({
    defaults: {
      code: '',
      optionValues: {}
    }
  });
  var ItemCollection = Backbone.Collection.extend({
    model: AttributeOptionItem,
    initialize: function initialize(options) {
      this.url = options.url;
    }
  });
  var EditableItemView = Backbone.View.extend({
    tagName: 'tr',
    className: 'AknGrid-bodyRow editable-item-row',
    showTemplate: _.template(showTemplate),
    editTemplate: _.template(editTemplate),
    events: {
      'click .show-row': 'stopEditItem',
      'click .edit-row': 'startEditItem',
      'click .delete-row': 'deleteItem',
      'click .update-row': 'updateItem',
      'keyup input': 'soil',
      keydown: 'cancelSubmit'
    },
    editable: false,
    parent: null,
    loading: false,
    locales: [],
    initialize: function initialize(options) {
      this.locales = options.locales;
      this.parent = options.parent;
      this.model.urlRoot = this.parent.updateUrl;
      this.render();
    },
    render: function render() {
      var template = null;

      if (this.editable) {
        this.clean();
        this.$el.addClass('in-edition');
        template = this.editTemplate;
      } else {
        this.$el.removeClass('in-edition');
        template = this.showTemplate;
      }

      this.$el.html(template({
        item: this.model.toJSON(),
        locales: this.locales
      }));
      this.$el.attr('data-item-id', this.model.id);
      return this;
    },
    showReadableItem: function showReadableItem() {
      this.editable = false;
      this.parent.showReadableItem(this);
      this.clean();
      this.render();
    },
    showEditableItem: function showEditableItem() {
      this.editable = true;
      this.render();
      this.model.set(this.loadModelFromView().attributes);
    },
    startEditItem: function startEditItem() {
      var rowIsEditable = this.parent.requestRowEdition(this);

      if (rowIsEditable) {
        this.showEditableItem();
      }
    },
    stopEditItem: function stopEditItem() {
      if (!this.model.id || this.dirty) {
        if (this.dirty) {
          Dialog.confirm(__('pim_enrich.entity.attribute_option.module.edit.cancel_description'), __('pim_enrich.entity.attribute_option.module.edit.cancel_title'), function () {
            this.showReadableItem(this);

            if (!this.model.id) {
              this.deleteItem();
            }
          }.bind(this));
        } else {
          if (!this.model.id) {
            this.deleteItem();
          } else {
            this.showReadableItem();
          }
        }
      } else {
        this.showReadableItem();
      }
    },
    deleteItem: function deleteItem() {
      var itemCode = this.el.firstChild.innerText;
      Dialog.confirmDelete(__('pim_enrich.entity.fallback.module.delete.item_placeholder', {
        itemName: itemCode
      }), __('pim_enrich.entity.fallback.module.delete.title', {
        itemName: itemCode
      }), function () {
        this.parent.deleteItem(this);
      }.bind(this), __('pim_enrich.entity.attribute.plural_label'));
    },
    updateItem: function updateItem() {
      this.inLoading(true);
      var editedModel = this.loadModelFromView();
      editedModel.save({}, {
        url: this.model.url(),
        success: function () {
          this.inLoading(false);
          this.model.set(editedModel.attributes);
          this.clean();
          this.stopEditItem();

          if (!this.parent.sortable) {
            this.parent.render();
          } else {
            this.parent.updateSorting();
          }
        }.bind(this),
        error: this.showValidationErrors.bind(this)
      });
    },
    showValidationErrors: function showValidationErrors(data, xhr) {
      this.inLoading(false);
      var response = xhr.responseJSON;

      if (response.code) {
        this.$el.find('.validation-tooltip').attr('data-original-title', response.code).removeClass('AknIconButton--hide').tooltip('destroy').tooltip('show');
      } else {
        messenger.notify('error', response.optionValues);
      }
    },
    cancelSubmit: function cancelSubmit(e) {
      if (e.keyCode === 13) {
        this.updateItem();
        return false;
      }
    },
    loadModelFromView: function loadModelFromView() {
      var attributeOptions = {};
      var editedModel = this.model.clone();
      editedModel.urlRoot = this.model.urlRoot;

      _.each(this.$el.find('.attribute-option-value'), function (input) {
        var locale = input.dataset.locale;
        attributeOptions[locale] = {
          locale: locale,
          value: input.value,
          id: this.model.get('optionValues')[locale] ? this.model.get('optionValues')[locale].id : null
        };
      }.bind(this));

      editedModel.set('code', this.$el.find('.attribute_option_code').val());
      editedModel.set('optionValues', attributeOptions);
      return editedModel;
    },
    inLoading: function inLoading(loading) {
      this.parent.inLoading(loading);
    },
    soil: function soil() {
      if (JSON.stringify(this.model.attributes) !== JSON.stringify(this.loadModelFromView().attributes)) {
        this.dirty = true;
      } else {
        this.dirty = false;
      }
    },
    clean: function clean() {
      this.dirty = false;
    }
  });
  var ItemCollectionView = Backbone.View.extend({
    tagName: 'table',
    className: 'AknGrid AknGrid--unclickable AknAttributeOptions-grid table attribute-option-view',
    template: _.template(indexTemplate),
    events: {
      'click .option-add': 'addItem'
    },
    $target: null,
    locales: [],
    sortable: true,
    sortingUrl: '',
    updateUrl: '',
    currentlyEditedItemView: null,
    itemViews: [],
    rendered: false,
    initialize: function initialize(options) {
      this.$target = options.$target;
      this.collection = new ItemCollection({
        url: options.updateUrl
      });
      this.locales = options.locales;
      this.updateUrl = options.updateUrl;
      this.sortingUrl = options.sortingUrl;
      this.sortable = options.sortable;
      this.render();
      this.load();
    },
    render: function render() {
      this.$el.empty();
      this.currentlyEditedItemView = null;
      this.updateEditionStatus();
      this.$el.html(this.template({
        locales: this.locales,
        add_option_label: __('pim_enrich.entity.product.module.attribute.add_option'),
        code_label: __('pim_common.code')
      }));

      _.each(_.sortBy(this.collection.models, function (attributeOptionItem) {
        return this.sortable ? 0 : attributeOptionItem.attributes.code;
      }.bind(this)), function (attributeOptionItem) {
        this.addItem({
          item: attributeOptionItem
        });
      }.bind(this));

      if (0 === this.collection.length) {
        this.addItem();
      }

      if (!this.rendered) {
        this.$target.html(this.$el);
        this.rendered = true;
      }

      this.setSortable();
      this.updateSortableStatus(this.sortable);
      return this;
    },
    setSortable: function setSortable() {
      this.$el.sortable({
        items: 'tbody tr',
        handle: '.handle',
        axis: 'y',
        connectWith: this.$el,
        containment: this.$el,
        distance: 5,
        cursor: 'move',
        helper: function helper(e, ui) {
          ui.children().each(function () {
            $(this).width($(this).width());
          });
          return ui;
        },
        stop: function () {
          this.updateSorting();
        }.bind(this)
      });
    },
    load: function load() {
      this.itemViews = [];
      this.inLoading(true);
      this.collection.fetch({
        success: function () {
          this.inLoading(false);
          this.render();
        }.bind(this)
      });
    },
    addItem: function addItem(opts) {
      var options = opts || {}; //If no item model provided we create one

      var itemToAdd;

      if (!options.item) {
        itemToAdd = new AttributeOptionItem();
      } else {
        itemToAdd = options.item;
      }

      var newItemView = this.createItemView(itemToAdd);

      if (newItemView) {
        this.$el.children('tbody').append(newItemView.$el);
      }
    },
    createItemView: function createItemView(item) {
      var itemView = new EditableItemView({
        model: item,
        url: this.updateUrl,
        locales: this.locales,
        parent: this
      }); //If the item is new the view is changed to edit mode

      if (!item.id) {
        if (!this.requestRowEdition(itemView)) {
          return;
        } else {
          itemView.showEditableItem();
        }
      }

      this.collection.add(item);
      this.itemViews.push(itemView);
      return itemView;
    },
    requestRowEdition: function requestRowEdition(attributeOptionRow) {
      if (this.currentlyEditedItemView) {
        if (this.currentlyEditedItemView.dirty) {
          messenger.notify('error', __('alert.attribute_option.save_before_edit_other'));
          return false;
        } else {
          this.currentlyEditedItemView.stopEditItem();
          this.currentlyEditedItemView = null;
          this.updateEditionStatus();
        }
      }

      if (attributeOptionRow.model.id) {
        this.currentlyEditedItemView = attributeOptionRow;
      }

      this.updateEditionStatus();
      return true;
    },
    showReadableItem: function showReadableItem(item) {
      if (item === this.currentlyEditedItemView) {
        this.currentlyEditedItemView = null;
        this.updateEditionStatus();
      }
    },
    deleteItem: function deleteItem(item) {
      this.inLoading(true);
      item.model.destroy({
        success: function () {
          this.inLoading(false);
          this.collection.remove(item);
          this.currentlyEditedItemView = null;
          this.updateEditionStatus();

          if (0 === this.collection.length) {
            this.addItem();
            item.$el.hide(0);
          } else if (!item.model.id) {
            item.$el.hide(0);
          } else {
            item.$el.hide(500);
          }
        }.bind(this),
        error: function (data, response) {
          this.inLoading(false);
          var message;

          if (response.responseJSON) {
            message = response.responseJSON.message;
          } else {
            message = response.responseText;
          }

          messenger.notify('error', message);
        }.bind(this)
      });
    },
    updateEditionStatus: function updateEditionStatus() {
      if (this.currentlyEditedItemView) {
        this.$el.addClass('in-edition');
      } else {
        this.$el.removeClass('in-edition');
      }
    },
    updateSortableStatus: function updateSortableStatus(sortable) {
      this.sortable = sortable;

      if (sortable) {
        this.$el.sortable('enable');
      } else {
        this.$el.sortable('disable');
      }
    },
    updateSorting: function updateSorting() {
      var sorting = [];
      var rows = this.$el.find('tbody tr');

      for (var i = rows.length - 1; i >= 0; i--) {
        sorting[i] = rows[i].dataset.itemId;
      }

      $.ajax({
        url: this.sortingUrl,
        type: 'PUT',
        data: JSON.stringify(sorting)
      });
    },
    inLoading: function inLoading(loading) {
      if (loading) {
        var loadingMask = new LoadingMask();
        loadingMask.render().$el.appendTo(this.$el);
        loadingMask.show();
      } else {
        this.$el.find('.loading-mask').remove();
      }
    }
  });
  return function ($element) {
    var itemCollectionView = new ItemCollectionView({
      $target: $element,
      updateUrl: Routing.generate('pim_enrich_attributeoption_index', {
        attributeId: $element.data('attribute-id')
      }),
      sortingUrl: Routing.generate('pim_enrich_attributeoption_update_sorting', {
        attributeId: $element.data('attribute-id')
      }),
      locales: $element.data('locales'),
      sortable: $element.data('sortable')
    });
    mediator.on('attribute:auto_option_sorting:changed', function (autoSorting) {
      itemCollectionView.setSortable();
      itemCollectionView.updateSortableStatus(!autoSorting);
      itemCollectionView.render();
    }.bind(this));
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 44373:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/pim-currencyfield.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! bootstrap */ 16486)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Backbone, _, mediator) {
  'use strict';
  /**
   * Allow expanding/collapsing currency fields
   *
   * @author    Filips Alpe <filips@akeneo.com>
   * @copyright 2013 Akeneo SAS (http://www.akeneo.com)
   * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
   */

  return Backbone.View.extend({
    fieldSelector: '.currency-field[data-metadata]',
    expandIcon: 'icon-caret-right',
    collapseIcon: 'icon-caret-down',
    first: true,
    expanded: true,
    currencies: null,
    scopable: false,
    inputClass: 'input-small',
    smallInputClass: 'input-mini',
    inputThreshold: 3,
    currencyTemplate: _.template('<span class="currency-header<%= small ? " small" : "" %>">' + '<% _.each(currencies, function (currency) { %>' + '<span class="currency-label"><%= currency %></span>' + '<% }); %>' + '</span>'),
    template: _.template('<% _.each(data, function (item) { %>' + '<% _.each(currencies, function (currency, index) { %>' + '<% if (item.label === currency) { %>' + '<% if (scopable && index === 0) { %>' + '<label class="control-label add-on" title="<%= item.scope %>">' + '<%= item.scope[0].toUpperCase() %>' + '</label>' + '<div class="scopable-input">' + '<% } %>' + '<input type="hidden" id="<%= item.currency.fieldId %>" ' + 'name="<%= item.currency.fieldName %>" value="<%= item.currency.data %>"' + '<%= item.currency.disabled ? " disabled" : "" %> >' + '<input type="text" class="<%= inputClass %>" id="<%= item.value.fieldId %>"' + 'name="<%= item.value.fieldName %>" value="<%= item.value.data %>"' + '<% if (!scopable && index === 0) { %>' + ' style="border-top-left-radius:3px;border-bottom-left-radius:3px;"' + '<% } %>' + '<%= item.value.disabled ? " disabled" : "" %> >' + '<% if (scopable && index + 1 === currencies.length) { %>' + '</div>' + '<% } %>' + '<% } %>' + '<% }); %>' + '<% }); %>'),
    events: {
      'click label i.field-toggle': '_toggle'
    },
    initialize: function initialize() {
      this._extractMetadata();

      this.render();

      if (this.scopable) {
        mediator.on('scopablefield:changescope', function (scope) {
          this._changeDefault(scope);
        }.bind(this));
        mediator.on('scopablefield:collapse', function (id) {
          if (!id || this.$el.find('#' + id).length) {
            this._collapse();
          }
        }.bind(this));
        mediator.on('scopablefield:expand', function (id) {
          if (!id || this.$el.find('#' + id).length) {
            this._expand();
          }
        }.bind(this));
      }
    },
    _extractMetadata: function _extractMetadata() {
      this.scopable = this.$el.hasClass('scopable');
      var currencies = [];
      this.$el.find(this.fieldSelector).each(function () {
        var metadata = $(this).data('metadata');
        currencies.push(metadata.label);
      });
      this.currencies = _.uniq(currencies);
    },
    _renderTarget: function _renderTarget(index, target) {
      var $target = $(target);
      var data = [];
      var extractScope = this.scopable;
      $target.find(this.fieldSelector).each(function () {
        var metadata = $(this).data('metadata');

        if (extractScope) {
          metadata.scope = $(this).parent().parent().parent().data('scope');
        }

        data.push(metadata);
      });
      $target.empty();
      $target.prepend(this.template({
        currencies: this.currencies,
        data: data,
        scopable: this.scopable,
        first: this.first,
        collapseIcon: this.collapseIcon,
        inputClass: this.currencies.length > this.inputThreshold ? this.smallInputClass : this.inputClass
      }));

      if (this.first) {
        $target.parent().parent().addClass('first');
        this.first = false;
      }
    },
    render: function render() {
      this.$el.addClass('control-group').find('.control-group.hide').removeClass('hide');
      var $label = this.$el.find('label.control-label:first').prependTo(this.$el);
      this.$el.find('label.control-label:not(:first)').remove();
      var $fields = this.$el.find('div[data-scope]');

      if (this.scopable && $fields.length > 1) {
        var $toggleIcon = $('<i>', {
          "class": 'field-toggle ' + this.collapseIcon
        });
        $label.prepend($toggleIcon);
      }

      $fields.each(function () {
        var $parent = $(this).parent();
        $(this).insertBefore($parent);
        $parent.remove();
      });

      if (this.scopable) {
        this.$el.find('div.controls').addClass('input-prepend');
      }

      var $header = $(this.currencyTemplate({
        currencies: this.currencies,
        scopable: this.scopable,
        small: this.currencies.length > this.inputThreshold
      }));
      $header.insertAfter($label);
      var $iconsContainer = this.$el.find('.icons-container:first');
      $iconsContainer.insertAfter($header);

      _.each(this.$el.find('.validation-tooltip'), function (tooltip) {
        $(tooltip).appendTo($iconsContainer);
      });

      var $targets = this.$el.find('div.controls');
      $targets.each(this._renderTarget.bind(this));

      if (this.scopable) {
        $iconsContainer.appendTo(this.$el.find('div.first .scopable-input'));

        this._collapse();

        mediator.trigger('scopablefield:rendered', this.$el);
      } else {
        $iconsContainer.appendTo(this.$el.find('.controls'));
      }

      return this;
    },
    _expand: function _expand() {
      if (!this.expanded) {
        this.expanded = true;
        this.$el.find('div[data-scope]').removeClass('hide');
        this.$el.find('i.field-toggle').removeClass(this.expandIcon).addClass(this.collapseIcon);
        this.$el.removeClass('collapsed').addClass('expanded').trigger('expand');
      }

      return this;
    },
    _collapse: function _collapse() {
      if (this.expanded) {
        this.expanded = false;
        this.$el.find('div[data-scope]:not(:first)').addClass('hide');
        this.$el.find('i.field-toggle').removeClass(this.collapseIcon).addClass(this.expandIcon);
        this.$el.removeClass('expanded').addClass('collapsed').trigger('collapse');
      }

      return this;
    },
    _toggle: function _toggle(e) {
      if (e) {
        e.preventDefault();
      }

      return this.expanded ? this._collapse() : this._expand();
    },
    _changeDefault: function _changeDefault(scope) {
      var $fields = this.$el.find('>div[data-scope]');
      this.$el.find('.first').removeClass('first');
      var $firstField = $fields.filter('[data-scope="' + scope + '"]');
      $firstField.addClass('first').insertBefore($fields.eq(0));

      if (this.scopable) {
        var $iconsContainer = this.$el.find('.icons-container:first');
        $iconsContainer.appendTo(this.$el.find('div.first .scopable-input'));
      }

      this._toggle();

      this._toggle();

      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 83586:
/*!***************************************************!*\
  !*** ./public/bundles/pimui/js/pim-datepicker.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! bootstrap.datetimepicker */ 32929)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __) {
  'use strict';

  return {
    options: {
      language: 'en',
      pickTime: false
    },
    init: function init($target, options) {
      options = $.extend(true, {}, this.options, options);

      if ('en' !== options.language && undefined === $.fn.datetimepicker.dates[options.language]) {
        var languageOptions = {};
        var defaultOptions = $.fn.datetimepicker.dates.en;

        _.each(_.keys(defaultOptions), function (key) {
          languageOptions[key] = [];

          _.each(defaultOptions[key], function (value) {
            languageOptions[key].push(__('datetimepicker.' + key + '.' + value));
          });
        });

        $.fn.datetimepicker.dates[options.language] = languageOptions;
      }

      $target.datetimepicker(options);
      return $target;
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 42905:
/*!***********************************************!*\
  !*** ./public/bundles/pimui/js/pim-dialog.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Dialog class purposes an easier way to call ModalDialog components
 *
 * @author    Romain Monceau <romain@akeneo.com>
 * @copyright 2013 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 *
 * @uses Backbone.BootstrapModal
 *
 * Example:
 *      Dialog.alert('{{ 'MyMessage'|trans }}', 'MyTitle');
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! bootstrap-modal */ 21430)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, __, router) {
  'use strict';

  var Dialog = {
    /**
     * Returns class name for modal illustration
     */
    getIllustrationClass: function getIllustrationClass() {
      var entityType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      return entityType.toLowerCase().split(' ').join('-');
    },

    /**
     * Open a modal dialog without cancel button
     * @param {String} content The message in the modal
     * @param {String} title The title of the modal
     * @param {String} subTitle The subtitle for the modal
     */
    alert: function alert(content, title, subTitle) {
      var alert = new Backbone.BootstrapModal({
        type: __(subTitle) || '',
        allowCancel: false,
        title: title,
        content: content,
        okText: __('pim_common.ok'),
        buttonClass: 'AknButton--action',
        illustrationClass: this.getIllustrationClass(subTitle)
      });
      alert.$el.addClass('modal--fullPage');
      alert.open();
    },

    /**
     * Open a modal dialog with cancel button and specific redirection when
     * @param {String} content
     * @param {String} title
     * @param {String} okText
     * @param {String} location
     */
    redirect: function redirect(content, title, okText, location) {
      if (!_.isUndefined(Backbone.BootstrapModal)) {
        var redirectModal = new Backbone.BootstrapModal({
          title: title,
          content: content,
          okText: okText
        });
        redirectModal.on('ok', function () {
          router.redirect(location);
        });
        $('.modal-body a', redirectModal.el).on('click', function () {
          redirectModal.close();
        });
        redirectModal.open();
      } else {
        window.alert(content);
      }
    },

    /**
     * Open a confirm modal dialog to validate the action made by user
     * If user validate its action, a js callback function is called
     * @param  {String}   content           Message inside the modal
     * @param  {String}   title             Title of the modal
     * @param  {Function} callback          Action to execute after validation
     * @param  {String}   subTitle          The subtitle (can be entity type)
     * @param  {String}   buttonClass       The class for OK button
     * @param  {String}   buttonText        The OK button label
     * @param  {String}   illustrationClass Class for the illustration
     * @return {Promise}
     */
    confirm: function confirm(content, title, callback, subTitle, buttonClass, buttonText, illustrationClass) {
      var deferred = $.Deferred();
      var confirm = new Backbone.BootstrapModal({
        type: __(subTitle || ''),
        title: __(title),
        innerDescription: __(content),
        content: '',
        okText: __(buttonText) || __('pim_common.ok'),
        cancelText: __('pim_common.cancel'),
        buttonClass: buttonClass || 'AknButton--action',
        allowCancel: true,
        illustrationClass: illustrationClass || this.getIllustrationClass(subTitle)
      });
      confirm.$el.addClass('modal--fullPage');
      confirm.on('ok', function () {
        deferred.resolve();
        (callback || $.noop)();
      });
      confirm.on('cancel', function () {
        this.close();
        this.remove();
        deferred.reject();
      });
      confirm.open();
      return deferred.promise();
    },

    /**
     * Open a Confirm deletion modal and execute callback after
     * user validation
     * @param  {String}   content    The message text
     * @param  {String}   title      The title
     * @param  {Function} callback   Action to execute after validation
     * @param  {String}   subTitle   The entity type
     * @param  {String}   buttonText The 'ok' button label
     */
    confirmDelete: function confirmDelete(content, title, callback, subTitle, buttonText) {
      return Dialog.confirm.apply(this, [content, title, callback, subTitle, 'AknButton--important', __(buttonText) || __('Delete'), 'delete']);
    }
  };
  return Dialog;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29831:
/*!***************************************************!*\
  !*** ./public/bundles/pimui/js/pim-dialogform.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global console */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! jquery-ui */ 5232), __webpack_require__(/*! bootstrap */ 16486)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, mediator, router, LoadingMask, initSelect2) {
  'use strict'; // Allow using select2 search box in jquery ui dialog

  $.ui.dialog.prototype._allowInteraction = function (e) {
    return !!$(e.target).closest('.ui-dialog, .select2-drop').length;
  };

  return function (elementId, callback) {
    var $el = $(elementId);

    if (!$el.length) {
      return console.error('DialogForm: the element could not be found!');
    }

    var $dialog;
    var url = $el.attr('data-form-url');

    if (!url) {
      throw new Error('DialogForm: please specify the url');
    }

    var width = $el.attr('data-form-width') || 400;
    var loadingMask = null;

    function showLoadingMask() {
      if (!loadingMask) {
        loadingMask = new LoadingMask();
        loadingMask.render().$el.appendTo($('#container'));
      }

      loadingMask.show();
    }

    function destroyDialog() {
      if ($dialog && $dialog.length) {
        $dialog.remove();
      }

      $dialog = null;
    }

    function createDialog(data) {
      destroyDialog();
      var $form = $(data);
      var formTitle = $form.data('title');
      var formId = '#' + $form.attr('id');
      var loadingMask = $('<div class="AknLoadingMask">').hide();
      $('body').append(loadingMask);
      var formButtons = [];
      var submitButton = $form.data('button-submit');
      var cancelButton = $form.data('button-cancel');

      if (submitButton) {
        formButtons.push({
          text: submitButton,
          "class": 'btn btn-primary',
          click: function click() {
            showLoadingMask();
            $.ajax({
              url: url,
              type: 'post',
              data: $(formId).serialize(),
              success: function success(data) {
                processResponse(data);
                mediator.trigger('dialog:open:after', this);
                loadingMask.remove();
              }
            });
          }
        });
      }

      if (cancelButton) {
        formButtons.push({
          text: cancelButton,
          "class": 'btn',
          click: function click() {
            destroyDialog();
            loadingMask.remove();
          }
        });
      }

      $dialog = $form.dialog({
        title: formTitle,
        modal: true,
        resizable: false,
        width: width,
        buttons: formButtons,
        draggable: false,
        open: function open() {
          $(this).parent().on('keypress', function (e) {
            if (e.keyCode === $.ui.keyCode.ENTER) {
              e.preventDefault();
              e.stopPropagation();
              $(this).find('button.btn-primary:eq(0)').click();
            }
          });
          loadingMask.show();
        },
        close: function close() {
          $(this).remove();
          loadingMask.remove();
        }
      });
      initSelect2.init($(formId));
      $(formId + ' .switch').bootstrapSwitch();
      $(formId).find('[data-toggle="tooltip"]').tooltip();
    }

    function isJSON(str) {
      try {
        JSON.parse(str);
      } catch (e) {
        return false;
      }

      return true;
    }

    function processResponse(data) {
      loadingMask.hide();

      if (isJSON(data)) {
        data = $.parseJSON(data);
        destroyDialog();

        if (callback) {
          callback(data);
        } else {
          router.redirect(data.url);
        }
      } else if (_.isObject(data)) {
        destroyDialog();

        if (callback) {
          callback(data);
        } else if (data.url) {
          router.redirect(data.url);
        } else if (data.route) {
          router.redirectToRoute(data.route, data.params);
        }
      } else if ($(data).prop('tagName').toLowerCase() === 'form') {
        createDialog(data);
      }
    }

    $el.on('click', function (e) {
      e.preventDefault();
      showLoadingMask();
      $.ajax({
        url: url,
        type: 'get',
        success: function success(data) {
          loadingMask.hide();
          createDialog(data);
          mediator.trigger('dialog:open:after', this);
        }
      });
    });
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 7895:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/pim-fileinput.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! jquery.slimbox */ 22574)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {
  'use strict';

  var maxFilenameLength = 20;

  var init = function init(id) {
    var $el = $('#' + id);

    if (!$el.length) {
      return;
    }

    $el.on('change', function () {
      var $input = $(this);
      var filename = $input.val().split('\\').pop();
      var $zone = $input.parent();
      var $info = $input.siblings('.upload-info').first();
      var $filename = $info.find('.upload-filename');
      var $removeBtn = $input.siblings('.remove-upload');
      var $removeCheckbox = $input.siblings('input[type="checkbox"]');
      var $preview = $info.find('.upload-preview');

      if (filename) {
        var title = filename.length > maxFilenameLength ? filename.substring(0, maxFilenameLength - 3) + '...' : filename;
        $filename.html(title);
        $zone.removeClass('empty');
        $preview.removeClass('empty').attr('title', filename);
        $removeBtn.removeClass('hide');
        $input.addClass('hide');
        $removeCheckbox.removeAttr('checked');
      } else {
        $filename.html($filename.attr('data-empty-title'));
        $zone.addClass('empty');
        $preview.addClass('empty').removeAttr('title');
        $removeBtn.addClass('hide');
        $input.removeAttr('disabled').removeClass('hide');
        $removeCheckbox.prop('checked', true);
      }
    });
    $el.parent().on('click', '.remove-upload:not(.disabled)', function (e) {
      e.preventDefault();
      e.stopPropagation();
      $el.wrap('<form>').closest('form').get(0).reset();
      $el.unwrap().trigger('change');
    });
    $el.parent().on('mouseover', '.upload-zone:not(.empty)', function () {
      $el.attr('disabled', 'disabled');
    }).on('mouseout', '.upload-zone:not(.empty)', function () {
      $el.removeAttr('disabled');
    }); // Initialize slimbox

    if (!/android|iphone|ipod|series60|symbian|windows ce|blackberry/i.test(navigator.userAgent)) {
      $el.parent().find('a[rel^="slimbox"]').slimbox({
        overlayOpacity: 0.3
      }, null, function (el) {
        return this === el || this.rel.length > 8 && this.rel === el.rel;
      });
    }
  };

  return {
    init: init
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 3169:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/pim-formupdatelistener.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global console */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Backbone, Dialog, router) {
  'use strict';

  return function ($form) {
    this.updated = false;
    var message = $form.attr('data-updated-message');

    if (!message) {
      console.warn('FormUpdateListener: message not provided.');
      return;
    }

    var title = $form.attr('data-updated-title');
    var self = this;

    var formUpdated = function formUpdated(e) {
      var $target = $(e.target);

      if ($target.parents('div.filter-box').length || $target.parents('ul.icons-holder').length || $target.hasClass('exclude')) {
        return;
      }

      self.updated = true;
      $('#entity-updated').show().css('opacity', 1);
      $form.off('change', formUpdated);
      $(document).off('click', '#' + $form.attr('id') + ' ins.jstree-checkbox', formUpdated);
      $form.find('button[type="submit"]').on('click', function () {
        self.updated = false;
      });
      $(window).on('beforeunload', function () {
        if (self.updated) {
          return message;
        }
      });
    };

    var linkClicked = function linkClicked(e) {
      e.stopImmediatePropagation();
      e.preventDefault();
      var url = $(this).attr('href');

      var doAction = function doAction() {
        router.redirect(url);
      };

      if (!self.updated) {
        doAction();
      } else {
        Dialog.confirm(message, title, doAction);
      }

      return false;
    };

    $form.on('change', formUpdated);
    $(document).on('click', '#' + $form.attr('id') + ' ins.jstree-checkbox', formUpdated);
    $form.on('refresh', function () {
      self.updated = false;
      $('#entity-updated').css('opacity', 0).hide();
    });
    $('a[href^="/"]:not(".no-hash")').off('click').on('click', linkClicked);
    $form.on('click', 'a[href^="/"]:not(".no-hash")', linkClicked);
    Backbone.Router.prototype.on('route', function () {
      $('a[href^="/"]:not(".no-hash")').off('click', linkClicked);
      $(window).off('beforeunload');
    });
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 82358:
/*!*********************************************!*\
  !*** ./public/bundles/pimui/js/pim-init.js ***!
  \*********************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! pim/saveformstate */ 56153), __webpack_require__(/*! pim/asynctab */ 86113), __webpack_require__(/*! pim/ui */ 66457), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! require-polyfill */ 26693)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, mediator, messenger, Dialog, saveformstate, loadTab, UI, LoadingMask, router) {
  'use strict';

  var initialized = false;
  return function () {
    if (initialized) {
      return;
    }

    initialized = true;

    var setFullHeight = function setFullHeight($target) {
      if (!$target) {
        $target = $('body');
      }
    };

    var pageInit = function pageInit($target) {
      if (!$target) {
        $target = $('body');
        $target.find('form.form-horizontal, [data-saveformstate]').each(function () {
          saveformstate($(this).attr('id'), loadTab);
        });
      } // Place code that we need to run on every page load here


      $target.find('.remove-attribute').each(function () {
        var target = $(this).parent().find('.icons-container');

        if (target.length) {
          $(this).appendTo(target).attr('tabIndex', -1);
        }
      });
      var $localizableIcon = $('<i>', {
        "class": 'icon-globe',
        attr: {
          'data-original-title': _.__('Localized value'),
          'data-toggle': 'tooltip',
          'data-placement': 'right'
        }
      });
      $target.find('.attribute-field.localizable').each(function () {
        var $iconsContainers = $(this).find('div.controls').find('.icons-container');

        if (!$iconsContainers.find('i.icon-globe').length) {
          $iconsContainers.prepend($localizableIcon.clone());
        }
      });
      UI($target);
      $target.find('a[data-form-toggle]').on('click', function () {
        $('#' + $(this).attr('data-form-toggle')).show();
        $(this).hide();
      });
      $target.find('a[data-toggle="tab"]').on('show.bs.tab', function () {
        loadTab(this);
      }); //Flash messages:

      if (window.flashMessages) {
        _.each(window.flashMessages, function (messages, type) {
          _.each(messages, function (message) {
            messenger.notify(type, message);
          });
        });
      }

      window.flashMessages = [];
      setFullHeight($target);
    };

    $(function () {
      $(document).on('tab.loaded', 'form.form-horizontal, [data-saveformstate]', function (e, tab) {
        pageInit($(tab));
      });
      $(document).on('shown', 'a[data-toggle="tab"]', function () {
        var target = $(this).attr('href');

        if (target && target !== '#' && target.indexOf('javascript') !== 0) {
          setFullHeight($(target).parent());
        }
      });
      var secret = '38384040373937396665';
      var input = '';
      var timer;
      $(document).on('keyup', function (e) {
        input += e.which;
        clearTimeout(timer);
        timer = setTimeout(function () {
          input = '';
        }, 500);

        if (input === secret) {
          $(document.body).addClass('konami');
        }
      }); // DELETE request for delete buttons

      $(document).on('click', '[data-dialog]', function () {
        var $el = $(this);
        var message = $el.data('message');
        var title = $el.data('title');
        var subTitle = $el.data('subtitle');
        var buttonLabel = $el.data('buttonlabel');

        var doAction = function doAction() {
          var loadingMask = new LoadingMask();
          loadingMask.render().$el.appendTo($(document.body)).css({
            position: 'absolute',
            top: '0px',
            left: '0px',
            width: '100%',
            height: '100%'
          });
          loadingMask.show();
          $.ajax({
            url: $el.attr('data-url'),
            type: 'POST',
            headers: {
              accept: 'application/json'
            },
            data: {
              _method: $el.data('method')
            },
            success: function success() {
              loadingMask.hide().$el.remove();
              var targetUrl = $el.attr('data-redirect-url');
              router.redirect(targetUrl, {
                trigger: true
              });
              messenger.notify('success', $el.attr('data-success-message'));
            },
            error: function error(xhr) {
              loadingMask.hide().$el.remove();
              messenger.notify('error', xhr.responseJSON && xhr.responseJSON.message ? __(xhr.responseJSON.message) : $el.attr('data-error-message'));
            }
          });
        };

        $el.off('click');

        if ($el.data('dialog') === 'confirm') {
          Dialog.confirm(message, title, doAction, subTitle, '', buttonLabel);
        } else if ($el.data('dialog') === 'delete') {
          Dialog.confirmDelete(message, title, doAction, subTitle);
        } else if ($el.data('dialog') === true) {// This is a Reakit property, do nothing.
        } else {
          Dialog.alert(message, title, subTitle);
        }

        return false;
      });
      pageInit();
    });
    mediator.on('route_complete pim:reinit', function () {
      pageInit();
    });
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 3701:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/pim-initselect2.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* jshint unused:vars */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/formatter/choices/base */ 78464), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, ChoicesFormatter, UserContext) {
  'use strict';

  return {
    resultsPerPage: 20,
    defaultOptions: {
      allowClear: false,
      formatSearching: function formatSearching() {
        return _.__('pim_common.select2.search');
      },
      formatNoMatches: function formatNoMatches() {
        return _.__('pim_common.select2.no_match');
      },
      formatLoadMore: function formatLoadMore() {
        return _.__('pim_common.select2.load_more');
      }
    },
    init: function init($target, options) {
      var self = this;
      $target.find('input.select2:not(.select2-offscreen)').each(function () {
        var options = self.initOptions(options);
        var $el = $(this);

        var value = _.map(_.compact($el.val().split(',')), $.trim);

        var tags = _.map(_.compact($el.attr('data-tags').split(',')), $.trim);

        $el.select2($.extend(true, options, {
          tags: _.union(tags, value).sort(),
          tokenSeparators: [',', ' ']
        }));
      });
      $target.find('select.select2:not(.select2-offscreen)').each(function () {
        var options = self.initOptions(options);
        var $el = $(this);
        var $empty = $el.children('[value=""]');

        if ($empty.length && $empty.html()) {
          $el.attr('data-placeholder', $empty.html());
          $empty.html('');
        }

        $el.select2($.extend(true, options, {
          allowClear: true
        }));
      });
      $target.find('input.pim-ajax-entity:not(.select2-offscreen)').each(function () {
        self.initSelect.call(self, $(this));
      });

      if ($target.hasClass('select-field')) {
        options = self.initOptions(options);
        $target.select2('destroy').select2(options);
      }

      return $target;
    },
    initSelect: function initSelect($select, options) {
      options = this.initOptions(options);
      var self = this;
      var queryTimer;

      if ($select.attr('data-multiple')) {
        options.multiple = true;
      }

      if (!options.multiple) {
        if (!$select.attr('data-required')) {
          options.allowClear = true;
        }

        options.placeholder = ' ';
      }

      options.minimumInputLength = $select.attr('data-min-input-length');

      options.query = function (options) {
        var page = 1;

        if (options.context && options.context.page) {
          page = options.context.page;
        }

        window.clearTimeout(queryTimer);
        queryTimer = window.setTimeout(function () {
          $.ajax({
            url: $select.attr('data-url'),
            data: {
              search: options.term,
              options: {
                limit: self.resultsPerPage,
                page: page,
                locale: UserContext.get('catalogLocale')
              }
            },
            dataType: 'json',
            type: 'GET',
            success: function success(data) {
              if (_.isUndefined(data.results)) {
                data.results = ChoicesFormatter.format(data);
              }

              options.callback({
                results: data.results,
                more: data.results.length === self.resultsPerPage,
                context: {
                  page: page + 1
                }
              });
            }
          });
        }, 400);
      };

      options.initSelection = function (element, callback) {
        var choices = $.parseJSON($select.attr('data-choices'));
        callback(choices);
      };

      $select.select2(options);
    },
    getSelectOptions: function getSelectOptions(data) {
      return data;
    },
    getAjaxParameters: function getAjaxParameters() {
      return {};
    },
    hasCachableResults: function hasCachableResults() {
      return true;
    },
    matchLocalResults: function matchLocalResults(data, term) {
      var matchingResults = _.filter(data.results, function (result) {
        return $.fn.select2.defaults.matcher(term, result.text);
      });

      return _.extend({}, data, {
        results: matchingResults
      });
    },
    initOptions: function initOptions(options) {
      var defaultOptions = $.extend(true, {}, this.defaultOptions);
      return $.extend(true, defaultOptions, options);
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 792:
/*!***************************************************!*\
  !*** ./public/bundles/pimui/js/pim-optionform.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/dialogform */ 29831), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, DialogForm, messenger, initSelect2) {
  'use strict';

  var init = function init(fieldId) {
    var $field = $(fieldId);
    var $target = $field.parent().find('.icons-container').first();

    if ($target.length) {
      $field.insertBefore($target).attr('tabIndex', -1);
    }

    var callback = function callback(data) {
      if (data.status) {
        var $select = $field.siblings('input.pim-ajax-entity');
        var selectData = {
          id: data.option.id,
          text: data.option.label
        };

        if ($select.attr('data-multiple')) {
          selectData = function (newElement) {
            var selectData = $select.select2('data');
            selectData.push(newElement);
            return selectData;
          }(selectData);
        }

        $select.select2('destroy');
        initSelect2.initSelect($select);
        $select.trigger('change');
        $select.select2('data', selectData);
        messenger.notify('success', $field.data('success-message'));
      } else {
        messenger.notify('error', $field.data('error-message'));
      }
    };

    new DialogForm(fieldId, callback);
  };

  return {
    init: init
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 56153:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/pim-saveformstate.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {
  'use strict';

  var formId;
  var cb;

  function saveFormState() {
    var $form = $('#' + formId);
    var activeTab = $form.find('#form-navbar').find('li.active').find('a').attr('href');
    var $activeGroup = $form.find('.tab-pane.active').find('.tab-groups').find('li.active').find('a');
    var activeGroup;

    if ($activeGroup.length) {
      activeGroup = $activeGroup.attr('href');

      if (!activeGroup || activeGroup === '#' || activeGroup.indexOf('javascript') === 0) {
        activeGroup = $activeGroup.attr('id') ? '#' + $activeGroup.attr('id') : null;
      }
    } else {
      activeGroup = null;
    }

    if (activeTab) {
      sessionStorage[formId + '_activeTab'] = activeTab;
    }

    if (activeGroup) {
      sessionStorage[formId + '_activeGroup'] = activeGroup;
    }
  }

  function restoreFormState() {
    if (sessionStorage.redirectTab) {
      var $redirectTab = $('a[href="' + sessionStorage.redirectTab + '"]');

      if ($redirectTab.length && !$('.loading-mask').is(':visible')) {
        $redirectTab.tab('show');

        if (cb) {
          cb($redirectTab);
        }

        sessionStorage.removeItem('redirectTab');
      }
    } else if (sessionStorage[formId + '_activeTab']) {
      var $activeTab = $('a[href="' + sessionStorage[formId + '_activeTab'] + '"]');

      if ($activeTab.length) {
        $activeTab.tab('show');

        if (cb) {
          cb($activeTab);
        }
      }
    }

    if (sessionStorage[formId + '_activeGroup']) {
      var $activeGroup = $('a[href="' + sessionStorage[formId + '_activeGroup'] + '"]');

      if ($activeGroup.length && !$('.loading-mask').is(':visible')) {
        $activeGroup.tab('show');

        if (cb) {
          cb($activeGroup);
        }
      } else {
        var $tree = $('div[data-selected-tree]');

        if ($tree.length && !$('.loading-mask').is(':visible')) {
          $tree.attr('data-selected-tree', sessionStorage[formId + '_activeGroup'].match(/\d/g).join(''));
        }
      }
    }
  }

  return function (id, callback) {
    if (typeof Storage === 'undefined') {
      return;
    }

    if (!id || !$('#' + id).length) {
      return;
    }

    formId = id;
    cb = callback;
    restoreFormState();
    $('#' + formId).on('shown', 'a[data-toggle="tab"]', saveFormState);
    $('#' + formId).on('tab.loaded', restoreFormState);
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 6403:
/*!*************************************************!*\
  !*** ./public/bundles/pimui/js/pim-scopable.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! wysiwyg */ 85392), __webpack_require__(/*! pim/optionform */ 792), __webpack_require__(/*! pim/fileinput */ 7895), __webpack_require__(/*! bootstrap */ 16486), __webpack_require__(/*! bootstrap.bootstrapswitch */ 86049), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Backbone, _, mediator, wysiwyg, optionform, fileinput) {
  'use strict';
  /**
   * Allow expanding/collapsing scopable fields
   *
   * @author    Filips Alpe <filips@akeneo.com>
   * @copyright 2013 Akeneo SAS (http://www.akeneo.com)
   * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
   */

  var ScopableField = Backbone.View.extend({
    field: null,
    rendered: false,
    isMetric: false,
    template: _.template('<%= field.hiddenInput %>' + '<div class="control-group">' + '<div class="controls input-prepend<%= isMetric ? " metric input-append" : "" %>">' + '<label class="control-label add-on" for="<%= field.id %>" title="<%= field.scope %>">' + '<%= field.scope[0].toUpperCase() %>' + '</label>' + '<div class="scopable-input">' + '<%= field.input %>' + '<div class="icons-container">' + '<%= field.icons %>' + '</div>' + '</div>' + '</div>' + '</div>'),
    initialize: function initialize() {
      var field = {};

      if (this.$el.find('.upload-zone').length) {
        field.id = null;
        field.input = this.$el.find('.upload-zone').get(0).outerHTML;
      } else if (this.$el.find('.switch').length) {
        var $original = this.$el.find('.switch');
        var $wrap = $original.clone().empty().removeClass('has-switch');
        var $input = $original.find('input');
        field.id = $input.attr('id');
        $input.appendTo($wrap);
        field.input = $wrap.get(0).outerHTML;
      } else if (this.$el.find('.control-label')) {
        field.id = this.$el.find('.control-label').attr('for');
        var $field = $('#' + field.id);

        if ($field.hasClass('select2-input') || $field.hasClass('select2-focusser')) {
          var id = $field.closest('.select2-container').attr('id');

          if (/^s2id_.+/.test(id)) {
            id = id.slice(5);
            field.id = id;
            $field = $('#' + id);
          }

          $field.select2('destroy');
        }

        field.input = $field.get(0).outerHTML;

        _.each($field.siblings('input, select'), function (el) {
          field.input += el.outerHTML;
        });

        if (this.$el.find('.controls.metric').length) {
          this.isMetric = true;
        }

        if ($field.siblings('a.add-attribute-option').length) {
          field.input += $field.siblings('a.add-attribute-option').get(0).outerHTML;
        }

        _.each($field.siblings('.validation-tooltip'), function (icon) {
          $(icon).appendTo(this.$el.find('.icons-container'));
        }.bind(this));
      }

      field.scope = this.$el.data('scope');
      field.hiddenInput = this.$el.find('input[type="hidden"]').get(0).outerHTML;
      field.icons = this.$el.find('.icons-container').html();
      this.field = field;
    },
    render: function render() {
      if (!this.rendered) {
        this.rendered = true;
        this.$el.empty();
        this.$el.append(this.template({
          field: this.field,
          isMetric: this.isMetric
        }));
        this.$el.find('[data-toggle="tooltip"]').tooltip();
        this.$el.find('.switch').bootstrapSwitch();
        this.$el.find('select').select2();
      }

      return this;
    }
  });
  return Backbone.View.extend({
    label: null,
    fieldViews: [],
    fields: [],
    expanded: true,
    rendered: false,
    expandIcon: 'icon-caret-right',
    collapseIcon: 'icon-caret-down',
    skipUIInit: false,
    template: _.template('<%= label %>'),
    initialize: function initialize(opts) {
      var options = opts || {};
      this.fieldViews = [];
      this.fields = [];
      this.expanded = true;
      this.rendered = false;

      this._reindexFields();

      _.each(this.fields, function ($field) {
        this._addField($field);
      }.bind(this));

      this.label = this.$el.find('.control-label').first().get(0).outerHTML;
      this.render();

      if (_.has(options, 'initialScope')) {
        this._changeDefault(options.initialScope);
      }

      mediator.on('scopablefield:changescope', function (scope) {
        this._changeDefault(scope);
      }.bind(this));
      mediator.on('scopablefield:collapse', function (id) {
        if (!id || this.$el.find('#' + id).length) {
          this._collapse();
        }
      }.bind(this));
      mediator.on('scopablefield:expand', function (id) {
        if (!id || this.$el.find('#' + id).length) {
          this._expand();
        }
      }.bind(this));
      var self = this;
      this.$el.closest('form').on('validate', function () {
        if (self.$el.find('.validation-tooltip:hidden').length) {
          self._expand();
        }
      });
    },
    render: function render() {
      if (!this.rendered) {
        this.rendered = true;
        this.$el.empty().addClass('control-group');
        this.$el.append(this.template({
          label: this.label
        }));

        if (this.fieldViews.length > 1) {
          var $toggleIcon = $('<i>', {
            "class": 'field-toggle ' + this.collapseIcon
          });
          this.$el.find('label').removeAttr('for').prepend($toggleIcon);
        }

        _.each(this.fieldViews, function (fieldView) {
          fieldView.render().$el.appendTo(this.$el);
        }.bind(this));

        this._collapse();

        var $optionLink = this.$el.find('a.add-attribute-option');

        if ($optionLink.length) {
          optionform.init('#' + $optionLink.attr('id'));
        }

        mediator.trigger('scopablefield:rendered', this.$el);
      }

      return this;
    },
    _addField: function _addField($field) {
      this.fieldViews.push(new ScopableField({
        el: $field
      }));
      return this;
    },
    _expand: function _expand() {
      if (!this.expanded) {
        this.expanded = true;

        this._reindexFields();

        var first = true;

        _.each(this.fields, function (field) {
          this._showField(field, first);

          first = false;
        }.bind(this));

        this._initUI();

        this.$el.find('i.field-toggle').removeClass(this.expandIcon).addClass(this.collapseIcon);
        this.$el.removeClass('collapsed').addClass('expanded').trigger('expand');
      }

      return this;
    },
    _collapse: function _collapse() {
      if (this.expanded) {
        this.expanded = false;

        this._reindexFields();

        var first = true;

        _.each(this.fields, function (field) {
          if (first) {
            this._showField(field, first);

            first = false;
          } else {
            this._hideField(field);
          }
        }.bind(this));

        this._initUI();

        this.$el.find('i.field-toggle').removeClass(this.collapseIcon).addClass(this.expandIcon);
        this.$el.removeClass('expanded').addClass('collapsed').trigger('collapse');
      }

      return this;
    },
    _refreshFieldsDisplay: function _refreshFieldsDisplay() {
      _.each(this.fields, function ($field) {
        if (this.expanded || $field.hasClass('first')) {
          this._showField($field);
        } else {
          this._hideField($field);
        }
      }.bind(this));
    },
    _toggle: function _toggle(e) {
      if (e) {
        e.preventDefault();
      }

      return this.expanded ? this._collapse() : this._expand();
    },
    _changeDefault: function _changeDefault(scope) {
      this.skipUIInit = true;

      this._toggle();

      this._setFieldFirst(this.$el.find('[data-scope="' + scope + '"]:first'));

      this._refreshFieldsDisplay();

      this._initUI();

      return this;
    },
    _reindexFields: function _reindexFields() {
      this.fields = _.map(this.$el.find('[data-scope]'), function (field) {
        return $(field);
      });

      if (this.$el.find('[data-scope]').length) {
        _.first(this.fields).addClass('first');
      }
    },
    _setFieldFirst: function _setFieldFirst($field) {
      this.$el.find('[data-scope]').removeClass('first');
      $field.addClass('first');
      var $target = this.$el.find('>label');

      if ($target.length) {
        $field.insertAfter($target);
      } else {
        $field.prependTo(this.$el);
      }
    },
    _showField: function _showField(field, first) {
      var $icons = $(field).find('.icons-container i:not(".validation-tooltip")');

      if (first) {
        $(field).addClass('first');
        $icons.attr('style', 'display: inline !important');

        this._setFieldFirst(field);
      } else {
        $(field).removeClass('first');
        $icons.attr('style', 'display: none !important');
      }

      $(field).show();
    },
    _hideField: function _hideField(field) {
      $(field).hide();
    },
    _initUI: function _initUI() {
      if (!this.skipUIInit) {
        _.each(this.fields, function ($field) {
          var $textarea = $field.find('textarea.wysiwyg');

          if ($textarea.length) {
            wysiwyg.init($textarea);
          }

          var $fileInput = $field.find('input[type=file][id]');

          if ($fileInput.length) {
            fileinput.init($fileInput.attr('id'));
          }
        });
      }

      return this;
    },
    events: {
      'click label i.field-toggle': '_toggle'
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 66457:
/*!*******************************************!*\
  !*** ./public/bundles/pimui/js/pim-ui.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! wysiwyg */ 85392), __webpack_require__(/*! bootstrap */ 16486)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, initSelect2, wysiwyg) {
  'use strict';

  return function ($target) {
    // Apply Select2
    initSelect2.init($target); // Initialize tooltip

    $target.find('[data-toggle="tooltip"]').tooltip(); // Initialize popover

    $target.find('[data-toggle="popover"]').popover(); // Activate a form tab

    $target.find('li.tab.active a').each(function () {
      var paneId = $(this).attr('href');
      $(paneId).addClass('active');
    });
    $target.find('textarea.wysiwyg[id]:not([aria-hidden])').each(function () {
      if (!$(this).closest('.attribute-field').hasClass('scopable')) {
        wysiwyg.init($(this));
      }
    });
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 85392:
/*!************************************************!*\
  !*** ./public/bundles/pimui/js/pim-wysiwyg.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This class is used to manage wysiwyg
 *
 * @author    Willy Mesnage <willy.mesnage@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! summernote */ 73310)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone) {
  /**
   * Wysiwyg editor default configuration
   */
  var config = {
    disableResizeEditor: true,
    height: 200,
    iconPrefix: 'icon-',
    toolbar: [['font', ['bold', 'italic', 'underline', 'clear']], ['para', ['ul', 'ol']], ['insert', ['link']], ['view', ['codeview']]],
    prettifyHtml: false
  };
  Backbone.Router.prototype.on('route', function () {
    $('textarea.wysiwyg').each(function () {
      $(this).destroy();
    });
  });
  return {
    /**
     * Wysiwyg editor settings
     */
    settings: [],

    /**
     * Initialise the wysiwyg
     *
     * @param {jquery} $el
     * @param {Array}  options
     *
     * @returns {Object}
     */
    init: function init($el, options) {
      this.settings = _.extend(_.clone(config), options);
      $el.summernote(this.settings);
      return this;
    },

    /**
     * Put the wysiwyg in readonly mode for the given element
     *
     * @param {jquery} $el
     *
     * @returns {Object}
     */
    readonly: function readonly($el) {
      var editable = $el.parent().find('.note-editable');
      editable.attr('contenteditable', false);
      return this;
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13446:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/add-child.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Modal to create a product model child.
 *
 * @author    Damien Carcel <damien.carcel@akeneo.com>
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/template/product-model-edit-form/add-child-form */ 22188)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, Routing, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var illustrationClass = this.getIllustrationClass();
      this.$el.html(this.template({
        illustrationClass: illustrationClass,
        okText: __('pim_common.save')
      }));
      this.renderExtensions();
    },

    /**
     * Get the correct illustration class for products or product models
     *
     * @return {String}
     */
    getIllustrationClass: function getIllustrationClass() {
      var formData = this.getFormData();
      var hasFamilyVariant = formData.hasOwnProperty('family_variant');
      return hasFamilyVariant ? 'product-model' : 'products';
    },

    /**
     * Save the product model child in the backend.
     *
     * @param {String} route
     *
     * @return {Promise}
     */
    saveProductModelChild: function saveProductModelChild(route) {
      var _this = this;

      this.trigger('pim_enrich:form:entity:pre_save');
      return $.post(Routing.generate(route), JSON.stringify(this.getFormData())).fail(function (xhr) {
        _this.trigger('pim_enrich:form:entity:validation_error', xhr.responseJSON.values);
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 4330:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/add-child/fields-container.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Form container for the axis fields of the product model child creation modal.
 *
 * @author    Damien Carcel <damien.carcel@akeneo.com>
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/template/product-model-edit-form/add-child-form-fields-container */ 46126)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseForm, $, _, __, i18n, Routing, UserContext, FetcherRegistry, FormBuilder, template) {
  return BaseForm.extend({
    template: _.template(template),
    globalErrors: [],
    errors: [],

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = _.defaults(meta.config, {
        fieldModules: {},
        codeFieldModule: null
      });
      this.globalErrors = [];
      this.errors = [];
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', function (errors) {
        _this.errors = errors;
        _this.globalErrors = errors.filter(function (error) {
          return undefined === error.attribute;
        });

        _this.render();
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this2 = this;

      var parentCode = this.getFormData().parent;
      this.$el.html(this.template({
        errors: this.globalErrors
      }));
      FetcherRegistry.getFetcher('product-model-by-code').fetch(parentCode).then(function (parent) {
        FetcherRegistry.getFetcher('family-variant').fetch(parent.family_variant).then(function (familyVariant) {
          var currentLevel = parent.meta.level + 1;
          var isVariantProduct = currentLevel === familyVariant.variant_attribute_sets.length;

          _this2.getAxesAttributes(familyVariant, currentLevel).then(function (axesAttributes) {
            return $.when.apply($, axesAttributes.map(function (attribute) {
              return _this2.createAttributeField(attribute, true);
            }));
          }).then(function () {
            for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {
              fields[_key] = arguments[_key];
            }

            fields.sort(function (fieldA, fieldB) {
              return fieldA.getLabel() > fieldB.getLabel() ? 1 : -1;
            });

            if (isVariantProduct) {
              return FetcherRegistry.getFetcher('attribute').getIdentifierAttribute().then(function (identifier) {
                var _familyAttributes$fin;

                var familyAttributes = familyVariant.variant_attribute_sets.flatMap(function (_ref) {
                  var attributes = _ref.attributes;
                  return attributes;
                });
                var hasSkuInFamilyAttributes = ((_familyAttributes$fin = familyAttributes.find(function (item) {
                  return item === identifier.code;
                })) === null || _familyAttributes$fin === void 0 ? void 0 : _familyAttributes$fin.length) > 0;

                if (hasSkuInFamilyAttributes) {
                  return _this2.createAttributeField(identifier, false).then(function (identifierField) {
                    return fields.concat(identifierField);
                  });
                } else {
                  return fields;
                }
              });
            }

            return _this2.createProductModelCodeField().then(function (codeField) {
              return fields.concat(codeField);
            });
          }).then(function (fields) {
            var position = 100;
            fields.forEach(function (field) {
              _this2.addExtension(field.code, field, 'content', position++);
            });
            $.when.apply(_this2, fields.map(function (field) {
              return field.configure();
            })).then(function () {
              _this2.renderExtensions();

              _this2.showErrors();
            });
          });
        });
      });
    },

    /**
     * Render validation errors for fields after field extensions are loaded
     */
    showErrors: function showErrors() {
      this.getRoot().trigger('pim_enrich:form:entity:bad_request', {
        sentData: this.getFormData(),
        response: this.errors
      });
    },

    /**
     * Looks for the attributes set corresponding to the specified level of the family variant
     * and fetches its axes attributes.
     *
     * @param {Object} familyVariant
     * @param {Number} level
     *
     * @returns {Promise}
     */
    getAxesAttributes: function getAxesAttributes(familyVariant, level) {
      var variantAttributeSets = familyVariant.variant_attribute_sets;
      var variantAttributeSetForLevel = variantAttributeSets.find(function (variantAttributeSet) {
        return variantAttributeSet.level === level;
      });
      return FetcherRegistry.getFetcher('attribute').fetchByIdentifiers(variantAttributeSetForLevel.axes);
    },

    /**
     * Instantiate a field view corresponding to an attribute.
     * The "field_type" of the attribute must be mapped to a view key in the config of this module.
     * The meta under this key is then modified on-the-fly before instantiation using attribute
     * code to make the field unique.
     *
     * This logic could be extracted to a factory later.
     *
     * @param {Object}  attribute
     * @param {boolean} isAxis
     *
     * @returns {Promise}
     */
    createAttributeField: function createAttributeField(attribute, isAxis) {
      var fieldModuleName = this.config.fieldModules[attribute.field_type];

      if (undefined === fieldModuleName) {
        throw new Error('No module set for field type "' + attribute.field_type + '"');
      }

      return FormBuilder.getFormMeta(fieldModuleName).then(function (formMeta) {
        var newFormMeta = $.extend(true, {}, formMeta);
        newFormMeta.code += "-".concat(attribute.code);
        newFormMeta.config.fieldName = "values.".concat(attribute.code);
        newFormMeta.config.label = i18n.getLabel(attribute.labels, UserContext.get('catalogLocale'), attribute.code);

        if (isAxis) {
          newFormMeta.config.requiredLabel = 'pim_enrich.entity.product_model.module.variant_axis.required_label';
        }

        return FormBuilder.buildForm(newFormMeta);
      }).then(function (field) {
        if ('pim_reference_data_simpleselect' === attribute.type) {
          return FetcherRegistry.getFetcher('reference-data-configuration').fetchAll().then(function (config) {
            field.setChoiceUrl(Routing.generate('pim_ui_ajaxentity_list', {
              "class": config[attribute.reference_data_name]["class"],
              dataLocale: UserContext.locale,
              collectionId: attribute.id,
              options: {
                type: 'code'
              }
            }));
            return field;
          });
        }

        if ('pim_catalog_metric' === attribute.type) {
          field.setMetricFamily(attribute.metric_family);
          field.setDefaultMetricUnit(attribute.default_metric_unit);
        }

        if ('pim_catalog_simpleselect' === attribute.type) {
          field.setChoiceUrl(Routing.generate('pim_enrich_attributeoption_get', {
            identifier: attribute.code
          }));
        }

        return field;
      });
    },

    /**
     * Instantiates a field view corresponding to the product model code.
     *
     * @returns {Promise}
     */
    createProductModelCodeField: function createProductModelCodeField() {
      return FormBuilder.getFormMeta(this.config.codeFieldModule).then(function (formMeta) {
        var newFormMeta = $.extend(true, {}, formMeta);
        newFormMeta.config.fieldName = 'code';
        return FormBuilder.buildForm(newFormMeta);
      }).then(function (field) {
        return field.configure().then(function () {
          return field;
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 80447:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/add-child/header.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Form header of the product model child creation modal.
 *
 * @author    Damien Carcel <damien.carcel@akeneo.com>
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/product-model-edit-form/add-child-form-header */ 80747)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseForm, $, _, __, i18n, UserContext, FetcherRegistry, template) {
  return BaseForm.extend({
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      var parentCode = this.getFormData().parent;
      FetcherRegistry.getFetcher('product-model-by-code').fetch(parentCode).then(function (parent) {
        FetcherRegistry.getFetcher('family-variant').fetch(parent.family_variant).then(function (familyVariant) {
          _this.getAxesAttributes(familyVariant, parent.meta.level + 1).then(function (axesAttributes) {
            var catalogLocale = UserContext.get('catalogLocale');
            var axesLabels = axesAttributes.map(function (attribute) {
              return i18n.getLabel(attribute.labels, catalogLocale, attribute.code);
            });

            _this.$el.html(_this.template({
              __: __,
              axes: axesLabels.sort().join(', '),
              axesCount: axesLabels.length
            }));
          });
        });
      });
    },

    /**
     * Looks for the attributes set corresponding to the specified level of the family variant
     * and fetches its axes attributes.
     *
     * @param {Object} familyVariant
     * @param {Number} level
     *
     * @returns {Promise}
     */
    getAxesAttributes: function getAxesAttributes(familyVariant, level) {
      var variantAttributeSets = familyVariant.variant_attribute_sets;
      var variantAttributeSetForLevel = variantAttributeSets.find(function (variantAttributeSet) {
        return variantAttributeSet.level === level;
      });
      return FetcherRegistry.getFetcher('attribute').fetchByIdentifiers(variantAttributeSetForLevel.axes);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 1153:
/*!********************************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/complete-variant-product.js ***!
  \********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * On a Product Model Edit Form, this module displays number of product variant in the subtree of this Product Model,
 * eg: 2 / 10.
 *
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product-model/complete-variant-product */ 96905), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template, UserContext) {
  return BaseForm.extend({
    className: 'AknButtonList-item',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      UserContext.off('change:catalogLocale change:catalogScope', this.render);
      this.listenTo(UserContext, 'change:catalogLocale change:catalogScope', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var variantProductCompleteness = this.getFormData().meta.variant_product_completenesses;
      var completenesses = variantProductCompleteness.completenesses;
      var channel = UserContext.get('catalogScope');
      var locale = UserContext.get('catalogLocale');
      var totalProducts = variantProductCompleteness.total;
      var completeProducts = 0;

      if (_.has(completenesses, channel) && _.has(completenesses[channel], locale)) {
        completeProducts = completenesses[channel][locale];
      }

      this.$el.html(this.template({
        color: this.badgeCssClass(completeProducts, totalProducts),
        label: this.badgeLabel(),
        ratio: this.ratioLabel(completeProducts, totalProducts)
      }));
    },

    /**
     * Return the color of the badge
     *
     * @param {int} completeProducts
     * @param {int} totalProducts
     *
     * @returns {string}
     */
    badgeCssClass: function badgeCssClass(completeProducts, totalProducts) {
      var ratio = completeProducts / totalProducts;
      var color = 'warning';

      if (1 === ratio) {
        color = 'success';
      } else if (0 === ratio || 0 === totalProducts) {
        color = 'important';
      }

      return color;
    },

    /**
     * Return the label of the badge
     *
     * @returns {string}
     */
    badgeLabel: function badgeLabel() {
      return __('pim_enrich.entity.product_model.module.completeness.label');
    },
    ratioLabel: function ratioLabel(completeProducts, totalProducts) {
      return "".concat(completeProducts, " / ").concat(totalProducts);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 84948:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/creation/variant.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * A select2 field displaying family variants dependent on the family field in the same parent form.
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/form/common/fields/simple-select-async */ 29915)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, FetcherRegistry, Routing, UserContext, SimpleSelectAsync) {
  return SimpleSelectAsync.extend({
    previousFamily: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      SimpleSelectAsync.prototype.initialize.apply(this, arguments);
      this.previousFamily = null;
      this.readOnly = true;
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.onPostUpdate.bind(this));
      return SimpleSelectAsync.prototype.configure.apply(this, arguments);
    },

    /**
     * Updates the choice URL when the model changed
     */
    onPostUpdate: function onPostUpdate() {
      var _this = this;

      if (this.getFormData().family !== this.previousFamily) {
        this.previousFamily = this.getFormData().family;

        if (this.getFormData().family) {
          this.getFamilyIdFromCode(this.getFormData().family).then(function (familyId) {
            _this.setChoiceUrl(Routing.generate(_this.config.loadUrl, {
              family_id: familyId
            }));

            _this.readOnly = false;

            _this.setData(_defineProperty({}, _this.fieldName, null));

            _this.render();
          });
        } else {
          this.readOnly = true;
          this.setData(_defineProperty({}, this.fieldName, null));
          this.render();
        }
      }
    },

    /**
     * Get the id for a given family code
     *
     * @param {String} code
     *
     * @return {Promise}
     */
    getFamilyIdFromCode: function getFamilyIdFromCode(code) {
      return FetcherRegistry.getFetcher('family').fetch(code).then(function (family) {
        return family.meta.id;
      });
    },

    /**
     * Get the label of a family variant from its code
     *
     * @param {String} code
     *
     * @return {Promise}
     */
    getFamilyVariantLabelFromCode: function getFamilyVariantLabelFromCode(code) {
      return FetcherRegistry.getFetcher('family-variant').fetch(code).then(function (familyVariant) {
        return familyVariant.labels[UserContext.get('catalogLocale')] || "[".concat(familyVariant.code, "]");
      });
    },

    /**
     * {@inheritdoc}
     */
    select2InitSelection: function select2InitSelection(element, callback) {
      var id = $(element).val();

      if ('' !== id) {
        this.getFamilyVariantLabelFromCode(id).then(function (label) {
          callback({
            id: id,
            text: label
          });
        });
      }
    },

    /**
     * {@inheritdoc}
     *
     * We override this method to automatically select the first element when there is only 1 choice
     */
    postRender: function postRender() {
      var _this2 = this;

      SimpleSelectAsync.prototype.postRender.apply(this, arguments);

      if (!this.getFormData()[this.fieldName] && this.choiceUrl) {
        $.getJSON(this.choiceUrl, this.select2Data.bind(this)).then(function (response) {
          var results = _this2.select2Results(response).results;

          if (results.length === 1) {
            _this2.setData(_defineProperty({}, _this2.fieldName, results[0].id));

            _this2.$('.select2').select2('val', results[0].id);
          } else {
            _this2.setData(_defineProperty({}, _this2.fieldName, null));

            _this2.$('.select2').select2('val', '');
          }
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62822:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/delete.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete product model extension
 *
 * @author    Florian Klein (florian.klein@akeneo.com)
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/product-model */ 69245)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, ProductModelRemover) {
  return DeleteForm.extend({
    remover: ProductModelRemover,

    /**
     * {@inheritdoc}
     */
    getIdentifier: function getIdentifier() {
      return this.getFormData().meta.id;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 45917:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/product-model-label.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Product model label extension
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/label */ 8709), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Label, UserContext) {
  return Label.extend({
    /**
     * Provide the object label
     * @return {String}
     */
    getLabel: function getLabel() {
      var meta = this.getFormData().meta;

      if (meta && meta.label) {
        return meta.label[UserContext.get('catalogLocale')];
      }

      return this.getFormData().identifier;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 74900:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/product-model/form/save.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/save */ 21153), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/saver/product-model */ 19894), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseSave, messenger, ProductModelSaver, FieldManager, i18n, UserContext, analytics) {
  return BaseSave.extend({
    updateSuccessMessage: __('pim_enrich.entity.product_model.flash.update.success'),
    updateFailureMessage: __('pim_enrich.entity.product_model.flash.update.fail'),
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:update-association', this.save);
      return BaseSave.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    save: function save(options) {
      var productModel = $.extend(true, {}, this.getFormData());
      var productModelId = productModel.meta.id;
      delete productModel.meta;
      delete productModel.family;
      var notReadyFields = FieldManager.getNotReadyFields();

      if (0 < notReadyFields.length) {
        var fieldLabels = _.map(notReadyFields, function (field) {
          return i18n.getLabel(field.attribute.label, UserContext.get('catalogLocale'), field.attribute.code);
        });

        messenger.notify('error', __('pim_enrich.entity.product_model.flash.update.fields_not_ready', {
          fields: fieldLabels.join(', ')
        }));
        return;
      }

      this.showLoadingMask();
      this.getRoot().trigger('pim_enrich:form:entity:pre_save');
      analytics.track('product-model:form:saved', {
        code: productModel.code
      });
      return ProductModelSaver.save(productModelId, productModel).then(function (data) {
        this.postSave();
        this.setData(data, options);
        this.getRoot().trigger('pim_enrich:form:entity:post_fetch', data);
      }.bind(this)).fail(this.fail.bind(this)).always(this.hideLoadingMask.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 4206:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/product/field-manager.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Field manager
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/form-config-provider */ 91598), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, FetcherRegistry, ConfigProvider, requireContext) {
  var fields = {};
  var visibleFields = {};
  var loadedModules = {};
  /**
   * Create a field view for the given attribute
   *
   * @param {Object} attribute
   *
   * @return {View}
   */

  var getFieldForAttribute = function getFieldForAttribute(attribute) {
    var deferred = $.Deferred();

    if (loadedModules[attribute.field_type]) {
      deferred.resolve(loadedModules[attribute.field_type]);
      return deferred.promise();
    }

    ConfigProvider.getAttributeFields().done(function (attributeFields) {
      var fieldModule = attributeFields[attribute.field_type];

      if (!fieldModule) {
        throw new Error('No field defined for attribute type "' + attribute.field_type + '"');
      }

      var ResolvedModule = requireContext(fieldModule);
      loadedModules[attribute.field_type] = ResolvedModule;
      deferred.resolve(ResolvedModule);
    });
    return deferred.promise();
  };

  return {
    /**
     * Get the field view for the given attribute code
     *
     * @param {string} attributeCode
     *
     * @return {View}
     */
    getField: function getField(attributeCode) {
      var deferred = $.Deferred();

      if (fields[attributeCode]) {
        deferred.resolve(fields[attributeCode]);
        return deferred.promise();
      }

      FetcherRegistry.getFetcher('attribute').fetch(attributeCode).done(function (attribute) {
        getFieldForAttribute(attribute).done(function (Field) {
          fields[attributeCode] = new Field(attribute);
          deferred.resolve(fields[attributeCode]);
        });
      });
      return deferred.promise();
    },

    /**
     * Get all the fields that are not ready (for example media fields that are currently uploading)
     *
     * @return {array}
     */
    getNotReadyFields: function getNotReadyFields() {
      return Object.values(fields).filter(function (field) {
        return !field.isReady();
      });
    },

    /**
     * Get all the cached fields
     *
     * @return {array}
     */
    getFields: function getFields() {
      return fields;
    },

    /**
     * Add a field to the collection of currently displayed fields
     *
     * @param {string} attributeCode
     */
    addVisibleField: function addVisibleField(attributeCode) {
      visibleFields[attributeCode] = fields[attributeCode];
    },

    /**
     * Get all visible fields
     *
     * @return {[type]}
     */
    getVisibleFields: function getVisibleFields() {
      return visibleFields;
    },

    /**
     * Clear the field collection
     */
    clearFields: function clearFields() {
      fields = {};
      this.clearVisibleFields();
    },

    /**
     * Clear the displayed field collection
     */
    clearVisibleFields: function clearVisibleFields() {
      visibleFields = {};
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 92401:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/date-field.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Date field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/template/product/field/date */ 33915), __webpack_require__(/*! datepicker */ 83586), __webpack_require__(/*! pim/date-context */ 24846)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Field, _, fieldTemplate, Datepicker, DateContext) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change .field-input:first input[type="text"]': 'updateModel',
      'click .field-input:first input[type="text"]': 'click'
    },
    datetimepickerOptions: {
      format: DateContext.get('date').format,
      defaultFormat: DateContext.get('date').defaultFormat,
      language: DateContext.get('language')
    },
    renderInput: function renderInput(context) {
      return this.fieldTemplate(context);
    },
    click: function click(event) {
      var clickedElement = $(event.currentTarget).parent();
      var picker = this.$('.datetimepicker');
      Datepicker.init(picker, this.datetimepickerOptions);
      clickedElement.datetimepicker('show');
      picker.on('changeDate', function (e) {
        this.setCurrentValue(this.$(e.target).find('input[type="text"]').val());
      }.bind(this));
    },
    updateModel: function updateModel() {
      var data = this.$('.field-input:first input[type="text"]').val();
      data = '' === data ? this.attribute.empty_value : data;
      this.setCurrentValue(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62494:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/field.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Field abstract class
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/template/product/field/field */ 43588), __webpack_require__(/*! pim/template/product/field/field-guidelines */ 4241), __webpack_require__(/*! pim/attribute-manager */ 41700), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Backbone, _, fieldTemplate, guidelinesTemplate, AttributeManager, i18n, mediator, analytics) {
  var FieldModel = Backbone.Model.extend({
    values: []
  });
  return Backbone.View.extend({
    tagName: 'div',
    className: 'AknComparableFields field-container',
    options: {},
    attributes: function attributes() {
      return {
        'data-attribute': this.options ? this.options.code : null
      };
    },
    attribute: null,
    context: {},
    model: FieldModel,
    template: _.template(fieldTemplate),
    guidelinesTemplate: _.template(guidelinesTemplate),
    elements: {},
    editable: true,
    ready: true,
    valid: true,
    locked: false,

    /**
     * Initialize this field
     *
     * @param {Object} attribute
     *
     * @returns {Object}
     */
    initialize: function initialize(attribute) {
      this.attribute = attribute;
      this.model = new FieldModel({
        values: []
      });
      this.elements = {};
      this.context = {};
      return this;
    },

    /**
     * Render this field
     *
     * @returns {Object}
     */
    render: function render() {
      this.setEditable(!this.locked);
      this.setValid(true);
      this.elements = {};
      var promises = [];
      mediator.trigger('pim_enrich:form:field:extension:add', {
        field: this,
        promises: promises
      });

      if (this.attribute.guidelines[this.context.guidelinesLocale]) {
        this.addElement('footer', 'guidelines', this.guidelinesTemplate({
          guidelines: this.attribute.guidelines[this.context.guidelinesLocale]
        }));
      }

      $.when.apply($, promises).then(this.getTemplateContext.bind(this)).then(function (templateContext) {
        this.$el.html(this.template(templateContext));
        this.$('.original-field .field-input').append(this.renderInput(templateContext));
        this.renderElements();
        this.postRender();
        this.delegateEvents();
      }.bind(this));
      return this;
    },

    /**
     * Render elements of this field in different available positions
     */
    renderElements: function renderElements() {
      var _this = this;

      Object.keys(this.elements).sort().forEach(function (position) {
        var $container = 'field-input' === position ? _this.$('.original-field .field-input') : _this.$('.' + position + '-elements-container');
        $container.empty();
        Object.keys(_this.elements[position]).sort().forEach(function (elementKey) {
          var element = _this.elements[position][elementKey];

          if (typeof element.render === 'function') {
            $container.append(element.render().$el);
          } else {
            $container.append(element);
          }
        });
      });
    },

    /**
     * Render the input inside the field area
     *
     * @throws {Error} if this method is not implemented
     */
    renderInput: function renderInput() {
      throw new Error('You should implement your field template');
    },

    /**
     * Is called after rendering the input
     */
    postRender: function postRender() {},

    /**
     * Render this input in copy mode
     *
     * @param {Object} value
     *
     * @returns {Promise}
     */
    renderCopyInput: function renderCopyInput(value) {
      return this.getTemplateContext().then(function (context) {
        if (undefined === value) {
          return null;
        }

        var copyContext = $.extend(true, {}, context);
        copyContext.value = value;
        copyContext.context.locale = value.locale;
        copyContext.context.scope = value.scope;
        copyContext.editMode = 'view';
        return this.renderInput(copyContext, true);
      }.bind(this));
    },

    /**
     * Get the template context
     *
     * @returns {Promise}
     */
    getTemplateContext: function getTemplateContext() {
      var deferred = $.Deferred();
      deferred.resolve({
        type: this.attribute.field_type,
        label: this.getLabel(),
        value: this.getCurrentValue(),
        fieldId: 'field-' + Math.random().toString(10).substring(2),
        context: this.context,
        attribute: this.attribute,
        info: this.elements,
        editMode: this.getEditMode(),
        i18n: i18n,
        locale: this.attribute.localizable ? this.context.locale : null,
        scope: this.attribute.scopable ? this.context.scope : null
      });
      return deferred.promise();
    },

    /**
     * Update the model linked to this field
     */
    updateModel: function updateModel() {
      this.valid = true;
    },

    /**
     * Set values to the model linked to this field
     *
     * @param {Array} values
     */
    setValues: function setValues(values) {
      if (_.isUndefined(values) || values.length === 0) {
        console.error('Value array is empty');
      }

      this.model.set('values', values);
    },

    /**
     * Set the context of this field
     *
     * @param {Object} context
     */
    setContext: function setContext(context) {
      this.context = context;
    },

    /**
     * Add an element to this field block
     *
     * @param {string} position 'footer', 'label' or 'comparison'
     * @param {string} code
     * @param {Object} element
     */
    addElement: function addElement(position, code, element) {
      if (!this.elements[position]) {
        this.elements[position] = {};
      }

      this.elements[position][code] = element;
    },

    /**
     * Remove an element of this field block, with the given position & code
     *
     * @param {string} position
     * @param {string} code
     */
    removeElement: function removeElement(position, code) {
      if (this.elements[position] && this.elements[position][code]) {
        delete this.elements[position][code];

        if (_.isEmpty(this.elements[position])) {
          delete this.elements[position];
        }
      }
    },

    /**
     * Set as valid
     *
     * @param {boolean} valid
     */
    setValid: function setValid(valid) {
      this.valid = valid;
    },

    /**
     * Return whether is valid
     *
     * @returns {boolean}
     */
    isValid: function isValid() {
      return this.valid;
    },

    /**
     * Set the focus on the input of this field
     */
    setFocus: function setFocus() {
      this.$('input:first').focus();
    },

    /**
     * Set this field as editable
     *
     * @param {boolean} editable
     */
    setEditable: function setEditable(editable) {
      this.editable = editable;
    },

    /**
     * Set this field as locked
     *
     * @param {boolean} locked
     */
    setLocked: function setLocked(locked) {
      this.locked = locked;
    },

    /**
     * Return whether this field is editable
     *
     * @returns {boolean}
     */
    isEditable: function isEditable() {
      return this.editable;
    },

    /**
     * Set this field as ready
     *
     * @param {boolean} ready
     */
    setReady: function setReady(ready) {
      this.ready = ready;
    },

    /**
     * Return whether this field is ready
     *
     * @returns {boolean}
     */
    isReady: function isReady() {
      return this.ready;
    },

    /**
     * Get the current edit mode (can be 'edit' or 'view')
     *
     * @returns {string}
     */
    getEditMode: function getEditMode() {
      if (this.editable) {
        return 'edit';
      } else {
        return 'view';
      }
    },

    /**
     * Return whether this field can be seen
     *
     * @returns {boolean}
     */
    canBeSeen: function canBeSeen() {
      return true;
    },

    /**
     * Get current model value for this field, in this format:
     * {locale: 'en_US', scope: null, data: 'stuff'}
     *
     * @returns {Object}
     */
    getCurrentValue: function getCurrentValue() {
      return AttributeManager.getValue(this.model.get('values'), this.attribute, this.context.locale, this.context.scope);
    },

    /**
     * Set current model value for this field
     *
     * @param {*} value
     */
    setCurrentValue: function setCurrentValue(value) {
      var productValue = this.getCurrentValue();

      if (undefined === productValue) {
        return;
      }

      productValue.data = value;
      mediator.trigger('pim_enrich:form:entity:update_state');
      analytics.track('product:attribute-value:updated', {
        value: value,
        attribute: this.attribute.code
      });
    },

    /**
     * Get the label of this field (default is code surrounded by brackets)
     *
     * @returns {string}
     */
    getLabel: function getLabel() {
      return i18n.getLabel(this.attribute.labels, this.context.uiLocale, this.attribute.code);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29043:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/media-field.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Media field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/attribute-manager */ 41700), __webpack_require__(/*! pim/template/product/field/media */ 90196), __webpack_require__(/*! pim/dialog */ 42905), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/media-url-generator */ 72689), __webpack_require__(/*! jquery.slimbox */ 22574)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Field, _, Routing, AttributeManager, fieldTemplate, Dialog, mediator, messenger, MediaUrlGenerator) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change .edit .field-input:first input[type="file"]': 'updateModel',
      'click  .clear-field': 'clearField',
      'click  .open-media': 'previewImage'
    },
    uploadContext: {},
    renderInput: function renderInput(context) {
      return this.fieldTemplate(context);
    },
    getTemplateContext: function getTemplateContext() {
      return Field.prototype.getTemplateContext.apply(this, arguments).then(function (templateContext) {
        templateContext.inUpload = !this.isReady();
        templateContext.mediaUrlGenerator = MediaUrlGenerator;
        return templateContext;
      }.bind(this));
    },
    renderCopyInput: function renderCopyInput(value) {
      return this.getTemplateContext().then(function (context) {
        var copyContext = $.extend(true, {}, context);
        copyContext.value = value;
        copyContext.context.locale = value.locale;
        copyContext.context.scope = value.scope;
        copyContext.editMode = 'view';
        copyContext.mediaUrlGenerator = MediaUrlGenerator;
        return this.renderInput(copyContext);
      }.bind(this));
    },
    updateModel: function updateModel() {
      if (!this.isReady()) {
        Dialog.alert(_.__('pim_enrich.entity.product.flash.update.already_in_upload', {
          locale: this.context.locale,
          scope: this.context.scope
        }));
      }

      var input = this.$('.edit .field-input:first input[type="file"]').get(0);

      if (!input || 0 === input.files.length) {
        return;
      }

      var formData = new FormData();
      formData.append('file', input.files[0]);
      this.setReady(false);
      this.uploadContext = {
        locale: this.context.locale,
        scope: this.context.scope
      };
      $.ajax({
        url: Routing.generate('pim_enrich_media_rest_post'),
        type: 'POST',
        data: formData,
        contentType: false,
        cache: false,
        processData: false,
        xhr: function () {
          var myXhr = $.ajaxSettings.xhr();

          if (myXhr.upload) {
            myXhr.upload.addEventListener('progress', this.handleProcess.bind(this), false);
          }

          return myXhr;
        }.bind(this)
      }).done(function (data) {
        this.setUploadContextValue(data);
        this.render();
      }.bind(this)).fail(function (xhr) {
        var message = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : _.__('pim_enrich.entity.product.flash.update.file_upload');
        messenger.notify('error', message);
      }).always(function () {
        this.$('> .akeneo-media-uploader-field .progress').css({
          opacity: 0
        });
        this.setReady(true);
        this.uploadContext = {};
      }.bind(this));
    },
    clearField: function clearField() {
      this.setCurrentValue({
        filePath: null,
        originalFilename: null
      });
      this.render();
    },
    handleProcess: function handleProcess(e) {
      if (this.uploadContext.locale === this.context.locale && this.uploadContext.scope === this.context.scope) {
        this.$('> .akeneo-media-uploader-field .progress').css({
          opacity: 1
        });
        this.$('> .akeneo-media-uploader-field .progress .bar').css({
          width: e.loaded / e.total * 100 + '%'
        });
      }
    },
    previewImage: function previewImage() {
      var mediaUrl = MediaUrlGenerator.getMediaShowUrl(this.getCurrentValue().data.filePath, 'preview');

      if (mediaUrl) {
        $.slimbox(mediaUrl, '', {
          overlayOpacity: 0.3
        });
      }
    },
    setUploadContextValue: function setUploadContextValue(value) {
      var productValue = AttributeManager.getValue(this.model.get('values'), this.attribute, this.uploadContext.locale, this.uploadContext.scope);
      productValue.data = value;
      mediator.trigger('pim_enrich:form:entity:update_state');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 6630:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/metric-field.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Metric field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/product/field/metric */ 25676), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Field, _, __, FetcherRegistry, fieldTemplate, initSelect2, i18n, UserContext) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change .field-input:first .data, .field-input:first .unit': 'updateModel'
    },
    renderInput: function renderInput(context) {
      var $element = $(this.fieldTemplate(_.extend({}, context, {
        __: __
      })));
      initSelect2.init($element.find('.unit'));
      return $element;
    },
    getTemplateContext: function getTemplateContext() {
      return $.when(Field.prototype.getTemplateContext.apply(this, arguments), FetcherRegistry.getFetcher('measure').fetchAll()).then(function (templateContext, measures) {
        var measurementFamily = measures.find(function (family) {
          return family.code === templateContext.attribute.metric_family;
        });
        templateContext.i18n = i18n;
        templateContext.units = measurementFamily.units;
        templateContext.uiLocale = UserContext.get('uiLocale');
        return templateContext;
      });
    },
    setFocus: function setFocus() {
      this.$('.data:first').focus();
    },
    updateModel: function updateModel() {
      var amount = this.$('.field-input:first .data').val();
      var unit = this.$('.field-input:first .unit').select2('val');
      this.setCurrentValue({
        unit: '' !== unit ? unit : this.attribute.default_metric_unit,
        amount: '' !== amount ? amount : null
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 22088:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/multi-select-field.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Multi select field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/template/product/field/multi-select */ 38638), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/attribute-option/create */ 16326), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/attribute-manager */ 41700)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Field, _, fieldTemplate, Routing, _createOption, SecurityContext, initSelect2, UserContext, i18n, AttributeManager) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    choicePromise: null,
    promiseIdentifiers: null,
    choiceUrl: null,
    events: {
      'change .field-input:first input.select-field': 'updateModel',
      'click .add-attribute-option': 'createOption'
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      return Field.prototype.getTemplateContext.apply(this, arguments).then(function (templateContext) {
        var isAllowed = SecurityContext.isGranted('pim_enrich_attribute_edit');
        templateContext.userCanAddOption = this.editable && isAllowed;
        return templateContext;
      }.bind(this));
    },

    /**
     * Create a new option for this multi select field
     */
    createOption: function createOption() {
      if (!SecurityContext.isGranted('pim_enrich_attribute_edit')) {
        return;
      }

      _createOption(this.attribute).then(function (option) {
        if (this.isEditable()) {
          var value = this.getCurrentValue().data;
          value.push(option.code);
          this.setCurrentValue(value);
        }

        this.choicePromise = null;
        this.render();
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(context) {
      return this.fieldTemplate(context);
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('[data-toggle="tooltip"]').tooltip();
      this.getChoiceUrl().then(function (choiceUrl) {
        var options = {
          ajax: {
            url: choiceUrl,
            quietMillis: 250,
            cache: true,
            data: function (term, page) {
              return {
                search: term,
                options: {
                  limit: 20,
                  page: page,
                  catalogLocale: UserContext.get('catalogLocale')
                }
              };
            }.bind(this),
            results: function (response) {
              if (response.results) {
                response.more = 20 === _.keys(response.results).length;
                return response;
              }

              var data = {
                more: 20 === _.keys(response).length,
                results: []
              };

              _.each(response, function (value) {
                data.results.push(this.convertBackendItem(value));
              }.bind(this));

              return data;
            }.bind(this)
          },
          initSelection: function (element, callback) {
            var identifiers = AttributeManager.getValue(this.model.attributes.values, this.attribute, UserContext.get('catalogLocale'), UserContext.get('catalogScope')).data;

            if (null === this.choicePromise || this.promiseIdentifiers !== identifiers || this.choiceUrl !== choiceUrl) {
              this.choiceUrl = choiceUrl;
              this.choicePromise = $.post(choiceUrl, {
                options: {
                  identifiers: identifiers
                }
              });
              this.promiseIdentifiers = identifiers;
            }

            this.choicePromise.then(function (results) {
              if (_.has(results, 'results')) {
                results = results.results;
              } // PIM-10418: the selected codes could be in the wrong case. We need to fix them otherwise select2
              // is lost between code with good/wrong cases.


              var sanitizedValues = _.map($(element).val().split(','), function (choice) {
                var option = _.find(results, function (result) {
                  var _result$code;

                  return choice.toLowerCase() === ((_result$code = result.code) !== null && _result$code !== void 0 ? _result$code : '').toLowerCase();
                });

                if (option) {
                  if (option.code !== choice) {
                    return option.code;
                  }
                }

                return choice;
              }.bind(this)).join(',');

              if ($(element).val() !== sanitizedValues) {
                $(element).val(sanitizedValues);
              }

              var choices = _.map($(element).val().split(','), function (choice) {
                var option = _.findWhere(results, {
                  code: choice
                });

                if (option) {
                  return this.convertBackendItem(option);
                }

                return _.findWhere(results, {
                  id: choice
                });
              }.bind(this));

              callback(_.compact(choices));
            }.bind(this));
          }.bind(this),
          formatSelection: function formatSelection(data, container) {
            container.attr('title', data.text).text(data.text);
          },
          multiple: true
        };
        initSelect2.init(this.$('input.select-field'), options);
      }.bind(this));
    },

    /**
     * Get the URL to retrieve the choice list for this select field
     *
     * @returns {Promise}
     */
    getChoiceUrl: function getChoiceUrl() {
      return $.Deferred().resolve(Routing.generate('pim_enrich_attributeoption_get', {
        identifier: this.attribute.code
      })).promise();
    },

    /**
     * {@inheritdoc}
     */
    updateModel: function updateModel() {
      var data = this.$('.field-input:first input.select-field').val().split(',');

      if (1 === data.length && '' === data[0]) {
        data = [];
      }

      this.choicePromise = null;
      this.setCurrentValue(data);
    },

    /**
     * Convert the item returned from the backend to fit select2 needs
     *
     * @param {object} item
     *
     * @return {object}
     */
    convertBackendItem: function convertBackendItem(item) {
      return {
        id: item.code,
        text: i18n.getLabel(item.labels, UserContext.get('catalogLocale'), item.code)
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 33071:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/number-field.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Number field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/template/product/field/number */ 39341)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Field, _, fieldTemplate) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change .field-input:first input[type="text"]': 'updateModel'
    },
    renderInput: function renderInput(context) {
      return this.fieldTemplate(context);
    },
    updateModel: function updateModel() {
      var data = this.$('.field-input:first input[type="text"]').val();

      if ('' === data) {
        data = this.attribute.empty_value;
      }

      this.setCurrentValue(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 6262:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/price-collection-field.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Price collection field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/product/field/price-collection */ 76877)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Field, _, FetcherRegistry, fieldTemplate) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change .field-input:first input[type="text"]': 'updateModel'
    },
    renderInput: function renderInput(context) {
      if (undefined === context.value) {
        return null;
      }

      context.value.data = _.sortBy(context.value.data, 'currency');
      return this.fieldTemplate(context);
    },
    updateModel: function updateModel() {
      var prices = [];
      var inputs = this.$('.field-input:first .price-input input');

      _.each(inputs, function (input) {
        var $input = $(input);
        var inputData = $input.val();
        prices.push({
          amount: '' === inputData ? null : inputData,
          currency: $input.data('currency')
        });
      }.bind(this));

      this.setCurrentValue(_.sortBy(prices, 'currency'));
    },
    getTemplateContext: function getTemplateContext() {
      return $.when(Field.prototype.getTemplateContext.apply(this, arguments), FetcherRegistry.getFetcher('currency').fetchAll()).then(function (templateContext, currencies) {
        templateContext.currencies = currencies;
        return templateContext;
      });
    },
    setFocus: function setFocus() {
      this.$('input[type="text"]:first').focus();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29576:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/simple-select-field.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Simple select field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/template/product/field/simple-select */ 95411), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/attribute-option/create */ 16326), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Field, _, fieldTemplate, Routing, _createOption, SecurityContext, initSelect2, UserContext, i18n) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    choicePromise: null,
    promiseIdentifier: null,
    choiceUrl: null,
    events: {
      'change .field-input:first input[type="hidden"].select-field': 'updateModel',
      'click .add-attribute-option': 'createOption'
    },

    /**
     * {@inheritdoc}
     */
    getTemplateContext: function getTemplateContext() {
      return Field.prototype.getTemplateContext.apply(this, arguments).then(function (templateContext) {
        var isAllowed = SecurityContext.isGranted('pim_enrich_attribute_edit');
        templateContext.userCanAddOption = this.editable && isAllowed;
        return templateContext;
      }.bind(this));
    },

    /**
     * Create a new option for this simple select field
     */
    createOption: function createOption() {
      if (!SecurityContext.isGranted('pim_enrich_attribute_edit')) {
        return;
      }

      _createOption(this.attribute).then(function (option) {
        if (this.isEditable()) {
          this.setCurrentValue(option.code);
        }

        this.choicePromise = null;
        this.render();
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    renderInput: function renderInput(context) {
      return this.fieldTemplate(context);
    },

    /**
     * {@inheritdoc}
     */
    postRender: function postRender() {
      this.$('[data-toggle="tooltip"]').tooltip();
      this.getChoiceUrl().then(function (choiceUrl) {
        var options = {
          ajax: {
            url: choiceUrl,
            cache: true,
            data: function data(term, page) {
              return {
                search: term,
                options: {
                  limit: 20,
                  page: page,
                  catalogLocale: UserContext.get('catalogLocale')
                }
              };
            },
            results: function (response) {
              if (response.results) {
                response.more = 20 === _.keys(response.results).length;
                return response;
              }

              var data = {
                more: 20 === _.keys(response).length,
                results: []
              };

              _.each(response, function (value) {
                data.results.push(this.convertBackendItem(value));
              }.bind(this));

              return data;
            }.bind(this)
          },
          initSelection: function (element, callback) {
            var id = $(element).val();

            if ('' !== id) {
              if (null === this.choicePromise || this.promiseIdentifier !== id || this.choiceUrl !== choiceUrl) {
                this.choiceUrl = choiceUrl;
                this.choicePromise = $.get(choiceUrl, {
                  options: {
                    identifiers: [id]
                  }
                });
                this.promiseIdentifier = id;
              }

              this.choicePromise.then(function (response) {
                var selected = _.find(response, function (result) {
                  var _result$code;

                  return id.toLowerCase() === ((_result$code = result.code) !== null && _result$code !== void 0 ? _result$code : '').toLowerCase();
                });

                if (!selected) {
                  selected = _.findWhere(response.results, {
                    id: id
                  });
                } else {
                  selected = this.convertBackendItem(selected);
                }

                callback(selected);
              }.bind(this));
            }
          }.bind(this),
          placeholder: ' ',
          allowClear: true
        };
        initSelect2.init(this.$('input.select-field'), options);
      }.bind(this));
    },

    /**
     * Get the URL to retrieve the choice list for this select field
     *
     * @returns {Promise}
     */
    getChoiceUrl: function getChoiceUrl() {
      return $.Deferred().resolve(Routing.generate('pim_enrich_attributeoption_get', {
        identifier: this.attribute.code
      })).promise();
    },

    /**
     * {@inheritdoc}
     */
    updateModel: function updateModel() {
      var data = this.$('.field-input:first input[type="hidden"].select-field').val();
      data = '' === data ? this.attribute.empty_value : data;
      this.choicePromise = null;
      this.setCurrentValue(data);
    },

    /**
     * Convert the item returned from the backend to fit select2 needs
     *
     * @param {object} item
     *
     * @return {object}
     */
    convertBackendItem: function convertBackendItem(item) {
      return {
        id: item.code,
        text: i18n.getLabel(item.labels, UserContext.get('catalogLocale'), item.code)
      };
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 72429:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/text-field.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Text field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/template/product/field/text */ 52633)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Field, _, fieldTemplate) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change .field-input:first input[type="text"]': 'updateModel'
    },
    renderInput: function renderInput(context) {
      return this.fieldTemplate(context);
    },
    updateModel: function updateModel() {
      var data = this.$('.field-input:first input[type="text"]').val();
      data = '' === data ? this.attribute.empty_value : data;
      this.setCurrentValue(data);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 66383:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/textarea-field.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Textarea field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/template/product/field/textarea */ 59571)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Field, _, fieldTemplate) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change .field-input:first textarea': 'updateModel'
    },

    /**
     * @inheritDoc
     */
    renderInput: function renderInput(context) {
      return this.fieldTemplate(context);
    },

    /**
     * @inheritDoc
     */
    updateModel: function updateModel() {
      var data = this.$('.field-input:first textarea:first').val();
      data = '' === data ? this.attribute.empty_value : data;
      this.setCurrentValue(data);
    },

    /**
     * @inheritDoc
     */
    setFocus: function setFocus() {
      this.$('.field-input:first textarea').focus();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 35892:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/field/wysiwyg-field.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Wysiwyg field
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/field */ 62494), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/template/product/field/textarea */ 59571), __webpack_require__(/*! summernote */ 73310)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Field, _, fieldTemplate) {
  return Field.extend({
    fieldTemplate: _.template(fieldTemplate),
    events: {
      'change .field-input:first textarea:first': 'updateModel',
      'click .note-insert': 'setStyleForLinkModal'
    },

    /**
     * @inheritDoc
     */
    renderInput: function renderInput(context) {
      return this.fieldTemplate(context);
    },

    /**
     * @inheritDoc
     */
    postRender: function postRender() {
      this.$('textarea:not(.note-codable)').summernote({
        disableResizeEditor: true,
        height: 200,
        iconPrefix: 'icon-',
        toolbar: [['font', ['bold', 'italic', 'underline', 'clear']], ['para', ['ul', 'ol']], ['insert', ['link']], ['view', ['codeview']]],
        prettifyHtml: false
      }).on('summernote.blur', this.updateModel.bind(this)).on('summernote.keyup', this.removeEmptyTags.bind(this));
      this.$('.note-codable').on('blur', function () {
        this.removeEmptyTags();
        this.updateModel();
      }.bind(this));
    },
    removeEmptyTags: function removeEmptyTags() {
      var textarea = this.$('.field-input:first textarea:first');
      var editorHTML = $.parseHTML(textarea.code());
      var textIsEmpty = $(editorHTML).text().length === 0;

      if (textIsEmpty) {
        textarea.code('');
      }
    },

    /**
     * @inheritDoc
     */
    updateModel: function updateModel() {
      var _data;

      var data = this.$('.field-input:first textarea:first').code();
      data = '<p><br></p>' === ((_data = data) === null || _data === void 0 ? void 0 : _data.trim()) ? this.attribute.empty_value : data;
      data = '' === data || null === data ? this.attribute.empty_value : data;
      this.setCurrentValue(data);
    },

    /**
     * @inheritDoc
     */
    setFocus: function setFocus() {
      this.$('.field-input:first .note-editable').trigger('focus');
    },

    /**
     * Places the modal backdrop in the page itself, and not outside of the body.
     * This allows the z-index to work properly in the mass-edit form, as it is
     * itself in a modal with its own z-index.
     */
    moveModalBackdrop: function moveModalBackdrop() {
      $('.modal-backdrop').prependTo('.AknFullPage');
    },

    /**
     * Since 3.0, default pages includes a lot of .sticky and .fixed elements. It implies it's impossible to
     * display elements on top of the page, without setting z-index in every element of the page.
     * Here, summernote create a modal directly from the button, and this modal is hidden in the bottom of the
     * page. We override the default behavior of the modal opening, to put it in the root of the <body>, then
     * put it back once user selected its link.
     *
     * @param jqueryEvent
     */
    setStyleForLinkModal: function setStyleForLinkModal(jqueryEvent) {
      this.moveModalBackdrop();
      var source = jqueryEvent.originalEvent.path ? $(jqueryEvent.originalEvent.path[0]) : $(jqueryEvent.originalEvent.target);

      if (source.hasClass('icon-link') || source.hasClass('icon-edit') || source.hasClass('btn-sm') && 'showLinkDialog' === source.data('event')) {
        var editor = source.closest('.note-editor');
        var modal = editor.find('.note-link-dialog.modal'); // Set PIM style

        modal.find('.note-link-text, .note-link-url').addClass('AknTextField');
        modal.find('label').addClass('AknFieldContainer-label');
        modal.find('.form-group.row').addClass('AknFieldContainer');
        modal.find('.modal-title').addClass('AknFullPage-subTitle');
        modal.find('.btn.btn-primary.note-link-btn').addClass('AknButton AknButton--apply');
        modal.find('.modal-footer').addClass('AknButtonList AknButtonList--single');
        modal.find('.close').addClass('AknFullPage-cancel'); // Move Dialog to <body>

        var oreviousParent = modal.parent();
        modal.appendTo('body');
        modal.one('hidden.bs.modal', function () {
          modal.appendTo(oreviousParent);
        });
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16442:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/associated-product-row-view.js ***!
  \*****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/product-edit-form/associated-product-row */ 64003)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (AssociatedProductRow) {
  return AssociatedProductRow;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 64003:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/associated-product-row.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * This module is a custom row for rendering an associated product
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/datagrid/product-row */ 90286), __webpack_require__(/*! pim/media-url-generator */ 72689), __webpack_require__(/*! pim/template/product/tab/associated-product-row */ 3760), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/router */ 41774)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, BaseRow, mediaUrlGenerator, thumbnailTemplate, mediator, SecurityContext, router) {
  return BaseRow.extend({
    thumbnailTemplate: _.template(thumbnailTemplate),

    /**
     * Return true if the user can remove the association, false otherwise.
     *
     * The use can remove an association if he has the permission and if the association
     * does not come from inheritance.
     *
     * @return {Boolean}
     */
    canRemoveAssociation: function canRemoveAssociation() {
      var permissionGranted = SecurityContext.isGranted('pim_enrich_associations_remove');
      var fromInheritance = this.model.get('from_inheritance');
      return permissionGranted && !fromInheritance;
    },

    /**
     * {@inheritdoc}
     */
    getTemplateOptions: function getTemplateOptions() {
      var isProductModel = this.isProductModel();
      var label = this.model.get('label');
      var canRemoveAssociation = this.canRemoveAssociation();
      var id = this.model.id.replace(/product-model-|product-/g, '');
      return {
        useLayerStyle: isProductModel,
        label: label,
        identifier: this.model.get('identifier'),
        imagePath: this.getThumbnailImagePath(),
        canRemoveAssociation: canRemoveAssociation,
        redirectUrl: router.generate(this.isProductModel() ? 'pim_enrich_product_model_edit' : 'pim_enrich_product_edit', this.isProductModel() ? {
          id: id
        } : {
          uuid: id
        })
      };
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      BaseRow.prototype.render.call(this, arguments);
      var row = this.renderedRow;
      row.off('click');
      $('.AknIconButton--remove', row).on('click', function () {
        mediator.trigger('datagrid:unselectModel:association-product-grid', _this.model);
        mediator.trigger('datagrid:unselectModel:association-product-model-grid', _this.model);
        row.remove();
      });
    },

    /**
     * {@inheritdoc}
     */
    getRenderableColumns: function getRenderableColumns() {
      return [this.getCompletenessCellType()];
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 21856:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/associations.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Association tab extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/tab/associations */ 88312), __webpack_require__(/*! pim/template/product/tab/association-panes */ 51839), __webpack_require__(/*! pim/template/common/modal-centered */ 94596), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/datagrid-builder */ 10488), __webpack_require__(/*! oro/pageable-collection */ 3110), __webpack_require__(/*! pim/datagrid/state */ 30138), __webpack_require__(/*! require-context */ 76925), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pimui/js/product/form/quantified-associations/components/QuantifiedAssociations */ 73460), __webpack_require__(/*! @akeneo-pim-community/shared */ 58387)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseForm, formTemplate, panesTemplate, modalTemplate, FetcherRegistry, UserContext, Routing, mediator, datagridBuilder, PageableCollection, DatagridState, requireContext, FormBuilder, securityContext, _ref, _ref2, _ref3) {
  var getLabel = _ref.getLabel;
  var QuantifiedAssociations = _ref2.QuantifiedAssociations;
  var filterErrors = _ref3.filterErrors;
  var state = {};
  return BaseForm.extend({
    template: _.template(formTemplate),
    panesTemplate: _.template(panesTemplate),
    modalTemplate: _.template(modalTemplate),
    className: 'tab-pane active product-associations',
    events: {
      'click .associations-list li': 'changeAssociationType',
      'click .target-button': 'changeAssociationTargets',
      'click .add-associations': 'addAssociations'
    },
    datagrids: {},
    config: {},
    associationCount: 0,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(meta) {
      this.config = meta.config;
      this.validationErrors = [];
      state = {
        associationTarget: 'products'
      };
      this.datagrids = {
        products: {
          name: this.config.datagridName,
          getInitialParams: function (associationType) {
            var params = {
              product: this.getFormData().meta.id
            };
            params[this.datagrids.products.paramName] = this.datagrids.products.getParamValue(associationType);
            params.dataLocale = UserContext.get('catalogLocale');
            params.dataScope = UserContext.get('catalogScope');
            return params;
          }.bind(this),
          paramName: 'associationType',
          getParamValue: function (associationType) {
            return _.findWhere(state.associationTypes, {
              code: associationType
            }).meta.id;
          }.bind(this),
          getModelIdentifier: function getModelIdentifier(model) {
            return model.get('document_type') === 'product_model' ? model.get('identifier') : model.get('id').replace('product-', '');
          }
        },
        groups: {
          name: 'association-group-grid',
          getInitialParams: function getInitialParams(associationType) {
            var params = {};
            params[this.paramName] = this.getParamValue(associationType);
            params.dataLocale = UserContext.get('catalogLocale');
            return params;
          },
          paramName: 'associatedIds',
          getParamValue: function (associationType) {
            var associationsMeta = this.getFormData().meta.associations;
            return associationsMeta[associationType] ? associationsMeta[associationType].groupIds : [];
          }.bind(this),
          getModelIdentifier: function getModelIdentifier(model) {
            return model.get('code');
          }
        }
      };
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      this.trigger('tab:register', {
        code: undefined === this.config.tabCode ? this.code : this.config.tabCode,
        isVisible: this.isVisible.bind(this),
        label: __('pim_enrich.entity.product.module.associations.title', {
          count: this.associationCount
        })
      });

      _.each(this.datagrids, function (datagrid) {
        mediator.clear('datagrid:selectModel:' + datagrid.name);
        mediator.on('datagrid:selectModel:' + datagrid.name, function (model) {
          this.selectModel(model, datagrid);
        }.bind(this));
        mediator.clear('datagrid:unselectModel:' + datagrid.name);
        mediator.on('datagrid:unselectModel:' + datagrid.name, function (model) {
          this.unselectModel(model, datagrid);
        }.bind(this));
      }.bind(this));

      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.postUpdate.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_save', function () {
        return _this.setValidationErrors({
          response: {
            quantified_associations: []
          }
        });
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:validation_error', this.setValidationErrors.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change pim_enrich:form:scope_switcher:change', function (localeEvent) {
        if ('base_product' === localeEvent.context) {
          this.render();
        }
      }.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.updateAssociationCountInSidebar();
      var code = undefined === this.config.tabCode ? this.code : this.config.tabCode;

      if (!this.configured || code !== this.getParent().getCurrentTab()) {
        return;
      }

      this.loadAssociationTypes().then(function (associationTypes) {
        var currentAssociationType = associationTypes.length ? _.first(associationTypes).code : null;

        if (null === this.getCurrentAssociationType() || _.isUndefined(_.findWhere(associationTypes, {
          code: this.getCurrentAssociationType()
        }))) {
          this.setCurrentAssociationType(currentAssociationType);
        }

        var isQuantifiedAssociation = this.isQuantifiedAssociation(associationTypes, this.getCurrentAssociationType());
        state.currentAssociationType = currentAssociationType;
        state.associationTypes = associationTypes;
        this.$el.html(this.template({
          product: this.getFormData(),
          locale: UserContext.get('catalogLocale'),
          associationTypes: associationTypes,
          currentAssociationTarget: this.getCurrentAssociationTarget(),
          currentAssociationTypeCode: this.getCurrentAssociationType(),
          currentAssociationType: _.findWhere(associationTypes, {
            code: this.getCurrentAssociationType()
          }),
          addAssociationsLabel: __('pim_enrich.entity.product.module.associations.add_associations'),
          addAssociationVisible: this.isAddAssociationsVisible(),
          datagridName: this.config.datagridName,
          isQuantifiedAssociation: isQuantifiedAssociation
        }));
        this.renderPanes();

        if (0 !== associationTypes.length && !isQuantifiedAssociation) {
          var currentGrid = this.datagrids[this.getCurrentAssociationTarget()];
          this.renderGrid(currentGrid.name, currentGrid.getInitialParams(this.getCurrentAssociationType()));
          this.setListenerSelectors();
        }

        this.renderQuantifiedAssociations();
        this.delegateEvents();
      }.bind(this));
      return this;
    },
    updateAssociationCountInSidebar: function updateAssociationCountInSidebar() {
      var newAssociationCount = this.getAssociationCount();

      if (this.associationCount !== newAssociationCount) {
        this.associationCount = newAssociationCount;
        this.trigger('tab:register', {
          code: undefined === this.config.tabCode ? this.code : this.config.tabCode,
          isVisible: this.isVisible.bind(this),
          label: __('pim_enrich.entity.product.module.associations.title', {
            count: newAssociationCount
          })
        });
      }
    },
    setValidationErrors: function setValidationErrors(_ref4) {
      var response = _ref4.response;
      this.validationErrors = response;
      this.unmountQuantifiedAssociations();
      this.renderQuantifiedAssociations();
    },
    unmountQuantifiedAssociations: function unmountQuantifiedAssociations() {
      var quantifiedAssociationsNode = document.getElementById('product-quantified-associations');
      if (quantifiedAssociationsNode) this.unmountReact();
    },

    /**
     * Prepend for each association type each tab content
     */
    renderPanes: function renderPanes() {
      this.loadAssociationTypes().then(function (associationTypes) {
        var isQuantifiedAssociation = this.isQuantifiedAssociation(associationTypes, this.getCurrentAssociationType());
        this.setAssociationCount(associationTypes);
        this.$('.tab-content > .association-type').remove();
        this.$('.tab-content').prepend(this.panesTemplate({
          __: __,
          getLabel: getLabel,
          label: __('pim_enrich.entity.product.module.associations.association_type_selector'),
          locale: UserContext.get('catalogLocale'),
          associationTypes: associationTypes,
          currentAssociationType: this.getCurrentAssociationType(),
          currentAssociationTarget: this.getCurrentAssociationTarget(),
          numberAssociationLabelKey: isQuantifiedAssociation ? 'pim_enrich.entity.product.module.associations.number_of_quantified_associations' : 'pim_enrich.entity.product.module.associations.number_of_associations',
          targetLabel: __('pim_enrich.entity.product.module.associations.target'),
          showProductsLabel: __('pim_enrich.entity.product.module.associations.show_products'),
          showGroupsLabel: __('pim_enrich.entity.product.module.associations.show_groups'),
          isQuantifiedAssociation: isQuantifiedAssociation
        }));
      }.bind(this));
    },
    renderQuantifiedAssociations: function renderQuantifiedAssociations() {
      var _this$getFormData$met,
          _this2 = this;

      var associationTypeCode = this.getCurrentAssociationType();
      if (!this.isQuantifiedAssociation(state.associationTypes, associationTypeCode)) return;
      if (this.$('#product-quantified-associations').children().length !== 0) return;
      var quantifiedAssociations = this.getFormData().quantified_associations[associationTypeCode] || {
        products: [],
        product_models: []
      };
      var parentQuantifiedAssociations = this.getFormData().meta.parent_quantified_associations[associationTypeCode] || {
        products: [],
        product_models: []
      };
      var errors = filterErrors(this.validationErrors.quantified_associations || [], "quantifiedAssociations.".concat(associationTypeCode));
      var isUserOwner = (_this$getFormData$met = this.getFormData().meta.is_owner) !== null && _this$getFormData$met !== void 0 ? _this$getFormData$met : true;
      var props = {
        quantifiedAssociations: quantifiedAssociations,
        parentQuantifiedAssociations: parentQuantifiedAssociations,
        errors: errors,
        isCompact: false,
        isUserOwner: isUserOwner,
        onAssociationsChange: function onAssociationsChange(updatedAssociations) {
          var formData = _this2.getFormData();

          formData.quantified_associations = _objectSpread(_objectSpread({}, formData.quantified_associations), {}, _defineProperty({}, associationTypeCode, updatedAssociations));

          _this2.setData(formData, {
            silent: true
          });

          _this2.getRoot().trigger('pim_enrich:form:entity:update_state');
        },
        onOpenPicker: function onOpenPicker() {
          return _this2.launchProductAndProductModelPicker().then(function (items) {
            return items.map(function (item) {
              var quantifiedLink = 'product_model' === item.document_type ? {
                identifier: item.id,
                quantity: 1
              } : {
                uuid: item.technical_id,
                quantity: 1
              };
              return {
                quantifiedLink: quantifiedLink,
                productType: item.document_type,
                errors: [],
                product: null
              };
            });
          });
        }
      };
      this.renderReact(QuantifiedAssociations, props, this.$('#product-quantified-associations')[0]);
    },

    /**
     * Refresh the associations panel after model change
     */
    postUpdate: function postUpdate() {
      if (this.isVisible()) {
        this.$('.selection-inputs input').val('');
        state.selectedAssociations = {};
        this.render();
      }
    },

    /**
     * @param {string} associationType
     */
    setCurrentAssociationType: function setCurrentAssociationType(associationType) {
      sessionStorage.setItem('current_association_type', associationType);
    },

    /**
     * @returns {string}
     */
    getCurrentAssociationType: function getCurrentAssociationType() {
      return sessionStorage.getItem('current_association_type');
    },

    /**
     * @param {string} associationTarget
     */
    setCurrentAssociationTarget: function setCurrentAssociationTarget(associationTarget) {
      sessionStorage.setItem('current_association_target', associationTarget);
    },

    /**
     * @returns {string}
     */
    getCurrentAssociationTarget: function getCurrentAssociationTarget() {
      return sessionStorage.getItem('current_association_target') || 'products';
    },

    /**
     * Fetch all the association types
     *
     * @returns {Promise}
     */
    loadAssociationTypes: function loadAssociationTypes() {
      return FetcherRegistry.getFetcher('association-type').fetchAll().then(function (associationTypes) {
        var locale = UserContext.get('catalogLocale');
        return associationTypes.sort(function (associationType1, associationType2) {
          var labelAssociationType1 = associationType1.labels[locale] || '[' + associationType1.code + ']';
          var labelAssociationType2 = associationType2.labels[locale] || '[' + associationType2.code + ']';
          return labelAssociationType1.localeCompare(labelAssociationType2, undefined, {
            sensitivity: 'base'
          });
        });
      });
    },

    /**
     * Compute associated items for a specified association type and put it in cache
     *
     * @param associationTypes
     */
    setAssociationCount: function setAssociationCount(associationTypes) {
      var _this$getFormData = this.getFormData(),
          associations = _this$getFormData.associations,
          quantified_associations = _this$getFormData.quantified_associations;

      _.each(associationTypes, function (assocType) {
        var association = quantified_associations[assocType.code] || associations[assocType.code];
        assocType.productCount = association && association.products ? association.products.length : association && association.product_uuids ? association.product_uuids.length : 0;
        assocType.productModelCount = association && association.product_models ? association.product_models.length : 0;
        assocType.groupCount = association && association.groups ? association.groups.length : 0;
      });
    },

    /**
     * Switch the current association type
     *
     * @param {Event} event
     */
    changeAssociationType: function changeAssociationType(event) {
      event.preventDefault();
      var associationType = event.currentTarget.dataset.associationType;
      this.setCurrentAssociationType(associationType);
      var isQuantifiedAssociation = this.isQuantifiedAssociation(state.associationTypes, associationType);

      if (isQuantifiedAssociation) {
        this.$('.association-grid-container').addClass('hide');
        this.$('#product-quantified-associations').removeClass('hide');
      } else {
        this.$('.association-grid-container').removeClass('hide');
        this.$('#product-quantified-associations').addClass('hide');
      }

      this.$(".AknTitleContainer.association-type[data-association-type=\"".concat(associationType, "\"]")).removeClass('AknTitleContainer--hidden').siblings('.AknTitleContainer.association-type:not(.AknTitleContainer--hidden)').addClass('AknTitleContainer--hidden');
      this.unmountQuantifiedAssociations();
      this.renderQuantifiedAssociations();
      this.renderPanes();
      this.updateListenerSelectors();
      var currentGrid = this.datagrids[this.getCurrentAssociationTarget()];

      if (!this.isGridRendered(currentGrid) && !isQuantifiedAssociation) {
        this.renderGrid(currentGrid.name, currentGrid.getInitialParams(this.getCurrentAssociationType()));
        this.setListenerSelectors();
      }

      mediator.trigger('datagrid:setParam:' + currentGrid.name, currentGrid.paramName, currentGrid.getParamValue(associationType)).trigger('datagrid:doRefresh:' + currentGrid.name);
    },

    /**
     * Switch the current target (product or group)
     *
     * @param {Event} event
     */
    changeAssociationTargets: function changeAssociationTargets(event) {
      var associationTarget = event.currentTarget.dataset.associationTarget;
      this.setCurrentAssociationTarget(associationTarget);
      var isQuantifiedAssociation = this.isQuantifiedAssociation(state.associationTypes, this.getCurrentAssociationType());

      _.each(this.datagrids, function (datagrid, gridType) {
        var method = gridType === associationTarget || isQuantifiedAssociation ? 'removeClass' : 'addClass';
        this.$('.' + datagrid.name)[method]('hide');
      }.bind(this));

      var text = event.currentTarget.textContent;
      $(event.currentTarget).addClass('AknDropdown-menuLink--active').siblings('.target-button').removeClass('AknDropdown-menuLink--active').end().closest('.AknDropdown').find('.AknActionButton-highlight').text(text);
      this.updateListenerSelectors();
      var currentGrid = this.datagrids[this.getCurrentAssociationTarget()];

      if (!this.isGridRendered(currentGrid) && !isQuantifiedAssociation) {
        this.renderGrid(currentGrid.name, currentGrid.getInitialParams(this.getCurrentAssociationType()));
        this.setListenerSelectors();
      }

      isQuantifiedAssociation ? this.$('#product-quantified-associations').removeClass('hide') : this.$('#product-quantified-associations').addClass('hide');
    },
    isQuantifiedAssociation: function isQuantifiedAssociation(associationTypes, associationTypeCode) {
      if (!associationTypes || 0 === associationTypes.length) return false;
      var associationType = associationTypes.find(function (associationType) {
        return associationType.code === associationTypeCode;
      });
      if (undefined === associationType) throw new Error("Cannot find association type ".concat(associationTypeCode));
      return associationType.is_quantified;
    },

    /**
     * Loads a complete grid from its grid name
     *
     * @param {string} gridName
     * @param {Object} params
     */
    renderGrid: function renderGrid(gridName, params) {
      var urlParams = params;
      urlParams.alias = gridName;
      urlParams.params = _.clone(params);
      urlParams.filters = {
        scope: {
          value: params.dataScope
        }
      };
      var datagridState = DatagridState.get(gridName, ['filters']);

      if (null !== datagridState.filters) {
        var collection = new PageableCollection();
        var filters = collection.decodeStateData(datagridState.filters);
        collection.processFiltersParams(urlParams, filters, gridName + '[_filter]');
      }

      $.get(Routing.generate('pim_datagrid_load', urlParams)).then(function (response) {
        var metadata = response.metadata;
        /* Next lines are related to PIM-6113 and need some comments.
         *
         * When you just saved a datagrid from the Product Edit Form, you will have an URL like
         * '/association-group-grid?...&associatedIds[]=1&associatedIds[]=2', in reference of the last
         * checked groups in the datagrid.
         *
         * The fact is that there is 2 places where these parameters are set: in the URL, and in the
         * datagrid state (state.parameters.associatedIds).
         *
         * If you do not drop the params of the URL (containing associatedIds array), you will have
         * a mix of 2 times the same variable, defined at 2 different places. This leads to a refreshed
         * datagrid with wrong checkboxes.
         *
         * To prevent this behavior, we removed the parameters passed in the URL before rendering the
         * grid, to only allow datagrid state parameters.
         */

        var queryParts = metadata.options.url.split('?');
        var url = queryParts[0];
        var queryString = decodeURIComponent(queryParts[1]).replace(/&?association-group-grid\[associatedIds\]\[\d+\]=\d+/g, '').replace(/^&/, '');
        metadata.options.url = url + '?' + queryString;
        this.$('#grid-' + gridName).data({
          metadata: metadata,
          data: JSON.parse(response.data)
        });
        var gridModules = metadata.requireJSModules;
        gridModules.push('pim/datagrid/state-listener');
        gridModules.push('oro/datafilter-builder');
        gridModules.push('oro/datagrid/pagination-input');
        var resolvedModules = [];

        _.each(gridModules, function (module) {
          resolvedModules.push(requireContext(module));
        });

        datagridBuilder(resolvedModules);
      }.bind(this));
    },

    /**
     * Sets the listeners to trigger the checkboxes of each grid
     */
    setListenerSelectors: function setListenerSelectors() {
      var gridNames = _.pluck(this.datagrids, 'name');

      mediator.on('column_form_listener:initialized', function onColumnListenerReady(gridName) {
        gridNames = _.without(gridNames, gridName);

        if (!gridNames.length) {
          mediator.off('column_form_listener:initialized', onColumnListenerReady);
          this.updateListenerSelectors();
        }
      }.bind(this));
    },

    /**
     * Updates the listeners to trigger the checkboxes of the current grid
     */
    updateListenerSelectors: function updateListenerSelectors() {
      var associationType = this.getCurrentAssociationType();
      var selectedAssociations = state.selectedAssociations;

      _.each(this.datagrids, function (datagrid, gridType) {
        var appendFieldId = ['#', associationType, '-', gridType, '-appendfield'].join('');
        var removeFieldId = ['#', associationType, '-', gridType, '-removefield'].join('');

        if (selectedAssociations && selectedAssociations[associationType] && selectedAssociations[associationType][gridType]) {
          $(appendFieldId).val(selectedAssociations[associationType][gridType].select.join(','));
          $(removeFieldId).val(selectedAssociations[associationType][gridType].unselect.join(','));
        }

        mediator.trigger('column_form_listener:set_selectors:' + datagrid.name, {
          included: appendFieldId,
          excluded: removeFieldId
        });
      });
    },

    /**
     * Selects a line in the grid
     *
     * @param {Object} model    A grid model (i.e. a unique line)
     * @param {Object} datagrid
     */
    selectModel: function selectModel(model, datagrid) {
      var assocType = this.getCurrentAssociationType();
      var assocTarget = this.getDatagridTarget(datagrid);
      var currentAssociations = this.getCurrentAssociations(datagrid);
      currentAssociations.push(datagrid.getModelIdentifier(model));
      currentAssociations = _.uniq(currentAssociations);
      this.updateFormDataAssociations(currentAssociations, assocType, assocTarget);
      this.updateSelectedAssociations('select', datagrid, model.id);
    },

    /**
     * Unselect a line in the grid
     *
     * @param {Object} model    A grid model (i.e. a unique line)
     * @param {Object} datagrid
     */
    unselectModel: function unselectModel(model, datagrid) {
      var assocType = this.getCurrentAssociationType();
      var assocTarget = this.getDatagridTarget(datagrid);
      var assocSubTarget = assocTarget;

      if (assocTarget === 'products') {
        // We check from what association target we have to remove model (products or product_models)
        assocSubTarget = model.attributes.document_type === 'product' ? 'product_uuids' : 'product_models';
      }

      var associationsField = this.getFormData().associations;
      var associations = associationsField[assocType][assocSubTarget];
      var index = associations.indexOf(datagrid.getModelIdentifier(model));

      if (-1 !== index) {
        associations.splice(index, 1);
      }

      this.updateFormDataAssociations(associations, assocType, assocSubTarget);
      this.updateSelectedAssociations('unselect', datagrid, model.id);
    },

    /**
     * Returns the current associations for a specified datagrid
     *
     * @param {Object} datagrid
     */
    getCurrentAssociations: function getCurrentAssociations(datagrid) {
      var assocType = this.getCurrentAssociationType();
      var assocTarget = this.getDatagridTarget(datagrid);
      var associations = this.getFormData().associations;
      return associations[assocType][assocTarget];
    },

    /**
     * Update the user session selection to be able to restore it if he switches tabs
     *
     * @param {string} action
     * @param {Object} datagrid
     * @param {string|int} id
     */
    updateSelectedAssociations: function updateSelectedAssociations(action, datagrid, id) {
      var assocType = this.getCurrentAssociationType();
      var assocTarget = this.getDatagridTarget(datagrid);
      var selectedAssoc = state.selectedAssociations || {};
      selectedAssoc[assocType] = selectedAssoc[assocType] || {};

      if (!selectedAssoc[assocType][assocTarget]) {
        selectedAssoc[assocType][assocTarget] = {
          select: [],
          unselect: []
        };
      }

      var revertAction = 'select' === action ? 'unselect' : 'select';
      var index = selectedAssoc[assocType][assocTarget][revertAction].indexOf(id);

      if (-1 < index) {
        selectedAssoc[assocType][assocTarget][revertAction].splice(index, 1);
      } else {
        selectedAssoc[assocType][assocTarget][action].push(id);
        selectedAssoc[assocType][assocTarget][action] = _.uniq(selectedAssoc[assocType][assocTarget][action]);
      }

      state.selectedAssociations = selectedAssoc;
      this.getRoot().trigger('pim_enrich:form:entity:update_state');
    },

    /**
     * Update the form data (product) associations
     *
     * @param {Array} currentAssociations
     * @param {string} assocType
     * @param {string} assocTarget
     */
    updateFormDataAssociations: function updateFormDataAssociations(currentAssociations, assocType, assocTarget) {
      var modelAssociations = this.getFormData().associations;
      modelAssociations[assocType][assocTarget] = currentAssociations;
      modelAssociations[assocType][assocTarget].sort();
      this.setData({
        associations: modelAssociations
      }, {
        silent: true
      });
    },

    /**
     * Return if the specified grid is already rendered
     *
     * @param {Object} grid
     *
     * @returns {boolean}
     */
    isGridRendered: function isGridRendered(grid) {
      return 0 < this.$('.grid-' + grid.name).find('[data-type="datagrid"][data-rendered="true"]').length;
    },

    /**
     * Get the given datagrid target (products or groups)
     *
     * @param {Object} datagrid
     *
     * @returns {string}
     */
    getDatagridTarget: function getDatagridTarget(datagrid) {
      var assocTarget = null;

      _.each(this.datagrids, function (grid, gridType) {
        if (grid.name === datagrid.name) {
          assocTarget = gridType;
        }
      });

      return assocTarget;
    },

    /**
     * Check if this extension is visible
     *
     * @returns {boolean}
     */
    isVisible: function isVisible() {
      return true;
    },
    isAddAssociationsVisible: function isAddAssociationsVisible() {
      return securityContext.isGranted(this.config.aclAddAssociations);
    },

    /**
     * Opens the panel to select new products to associate
     */
    addAssociations: function addAssociations() {
      var _this3 = this;

      this.launchProductPicker().then(function (items) {
        var productUuids = [];
        var productModelIds = [];
        items.forEach(function (item) {
          if ('product' === item.document_type) {
            productUuids.push(item.technical_id);
          } else if ('product_model' === item.document_type) {
            productModelIds.push(item.id);
          }
        });

        var assocType = _this3.getCurrentAssociationType();

        var previousProductUuids = _this3.getFormData().associations[assocType].product_uuids;

        var previousProductModelIds = _this3.getFormData().associations[assocType].product_models;

        _this3.updateFormDataAssociations(previousProductUuids.concat(productUuids), assocType, 'product_uuids');

        _this3.updateFormDataAssociations(previousProductModelIds.concat(productModelIds), assocType, 'product_models');

        _this3.getRoot().trigger('pim_enrich:form:update-association');
      });
    },

    /**
     * @TODO CPM-739: Do not use this function anymore
     * Launch the association product picker
     *
     * @return {Promise}
     */
    launchProductPicker: function launchProductPicker() {
      var _this4 = this;

      var deferred = $.Deferred();
      FormBuilder.build('pim-associations-product-and-product-model-picker-modal').then(function (form) {
        FetcherRegistry.getFetcher('association-type').fetch(_this4.getCurrentAssociationType()).then(function (associationType) {
          // TODO Delete setCustomTitle if possible
          //form.setCustomTitle();
          var formData = _this4.getFormData();

          var locale = UserContext.get('catalogLocale');
          var productLabel = getLabel(formData.meta.label, locale, formData.code || formData.identifier);
          var modal = new Backbone.BootstrapModal({
            modalOptions: {
              backdrop: 'static',
              keyboard: false
            },
            okCloses: false,
            title: __('pim_enrich.entity.product.module.associations.manage', {
              associationType: getLabel(associationType.labels, locale, associationType.code)
            }),
            innerDescription: __('pim_enrich.entity.product.module.associations.manage_description', {
              productLabel: productLabel
            }),
            content: '',
            okText: __('pim_common.confirm'),
            template: _this4.modalTemplate,
            innerClassName: 'AknFullPage--full'
          });
          modal.open();
          form.setElement(modal.$('.modal-body')).render();
          modal.on('cancel', deferred.reject);
          modal.on('ok', function () {
            var products = form.getItems().sort(function (a, b) {
              return a.code < b.code;
            });
            modal.close();
            deferred.resolve(products);
          });
        });
      });
      return deferred.promise();
    },
    launchProductAndProductModelPicker: function launchProductAndProductModelPicker() {
      var _this5 = this;

      var deferred = $.Deferred();
      FormBuilder.build('pim-associations-product-and-product-model-picker-modal').then(function (form) {
        FetcherRegistry.getFetcher('association-type').fetch(_this5.getCurrentAssociationType()).then(function (associationType) {
          var formData = _this5.getFormData();

          var locale = UserContext.get('catalogLocale');
          var productLabel = getLabel(formData.meta.label, locale, formData.code || formData.identifier);
          var modal = new Backbone.BootstrapModal({
            modalOptions: {
              backdrop: 'static',
              keyboard: false
            },
            okCloses: false,
            title: __('pim_enrich.entity.product.module.associations.manage', {
              associationType: getLabel(associationType.labels, locale, associationType.code)
            }),
            innerDescription: __('pim_enrich.entity.product.module.associations.manage_description', {
              productLabel: productLabel
            }),
            content: '',
            okText: __('pim_common.confirm'),
            template: _this5.modalTemplate,
            innerClassName: 'AknFullPage--full'
          });
          modal.open();
          form.setElement(modal.$('.modal-body')).render();
          modal.on('cancel', deferred.reject);
          modal.on('ok', function () {
            var productsAndProductModels = form.getItems().sort(function (a, b) {
              return a.code < b.code;
            });
            modal.close();
            deferred.resolve(productsAndProductModels);
          });
        });
      });
      return deferred.promise();
    },
    getAssociationCount: function getAssociationCount() {
      var _this$getFormData2 = this.getFormData(),
          associations = _this$getFormData2.associations,
          quantified_associations = _this$getFormData2.quantified_associations;

      return [].concat(_toConsumableArray(Object.values(associations)), _toConsumableArray(Object.values(quantified_associations))).reduce(function (typeCount, typeItem) {
        return typeCount + Object.values(typeItem).reduce(function (count, item) {
          return count + item.length;
        }, 0);
      }, 0);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 70363:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attribute-filter-all.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Idle filter used as default.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, __, BaseForm) {
  return BaseForm.extend({
    /**
     * @returns {String}
     */
    getCode: function getCode() {
      return 'all';
    },

    /**
     * @returns {String}
     */
    getLabel: function getLabel() {
      return __('pim_enrich.entity.product.module.attribute_filter.all');
    },

    /**
     * @returns {Boolean}
     */
    isVisible: function isVisible() {
      return true;
    },

    /**
     * @param {Object} values
     *
     * @returns {Promise}
     */
    filterValues: function filterValues(values) {
      return $.Deferred().resolve(values).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 63608:
/*!********************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attribute-filter-at-this-level.js ***!
  \********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Filter attributes only at this level.
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2018 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm) {
  return BaseForm.extend({
    /**
     * @returns {String}
     */
    getCode: function getCode() {
      return 'at-this-level';
    },

    /**
     * @returns {String}
     */
    getLabel: function getLabel() {
      return __('pim_enrich.entity.product.module.attribute_filter.at_this_level');
    },

    /**
     * @returns {Boolean}
     */
    isVisible: function isVisible() {
      var meta = this.getFormData().meta;
      return null !== meta.level && meta.level > 0;
    },

    /**
     * @param {Object} values
     *
     * @returns {Promise}
     */
    filterValues: function filterValues(values) {
      var valuesToFill = _.pick(values, this.getFormData().meta.attributes_for_this_level);

      return $.Deferred().resolve(valuesToFill).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 35278:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attribute-filter-missing-required.js ***!
  \***********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Filter returning only values missing required values.
 *
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/provider/to-fill-field-provider */ 26682), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, toFillFieldProvider, UserContext) {
  return BaseForm.extend({
    /**
     * @returns {String}
     */
    getCode: function getCode() {
      return 'missing_required';
    },

    /**
     * @returns {String}
     */
    getLabel: function getLabel() {
      return __('pim_enrich.entity.product.module.attribute_filter.missing_required');
    },

    /**
     * @returns {Boolean}
     */
    isVisible: function isVisible() {
      return true;
    },

    /**
     * @param {Object} values
     *
     * @returns {Promise}
     */
    filterValues: function filterValues(values) {
      var scope = UserContext.get('catalogScope');
      var locale = UserContext.get('catalogLocale');
      var fieldsToFill = toFillFieldProvider.getMissingRequiredFields(this.getFormData(), scope, locale);

      var valuesToFill = _.pick(values, fieldsToFill);

      return $.Deferred().resolve(valuesToFill).promise();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 79985:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attribute-filter.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/tab/attribute/attribute-filter */ 1715)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknDropdown AknButtonList-item nav nav-tabs attribute-filter',
    template: _.template(template),
    events: {
      'click .AknDropdown-menuLink': 'onChange'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:switch_values_filter', this.setCurrent.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var currentFilter = this.getCurrentFilter();
      this.$el.html(this.template({
        filters: this.getFilters().filter(function (filter) {
          return 'function' !== typeof filter.isVisible || filter.isVisible();
        }).map(function (filter) {
          return {
            code: filter.getCode(),
            label: filter.getLabel()
          };
        }),
        currentFilter: {
          code: currentFilter.getCode(),
          label: currentFilter.getLabel()
        },
        __: __
      }));
      this.delegateEvents();
    },

    /**
     * Facade method delegating the values filtering to the current filter
     *
     * @param {Object} values
     *
     * @returns {Promise}
     */
    filterValues: function filterValues(values) {
      return this.getCurrentFilter().filterValues(values);
    },

    /**
     * Returns all filters extensions registered as children
     *
     * @returns {Array}
     */
    getFilters: function getFilters() {
      return Object.values(this.extensions);
    },

    /**
     * Return the current filter
     *
     * @returns {Object}
     */
    getCurrentFilter: function getCurrentFilter() {
      var currentFilterCode = sessionStorage.getItem('current_attribute_filter');
      var filter = this.getFilters().find(function (filter) {
        return currentFilterCode === filter.getCode();
      });

      if (undefined === filter || !filter.isVisible()) {
        return this.getFilters()[0];
      }

      return filter;
    },

    /**
     * Sets the new current filter and triggers an event.
     *
     * @param {Event} event
     */
    onChange: function onChange(event) {
      this.setCurrent(event.currentTarget.dataset.code);
    },

    /**
     * Set the current filter
     *
     * @param {string} filterCode
     */
    setCurrent: function setCurrent(filterCode) {
      if (filterCode === sessionStorage.getItem('current_attribute_filter')) {
        return;
      }

      sessionStorage.setItem('current_attribute_filter', filterCode);
      this.trigger('attribute_filter:change');
      this.$el.removeClass('open');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 87840:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Attribute tab extension for products
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/form/common/attributes */ 70017), __webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Routing, Attributes) {
  return Attributes.extend({
    /**
     * {@inheritdoc}
     */
    generateRemoveAttributeUrl: function generateRemoveAttributeUrl(attribute) {
      if ((this.getFormData().meta.id + '').match(/^\d+$/)) {
        return Routing.generate(this.config.removeAttributeRoute, {
          id: this.getFormData().meta.id,
          attributeId: attribute.meta.id
        });
      }

      return Routing.generate(this.config.removeAttributeRoute, {
        uuid: this.getFormData().meta.id,
        attributeId: attribute.meta.id
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 79726:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/add-select/attribute/line.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Prodct add attribute select line view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/common/add-select/line */ 67184), __webpack_require__(/*! pim/template/product/add-select/attribute/line */ 3675)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseLine, template) {
  return BaseLine.extend({
    template: _.template(template)
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 24018:
/*!****************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/add-select/attribute/select.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Product add attribute select extension view
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/common/add-select */ 64191), __webpack_require__(/*! pim/product/add-select/attribute/line */ 79726), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/attribute-manager */ 41700), __webpack_require__(/*! pim/formatter/choices/base */ 78464), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseAddSelect, LineView, FetcherRegistry, AttributeManager, ChoicesFormatter, analytics) {
  return BaseAddSelect.extend({
    className: 'AknButtonList-item add-attribute',
    lineView: LineView,
    defaultConfig: {
      select2: {
        placeholder: 'pim_common.add_attributes',
        title: 'pim_common.select2.search',
        buttonTitle: 'pim_common.add',
        countTitle: 'pim_enrich.entity.attribute.module.add_attribute.attributes_selected',
        emptyText: 'pim_enrich.entity.attribute.module.add_attribute.no_available_attributes',
        classes: 'pim-add-attributes-multiselect',
        minimumInputLength: 0,
        dropdownCssClass: 'add-attribute',
        closeOnSelect: false
      },
      resultsPerPage: 10,
      mainFetcher: 'attribute',
      events: {
        disable: null,
        enable: null,
        add: 'add-attribute:add'
      }
    },

    /**
     * {@inheritdoc}
     */
    getItemsToExclude: function getItemsToExclude() {
      return $.Deferred().resolve(_.keys(this.getFormData().values));
    },

    /**
     * This method is overridden to fetch attribute groups and set it inside attribute items.
     *
     * {@inheritdoc}
     */
    fetchItems: function fetchItems(searchParameters) {
      if (undefined !== this.config.attributeTypes && Array.isArray(this.config.attributeTypes)) {
        searchParameters.types = this.config.attributeTypes.join(',');
      }

      return BaseAddSelect.prototype.fetchItems.apply(this, [searchParameters]).then(function (attributes) {
        var groupCodes = _.unique(_.pluck(attributes, 'group'));

        return FetcherRegistry.getFetcher('attribute-group').fetchByIdentifiers(groupCodes).then(function (attributeGroups) {
          return this.populateGroupProperties(attributes, attributeGroups);
        }.bind(this));
      }.bind(this));
    },

    /**
     * Transforms each attribute
     *
     * { code: 'name', group: 'marketing', ...  }
     *
     * into
     *
     * { code: 'name', group: { code: 'marketing', sort_order: 2, ... }, ...  }
     *
     * @param {Array} attributes
     * @param {Array} attributeGroups
     */
    populateGroupProperties: function populateGroupProperties(attributes, attributeGroups) {
      return _.map(attributes, function (attribute) {
        return _.extend(attribute, {
          group: _.findWhere(attributeGroups, {
            code: attribute.group
          })
        });
      });
    },

    /**
     * {@inheritdoc}
     */
    prepareChoices: function prepareChoices(items) {
      return _.chain(items).map(function (item) {
        var group = ChoicesFormatter.formatOne(item.group);
        var choice = ChoicesFormatter.formatOne(item);
        choice.group = group;
        return choice;
      }).value();
    },

    /**
     * Triggers configured event with items codes selected
     */
    addItems: function addItems() {
      this.trigger(this.addEvent, {
        codes: this.selection
      });
      analytics.track('grid:mass-edit:attributes-added', {
        codes: this.selection
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 70420:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/completeness.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * completeness filter extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/provider/to-fill-field-provider */ 26682)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseForm, fetcherRegistry, UserContext, toFillFieldProvider) {
  return BaseForm.extend({
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:field:extension:add', this.addFieldExtension);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritDoc}
     */
    addFieldExtension: function addFieldExtension(event) {
      var scope = UserContext.get('catalogScope');
      var locale = UserContext.get('catalogLocale');
      var fieldsToFill = toFillFieldProvider.getMissingRequiredFields(this.getFormData(), scope, locale);
      var field = event.field;

      if (_.contains(fieldsToFill, field.attribute.code)) {
        field.addElement('badge', 'completeness', '<span class="AknBadge AknBadge--small AknBadge--highlight"></span>');
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 55009:
/*!****************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/locale-specific.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Locale specific field extension
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm) {
  return BaseForm.extend({
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:field:extension:add', this.addFieldExtension);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Add this field extension to the given field event
     *
     * @param {Object} event
     *
     * @returns {Promise}
     */
    addFieldExtension: function addFieldExtension(event) {
      var field = event.field;

      if (!field.attribute.is_locale_specific) {
        return;
      }

      if (!_.contains(field.attribute.available_locales, field.context.locale)) {
        this.updateFieldElements(field);
      } else {
        field.removeElement('field-input', 'input_placeholder');
      }

      return this;
    },

    /**
     * Update the given field by adding element to it
     *
     * @param {Object} field
     */
    updateFieldElements: function updateFieldElements(field) {
      var message = __('pim_enrich.entity.product.module.attribute.locale_specific_unavailable');

      var element = '<span class="AknFieldContainer-unavailable">' + message + '</span>';
      field.addElement('field-input', 'input_placeholder', element);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 91543:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/localizable.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Localizable field extension
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseForm, FetcherRegistry) {
  return BaseForm.extend({
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:field:extension:add', this.addFieldExtension);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Add this field extension to the given field event
     *
     * @param {Object} event
     *
     * @returns {Promise}
     */
    addFieldExtension: function addFieldExtension(event) {
      var field = event.field;

      if (!field.attribute.localizable) {
        return;
      }

      var retrieveChannel = FetcherRegistry.getFetcher('channel').fetch(field.context.scope).then(function (channel) {
        if (!this.channelHasLocale(channel, field.context.locale)) {
          this.updateFieldElements(field.context, field);
        }
      }.bind(this));
      event.promises.push(retrieveChannel);
      return this;
    },

    /**
     * Return whether the given channel has the given locale
     *
     * @param {string} channel
     *
     * @returns {boolean}
     */
    channelHasLocale: function channelHasLocale(channel, locale) {
      return _.contains(_.pluck(channel.locales, 'code'), locale);
    },

    /**
     * Update the given field by adding element to it
     *
     * @param {Object} field
     */
    updateFieldElements: function updateFieldElements(context, field) {
      var message = _.__('pim_enrich.entity.product.module.attribute.locale_unavailable', {
        channel: context.scope,
        locale: context.locale
      });

      var element = '<span class="AknFieldContainer-unavailable">' + message + '</span>';
      field.addElement('field-input', 'input_placeholder', element);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 46790:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/read-only-form.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Extension to disable mass edit operation on confirm step
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/form/tab/attributes */ 37961)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, BaseForm, attributeTemplate) {
  return BaseForm.extend({
    template: _.template(attributeTemplate),
    readOnly: false,

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:field:extension:add', this.addFieldExtension);
      this.listenTo(this.getRoot(), 'pim_enrich:form:update_read_only', function (readOnly) {
        this.readOnly = readOnly;
      }.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritDoc}
     */
    addFieldExtension: function addFieldExtension(event) {
      if (!this.isAttributeEditable()) {
        event.field.setEditable(false);
      }
    },

    /**
     * Is the current attribute editable ?
     *
     * @return {Boolean}
     */
    isAttributeEditable: function isAttributeEditable() {
      return !this.readOnly;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 29881:
/*!****************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/read-only-parent-attributes.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This module sets parent attributes as read only and add a message in the footer of the field
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, UserContext, router, BaseForm) {
  return BaseForm.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:field:extension:add', this.addFieldExtension);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    addFieldExtension: function addFieldExtension(event) {
      var entity = this.getFormData();

      if (undefined === entity.meta || null === entity.meta.family_variant) {
        return;
      }

      var levelAttributeCodes = entity.meta.attributes_for_this_level;
      var field = event.field;

      if (!levelAttributeCodes.includes(field.attribute.code)) {
        field.setEditable(false);
        this.updateFieldElements(field);
      }

      return this;
    },

    /**
     * Update the given field by adding element to it
     *
     * @param {Object} field
     */
    updateFieldElements: function updateFieldElements(field) {
      var _this = this;

      var entity = this.getFormData();
      var isProduct = 'product' === entity.meta.model_type;

      var message = __('pim_enrich.entity.product_model.module.attribute.read_only_parent_attribute_from_common');

      var modelId = entity.meta.variant_navigation[0].selected.id;

      if (isProduct) {
        var uiLocale = UserContext.get('uiLocale');
        var comesFromParent = entity.meta.parent_attributes.includes(field.attribute.code);
        var hasTwoLevelsOfVariation = 3 === entity.meta.variant_navigation.length;

        if (comesFromParent && hasTwoLevelsOfVariation) {
          var parentAxesLabels = entity.meta.variant_navigation[1].axes[uiLocale];
          message = __('pim_enrich.entity.product_model.module.attribute.read_only_parent_attribute_from_model', {
            axes: parentAxesLabels
          });
          modelId = entity.meta.variant_navigation[1].selected.id;
        }
      }

      var $element = $('<span class="AknFieldContainer-clickable">' + message + '</span>');
      $element.on('click', function () {
        _this.redirectToModel(modelId);
      });
      field.addElement('footer', 'read_only_parent_attribute', $element);
    },
    redirectToModel: function redirectToModel(modelId) {
      var params = {
        id: modelId
      };
      var route = 'pim_enrich_product_model_edit';
      router.redirectToRoute(route, params);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 64090:
/*!*****************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/validation-error.js ***!
  \*****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Validation error extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/template/product/tab/attribute/validation-error */ 30943), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Backbone, template, i18n) {
  return Backbone.View.extend({
    template: _.template(template),
    className: 'AknFieldContainer-validationErrors validation-errors',
    events: {
      'click .change-context': 'changeContext'
    },
    initialize: function initialize(errors, parent) {
      this.errors = errors;
      this.parent = parent;
    },
    render: function render() {
      this.$el.html(this.template({
        errors: this.errors,
        i18n: i18n
      }));
      this.delegateEvents();
      return this;
    },
    changeContext: function changeContext(event) {
      this.parent.changeContext(event.currentTarget.dataset.locale, event.currentTarget.dataset.scope);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 52636:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/validation.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Validation extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/product-edit-form/attributes/validation-error */ 64090), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, Backbone, BaseForm, mediator, messenger, FieldManager, ValidationError, UserContext) {
  return BaseForm.extend({
    validationErrors: {},

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:pre_save', this.onPreSave);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:bad_request', this.onValidationError);
      this.listenTo(this.getRoot(), 'pim_enrich:form:field:extension:add', this.addFieldExtension);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Pre save callback
     */
    onPreSave: function onPreSave() {
      this.validationErrors = {};
    },

    /**
     * On validation callback
     *
     * @param {Event} event
     */
    onValidationError: function onValidationError(event) {
      this.validationErrors = event.response;

      var globalErrors = _.where(this.validationErrors.values, {
        global: true
      }); // Global errors with an empty property path


      _.each(globalErrors, function (error) {
        messenger.notify('error', error.message);
      });

      this.getRoot().trigger('pim_enrich:form:entity:validation_error', event);
    },

    /**
     * On field extension
     *
     * @param {Event} event
     */
    addFieldExtension: function addFieldExtension(event) {
      var field = event.field;

      var valuesErrors = _.uniq(this.validationErrors.values, function (error) {
        var errorClone = _.clone(error);

        delete errorClone.path;
        return JSON.stringify(errorClone);
      });

      var errorsForAttribute = _.where(valuesErrors, {
        attribute: field.attribute.code
      });

      if (!_.isEmpty(errorsForAttribute)) {
        this.addErrorsToField(field, errorsForAttribute);
      }
    },

    /**
     * Add an error to a field
     *
     * @param {Object} field
     * @param {Array}  fieldError
     */
    addErrorsToField: function addErrorsToField(field, fieldErrors) {
      field.addElement('footer', 'validation', new ValidationError(fieldErrors, this));
      field.setValid(false);
    },

    /**
     * Change the current context
     *
     * @param {[type]} locale
     * @param {[type]} scope
     */
    changeContext: function changeContext(locale, scope) {
      if (locale) {
        UserContext.set('catalogLocale', locale);
      }

      if (scope) {
        UserContext.set('catalogScope', scope);
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71553:
/*!*************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/attributes/variant-axes.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This module sets variant axes as read only and add a message in the label of the field
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm) {
  return BaseForm.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:field:extension:add', this.addFieldExtension);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    addFieldExtension: function addFieldExtension(event) {
      var entity = this.getFormData();

      if (undefined === entity.meta || null === entity.meta.family_variant) {
        return;
      }

      var axesAttributeCodes = entity.meta.attributes_axes;
      var field = event.field;

      if (axesAttributeCodes.includes(field.attribute.code)) {
        this.updateFieldElements(field);
      }

      return this;
    },

    /**
     * Update the given field by adding element to it
     *
     * @param {Object} field
     */
    updateFieldElements: function updateFieldElements(field) {
      var message = '(' + __('pim_enrich.entity.product_model.module.variant_axis.label') + ')';
      var element = '<span class="">' + message + '</span>';
      field.addElement('label', 'variant_axis', element);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 30858:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/categories.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Category tab extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/tab/categories */ 32754), __webpack_require__(/*! pim/template/product/tab/catalog-switcher */ 19598), __webpack_require__(/*! pim/template/product/tab/jstree-locked-item */ 41092), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/tree/associate */ 41314), __webpack_require__(/*! oro/mediator */ 27615)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseForm, formTemplate, switcherTemplate, lockedTemplate, UserContext, Routing, TreeAssociate, mediator) {
  return BaseForm.extend({
    template: _.template(formTemplate),
    switcherTemplate: _.template(switcherTemplate),
    lockedTemplate: _.template(lockedTemplate),
    className: 'tab-pane active',
    id: 'product-categories',
    treeLinkSelector: 'tree-link-',
    treeHasItemClass: 'tree-has-item',
    events: {
      'click .nav-tabs li': 'changeTree',
      'change #hidden-tree-input': 'updateModel'
    },
    treeAssociate: null,
    cache: {},
    trees: [],

    /**
     * Associates the tree code to the number of selected categories
     * Example: { master: 1, sales: 12 }
     */
    categoriesCount: {},

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.state = new Backbone.Model();
      this.state.set('selectedCategories', {});

      if (undefined !== config) {
        this.config = config.config;
      }

      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: undefined === this.config.tabCode ? this.code : this.config.tabCode,
        isVisible: this.isVisible.bind(this),
        label: __('pim_enrich.entity.category.plural_label')
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', this.handleLocaleChange.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },
    handleLocaleChange: function handleLocaleChange(_ref) {
      var context = _ref.context;

      if ('base_product' === context && null !== this.treeAssociate) {
        this.trees = [];
        this.render();
      }
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.loadTrees().done(function (trees) {
        this.trees = trees;

        if (undefined === this.state.toJSON().currentTree) {
          this.state.set('currentTree', _.first(this.trees).code);
          this.state.set('currentTreeId', _.first(this.trees).id);
        }

        this.$el.html(this.template({
          product: this.getFormData(),
          locale: UserContext.get('catalogLocale'),
          state: this.state.toJSON(),
          trees: this.trees
        }));
        var lockedCategoryIds = this.getFormData().meta.ascendant_category_ids;
        this.treeAssociate = new TreeAssociate({
          list_categories: this.config.itemCategoryListRoute,
          children: 'pim_enrich_categorytree_children'
        }, this.isReadOnly(), lockedCategoryIds);
        this.initCategoryCount();
        this.renderCategorySwitcher();
      }.bind(this));
      this.delegateEvents();
      return this;
    },

    /**
     * Renders the category switcher in the main template
     */
    renderCategorySwitcher: function renderCategorySwitcher() {
      this.$el.find('.catalog-switcher:first').html(this.switcherTemplate({
        state: this.state.toJSON(),
        trees: this.trees,
        categoriesCount: this.categoriesCount,
        treeLinkSelector: this.treeLinkSelector,
        currentCategory: _.result(_.findWhere(this.trees, {
          code: this.state.toJSON().currentTree
        }), 'label')
      }));
    },

    /**
     * Load category trees
     */
    loadTrees: function loadTrees() {
      return $.getJSON(Routing.generate(this.config.itemCategoryTreeRoute, {
        id: this.getFormData().meta.id,
        uuid: this.getFormData().meta.id,
        // Passing the locale as request parameter will force to refresh the current user locale in session
        // @see \Akeneo\UserManagement\Bundle\Context\UserContext::getCurrentLocale
        dataLocale: UserContext.get('catalogLocale')
      })).then(function (data) {
        var selectedCategories = {};

        _.each(data.categories, function (category) {
          this.cache[category.code] = category;

          if (!selectedCategories[category.rootId]) {
            selectedCategories[category.rootId] = [];
          }

          selectedCategories[category.rootId].push(category.code);
        }.bind(this));

        if (_.isEmpty(this.state.get('selectedCategories'))) {
          this.state.set('selectedCategories', selectedCategories);
        }

        return data.trees;
      }.bind(this));
    },

    /**
     * Displays the current tree when the user choose another one
     */
    changeTree: function changeTree(event) {
      this.state.set('currentTree', event.currentTarget.dataset.tree);
      this.state.set('currentTreeId', event.currentTarget.dataset.treeId);
      this.treeAssociate.switchTree(event.currentTarget.dataset.treeId);
      this.renderCategorySwitcher();
    },

    /**
     * Change the current model when categories are checked/unchecked
     *
     * @param {Event} event
     */
    updateModel: function updateModel(event) {
      var selectedCategoryCodesByTreeId = JSON.parse(event.currentTarget.value);
      this.state.set('selectedCategories', selectedCategoryCodesByTreeId);
      var rootTreeId = this.state.get('currentTreeId');
      this.categoriesCount[rootTreeId] = selectedCategoryCodesByTreeId[rootTreeId].length;
      this.renderCategorySwitcher();
      var allTreesCategoryCodes = [];
      Object.values(selectedCategoryCodesByTreeId).forEach(function (categoryCodes) {
        allTreesCategoryCodes = allTreesCategoryCodes.concat(categoryCodes);
      });
      this.getFormModel().set('categories', allTreesCategoryCodes);
      mediator.trigger('pim_enrich:form:entity:update_state');
    },

    /**
     * Initialize category count with hidden values
     */
    initCategoryCount: function initCategoryCount() {
      var _this = this;

      this.categoriesCount = {};
      Object.keys(this.state.get('selectedCategories')).forEach(function (treeId) {
        _this.categoriesCount[treeId] = _this.state.get('selectedCategories')[treeId].length;
      });
    },

    /**
     * Check if this extension is visible
     *
     * @returns {boolean}
     */
    isVisible: function isVisible() {
      return true;
    },
    isReadOnly: function isReadOnly() {
      return false;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 46149:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/comments.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Comment panel extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/template/product/comments */ 28360), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/dialog */ 42905)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseForm, UserContext, template, Routing, messenger, Dialog) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'panel-pane',
    comments: [],
    events: {
      'keyup .comment-create textarea, .reply-to-comment textarea': 'toggleButtons',
      'click .comment-create .send-comment': 'saveComment',
      'click .remove-comment': 'removeComment',
      'click .comment-thread .send-comment': 'saveReply',
      'click .comment-thread .cancel-comment, .comment-create .cancel-comment': 'cancelComment'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.comment = new Backbone.Model();
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: this.code,
        label: __('pim_enrich.entity.product.module.comment.title')
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured || this.code !== this.getParent().getCurrentTab()) {
        return this;
      }

      this.loadData().done(function (data) {
        this.comments = data;
        this.$el.html(this.template({
          __: __,
          comments: this.comments,
          username: UserContext.get('username'),
          removedAuthor: '[' + __('pim_enrich.entity.product.module.comment.removed_author') + ']',
          emptyLabel: __('pim_enrich.entity.product.module.comment.empty')
        }));
        this.delegateEvents();
      }.bind(this));
      return this;
    },

    /**
     * Load the comments from database
     *
     * @return {Promise}
     */
    loadData: function loadData() {
      return $.get(Routing.generate('pim_enrich_product_comments_rest_get', {
        uuid: this.getFormData().meta.id
      }));
    },

    /**
     * Display or hide the save/cancel buttons attached to the text area
     *
     * @param {Event} event
     */
    toggleButtons: function toggleButtons(event) {
      var $element = $(event.currentTarget).parents('.comment-thread, .comment-create');

      if ($element.find('textarea').val()) {
        $element.addClass('active');
        $element.find('.AknButtonList').removeClass('AknButtonList--hide');
      } else {
        $element.removeClass('active');
        $element.find('.AknButtonList').addClass('AknButtonList--hide');
      }
    },

    /**
     * Cancels the current written comment
     *
     * @param {Event} event
     */
    cancelComment: function cancelComment(event) {
      var $element = $(event.currentTarget).parents('.comment-thread, .comment-create');
      $element.find('textarea').val('');
      $element.removeClass('active');
      $element.find('.AknButtonList').addClass('AknButtonList--hide');
    },

    /**
     * Saves the current comment to database
     */
    saveComment: function saveComment() {
      $.ajax({
        type: 'POST',
        url: Routing.generate('pim_enrich_product_comments_rest_post', {
          uuid: this.getFormData().meta.id
        }),
        contentType: 'application/json',
        data: JSON.stringify({
          body: this.$('.comment-create textarea').val()
        })
      }).done(function () {
        this.render();
        messenger.notify('success', __('flash.comment.create.success'));
      }.bind(this)).fail(function () {
        messenger.notify('error', __('flash.comment.create.error'));
      });
    },

    /**
     * Shows a confirm dialog before removing the current comment
     *
     * @param {Event} event
     */
    removeComment: function removeComment(event) {
      Dialog.confirmDelete(__('pim_enrich.entity.product.module.comment.delete_confirm'), __('pim_common.confirm_deletion'), this.doRemove.bind(this, event));
    },

    /**
     * Removes the comment from database
     *
     * @param {Event} event
     */
    doRemove: function doRemove(event) {
      $.ajax({
        url: Routing.generate('pim_comment_comment_delete', {
          id: event.currentTarget.dataset.commentId
        }),
        type: 'POST',
        headers: {
          accept: 'application/json'
        },
        data: {
          _method: 'DELETE'
        }
      }).done(function () {
        this.render();
        messenger.notify('success', __('flash.comment.delete.success'));
      }.bind(this)).fail(function () {
        messenger.notify('error', __('flash.comment.delete.error'));
      });
    },

    /**
     * Save the current reply of a comment
     *
     * @param {Event} event
     */
    saveReply: function saveReply(event) {
      var $thread = $(event.currentTarget).parents('.comment-thread');
      $.ajax({
        type: 'POST',
        url: Routing.generate('pim_enrich_product_comment_reply_rest_post', {
          uuid: this.getFormData().meta.id,
          commentId: $thread.data('comment-id')
        }),
        contentType: 'application/json',
        data: JSON.stringify({
          body: $thread.find('textarea').val()
        })
      }).done(function () {
        $thread.find('textarea').val('');
        this.render();
        messenger.notify('success', __('flash.comment.reply.success'));
      }.bind(this)).fail(function () {
        messenger.notify('error', __('flash.comment.reply.error'));
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 12430:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/completeness.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Completeness panel extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/completeness */ 6689), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! @akeneo-pim-community/enrichment */ 63430)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, FetcherRegistry, i18n, UserContext, _ref) {
  var ChannelsLocalesCompleteness = _ref.ChannelsLocalesCompleteness,
      formatProductCompleteness = _ref.formatProductCompleteness;
  return BaseForm.extend({
    template: _.template(template),
    className: 'panel-pane completeness-panel AknCompletenessPanel',
    initialFamily: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.initialFamily = null;
      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: this.code,
        label: __('pim_enrich.entity.product.module.completeness.title')
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render);
      this.listenTo(UserContext, 'change:catalogLocale', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured || this.code !== this.getParent().getCurrentTab()) {
        return this;
      }

      if (this.getFormData().meta) {
        var catalogLocale = UserContext.get('catalogLocale');
        var sortedCompleteness = this.sortCompleteness(this.getFormData().meta.completenesses);
        var channelsLocalesRatios = formatProductCompleteness(sortedCompleteness, catalogLocale);
        this.renderReact(ChannelsLocalesCompleteness, {
          channelsLocalesRatios: channelsLocalesRatios
        }, this.el);
      }

      return this;
    },

    /**
     * Sort completenesses. Put the user current catalog scope first.
     *
     * @param completenesses
     *
     * @returns {Array}
     */
    sortCompleteness: function sortCompleteness(completenesses) {
      if (_.isEmpty(completenesses)) {
        return [];
      }

      var sortedCompleteness = [_.findWhere(completenesses, {
        channel: UserContext.get('catalogScope')
      })];
      return _.union(sortedCompleteness, completenesses);
    },

    /**
     * On family change listener
     */
    onChangeFamily: function onChangeFamily() {
      if (!_.isEmpty(this.getRoot().model._previousAttributes)) {
        var data = this.getFormData();
        data.meta.completenesses = [];
        this.setData(data);
        this.render();
      }
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 45136:
/*!**************************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/creation/identifier-regarding-family.js ***!
  \**************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This component allows to display an identifier field.
 * It is only displayed when the family contains the identifier attribute.
 *
 * @copyright 2022 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/product-edit-form/creation/identifier */ 89966), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Identifier, FetcherRegistry) {
  return Identifier.extend({
    shouldDisplay: function () {
      var _shouldDisplay = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _this$getFormData;

        var familyCode;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                familyCode = (_this$getFormData = this.getFormData()) === null || _this$getFormData === void 0 ? void 0 : _this$getFormData.family;

                if (!familyCode) {
                  _context.next = 5;
                  break;
                }

                return _context.abrupt("return", FetcherRegistry.getFetcher('family').fetch(familyCode).then(function (family) {
                  return !!family.attributes.find(function (attribute) {
                    return attribute.type === 'pim_catalog_identifier';
                  });
                }));

              case 5:
                return _context.abrupt("return", new Promise(function (resolve) {
                  return resolve(false);
                }));

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function shouldDisplay() {
        return _shouldDisplay.apply(this, arguments);
      }

      return shouldDisplay;
    }()
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 89966:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/creation/identifier.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Identifier field to be added in a creation form
 *
 * @author    Alban Alnot <alban.alnot@consertotech.pro>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/creation/field */ 71293), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/template/product-create-error */ 83377)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, FieldForm, UserContext, i18n, __, FetcherRegistry, errorTemplate) {
  return FieldForm.extend({
    errorTemplate: _.template(errorTemplate),

    /**
     * Renders the form
     *
     * @return {Promise}
     */
    render: function render() {
      var _this = this;

      return this.shouldDisplay().then(function (shouldDisplay) {
        if (!shouldDisplay) {
          _this.$el.html('');

          _this.updateModel({
            target: {
              value: undefined
            }
          });

          return _this;
        }

        _this.updateModel({
          target: {
            value: _this.getFormData()[_this.identifier] || ''
          }
        });

        return FetcherRegistry.getFetcher('attribute').getIdentifierAttribute().then(function (identifier) {
          this.$el.html(this.template({
            identifier: this.identifier,
            label: i18n.getLabel(identifier.labels, UserContext.get('catalogLocale'), identifier.code),
            requiredLabel: '',
            errors: this.getRoot().validationErrors,
            value: this.getFormData()[this.identifier]
          }));
          this.delegateEvents();
          return this;
        }.bind(_this)).fail(function () {
          _this.$el.html(_this.errorTemplate({
            message: __('pim_enrich.entity.product.flash.create.fail')
          }));
        });
      });
    },
    shouldDisplay: function () {
      var _shouldDisplay = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", new Promise(function (resolve) {
                  return resolve(true);
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function shouldDisplay() {
        return _shouldDisplay.apply(this, arguments);
      }

      return shouldDisplay;
    }()
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 45724:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/creation/modal.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/form/common/creation/modal */ 90906)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, messenger, BaseModal) {
  return BaseModal.extend({
    postSuccess: function postSuccess(entity) {
      var _entity$meta;

      if ((_entity$meta = entity.meta) !== null && _entity$meta !== void 0 && _entity$meta.identifier_generator_warnings) {
        var normalizedWarnings = entity.meta.identifier_generator_warnings.map(function (warning) {
          return "".concat(warning.path, ": ").concat(warning.message, " ");
        });
        messenger.notify('warning', __('pim_enrich.entity.product.flash.update.identifier_warning'), normalizedWarnings);
      }

      messenger.notify('success', __(this.config.successMessage));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 77273:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/delete.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Delete product extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/product */ 34710)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, ProductRemover) {
  return DeleteForm.extend({
    remover: ProductRemover,

    /**
     * {@inheritdoc}
     */
    getIdentifier: function getIdentifier() {
      return this.getFormData().meta.id;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 88442:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/download-pdf.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Download pdf extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/download-pdf */ 55697), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseForm, template, Routing, UserContext) {
  return BaseForm.extend({
    tagName: 'a',
    className: 'AknDropdown-menuLink btn-download',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      UserContext.off('change:catalogLocale change:catalogScope', this.render);
      this.listenTo(UserContext, 'change:catalogLocale change:catalogScope', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.getFormData().meta) {
        return;
      }

      this.$el.html(this.template());
      this.$el.attr('href', Routing.generate('pim_pdf_generator_download_product_pdf', {
        uuid: this.getFormData().meta.id,
        dataLocale: UserContext.get('catalogLocale'),
        dataScope: UserContext.get('catalogScope')
      }));
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 92882:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/history.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * History extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/history */ 43830), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! bootstrap-modal */ 21430)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, BaseForm, template, Routing, mediator, FetcherRegistry, UserContext, i18n) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'panel-pane history-panel',
    loading: false,
    expandedVersions: [],
    actions: {},
    events: {
      'click .expanded .AknGrid-bodyCell.AknGrid-bodyCell--clickable': 'toggleVersion'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.actions = {};

      if (undefined !== config) {
        this.config = config.config;
      }

      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.trigger('tab:register', {
        code: undefined === this.config.tabCode ? this.code : this.config.tabCode,
        label: __('pim_common.history')
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.update);
      this.onExtensions('action:register', this.addAction.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      var tabCode = undefined === this.config.tabCode ? this.code : this.config.tabCode;

      if (tabCode !== this.getParent().getCurrentTab()) {
        return this;
      }

      if (this.getFormData().meta) {
        this.getVersions().then(function (versions) {
          this.$el.html(this.template({
            versions: versions,
            expandedVersions: this.expandedVersions,
            expanded: true,
            hasAction: this.actions
          }));
          this.renderExtensions();

          if (this.actions) {
            _.each(this.$el.find('td.actions'), function (element) {
              _.each(this.actions, function (action) {
                $(element).append(action.clone(true));
              }.bind(this));
            }.bind(this));
          }

          this.delegateEvents();
        }.bind(this));
      }

      return this;
    },

    /**
     * Update the history by fetching it from the backend
     */
    update: function update() {
      var entity = this.getFormData();

      if (entity.meta) {
        this.getHistoryFetcher(entity).clear(entity.meta.id);
      }

      this.render();
    },

    /**
     * Get history versions from the backend
     *
     * @return {Promise}
     */
    getVersions: function getVersions() {
      var entity = this.getFormData();
      return this.getHistoryFetcher(entity).fetch(entity.meta.id, {
        entityId: entity.meta.id
      }).then(this.addAttributesLabelToVersions.bind(this));
    },

    /**
     * @param {Object} entity
     *
     * @returns Fetcher
     */
    getHistoryFetcher: function getHistoryFetcher(entity) {
      if ('product_model' === entity.meta.model_type) {
        return FetcherRegistry.getFetcher('product-model-history');
      }

      return FetcherRegistry.getFetcher('product-history');
    },

    /**
     * Add attributes label to all versions
     *
     * @param {Array} versions
     */
    addAttributesLabelToVersions: function addAttributesLabelToVersions(versions) {
      var codes = this.getAttributeCodesInVersions(versions);
      return FetcherRegistry.getFetcher('attribute').fetchByIdentifiers(codes).then(function (attributes) {
        _.each(versions, function (version) {
          _.each(version.changeset, function (data, index) {
            var code = index.split('-')[0];

            var attribute = _.findWhere(attributes, {
              code: code
            });

            data.label = attribute ? this.getAttributeLabel(attribute, index) : index;
          }.bind(this));
        }.bind(this));

        return versions;
      }.bind(this));
    },

    /**
     * Return the list of unique attribute codes found in all versions
     *
     * @param {Array} versions
     *
     * @returns {Array}
     */
    getAttributeCodesInVersions: function getAttributeCodesInVersions(versions) {
      var codes = [];

      _.each(versions, function (version) {
        _.each(version.changeset, function (data, index) {
          codes.push(index.split('-')[0]);
        });
      });

      return _.uniq(codes);
    },

    /**
     * Get attribute label
     *
     * @param {object} attribute
     * @param {string} key
     *
     * @return {string}
     */
    getAttributeLabel: function getAttributeLabel(attribute, key) {
      var uiLocale = UserContext.get('catalogLocale');
      var label = i18n.getLabel(attribute.labels, uiLocale, attribute.code);
      key = key.split('-');
      key.shift();
      var info = '';

      if (attribute.localizable) {
        info += i18n.getFlag(key.shift());
      }

      if (attribute.scopable) {
        info = ' <span>' + key.shift() + '</span>' + info;
      }

      if (0 < key.length) {
        info = key.join(' ') + info;
      }

      if (info) {
        info = ' <span class="attribute-info">' + info + '</span>';
      }

      return label + info;
    },

    /**
     * Add action to the history
     *
     * @param {Event} event
     */
    addAction: function addAction(event) {
      this.actions[event.code] = event.element;
    },

    /**
     * Toggle history version line
     *
     * @param {Event} event
     */
    toggleVersion: function toggleVersion(event) {
      var versionToToggle = event.currentTarget.parentNode.dataset.version;

      if (this.expandedVersions.find(function (version) {
        return version === versionToToggle;
      })) {
        this.expandedVersions = this.expandedVersions.filter(function (version) {
          return version !== versionToToggle;
        });
      } else {
        this.expandedVersions.push(versionToToggle);
      }

      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 31636:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/locale-switcher.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Locale switcher extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/locale-switcher */ 32965), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template, FetcherRegistry, i18n, UserContext, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'AknDropdown AknButtonList-item locale-switcher',
    events: {
      'click li span[data-locale]': 'changeLocale'
    },
    displayInline: false,
    displayLabel: true,
    config: {},
    selectedLocale: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      if (undefined !== config) {
        this.config = config.config;
      }

      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', function (localeEvent) {
        if ('base_product' === localeEvent.context) {
          this.render();
        }
      }.bind(this));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.getDisplayedLocales().done(function (locales) {
        this.$el.removeClass('open');

        var defaultLocaleCode = _.first(locales).code;

        var catalogLocaleCode = locales.find(function (locale) {
          return locale.code === UserContext.get('catalogLocale');
        });

        if (catalogLocaleCode) {
          defaultLocaleCode = catalogLocaleCode.code;
        }

        var params = {
          localeCode: defaultLocaleCode,
          context: this.config.context
        };
        this.getRoot().trigger('pim_enrich:form:locale_switcher:pre_render', params);
        var currentLocale = params.localeCode && locales.find(function (locale) {
          return locale.code === params.localeCode;
        });

        if (undefined === currentLocale) {
          currentLocale = _.first(locales);
        }

        this.$el.html(this.template({
          locales: locales,
          currentLocale: currentLocale,
          i18n: i18n,
          displayInline: this.displayInline,
          displayLabel: this.displayLabel,
          label: __('pim_enrich.entity.locale.uppercase_label')
        }));
        this.delegateEvents();
      }.bind(this));
      return this;
    },

    /**
     * Retrieve locales to display in the locale switcher
     *
     * @returns {Promise}
     */
    getDisplayedLocales: function getDisplayedLocales() {
      return FetcherRegistry.getFetcher('locale').fetchActivated();
    },

    /**
     * Method triggered on the 'change locale' event
     *
     * @param {Object} event
     */
    changeLocale: function changeLocale(event) {
      var localeCode = event.currentTarget.dataset.locale;
      var context = this.config.context;
      this.getRoot().trigger('pim_enrich:form:locale_switcher:change', {
        localeCode: localeCode,
        context: context
      });
      analytics.track('product:form:locale-switched', {
        localeCode: localeCode,
        context: context
      });
      this.render();
    },

    /**
     * Updates the inline display value
     *
     * @param {Boolean} value
     */
    setDisplayInline: function setDisplayInline(value) {
      this.displayInline = value;
    },

    /**
     * Updates the display label value
     *
     * @param {Boolean} value
     */
    setDisplayLabel: function setDisplayLabel(value) {
      this.displayLabel = value;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 81166:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/mass-edit/attributes.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Override of the attributes module.
 *
 * Purpose of this override is to avoid XHR call when removing an attribute
 * from the Product Edit Form (as we simply want to remove it from the DOM).
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/form/common/attributes */ 70017), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/attribute-manager */ 41700), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/template/product/form/mass-edit/attributes */ 89164)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, FieldManager, SecurityContext, BaseAttributes, FetcherRegistry, AttributeManager, UserContext, mediator, template) {
  return BaseAttributes.extend({
    template: _.template(template),
    locked: false,

    /**
     * Listen to mass edit form unlock and lock events
     *
     * {@inheritdoc}
     */
    configure: function configure() {
      mediator.on('mass-edit:form:lock', this.onLock.bind(this));
      mediator.on('mass-edit:form:unlock', this.onUnlock.bind(this));
      this.onExtensions('add-attribute:add', this.addAttributes.bind(this));
      return BaseAttributes.prototype.configure.apply(this, arguments);
    },

    /**
     * Override for field render to maintain form locked state
     * @param  {jQueryElement} panel Attribute panel element
     * @param  {Object} field Attribute field
     */
    appendField: function appendField(panel, field) {
      if (field.canBeSeen()) {
        field.setLocked(this.locked);
        field.render();
        panel.append(field.$el);
      }
    },

    /**
     * Add an attribute to the current attribute list
     *
     * @param {Event} event
     */
    addAttributes: function addAttributes(event) {
      var attributeCodes = event.codes;
      $.when(FetcherRegistry.getFetcher('attribute').fetchByIdentifiers(attributeCodes), FetcherRegistry.getFetcher('locale').fetch(UserContext.get('catalogLocale')), FetcherRegistry.getFetcher('channel').fetch(UserContext.get('catalogScope'), {
        force_list_method: true
      }), FetcherRegistry.getFetcher('currency').fetchAll()).then(function (attributes, locale, channel, currencies) {
        var formData = this.getFormData();

        _.each(attributes, function (attribute) {
          if (!formData.values[attribute.code]) {
            formData.values[attribute.code] = AttributeManager.generateMissingValues([], attribute, [locale], [channel], currencies);
          }
        });

        this.setData(formData);
        this.getRoot().trigger('pim_enrich:form:add-attribute:after');
      }.bind(this));
    },

    /**
     * Set mass edit form as locked
     *
     * {@inheritdoc}
     */
    onLock: function onLock() {
      this.locked = true;
    },

    /**
     * Set mass edit form as unlocked
     *
     * {@inheritdoc}
     */
    onUnlock: function onUnlock() {
      this.locked = false;
      this.render();
    },

    /**
     * {@inheritdoc}
     */
    removeAttribute: function removeAttribute(event) {
      if (!SecurityContext.isGranted('pim_enrich_product_remove_attribute')) {
        return;
      }

      var attributeCode = event.currentTarget.dataset.attribute;
      var product = this.getFormData();
      var fields = FieldManager.getFields();
      this.triggerExtensions('add-attribute:update:available-attributes');
      delete product.values[attributeCode]; // TODO: the manager's internal state shouldn't be modified by reference

      delete fields[attributeCode];
      this.setData(product);
      this.getRoot().trigger('pim_enrich:form:remove-attribute:after');
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 32895:
/*!******************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/mass-edit/form-model-updater.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Mass Edit Common Attributes exclusive module.
 *
 * It listens to any change on the Product Edit Form and update accordingly an
 * hidden field that contains the JSON value of the whole form.
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, BaseForm, UserContext) {
  return BaseForm.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:update_state', this.triggerModelUpdate);
      this.listenTo(this.getRoot(), 'pim_enrich:form:remove-attribute:after', this.triggerModelUpdate);
      this.listenTo(this.getRoot(), 'pim_enrich:form:add-attribute:after', this.triggerModelUpdate);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     *
     * We need to set values to null if they don't match the current selected locale or scope.
     * We can't directly delete them as the structure (scope/channel) is used for validation.
     * These unused values will be removed later in the back office.
     */
    triggerModelUpdate: function triggerModelUpdate() {
      var values = _.mapObject(this.getFormData().values, function (attributeValues) {
        return _.map(attributeValues, function (value) {
          if (null !== value.locale && UserContext.get('catalogLocale') !== value.locale) {
            value.data = null;
          }

          if (null !== value.scope && UserContext.get('catalogScope') !== value.scope) {
            value.data = null;
          }

          return value;
        });
      });

      this.setData({
        values: values
      }, {
        silent: true
      });
      this.getRoot().trigger('pim_enrich:mass_edit:model_updated', {
        values: values
      });
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 14114:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/meta/change-family.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Change family extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/meta/change-family-modal */ 21063), __webpack_require__(/*! pim/common/select2/family */ 81851), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! bootstrap-modal */ 21430), __webpack_require__(/*! jquery.select2 */ 53142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, Backbone, BaseForm, innerModalTemplate, Select2Configurator, initSelect2) {
  return BaseForm.extend({
    className: 'AknColumn-blockDown change-family',
    innerModalTemplate: _.template(innerModalTemplate),
    events: {
      click: 'showModal'
    },
    render: function render() {
      if (null !== this.getFormData().meta.family_variant) {
        this.$el.remove();
        return;
      }

      this.delegateEvents();
      return BaseForm.prototype.render.apply(this, arguments);
    },
    showModal: function showModal() {
      var familyModal = new Backbone.BootstrapModal({
        title: __('pim_enrich.entity.product.module.change_family.title'),
        content: this.innerModalTemplate({
          product: this.getFormData()
        }),
        illustrationClass: 'families',
        okText: __('pim_common.save'),
        cancelText: __('pim_common.cancel'),
        innerDescription: __('pim_enrich.entity.product.module.change_family.merge_attributes') + ' ' + __('pim_enrich.entity.product.module.change_family.keep_attributes')
      });
      familyModal.on('ok', function () {
        var selectedFamily = familyModal.$('.family-select2').select2('val') || null;
        this.getRoot().trigger('pim_enrich:form:change-family:before');
        this.setData({
          family: selectedFamily
        });
        familyModal.close();
        this.getRoot().trigger('pim_enrich:form:change-family:after');
      }.bind(this));
      familyModal.open();
      var options = Select2Configurator.getConfig(this.getFormData().family);
      initSelect2.init(familyModal.$('.family-select2'), options).select2('val', []);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 14770:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/meta/created.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Displays the created at meta information
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/meta/created */ 12139), __webpack_require__(/*! pim/template/product/meta/created */ 27626)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Created, template) {
  return Created.extend({
    className: 'AknColumn-block',
    template: _.template(template)
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 11513:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/meta/family-variant.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Meta extension to display family variant label
 *
 * @author    Adrien Petremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/meta/family-variant */ 28699), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, UserContext, i18n) {
  return BaseForm.extend({
    className: 'AknColumn-block',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(UserContext, 'change:catalogLocale', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      var entity = this.getFormData();
      var familyVariant = entity.meta.family_variant;

      if (null === familyVariant) {
        return this;
      }

      var label = i18n.getLabel(familyVariant.labels, UserContext.get('catalogLocale'), entity.meta.family_variant.code);
      this.$el.html(this.template({
        title: __('pim_enrich.entity.family_variant.short_label'),
        familyVariantLabel: label
      }));
      BaseForm.prototype.render.apply(this, arguments);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 15605:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/meta/family.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Family extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/meta/family */ 71159), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, mediator, BaseForm, template, FetcherRegistry, UserContext, i18n) {
  return BaseForm.extend({
    className: 'AknColumn-block',
    template: _.template(template),

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.render);
      UserContext.off('change:catalogLocale change:catalogScope', this.render);
      this.listenTo(UserContext, 'change:catalogLocale change:catalogScope', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      var familyPromise = _.isNull(this.getFormData().family) ? $.Deferred().resolve(null) : FetcherRegistry.getFetcher('family').fetch(this.getFormData().family);
      familyPromise.then(function (family) {
        var product = this.getFormData();
        this.$el.html(this.template({
          familyLabel: family ? i18n.getLabel(family.labels, UserContext.get('catalogLocale'), product.family) : _.__('pim_common.none')
        }));
        BaseForm.prototype.render.apply(this, arguments);
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 28653:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/meta/groups.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Product groups extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/template/product/meta/groups */ 81293), __webpack_require__(/*! pim/template/product/meta/group-modal */ 46559), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/group-manager */ 99555), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! bootstrap-modal */ 21430)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, mediator, Backbone, BaseForm, Routing, formTemplate, modalTemplate, UserContext, FetcherRegistry, GroupManager, router, i18n, LoadingMask) {
  return BaseForm.extend({
    tagName: 'span',
    className: 'AknColumn-block product-groups',
    template: _.template(formTemplate),
    modalTemplate: _.template(modalTemplate),
    events: {
      'click .product-group': 'displayModal'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!this.configured) {
        return this;
      }

      GroupManager.getProductGroups(this.getFormData()).done(function (groups) {
        groups = this.prepareGroupsForTemplate(groups);

        if (groups.length) {
          this.$el.html(this.template({
            label: __('pim_enrich.entity.product.module.meta.groups'),
            groups: groups
          }));
        } else {
          this.$el.html('');
        }
      }.bind(this));
      return this;
    },

    /**
     * Prepare groups for being displayed in the template
     *
     * @param {Array} groups
     *
     * @returns {Array}
     */
    prepareGroupsForTemplate: function prepareGroupsForTemplate(groups) {
      var locale = UserContext.get('catalogLocale');
      return _.map(groups, function (group) {
        return {
          label: group.labels[locale] || '[' + group.code + ']',
          code: group.code,
          isVariant: 'VARIANT' === group.type
        };
      });
    },

    /**
     * Get the product list for the given group
     *
     * @param {integer} groupCode
     *
     * @returns {Array}
     */
    getProductList: function getProductList(groupCode) {
      return $.getJSON(Routing.generate('pim_enrich_group_rest_list_products', {
        identifier: groupCode
      })).then(_.identity);
    },

    /**
     * Show the modal which displays infos about produt groups
     *
     * @param {Object} event
     */
    displayModal: function displayModal(event) {
      var loadingMask = new LoadingMask();
      loadingMask.render().$el.appendTo(this.getRoot().$el).show();
      GroupManager.getProductGroups(this.getFormData()).done(function (groups) {
        var group = _.findWhere(groups, {
          code: event.currentTarget.dataset.group
        });

        $.when(this.getProductList(group.code), FetcherRegistry.getFetcher('attribute').getIdentifierAttribute()).done(function (productList, identifierAttribute) {
          loadingMask.remove();
          this.groupModal = new Backbone.BootstrapModal({
            okText: __('pim_enrich.entity.product.module.show_group.view_group'),
            cancelText: __('pim_common.cancel'),
            title: __('pim_enrich.entity.product.module.show_group.title', {
              group: i18n.getLabel(group.labels, UserContext.get('catalogLocale'), group.code)
            }),
            content: this.modalTemplate({
              products: productList.products,
              productCount: productList.productCount,
              identifier: identifierAttribute,
              locale: UserContext.get('catalogLocale')
            }),
            illustrationClass: 'group'
          });
          this.groupModal.on('ok', function visitGroup() {
            this.groupModal.close();
            var route = 'pim_enrich_group_edit';
            var parameters = {
              code: group.code
            };
            router.redirectToRoute(route, parameters);
          }.bind(this));
          this.groupModal.open();
          this.groupModal.$el.on('click', 'a[data-product-id]', function visitProduct(event) {
            this.groupModal.close();
            router.redirectToRoute('pim_enrich_product_edit', {
              uuid: event.currentTarget.dataset.productId
            });
          }.bind(this));
        }.bind(this));
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 31221:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/meta/status-switcher.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Status switcher extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/meta/status-switcher */ 16219)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, mediator, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknColumn-block AknDropdown',
    template: _.template(template),
    events: {
      'click .AknDropdown-menuLink': 'updateStatus'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_update', this.render);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var status = this.getRoot().getFormData().enabled;
      this.$el.html(this.template({
        status: status,
        label: __('pim_common.status'),
        enabledLabel: __('pim_enrich.entity.product.module.status.enabled'),
        disabledLabel: __('pim_enrich.entity.product.module.status.disabled')
      }));
      this.delegateEvents();
      return this;
    },

    /**
     * Update the current status of the product
     *
     * @param {Event} event
     */
    updateStatus: function updateStatus(event) {
      var newStatus = event.currentTarget.dataset.status === 'enable';
      this.getFormModel().set('enabled', newStatus);
      this.getRoot().trigger('pim_enrich:form:entity:update_state');
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 15628:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/meta/updated.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Displays the updated at meta information
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/meta/updated */ 29572), __webpack_require__(/*! pim/template/product/meta/updated */ 93265)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Updated, template) {
  return Updated.extend({
    className: 'AknColumn-block',
    template: _.template(template)
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 69824:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/meta/uuid.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * @copyright 2022 Akeneo SAS (https://www.akeneo.com)
 * @license   https://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/form/common/meta/uuid */ 18746), __webpack_require__(/*! pim/template/product/meta/uuid */ 47142)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, Uuid, template) {
  return Uuid.extend({
    className: 'AknColumn-block',
    template: _.template(template)
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 84371:
/*!**********************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/product-and-product-model-picker.js ***!
  \**********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This extension allows user to display a fullscreen item picker.
 * It overrides the default item picker because we have to manage 2 types of entities:
 * - products (identified by their identifier)
 * - product models (identifier by their code)
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/common/item-picker */ 49593), __webpack_require__(/*! pim/media-url-generator */ 72689)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, ItemPicker, MediaUrlGenerator) {
  return ItemPicker.extend({
    items: [],
    initialize: function initialize() {
      this.items = [];
      return ItemPicker.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    selectModel: function selectModel(model) {
      this.addItem({
        id: model.get('identifier'),
        itemCode: "".concat(model.get('document_type'), ";").concat(model.get('id')),
        document_type: model.get('document_type'),
        technical_id: model.get('technical_id'),
        label: model.get('label'),
        image: model.get('image')
      });
    },

    /**
     * {@inheritdoc}
     */
    unselectModel: function unselectModel(model) {
      this.removeItem("".concat(model.get('document_type'), ";").concat(model.get('id')));
    },

    /**
     * {@inheritdoc}
     */
    updateBasket: function updateBasket() {
      this.renderBasket(this.items);
      this.delegateEvents();
    },

    /**
     * Add an item to the basket
     *
     * @param {Object} item
     *
     * @return this
     */
    addItem: function addItem(item) {
      var items = this.items;
      items.push(item);
      this.setItems(items);
      return this;
    },

    /**
     * Remove an item from the collection
     *
     * @param {string} itemCode
     *
     * @return this
     */
    removeItem: function removeItem(itemCode) {
      var items = _.filter(this.items, function (item) {
        return item.itemCode !== itemCode;
      });

      this.setItems(items);
      return this;
    },

    /**
     * Get all items in the collection
     *
     * @return {Array}
     */
    getItems: function getItems() {
      return this.items;
    },

    /**
     * Set items
     *
     * @param {Array} items
     *
     * @return this
     */
    setItems: function setItems(items) {
      this.items = _.uniq(items);
      this.updateBasket();
      return this;
    },

    /**
     * Remove an item from the basket (triggered by 'click .remove-item')
     *
     * @param {Event} event
     */
    removeItemFromBasket: function removeItemFromBasket(event) {
      this.removeItem(event.currentTarget.dataset.itemcode);

      if (this.datagridModel) {
        this.updateChecked(this.datagridModel);
      }
    },

    /**
     * Update the checked rows in the grid according to the current model
     *
     * @param {Object} datagrid
     */
    updateChecked: function updateChecked(datagrid) {
      if (datagrid.inputName !== this.datagrid.name) {
        return;
      }

      var items = this.getItems();
      datagrid.models.forEach(function (row) {
        if (_.some(items, function (item) {
          return item.itemCode === "".concat(row.get('document_type'), ";").concat(row.get('id'));
        })) {
          row.set('is_checked', true);
        } else {
          row.set('is_checked', null);
        }
      });
      this.setItems(items);
    },

    /**
     * {@inheritdoc}
     */
    imagePathMethod: function imagePathMethod(item) {
      var _item$image;

      return MediaUrlGenerator.getMediaShowUrl((_item$image = item.image) === null || _item$image === void 0 ? void 0 : _item$image.filePath, 'thumbnail_small');
    },

    /**
     * {@inheritdoc}
     */
    labelMethod: function labelMethod(item) {
      return item.label;
    },

    /**
     * {@inheritdoc}
     */
    itemCodeMethod: function itemCodeMethod(item) {
      return item.itemCode;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 59643:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/product-completeness.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Product completeness extension
 * Displays the global completeness of the product.
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! @akeneo-pim-community/enrichment */ 63430)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, router, BaseForm, i18n, UserContext, mediator, _ref) {
  var ProductCurrentCompleteness = _ref.ProductCurrentCompleteness,
      formatCurrentCompleteness = _ref.formatCurrentCompleteness;
  return BaseForm.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:scope_switcher:change', function (scopeEvent) {
        if ('base_product' === scopeEvent.context) {
          this.renderCompleteness({
            scope: scopeEvent.scopeCode
          });
        }
      }.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', function (localeEvent) {
        if ('base_product' === localeEvent.context) {
          this.renderCompleteness({
            locale: localeEvent.localeCode
          });
        }
      }.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.renderCompleteness.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:attributes:render:before', function () {
        mediator.trigger(new Event('ATTRIBUTES_LOADING'));
      });
      this.listenTo(this.getRoot(), 'pim_enrich:form:attributes:render:after', function () {
        mediator.trigger(new Event('ATTRIBUTES_LOADED'));
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritDoc}
     */
    render: function render() {
      this.renderCompleteness();
      return BaseForm.prototype.render.apply(this, arguments);
    },

    /**
     * {@inheritDoc}
     *
     * @param options Object
     * @param options.locale String
     * @param options.scope  String
     */
    renderCompleteness: function renderCompleteness(event) {
      var _this = this;

      var options = Object.assign({}, {
        locale: UserContext.get('catalogLocale'),
        scope: UserContext.get('catalogScope')
      }, event);
      var currentLocale = options.locale;
      var rawCurrentCompleteness = this.getCurrentCompletenesses(options.scope);
      var currentCompleteness = rawCurrentCompleteness ? formatCurrentCompleteness(rawCurrentCompleteness, currentLocale) : null;
      var product = this.getFormData();

      var redirectToAttributeTab = function redirectToAttributeTab() {
        _this.getRoot().trigger('pim_enrich:form:switch_values_filter', 'all');

        var tab = product.meta.model_type === 'product_model' ? 'pim-product-model-edit-form-attributes' : 'pim-product-edit-form-attributes';

        _this.getRoot().trigger('column-tab:change-tab', {
          currentTarget: {
            dataset: {
              tab: tab
            }
          },
          target: {
            dataset: {
              tab: tab
            }
          }
        });
      };

      var changeLocale = function changeLocale(localeCode) {
        _this.getRoot().trigger('pim_enrich:form:locale_switcher:change', {
          localeCode: localeCode,
          context: 'base_product'
        });
      };

      this.renderReact(ProductCurrentCompleteness, {
        currentCompleteness: currentCompleteness,
        product: product,
        changeLocale: changeLocale,
        redirectToAttributeTab: redirectToAttributeTab
      }, this.el);
      return this;
    },

    /**
     * Returns the completeness of the current scope
     *
     * @param scope String
     *
     * @return Object
     */
    getCurrentCompletenesses: function getCurrentCompletenesses(scope) {
      return _.findWhere(this.getFormData().meta.completenesses, {
        channel: scope
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 71989:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/product-label.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Product label extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/label */ 8709), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Label, UserContext, FetcherRegistry) {
  return Label.extend({
    family: null,

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.fetchFamily(this.getFormData().family);
      return Label.prototype.render.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    getLabel: function getLabel() {
      if (!this.getFormData().family) {
        return this.getLabelFromMeta();
      }

      if (!this.family) {
        return null;
      }

      return this.getLabelFromAttribute() || this.getFormData().identifier;
    },
    getLabelFromAttribute: function getLabelFromAttribute() {
      var attributeAsLabelIdentifier = this.family.attribute_as_label;
      var attribute = this.family.attributes.find(function (attribute) {
        return attribute.code === attributeAsLabelIdentifier;
      });
      var scopable = attribute.scopable;
      var localizable = attribute.localizable;
      var scope = UserContext.get('catalogScope');
      var locale = UserContext.get('catalogLocale');
      var values = this.getFormData().values[attributeAsLabelIdentifier];

      if (values) {
        return values.find(function (value) {
          return (false === scopable || value.scope === scope) && (false === localizable || value.locale === locale);
        }).data;
      }

      return '';
    },
    getLabelFromMeta: function getLabelFromMeta() {
      var meta = this.getFormData().meta;

      if (meta && meta.label) {
        return meta.label[UserContext.get('catalogLocale')];
      }

      return null;
    },
    fetchFamily: function fetchFamily(code) {
      if (!code) {
        return;
      }

      if (this.family && this.family.code === code) {
        return;
      }

      FetcherRegistry.getFetcher('family').fetch(code).then(function (family) {
        this.family = family;
        this.render();
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 35882:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/save.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Save extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form/common/save */ 21153), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/saver/product */ 28574), __webpack_require__(/*! pim/field-manager */ 4206), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseSave, messenger, ProductSaver, FieldManager, i18n, UserContext, analytics) {
  return BaseSave.extend({
    updateSuccessMessage: __('pim_enrich.entity.product.flash.update.success'),
    updateFailureMessage: __('pim_enrich.entity.product.flash.update.fail'),
    updateIdentifierWarningMessage: __('pim_enrich.entity.product.flash.update.identifier_warning'),
    sessionExpiredMessage: __('pim_enrich.entity.product.flash.update.fail_session_expired'),
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:change-family:after', this.save);
      this.listenTo(this.getRoot(), 'pim_enrich:form:update-association', this.save);
      return BaseSave.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    save: function save(options) {
      var product = $.extend(true, {}, this.getFormData());
      var productUuid = product.meta.id;
      delete product.meta;
      var notReadyFields = FieldManager.getNotReadyFields();

      if (0 < notReadyFields.length) {
        var fieldLabels = _.map(notReadyFields, function (field) {
          return i18n.getLabel(field.attribute.label, UserContext.get('catalogLocale'), field.attribute.code);
        });

        messenger.notify('error', __('pim_enrich.entity.product.flash.update.fields_not_ready', {
          fields: fieldLabels.join(', ')
        }));
        return;
      }

      this.showLoadingMask();
      this.getRoot().trigger('pim_enrich:form:entity:pre_save');
      analytics.track('product:form:saved', {
        name: product.identifier
      });
      return ProductSaver.save(productUuid, product).fail(this.fail.bind(this)).then(function (data) {
        var _data$meta;

        if ((_data$meta = data.meta) !== null && _data$meta !== void 0 && _data$meta.identifier_generator_warnings) {
          var normalizedWarnings = data.meta.identifier_generator_warnings.map(function (warning) {
            return "".concat(warning.path, ": ").concat(warning.message, " ");
          });
          messenger.notify('warning', this.updateIdentifierWarningMessage, normalizedWarnings);
        }

        this.postSave();
        this.setData(data, options);
        this.getRoot().trigger('pim_enrich:form:entity:post_fetch', data);
      }.bind(this)).always(this.hideLoadingMask.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 28295:
/*!****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/scope-switcher.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Scope switcher extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/scope-switcher */ 21521), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/i18n */ 86705)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, BaseForm, template, FetcherRegistry, UserContext, i18n) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'AknDropdown AknButtonList-item scope-switcher',
    events: {
      'click li a': 'changeScope'
    },
    displayInline: false,
    displayLabel: true,
    config: {},

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      if (undefined !== config) {
        this.config = config.config;
      }

      BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      this.listenTo(this.getRoot(), 'pim_enrich:form:locale_switcher:change', function (localeEvent) {
        if ('base_product' === localeEvent.context) {
          UserContext.set('catalogLocale', localeEvent.localeCode);
          this.render();
        }
      }.bind(this));
      this.listenTo(this.getRoot(), 'pim_enrich:form:channel_switcher:change', function () {
        _this.render();
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      FetcherRegistry.getFetcher('channel').fetchAll().then(function (channels) {
        var params = {
          scopeCode: channels[0].code,
          context: this.config.context
        };
        this.getRoot().trigger('pim_enrich:form:scope_switcher:pre_render', params);

        var scope = _.findWhere(channels, {
          code: params.scopeCode
        });

        this.$el.html(this.template({
          channels: channels,
          currentScope: i18n.getLabel(scope.labels, UserContext.get('catalogLocale'), scope.code),
          catalogLocale: UserContext.get('catalogLocale'),
          i18n: i18n,
          displayInline: this.displayInline,
          displayLabel: this.displayLabel,
          label: __('pim_enrich.entity.channel.uppercase_label')
        }));
        this.delegateEvents();
      }.bind(this));
      return this;
    },

    /**
     * Set the current selected scope
     *
     * @param {Event} event
     */
    changeScope: function changeScope(event) {
      this.getRoot().trigger('pim_enrich:form:scope_switcher:change', {
        scopeCode: event.currentTarget.dataset.scope,
        context: this.config.context
      });
      this.render();
    },

    /**
     * Updates the inline display value
     *
     * @param {Boolean} value
     */
    setDisplayInline: function setDisplayInline(value) {
      this.displayInline = value;
    },

    /**
     * Updates the display label value
     *
     * @param {Boolean} value
     */
    setDisplayLabel: function setDisplayLabel(value) {
      this.displayLabel = value;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 89924:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/sequential-edit.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Sequential edit extension
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @author    Filips Alpe <filips@akeneo.com>
 * @copyright 2015 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/sequential-edit */ 86878), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/provider/sequential-edit-provider */ 83436), __webpack_require__(/*! bootstrap */ 16486)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, mediator, BaseForm, template, Routing, router, FetcherRegistry, UserContext, sequentialEditProvider) {
  var findObjectIndex = function findObjectIndex(objects, id, type) {
    return objects.findIndex(function (item) {
      return item.id + '' === id + '' && item.type === type;
    });
  };

  var getObjectViewParams = function getObjectViewParams(object) {
    var label = object.meta.label[UserContext.get('catalogLocale')];
    return {
      id: object.meta.id,
      type: object.meta.model_type,
      label: label,
      shortLabel: label.length > 25 ? label.slice(0, 22) + '...' : label
    };
  };

  return BaseForm.extend({
    id: 'sequentialEdit',
    className: 'AknSequentialEdit AknDefault-bottomPanel',
    template: _.template(template),
    events: {
      'click .next, .previous': 'followLink'
    },
    initialize: function initialize() {
      this.model = new Backbone.Model();
      BaseForm.prototype.initialize.apply(this, arguments);
    },
    configure: function configure() {
      this.model.set({
        objectSet: sequentialEditProvider.get()
      });
      return BaseForm.prototype.configure.apply(this, arguments);
    },
    addSaveButton: function addSaveButton() {
      this.trigger('save-buttons:register-button', {
        className: 'save-and-continue',
        priority: 250,
        label: undefined !== this.getNextObject() ? __('pim_enrich.entity.product.module.sequential_edit.save_and_next') : __('pim_enrich.entity.product.module.sequential_edit.save_and_finish'),
        events: {
          'click .save-and-continue': this.saveAndContinue.bind(this)
        }
      });
    },
    render: function render() {
      if (!this.configured || !this.model.get('objectSet') || 0 === this.model.get('objectSet').length) {
        this.$el.addClass('AknDefault-bottomPanel--hidden');
        return this;
      } else {
        this.$el.removeClass('AknDefault-bottomPanel--hidden');
      }

      this.addSaveButton();
      this.getRoot().trigger('pim_enrich:form:sequential-edit', {
        isLast: undefined === this.getNextObject()
      });
      this.getTemplateParameters().done(function (templateParameters) {
        this.$el.html(this.template(templateParameters));
        this.$('[data-toggle="tooltip"]').tooltip();
        this.delegateEvents();
        this.preloadNext();
      }.bind(this));
      return this;
    },
    getTemplateParameters: function getTemplateParameters() {
      var objectSet = this.model.get('objectSet');
      var currentMeta = this.getFormData().meta;
      var index = findObjectIndex(objectSet, currentMeta.id, currentMeta.model_type);
      var previous = objectSet[index - 1];
      var next = objectSet[index + 1];
      var previousObject = null;
      var nextObject = null;
      var promises = [];

      if (previous) {
        promises.push(this.getEntity(previous.type, previous.id).then(function (product) {
          previousObject = getObjectViewParams(product);
        }));
      }

      if (next) {
        promises.push(this.getEntity(next.type, next.id).then(function (product) {
          nextObject = getObjectViewParams(product);
        }));
      }

      return $.when.apply($, promises).then(function () {
        return {
          objectCount: objectSet.length,
          currentIndex: index + 1,
          previousObject: previousObject,
          nextObject: nextObject,
          ratio: (index + 1) / objectSet.length * 100
        };
      });
    },
    preloadNext: function preloadNext() {
      var _this = this;

      var objectSet = this.model.get('objectSet');
      var currentIndex = findObjectIndex(objectSet, this.getFormData().meta.id, this.getFormData().meta.model_type);
      var pending = objectSet[currentIndex + 2];

      if (pending) {
        setTimeout(function () {
          _this.getEntity(pending.type, pending.id);
        }, 2000);
      }
    },
    saveAndContinue: function saveAndContinue() {
      this.parent.getExtension('save').save({
        silent: true
      }).done(this["continue"].bind(this));
    },
    "continue": function _continue() {
      var nextObject = this.getNextObject();

      if (nextObject) {
        this.goToProduct(nextObject.type, nextObject.id);
      } else {
        this.finish();
      }
    },
    followLink: function followLink(event) {
      this.getRoot().trigger('pim_enrich:form:state:confirm', {
        action: function () {
          this.goToProduct(event.currentTarget.dataset.type, event.currentTarget.dataset.id);
        }.bind(this)
      });
    },
    goToProduct: function goToProduct(type, id) {
      if (type === 'product') {
        router.redirectToRoute('pim_enrich_product_edit', {
          uuid: id
        });
      } else {
        router.redirectToRoute('pim_enrich_product_model_edit', {
          id: id
        });
      }
    },
    finish: function finish() {
      router.redirectToRoute('pim_enrich_product_index');
    },
    getEntity: function getEntity(type, id) {
      return FetcherRegistry.getFetcher(type.replace('_', '-')).fetch(id);
    },
    getNextObject: function getNextObject() {
      var objectSet = this.model.get('objectSet');
      var currentIndex = findObjectIndex(objectSet, this.getFormData().meta.id, this.getFormData().meta.model_type);
      return objectSet[currentIndex + 1];
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 92733:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/start-copy.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Displays a start copy button
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/start-copy */ 63492), __webpack_require__(/*! pim/analytics */ 22499), __webpack_require__(/*! pim/feature-flags */ 5857)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, analytics, FeatureFlags) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'AknDropdown-menuLink start-copying',
    events: {
      click: 'startCopy'
    },
    isCopying: false,

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:stop_copy', this.stopCopy.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (!FeatureFlags.isEnabled('free_trial')) {
        this.$el.html('');

        if (!this.isCopying) {
          this.$el.html(this.template({
            label: __('pim_enrich.entity.product.module.copy.label')
          }));
        }
      }
    },

    /**
     * Triggers a new event to start copy
     */
    startCopy: function startCopy() {
      this.isCopying = true;
      this.getRoot().trigger('pim_enrich:form:start_copy');
      analytics.track('product:form:compare-clicked');
      this.render();
    },

    /**
     * Stops the copy and re-display the button
     */
    stopCopy: function stopCopy() {
      this.isCopying = false;
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 43510:
/*!***********************************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/total-missing-required-attributes.js ***!
  \***********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Displays the total missing required attributes
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/provider/to-fill-field-provider */ 26682), __webpack_require__(/*! pim/template/product/form/total-missing-required-attributes */ 86100)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, router, BaseForm, UserContext, toFillFieldProvider, template) {
  return BaseForm.extend({
    className: 'AknButtonList-item',
    template: _.template(template),
    events: {
      'click .required-attribute-indicator': 'filterRequiredAttributes'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(UserContext, 'change:catalogLocale change:catalogScope', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritDoc}
     */
    render: function render() {
      this.$el.empty();
      var product = this.getFormData();
      var scope = UserContext.get('catalogScope');
      var locale = UserContext.get('catalogLocale');
      var missingAttributes = toFillFieldProvider.getMissingRequiredFields(product, scope, locale);

      if (missingAttributes.length > 0) {
        this.$el.append(this.template({
          __: __,
          missingRequiredAttributesCount: missingAttributes.length,
          missingValues: 'pim_enrich.entity.product.module.completeness.missing_values'
        }));
      }

      return this;
    },

    /**
     * Filter the required attributes and attribute group
     */
    filterRequiredAttributes: function filterRequiredAttributes() {
      this.getRoot().trigger('pim_enrich:form:switch_values_filter', 'missing_required');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16949:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/form/variant-navigation.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Extension to display the variant navigation to browse variant product structure (parents and children)
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/initselect2 */ 3701), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/media-url-generator */ 72689), __webpack_require__(/*! oro/messenger */ 80581), __webpack_require__(/*! pim/form-modal */ 77154), __webpack_require__(/*! pim/template/product/form/variant-navigation/navigation */ 42255), __webpack_require__(/*! pim/template/product/form/variant-navigation/product-item */ 4906), __webpack_require__(/*! pim/template/product/form/variant-navigation/product-model-item */ 86665), __webpack_require__(/*! pim/template/product/form/variant-navigation/add-child-button */ 29127), __webpack_require__(/*! pim/analytics */ 22499)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, router, i18n, UserContext, BaseForm, SecurityContext, initSelect2, FetcherRegistry, MediaUrlGenerator, messenger, FormModal, template, templateProduct, templateProductModel, templateAddChild, analytics) {
  return BaseForm.extend({
    template: _.template(template),
    templateProduct: _.template(templateProduct),
    templateProductModel: _.template(templateProductModel),
    templateAddChild: _.template(templateAddChild),
    dropdowns: [],
    formModal: null,
    queryTimer: null,
    events: {
      'click [data-action="navigateToLevel"]': 'navigateToLevel'
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(UserContext, 'change:catalogLocale change:catalogScope', this.render);
      this.listenTo(this.getRoot(), 'pim_enrich:form:entity:post_fetch', this.render.bind(this));
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    shutdown: function shutdown() {
      this.dropdowns.forEach(function (dropdown) {
        dropdown.close();
      });

      if (this.formModal) {
        this.formModal.close();
        this.formModal.$el.remove();
      }

      BaseForm.prototype.shutdown.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var entity = this.getFormData();
      var catalogLocale = UserContext.get('catalogLocale');

      if ('product' === entity.meta.model_type && null === entity.parent) {
        this.$el.html('');
        return;
      }

      this.$el.html(this.template({
        commonLabel: __('pim_enrich.entity.product.module.variant_navigation.common'),
        currentLocale: catalogLocale,
        entity: entity,
        navigation: entity.meta.variant_navigation
      }));
      this.initializeSelectWidgets();
    },

    /**
     * Initialize the Select2 component and format elements.
     */
    initializeSelectWidgets: function initializeSelectWidgets() {
      var _this = this;

      var entity = this.getFormData();
      var $selects = this.$('.select-field');

      _.each($selects, function (select, index) {
        var $select = $(select);
        var options = {
          dropdownCssClass: 'variant-navigation',
          closeOnSelect: false,
          id: function id(e) {
            return e.uuid || e.id;
          },

          /**
           * Format result (product or product model variations) method of select2.
           * This way we can display entities and their info beside them (completeness, image..).
           */
          formatResult: function formatResult(item, $container) {
            var catalogLocale = UserContext.get('catalogLocale');
            var filePath = null !== item.image ? item.image.filePath : null;
            var entity = {
              label: item.axes_values_labels[catalogLocale],
              image: MediaUrlGenerator.getMediaShowUrl(filePath, 'thumbnail_small'),
              completeness: _this.parseCompleteness(item)
            };
            var html = 'product' === item.model_type ? _this.templateProduct({
              entity: entity,
              getClass: _this.getCompletenessBadgeClass
            }) : _this.templateProductModel({
              entity: entity,
              getClass: _this.getCompletenessBadgeClass
            });
            $container.append(html);
          },
          query: function query(options) {
            _this.queryChildrenEntities(options, entity.meta.variant_navigation[index].selected.id);
          }
        };
        var dropDown = initSelect2.init($select, options);
        dropDown.on('select2-selecting', function (event) {
          _this.redirectToEntity(event.object);
        }).on('select2-open', function () {
          _this.addSelect2Footer(dropDown);
        });

        _this.dropdowns.push(dropDown.data('select2'));
      });
    },

    /**
     * Adds the footer containing the creation button to the select2 dropdown.
     *
     * @param {Element} dropDown
     */
    addSelect2Footer: function addSelect2Footer(dropDown) {
      var _this2 = this;

      $('#select2-drop .select2-drop-footer').remove();
      var targetLevel = dropDown[0].dataset.level;
      this.getEntityParentCode(targetLevel).then(function (parentCode) {
        _this2.isVariantProduct(parentCode).then( /*#__PURE__*/function () {
          var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(isVariantProduct) {
            var footer;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return _this2.isCreationGranted(isVariantProduct);

                  case 2:
                    if (_context.sent) {
                      _context.next = 4;
                      break;
                    }

                    return _context.abrupt("return");

                  case 4:
                    footer = _this2.templateAddChild({
                      label: __('pim_enrich.entity.product_model.module.variant_axis.create')
                    });
                    $('#select2-drop').append(footer).find('.select2-drop-footer').on('click', '.add-child', function () {
                      dropDown.select2('close');

                      _this2.openModal(parentCode);
                    });

                  case 6:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));

          return function (_x) {
            return _ref.apply(this, arguments);
          };
        }());
      });
    },

    /**
     * Tests the creation ACL depending on the entity type the user wants to create.
     *
     * @param {boolean} isVariantProduct
     *
     * @returns {Promise<boolean>}
     */
    isCreationGranted: function () {
      var _isCreationGranted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(isVariantProduct) {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", isVariantProduct && SecurityContext.isGranted('pim_enrich_product_create') || !isVariantProduct && SecurityContext.isGranted('pim_enrich_product_model_create'));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function isCreationGranted(_x2) {
        return _isCreationGranted.apply(this, arguments);
      }

      return isCreationGranted;
    }(),

    /**
     * Get the parent code for the new product model / variant product child.
     *
     * @param {Number} targetLevel
     *
     * @return {Promise}
     */
    getEntityParentCode: function getEntityParentCode(targetLevel) {
      var entity = this.getFormData();
      var entityLevel = entity.meta.level;

      if (targetLevel < entityLevel) {
        return FetcherRegistry.getFetcher('product-model-by-code').fetch(entity.parent).then(function (parent) {
          return parent.parent;
        });
      }

      if (targetLevel > entityLevel) {
        return $.Deferred().resolve(entity.code).promise();
      }

      return $.Deferred().resolve(entity.parent).promise();
    },

    /**
     * Opens the modal containing the form to create a new family variant.
     *
     * @param {String} parentCode
     */
    openModal: function openModal(parentCode) {
      var _this3 = this;

      var modalParameters = {
        className: 'modal modal--fullPage add-product-model-child',
        content: '',
        cancelText: __('pim_common.cancel'),
        okText: __('pim_common.confirm'),
        okCloses: false
      };
      this.isVariantProduct(parentCode).then(function (isVariantProduct) {
        var initialModalState = {
          parent: parentCode,
          values: {}
        };

        if (isVariantProduct) {
          initialModalState.family = _this3.getFormData().family;
        } else {
          initialModalState.family_variant = _this3.getFormData().family_variant;
        }

        var formModal = new FormModal('pim-product-model-add-child-form', _this3.submitForm.bind(_this3, isVariantProduct), modalParameters, initialModalState);
        formModal.open();
        _this3.formModal = formModal;
      });
    },

    /**
     * Action made when user submit the modal.
     *
     * @param {boolean} isVariantProduct
     * @param {Object} formModal
     */
    submitForm: function submitForm(isVariantProduct, formModal) {
      var _this4 = this;

      var message = isVariantProduct ? __('pim_enrich.entity.product_model.flash.create.variant_product_added') : __('pim_enrich.entity.product_model.flash.create.product_model_added');
      var route = isVariantProduct ? 'pim_enrich_product_rest_create' : 'pim_enrich_product_model_rest_create';
      return formModal.saveProductModelChild(route).done(function (entity) {
        var _entity$meta;

        _this4.redirectToEntity(entity.meta);

        if ((_entity$meta = entity.meta) !== null && _entity$meta !== void 0 && _entity$meta.identifier_generator_warnings) {
          var normalizedWarnings = entity.meta.identifier_generator_warnings.map(function (warning) {
            return "".concat(warning.path, ": ").concat(warning.message, " ");
          });
          messenger.notify('warning', __('pim_enrich.entity.product.flash.update.identifier_warning'), normalizedWarnings);
        }

        messenger.notify('success', message);
      });
    },

    /**
     * Returns whether the new entity will be a variant product or a product model
     * using the parent code.
     *
     * @param {string} parentCode
     *
     * @returns {Promise}
     */
    isVariantProduct: function isVariantProduct(parentCode) {
      return FetcherRegistry.getFetcher('product-model-by-code').fetch(parentCode).then(function (parent) {
        return FetcherRegistry.getFetcher('family-variant').fetch(parent.family_variant).then(function (familyVariant) {
          var currentLevel = parent.meta.level + 1;
          return currentLevel === familyVariant.variant_attribute_sets.length;
        });
      });
    },

    /**
     * Return a string of the completeness for the given entity to be displayed.
     *
     * @param {Object} entity
     *
     * @returns {string}
     */
    parseCompleteness: function parseCompleteness(entity) {
      var catalogLocale = UserContext.get('catalogLocale');
      var catalogScope = UserContext.get('catalogScope');

      if ('product' === entity.model_type) {
        var channelCompletenesses = _.findWhere(entity.completeness, {
          channel: catalogScope
        });

        if (undefined === channelCompletenesses || undefined === channelCompletenesses.locales[catalogLocale]) {
          return {
            ratio: 0
          };
        }

        var localeCompleteness = channelCompletenesses.locales[catalogLocale].completeness;
        return {
          ratio: localeCompleteness.ratio
        };
      } else {
        var completenesses = entity.completeness.completenesses;
        var totalProducts = entity.completeness.total;
        var completeProducts = 0;

        if (_.has(completenesses, catalogScope) && _.has(completenesses[catalogScope], catalogLocale)) {
          completeProducts = completenesses[catalogScope][catalogLocale];
        }

        return {
          ratio: completeProducts > 0 ? Math.floor(totalProducts / completeProducts * 100) : 0,
          display: completeProducts + ' / ' + totalProducts
        };
      }
    },

    /**
     * Get the CSS class for the completeness badge of the template, depending on the given ratio.
     *
     * @param {int} ratio
     *
     * @returns {string}
     */
    getCompletenessBadgeClass: function getCompletenessBadgeClass(ratio) {
      if (0 === ratio) {
        return 'important';
      }

      if (100 === ratio) {
        return 'success';
      }

      return 'warning';
    },

    /**
     * Return all entities that have a label (axes values) that match the given term.
     *
     * @param {string} term
     * @param {array} entities
     *
     * @returns {array}
     */
    searchOnResults: function searchOnResults(term, entities) {
      var catalogLocale = UserContext.get('catalogLocale');
      term = term.toLowerCase();
      return entities.filter(function (entity) {
        var label = entity.axes_values_labels[catalogLocale].toLowerCase();
        return -1 !== label.search(term);
      });
    },

    /**
     * Fetch all children of the given parentId and calls the callback of Select2 to
     * display them in the dropdown.
     *
     * @param {Object} options
     * @param {int} parentId
     */
    queryChildrenEntities: function queryChildrenEntities(options, parentId) {
      var _this5 = this;

      clearTimeout(this.queryTimer);
      this.queryTimer = setTimeout(function () {
        FetcherRegistry.getFetcher('product-model').fetchChildren(parentId).then(function (children) {
          var childrenResults = _this5.searchOnResults(options.term, children);

          var sortedChildrenResults = childrenResults.sort(function (item1, item2) {
            for (var i = 0; i < item1.order.length; i++) {
              if (item1.order[i] > item2.order[i]) {
                return 1;
              } else if (item1.order[i] < item2.order[i]) {
                return -1;
              }
            }

            return 0;
          });
          options.callback({
            results: sortedChildrenResults
          });
        });
      }, 400);
    },

    /**
     * Redirect to the entity of the given level
     */
    navigateToLevel: function navigateToLevel(event) {
      var entity = this.getFormData();
      var level = $(event.target).data('level');
      this.redirectToEntity(entity.meta.variant_navigation[level].selected);
    },

    /**
     * Redirect the user to the given entity edit page
     *
     * @param {Object} entity
     */
    redirectToEntity: function redirectToEntity(entity) {
      if (!entity) {
        return;
      }

      analytics.track('product-model:form:variant-selected', {
        identifier: entity.identifier
      });
      var params = 'product_model' === entity.model_type ? {
        id: entity.id
      } : {
        uuid: entity.uuid || entity.id
      };
      var route = 'product_model' === entity.model_type ? 'pim_enrich_product_model_edit' : 'pim_enrich_product_edit';
      this.getRoot().trigger('pim:product:variant-navigation:navigate-to-level:before', entity);
      router.redirectToRoute(route, params);
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 88048:
/*!*******************************************************************!*\
  !*** ./public/bundles/pimui/js/product/grid/category-switcher.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Displays the categories selector in grid column
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/grid/category-switcher */ 49569), __webpack_require__(/*! pim/menu/resizable */ 80787)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, Resizable) {
  return BaseForm.extend({
    template: _.template(template),
    className: 'AknDropdown AknColumn-block category-switcher',
    events: {
      click: 'toggleThirdColumn'
    },
    isOpen: false,
    categoryLabel: null,
    treeLabel: null,
    outsideEventListener: null,

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'pim_enrich:form:category_updated', this.updateValue);
      this.listenTo(this.getRoot(), 'grid:third_column:toggle', this.updateHighlight);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      if (null === this.treeLabel || '' === this.treeLabel.trim()) {
        return;
      }

      this.$el.html(this.template({
        label: __('pim_enrich.entity.category.uppercase_label'),
        isOpen: this.isOpen,
        categoryLabel: this.categoryLabel,
        treeLabel: this.treeLabel
      }));
      this.renderExtensions();
    },

    /**
     * {@inheritdoc}
     */
    shutdown: function shutdown() {
      Resizable.destroy();
      return BaseForm.prototype.shutdown.apply(this, arguments);
    },

    /**
     * Toggle the thrid column
     */
    toggleThirdColumn: function toggleThirdColumn() {
      Resizable.set({
        maxWidth: 500,
        minWidth: 300,
        container: '.AknDefault-thirdColumn',
        storageKey: 'category-switcher'
      });
      this.getRoot().trigger('grid:third_column:toggle');

      if (!this.isOpen) {
        this.outsideEventListener = this.outsideClickListener.bind(this);
        document.addEventListener('mousedown', this.outsideEventListener);
      }

      this.isOpen = !this.isOpen;
      this.render();
    },

    /**
     * Closes the criteria if the user clicks on the rest of the document.
     *
     * @param {Event} event
     */
    outsideClickListener: function outsideClickListener(event) {
      var isOpen = $('.AknDefault-thirdColumnContainer--open').length > 0;
      var clickedFilter = $(event.target).closest('.AknFilterBox-addFilterButton').length > 0;

      if (isOpen && clickedFilter) {
        Resizable.destroy();
        this.toggleThirdColumn();
        document.removeEventListener('mousedown', this.outsideEventListener);
      }
    },

    /**
     * Updates the current category and tree
     *
     * @param {Object} value
     * @param {String} value.categoryLabel
     * @param {String} value.treeLabel
     */
    updateValue: function updateValue(value) {
      this.categoryLabel = value.categoryLabel;
      this.treeLabel = value.treeLabel;
      this.render();
    },

    /**
     * Updates the highlighted categories
     */
    updateHighlight: function updateHighlight() {
      this.isHighlited = !this.isHighlited;
      this.render();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 79418:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/product/grid/category-tree-done.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Extension to add a "Done" button under the category tree
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/grid/category-tree-done */ 99840)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, __, $, BaseForm, template) {
  return BaseForm.extend({
    className: 'AknDefault-thirdColumnButton',
    template: _.template(template),
    events: {
      click: 'toggleThirdColumn'
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      this.$el.append(this.template({
        label: __('pim_common.done')
      }));
    },

    /**
     * Toggles the third column
     */
    toggleThirdColumn: function toggleThirdColumn() {
      this.getRoot().trigger('grid:third_column:toggle');
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 52732:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/product/grid/category-tree.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Extension to set up the category tree filter for the product grid
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! oro/datafilter/product_category-filter */ 54688)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, FormBuilder, BaseForm, CategoryFilter) {
  return BaseForm.extend({
    config: {
      alias: 'product-grid',
      categoryTreeName: 'pim_enrich_product_grid_category_tree'
    },
    id: 'tree',
    className: 'filter-item',
    attributes: {
      'data-name': 'category',
      'data-type': 'tree',
      'data-relatedentity': 'product'
    },

    /**
     * @inheritdoc
     */
    initialize: function initialize(options) {
      this.config = Object.assign(this.config, options.config || {});
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * @inheritDoc
     */
    configure: function configure() {
      this.listenTo(this.getRoot(), 'datagrid:getParams', this.setupCategoryTree);
      return BaseForm.prototype.configure.apply(this, arguments);
    },

    /**
     * Render the category tree extensions when the datagrid is ready
     */
    setupCategoryTree: function setupCategoryTree(urlParams) {
      var _this = this;

      var categoryFilter = new CategoryFilter(urlParams, this.config.alias, this.config.categoryTreeName, this.$el, function (value) {
        _this.valueUpdated(value);
      });
      this.listenTo(categoryFilter, 'update', function (value) {
        this.valueUpdated(value);
      });
      this.listenTo(categoryFilter, 'update_label', function (treeLabel, categoryLabel) {
        this.getRoot().trigger('pim_enrich:form:category_updated', {
          categoryLabel: categoryLabel ? this.trimCount(categoryLabel) : '',
          treeLabel: this.trimCount(treeLabel)
        });
      });
      return categoryFilter;
    },

    /**
     * Triggers a new event when the value of the category is updated
     *
     * @param {Object} value
     * @param {integer} value.type
     * @param {integer} value.value.categoryId
     * @param {integer} value.value.treeId
     */
    valueUpdated: function valueUpdated(value) {
      this.getRoot().trigger('pim_enrich:form:category_updated', {
        categoryLabel: this.getCategoryLabel(value.value.categoryId),
        treeLabel: this.getTreeLabel()
      });
    },

    /**
     * Get the category label from its id.
     * We search the matching DOM element in the JStree plugin directly, because it does not exist any fetcher
     * able to get the label from its id.
     *
     * @returns {String}
     */
    getCategoryLabel: function getCategoryLabel() {
      return this.trimCount($('#tree [aria-selected=true]').text().trim());
    },

    /**
     * Get the current tree label.
     * See this.getCategoryLabel
     *
     * @returns {String}
     */
    getTreeLabel: function getTreeLabel() {
      var button = $('#tree [role=tree] [role=treeitem] button[title]:first');

      if (button.length) {
        return this.trimCount(button.text().trim());
      }

      return '';
    },

    /**
     * Deletes the count of the category and the tree to only keep the label
     * For example, "Audio (123)" will return "Audio".
     *
     * @param {String} str
     *
     * @returns {String}
     */
    trimCount: function trimCount(str) {
      return str.replace(/(.*) \(\d+\)/, function (match, text) {
        return text;
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 20818:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/js/product/grid/locale-switcher.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Extension to render a list of activated locales used for the product grid.
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/template/product/grid/locale-switcher */ 43646), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/i18n */ 86705), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, BaseForm, template, FetcherRegistry, i18n, router, UserContext) {
  return BaseForm.extend({
    template: _.template(template),
    config: {},
    locales: [],
    id: 'locale-switcher',
    className: 'AknDropdown AknColumn-block locale-switcher',
    events: {
      'click [data-locale]': 'changeLocale'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(config) {
      this.config = config.config;
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      var _this = this;

      return $.when(this.fetchLocales().then(function (locales) {
        _this.locales = locales;
        var currentLocaleCode = UserContext.get('catalogLocale');

        var currentLocale = _.find(_this.locales, {
          code: currentLocaleCode
        });

        if (undefined === currentLocale) {
          currentLocale = _.first(_this.locales);
          UserContext.set('catalogLocale', currentLocale.code);
        }
      }), BaseForm.prototype.configure.apply(this, arguments));
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var currentLocaleCode = UserContext.get('catalogLocale');

      var currentLocale = _.find(this.locales, {
        code: currentLocaleCode
      });

      this.$el.empty().append(this.template({
        localeLabel: __('pim_enrich.entity.locale.uppercase_label'),
        locales: this.locales,
        currentLocale: currentLocale,
        i18n: i18n,
        getDisplayName: this.getDisplayName
      }));
    },

    /**
     * Fetch the activated locales to render in the list
     * @return {Array} An array of activated locales
     */
    fetchLocales: function fetchLocales() {
      var localeFetcher = FetcherRegistry.getFetcher('locale');
      return localeFetcher.fetchActivated();
    },

    /**
     * Returns the string to display for a locale
     *
     * @param  {Object} locale The original locale
     * @return {String}        The translated locale
     */
    getDisplayName: function getDisplayName(locale) {
      return locale.language;
    },

    /**
     * Switches locales by visiting the product grid route
     * @param  {Event} event The click event coming from the locale dropdown list
     */
    changeLocale: function changeLocale(event) {
      var localeParamName = this.config.localeParamName;
      var localeCode = this.$(event.currentTarget).attr('data-locale');
      router.redirectToRoute(this.config.routeName, _defineProperty({}, localeParamName, localeCode));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 13555:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/product/grid/table.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/router */ 41774), __webpack_require__(/*! oro/datagrid-builder */ 10488), __webpack_require__(/*! oro/pageable-collection */ 3110), __webpack_require__(/*! pim/datagrid/state */ 30138), __webpack_require__(/*! require-context */ 76925), __webpack_require__(/*! pim/form */ 59904), __webpack_require__(/*! pim/user-context */ 46862), __webpack_require__(/*! pim/fetcher-registry */ 60701), __webpack_require__(/*! pim/datagrid/state-listener */ 34498), __webpack_require__(/*! oro/loading-mask */ 13284)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, Routing, datagridBuilder, PageableCollection, DatagridState, requireContext, BaseForm, UserContext, FetcherRegistry, StateListener, LoadingMask) {
  return BaseForm.extend({
    config: {},
    loadingMask: null,

    /**
     * @inheritdoc
     */
    initialize: function initialize(options) {
      this.config = options.config;
      this.loadingMask = new LoadingMask();
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * Returns the stored display type for the given grid
     *
     * @return {String}
     */
    getStoredDisplayType: function getStoredDisplayType() {
      return localStorage.getItem("display-selector:".concat(this.config.gridName));
    },

    /**
     * Fetch default view for grid
     * @return {Promise}
     */
    getDefaultView: function getDefaultView() {
      return FetcherRegistry.getFetcher('datagrid-view').defaultUserView(this.config.gridName).then(function (defaultUserView) {
        return defaultUserView.view;
      });
    },

    /**
     * Fetch default columns for grid
     * @return {Promise}
     */
    getDefaultColumns: function getDefaultColumns() {
      return FetcherRegistry.getFetcher('datagrid-view').defaultColumns(this.config.gridName);
    },

    /**
     * Build the datagrid
     * @param  {Object} resp Datagrid load response
     */
    loadDataGrid: function loadDataGrid(resp) {
      if (typeof resp === 'string' || null === resp) {
        return;
      }

      var gridName = this.config.gridName;
      var dataLocale = UserContext.get('catalogLocale');
      var state = DatagridState.get(gridName, ['view', 'filters', 'columns']);

      if (state.columns) {
        resp.metadata.state.parameters = _.extend({}, resp.metadata.state.parameters, {
          view: {
            columns: state.columns,
            id: state.view
          }
        });
      }

      resp.metadata = this.applyDisplayType(resp.metadata);
      $("#grid-".concat(gridName)).data({
        metadata: resp.metadata,
        data: JSON.parse(resp.data)
      });
      var url = decodeURI(resp.metadata.options.url).split('?')[0];
      var localeParam = $.param({
        dataLocale: dataLocale
      });
      resp.metadata.options.url = "".concat(url, "?").concat(localeParam);
      datagridBuilder([StateListener]);
      this.loadingMask.hide();
    },

    /**
     * Gets the allowed display types from the datagrid config and applies them
     * The allowed options are:
     *
     * manageColumns: Display column selector button or not
     * rowView: The module to display a row
     * label: The name of the display type in the display-selector
     *
     * @param  {Object} gridMetadata
     * @param  {Object} selectedType
     * @return {Object}
     */
    applyDisplayType: function applyDisplayType(gridMetadata) {
      var selectedType = this.getStoredDisplayType();
      var metadata = Object.assign({}, gridMetadata);
      var displayTypes = metadata.options.displayTypes || {};
      var displayType = displayTypes[selectedType];

      if (selectedType === 'default' || undefined === displayType) {
        return gridMetadata;
      }

      metadata.options.manageColumns = displayType.manageColumns;
      metadata.options.rowView = displayType.rowView;
      $('#product-grid').addClass("AknGrid--".concat(selectedType));
      return metadata;
    },

    /**
     * Get the initial grid params with locale
     * @return {Object} urlParams
     */
    getInitialParams: function getInitialParams() {
      var dataLocale = UserContext.get('catalogLocale');
      var alias = this.config.gridName;
      var urlParams = {
        dataLocale: dataLocale,
        alias: alias
      };
      urlParams.params = {
        dataLocale: dataLocale
      };
      return urlParams;
    },

    /**
     * Set the columns on the datagrid state
     * @param  {Array} columns   An array of columns
     * @param  {Object} urlParams Url params
     * @return {Object}
     */
    applyColumns: function applyColumns(columns, urlParams) {
      urlParams = _.clone(urlParams);
      var gridName = this.config.gridName;
      if (_.isArray(columns)) columns = columns.join();
      urlParams["".concat(gridName, "[_parameters][view][columns]")] = columns;
      DatagridState.set(gridName, {
        columns: columns
      });
      return urlParams;
    },

    /**
     * Set the selected view on the datagrid state
     * @param  {String} viewId    The id of the view
     * @param  {Object} urlParams Url params
     * @return {Object}
     */
    applyView: function applyView(viewId, urlParams) {
      urlParams = _.clone(urlParams);
      var gridName = this.config.gridName;
      urlParams["".concat(gridName, "[_parameters][view][id]")] = viewId;
      DatagridState.set(gridName, {
        view: viewId
      });
      return urlParams;
    },

    /**
     * Apply filters to the datagrid params
     * @param  {String} rawFilters Filters as string
     * @param  {Object} urlParams  Url params
     * @return {Object}
     */
    applyFilters: function applyFilters(rawFilters, urlParams) {
      urlParams = _.clone(urlParams);
      var gridName = this.config.gridName;
      var filters = PageableCollection.prototype.decodeStateData(rawFilters);
      var options = {};

      if (!_.isEmpty(filters.filters)) {
        options = {
          state: {
            filters: _.omit(filters.filters, 'scope')
          }
        };
      }

      var collection = new PageableCollection(null, options);
      collection.processFiltersParams(urlParams, filters, "".concat(gridName, "[_filter]"));

      for (var column in filters.sorters) {
        urlParams["".concat(gridName, "[_sort_by][").concat(column, "]")] = 1 === parseInt(filters.sorters[column]) ? 'DESC' : 'ASC';
      }

      if (filters.pageSize) {
        urlParams["".concat(gridName, "[_pager][_per_page]")] = 25;
      }

      if (filters.currentPage) {
        urlParams["".concat(gridName, "[_pager][_page]")] = filters.currentPage;
      }

      DatagridState.set(gridName, {
        filters: rawFilters
      });
      return urlParams;
    },

    /**
     * Apply filters columns and view for the datagrid
     * @param {Array} defaultColumns
     * @param {String} defaultView
     */
    setDatagridState: function setDatagridState(defaultColumns, defaultView) {
      var _this$config = this.config,
          gridName = _this$config.gridName,
          datagridLoadUrl = _this$config.datagridLoadUrl;
      var params = this.getInitialParams();

      if (!DatagridState.get(gridName, ['view'])) {
        DatagridState.refreshFiltersFromUrl(gridName);
      }

      var state = DatagridState.get(gridName, ['view', 'filters', 'columns']);

      if (defaultView && ('0' === state.view || null === state.view)) {
        params = this.applyView(defaultView.id, params);
        params = this.applyFilters(defaultView.filters, params);
        params = this.applyColumns(defaultView.columns, params);
      } else {
        if (state.view) params = this.applyView(state.view, params);
        if (state.filters) params = this.applyFilters(state.filters, params);
        params = this.applyColumns(state.columns || defaultColumns, params);
      }

      this.getRoot().trigger('datagrid:getParams', params);
      return $.post(Routing.generate(datagridLoadUrl, {
        alias: params.alias
      }), params, this.loadDataGrid.bind(this));
    },

    /**
     * @inheritdoc
     */
    render: function render() {
      var _this = this;

      this.$el.empty().append(this.loadingMask.$el);
      this.loadingMask.render().show();
      $.when(this.getDefaultColumns(), this.getDefaultView()).then(function (defaultColumns, defaultView) {
        return _this.setDatagridState(defaultColumns, defaultView);
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 89750:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/product/grid/view-selector.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Parent extension to render the child extensions for the view selector in the product grid index
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! pim/form-builder */ 16371), __webpack_require__(/*! pim/form */ 59904)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, FormBuilder, BaseForm) {
  return BaseForm.extend({
    className: 'view-selector',
    config: {
      gridName: 'product-grid'
    },

    /**
     * {@inheritdoc}
     */
    initialize: function initialize(options) {
      this.config = Object.assign(this.config, options.config || {});
      return BaseForm.prototype.initialize.apply(this, arguments);
    },

    /**
     * {@inheritdoc}
     */
    render: function render() {
      var _this = this;

      FormBuilder.getFormMeta('pim-grid-view-selector').then(FormBuilder.buildForm).then(function (form) {
        return form.configure(_this.config.gridName).then(function () {
          form.setElement('.view-selector').render();
        });
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 83436:
/*!**********************************************************************!*\
  !*** ./public/bundles/pimui/js/provider/sequential-edit-provider.js ***!
  \**********************************************************************/
/***/ ((module, exports) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * This service is in charge of storing and fetching the sequential edit collection
 * from the locale storage.
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
  return {
    /**
     * Set the collection with the given parameter
     *
     * @param {array} entities
     */
    set: function set(entities) {
      sessionStorage.setItem('sequential_edit_entities', JSON.stringify(entities));
    },

    /**
     * Clear the locale storage
     */
    clear: function clear() {
      sessionStorage.setItem('sequential_edit_entities', JSON.stringify([]));
    },

    /**
     * Get the sequential edit collection
     *
     * @return {array}
     */
    get: function get() {
      return null === sessionStorage.getItem('sequential_edit_entities') ? [] : JSON.parse(sessionStorage.getItem('sequential_edit_entities'));
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 8569:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/js/remover/association-type-remover.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_associationtype_rest_remove"} ; 'use strict';
/**
 * Module to remove association type
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 60217:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/remover/attribute-group-remover.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_attributegroup_rest_remove"} ; 'use strict';
/**
 * Module to remove attribute group
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        identifier: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 42849:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/remover/attribute.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_attribute_rest_remove"} ; /**
 * @author    Yohan Blain <yohan.blain@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */
'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 44206:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/remover/base-remover.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/mediator */ 27615)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, mediator) {
  return {
    /**
     * Remove an entity
     *
     * @param {String} code
     *
     * @return {Promise}
     */
    remove: function remove(code) {
      return $.ajax({
        type: 'DELETE',
        url: this.getUrl(code)
      }).then(function (entity) {
        mediator.trigger('pim_enrich:form:entity:post_remove', code);
        return entity;
      }.bind(this));
    },

    /**
     * Get the entity url
     *
     * @return {String}
     */
    getUrl: function getUrl() {
      throw new Error('This method need to be implemented');
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 9240:
/*!****************************************************!*\
  !*** ./public/bundles/pimui/js/remover/channel.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_channel_rest_remove"} ; 'use strict';
/**
 * Module to remove channel
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 75682:
/*!***********************************************************!*\
  !*** ./public/bundles/pimui/js/remover/family-variant.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_family_variant_rest_remove"} ; 'use strict';
/**
 * Module to remove family variant
 *
 * @author    Samir Boulil <samir.boulil@gmail.com>
 * @copyright 2018 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 37490:
/*!***************************************************!*\
  !*** ./public/bundles/pimui/js/remover/family.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_family_rest_remove"} ; 'use strict';
/**
 * Module to remove family
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 7374:
/*!**********************************************************!*\
  !*** ./public/bundles/pimui/js/remover/group-remover.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_group_rest_remove"} ; 'use strict';
/**
 * Module to remove product group
 *
 * @author    Nicolas Dupont <nicolas@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 26785:
/*!***************************************************************!*\
  !*** ./public/bundles/pimui/js/remover/group-type-remover.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_grouptype_rest_remove"} ; 'use strict';
/**
 * Module to remove group type
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * Gets url in configuration for remover module
     *
     * @param {String} code Code for group type entity
     *
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 77893:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/remover/job-instance-export-remover.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_job_instance_rest_export_delete"} ; 'use strict';
/**
 * Module to remove job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 40215:
/*!************************************************************************!*\
  !*** ./public/bundles/pimui/js/remover/job-instance-import-remover.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_job_instance_rest_import_delete"} ; 'use strict';
/**
 * Module to remove job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 69245:
/*!******************************************************************!*\
  !*** ./public/bundles/pimui/js/remover/product-model-remover.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_product_model_rest_remove"} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(id) {
      return Routing.generate(__moduleConfig.url, {
        id: id
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 34710:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/js/remover/product-remover.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_product_rest_remove"} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(uuid) {
      return Routing.generate(__moduleConfig.url, {
        uuid: uuid
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 80245:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/route-matcher.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Routing) {
  var matchUrl = function matchUrl(url) {
    var routes = Routing.getRoutes();
    var route;

    if (url.indexOf('?') !== -1) {
      url = url.substring(0, url.indexOf('?'));
    }

    if (url.indexOf('#') === 0) {
      url = url.substring(1);
    }

    if (url.indexOf('#') !== -1) {
      url = url.substring(0, url.indexOf('#'));
    }

    if (url.indexOf('/') !== 0) {
      url = '/' + url;
    }

    url = url.replace(Routing.getBaseUrl(), '');

    var escape = function escape(value) {
      return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
    };

    for (var name in routes) {
      route = routes[name];
      var pattern = '';
      var variables = [];
      var matching = true;

      if (route.requirements._method && -1 === route.requirements._method.indexOf('GET') && -1 === route.requirements._method.indexOf('POST')) {
        continue;
      }

      route.tokens.forEach(function (token) {
        switch (token[0]) {
          case 'text':
            pattern = escape(token[1]) + pattern;
            matching = matching && url.indexOf(token[1]) !== -1;
            break;

          case 'variable':
            var separator = escape(token[1]);
            var varPattern = token[2].replace('++', '+');
            var varName = token[3];

            if (undefined === route.defaults[token[3]]) {
              pattern = separator + '(' + varPattern + ')' + pattern;
            } else {
              pattern = '(?:' + separator + '(' + varPattern + '))?' + pattern;
            }

            variables.push(varName);
            break;

          default:
            break;
        }
      });

      if (!matching) {
        continue;
      }

      var matches = url.match(new RegExp('^' + pattern + '$'));

      if (matches) {
        var params = {};
        variables.reverse();
        variables.forEach(function (variable, index) {
          var matchedValue = matches[index + 1];

          if (undefined !== matchedValue) {
            params[variable] = matchedValue;
          } else {
            params[variable] = route.defaults[variable];
          }
        });
        return {
          name: name,
          route: route,
          params: params
        };
      }
    }

    return false;
  };

  return {
    match: matchUrl
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 41774:
/*!*******************************************!*\
  !*** ./public/bundles/pimui/js/router.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"indexRoute":"pim_dashboard_index"} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! oro/translator */ 16393), __webpack_require__(/*! backbone */ 2918), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! pim/route-matcher */ 80245), __webpack_require__(/*! oro/loading-mask */ 13284), __webpack_require__(/*! pim/controller-registry */ 81665), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! pim/error */ 84879), __webpack_require__(/*! pim/security-context */ 34770), __webpack_require__(/*! pim/controller/template */ 28333), __webpack_require__(/*! pim/feature-flags */ 5857)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, __, Backbone, Routing, RouteMatcher, LoadingMask, ControllerRegistry, mediator, Error, securityContext, template, FeatureFlags) {
  var Router = Backbone.Router.extend({
    DEFAULT_ROUTE: 'oro_default',
    routes: {
      '': 'index',
      '*path': 'defaultRoute'
    },
    indexRoute: null,
    loadingMask: null,
    currentController: null,

    /**
     * {@inheritdoc}
     */
    initialize: function initialize() {
      this.loadingMask = new LoadingMask();
      this.loadingMask.render().$el.appendTo($('.hash-loading-mask'));

      _.bindAll(this, 'showLoadingMask', 'hideLoadingMask');

      this.indexRoute = __moduleConfig.indexRoute;
      this.listenTo(mediator, 'route_complete', this._processLinks);
    },

    /**
     * Go to the index of the app
     *
     * @return {String}
     */
    index: function index() {
      return this.defaultRoute(this.generate(this.indexRoute, {
        freeTrialEnabled: FeatureFlags.isEnabled('free_trial')
      }));
    },

    /**
     * Render the given route
     *
     * @param {String} path
     */
    defaultRoute: function defaultRoute(path) {
      if (path.indexOf('/') !== 0) {
        path = '/' + path;
      }

      if (path.indexOf('|') !== -1) {
        path = path.substring(0, path.indexOf('|'));
      }

      var route = this.match(path);

      if (false === route) {
        return this.notFound();
      }

      if (this.DEFAULT_ROUTE === route.name) {
        return this.index();
      }

      this.showLoadingMask();
      this.triggerStart(route);
      ControllerRegistry.get(route.name).done(function (controller) {
        if (this.currentController) {
          this.currentController.remove();
        }

        $('#container').empty();
        var $view = $('<div class="view"></div>').appendTo($('#container'));

        if (controller.feature && !FeatureFlags.isEnabled(controller.feature)) {
          this.hideLoadingMask();
          return this.notFound();
        }

        if (controller.aclResourceId && !securityContext.isGranted(controller.aclResourceId)) {
          this.hideLoadingMask();
          return this.displayErrorPage(__('error.forbidden'), '403');
        }

        controller.el = $view;
        this.currentController = new controller["class"](controller);
        this.currentController.setActive(true);
        this.currentController.renderRoute(route, path).done(function () {
          this.triggerComplete(route);
        }.bind(this)).fail(this.handleError.bind(this)).always(this.hideLoadingMask);
      }.bind(this));
    },

    /**
     * Manage not found error
     */
    notFound: function notFound() {
      this.displayErrorPage('Page not found', 404);
    },
    handleError: function handleError(xhr) {
      if (undefined !== xhr) {
        this.displayErrorPage('An error occurred');
      }

      switch (xhr.status) {
        case 401:
          window.location = this.generate('pim_user_security_login');
          break;

        case 403:
          return this.displayErrorPage(__('error.forbidden'), xhr.status);
          break;

        case 200:
          break;

        default:
          this.errorPage(xhr);
          break;
      }
    },

    /**
     * Manage error from xhr calls
     *
     * @param {Object} xhr
     */
    errorPage: function errorPage(xhr) {
      this.displayErrorPage(xhr.statusText, xhr.status);
    },

    /**
     * Display the error page
     *
     * @param {String} message
     * @param {Integer} code
     */
    displayErrorPage: function displayErrorPage(message, code) {
      var errorView = new Error(message, code);
      errorView.setElement($('#container')).render();
    },

    /**
     * Trigger route start events
     *
     * @param {String} route
     */
    triggerStart: function triggerStart(route) {
      this.trigger('route:' + route.name, route.params);
      this.trigger('route_start', route.name, route.params);
      this.trigger('route_start:' + route.name, route.params);
      mediator.trigger('route_start', route.name, route.params);
      mediator.trigger('route_start:' + route.name, route.params);
    },

    /**
     * Trigger completed route events
     *
     * @param {String} route
     */
    triggerComplete: function triggerComplete(route) {
      this.trigger('route_complete', route.name, route.params);
      this.trigger('route_complete:' + route.name, route.params);
      mediator.trigger('route_complete', route.name, route.params);
      mediator.trigger('route_complete:' + route.name, route.params);
    },

    /**
     * Display the loading mask
     */
    showLoadingMask: function showLoadingMask() {
      this.loadingMask.show();
    },

    /**
     * Hide the loading mask
     */
    hideLoadingMask: function hideLoadingMask() {
      this.loadingMask.hide();
    },

    /**
     * {@inheritdoc}
     */
    generate: function generate() {
      return Routing.generate.apply(Routing, arguments);
    },

    /**
     * {@inheritdoc}
     */
    match: function match() {
      return RouteMatcher.match.apply(RouteMatcher, arguments);
    },

    /**
     * {@inheritdoc}
     */
    redirect: function redirect(fragment, options) {
      if (this.currentController && !this.currentController.canLeave()) {
        return false;
      }

      fragment = fragment.indexOf('#') === 0 ? fragment : '#' + fragment;
      Backbone.history.navigate(fragment, options);
    },

    /**
     * Redirect to the given route
     */
    redirectToRoute: function redirectToRoute(route, routeParams, options) {
      return this.redirect(Routing.generate(route, routeParams), options);
    },

    /**
     * Reload the current page
     */
    reloadPage: function reloadPage() {
      var fragment = window.location.hash;
      this.redirect(fragment, {
        trigger: true
      });
    },

    /**
     * Process route links in the current page
     */
    _processLinks: function _processLinks() {
      _.each($('a[route]'), function (link) {
        var route = link.getAttribute('route');
        var routeParams = link.getAttribute('route-params');

        if (routeParams) {
          try {
            routeParams = JSON.parse(routeParams.replace(/'/g, '"'));
          } catch (error) {
            routeParams = null;
          }
        }

        link.setAttribute('href', '#' + Routing.generate(route, routeParams));
      });
    }
  });
  return new Router();
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 6042:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/js/saver/base-saver.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, mediator, Routing) {
  return {
    /**
     * Save an entity
     *
     * @param {String} code
     * @param {Object} data
     * @param {String} method
     *
     * @return {Promise}
     */
    save: function save(code, data, method) {
      return $.ajax({
        /* todo: remove ternary when all instances using this module will provide method parameter */
        type: 'undefined' === typeof method ? 'POST' : method,
        url: this.getUrl(code),
        data: JSON.stringify(data),
        contentType: 'application/json; charset=UTF-8'
      }).then(function (entity) {
        mediator.trigger('pim_enrich:form:entity:post_save', entity);
        return entity;
      }.bind(this));
    },

    /**
     * Get the entity url
     * @param {String} code
     *
     * @return {String}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 75963:
/*!**************************************************!*\
  !*** ./public/bundles/pimui/js/saver/channel.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"postUrl":"pim_enrich_channel_rest_post","putUrl":"pim_enrich_channel_rest_put"} ; 'use strict';
/**
 * Module to save channel
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847), __webpack_require__(/*! oro/mediator */ 27615), __webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing, mediator, $) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      if (null === code) {
        return Routing.generate(__moduleConfig.postUrl);
      }

      return Routing.generate(__moduleConfig.putUrl, {
        code: code
      });
    },

    /**
     * {@inheritdoc}
     */
    save: function save(code, data, method) {
      var queryData = data;
      var locales = [];

      _.each(data.locales, function (locale) {
        locales.push(locale.code);
      });

      queryData.locales = locales;
      return $.ajax({
        type: method,
        url: this.getUrl(code),
        data: JSON.stringify(queryData)
      }).then(function (entity) {
        mediator.trigger('pim_enrich:form:entity:post_save', entity);
        return entity;
      }.bind(this));
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 42775:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/js/saver/entity-saver.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * Generic module to save an entity
 *
 * @author    Tamara Robichet <tamara.robichet@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(identifier) {
      if (this.identifierProperty !== undefined) {
        return Routing.generate(this.url, _defineProperty({}, this.identifierProperty, identifier));
      }

      return Routing.generate(this.url, {
        identifier: identifier
      });
    },

    /**
     * Sets the url
     *
     * @param {String} url Route url
     */
    setUrl: function setUrl(url) {
      this.url = url;
      return this;
    },

    /**
     * Sets the identifierProperty for the url
     *
     * @param {string} identifierProperty
     */
    setIdentifierProperty: function setIdentifierProperty(identifierProperty) {
      this.identifierProperty = identifierProperty;
      return this;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 95016:
/*!*********************************************************!*\
  !*** ./public/bundles/pimui/js/saver/family-variant.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"putUrl":"pim_enrich_family_variant_rest_put"} ; 'use strict';
/**
 * Module to save family variant
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(identifier) {
      return Routing.generate(__moduleConfig.putUrl, {
        identifier: identifier
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 63108:
/*!*************************************************!*\
  !*** ./public/bundles/pimui/js/saver/family.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"putUrl":"pim_enrich_family_rest_put"} ; 'use strict';
/**
 * Module to save family
 *
 * @author    Alexandr Jeliuc <alex@jeliuc.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.putUrl, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 17073:
/*!******************************************************!*\
  !*** ./public/bundles/pimui/js/saver/group-saver.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_group_rest_post"} ; 'use strict';
/**
 * Module to save product group
 *
 * @author    Nicolas Dupont <nicolas@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        code: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 62805:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/saver/job-instance-export-saver.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_job_instance_rest_export_put"} ; 'use strict';
/**
 * Module to save job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(identifier) {
      return Routing.generate(__moduleConfig.url, {
        identifier: identifier
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 88150:
/*!********************************************************************!*\
  !*** ./public/bundles/pimui/js/saver/job-instance-import-saver.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_job_instance_rest_import_put"} ; 'use strict';
/**
 * Module to save job instance
 *
 * @author    Julien Sanchez <julien@akeneo.com>
 * @copyright 2016 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(identifier) {
      return Routing.generate(__moduleConfig.url, {
        identifier: identifier
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 19894:
/*!**************************************************************!*\
  !*** ./public/bundles/pimui/js/saver/product-model-saver.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_product_model_rest_post"} ; 'use strict';
/**
 * Module to save product model
 *
 * @author    Adrien Pétremann <adrien.petremann@akeneo.com>
 * @copyright 2017 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(id) {
      return Routing.generate(__moduleConfig.url, {
        id: id
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 28574:
/*!********************************************************!*\
  !*** ./public/bundles/pimui/js/saver/product-saver.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_enrich_product_rest_post"} ; 'use strict';

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/saver/base */ 6042), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseSaver, Routing) {
  return _.extend({}, BaseSaver, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(uuid) {
      return Routing.generate(__moduleConfig.url, {
        uuid: uuid
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 34770:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/js/security-context.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Routing) {
  var contextData = {};
  return {
    /**
     * Fetches data from the back then stores it.
     *
     * @returns {Promise}
     */
    initialize: function initialize() {
      return $.get(Routing.generate('pim_user_security_rest_get')).then(function (response) {
        return contextData = response;
      });
    },

    /**
     * Returns the value corresponding to the specified key.
     *
     * @param {String} key
     *
     * @returns {*}
     */
    get: function get(key) {
      return contextData[key];
    },

    /**
     * Shortcut to test if an ACL is granted for the current user.
     *
     * @param {String} acl
     */
    isGranted: function isGranted(acl) {
      return contextData[acl] === true;
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 24998:
/*!******************************************!*\
  !*** ./public/bundles/pimui/js/tools.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! require-context */ 76925)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, requireContext) {
  'use strict';
  /**
   * @export oro/tools
   * @name   oro.tools
   */

  return {
    /**
     * Loads dynamic list of modules and execute callback function with passed modules
     *
     * @param {Object.<string, string>} modules where keys are formal module names and values are actual
     * @param {function (Object)} callback
     */
    loadModules: function loadModules(modules, callback) {
      var arrayArguments = _.object(requirements, arguments);

      var requirements = _.values(modules);

      Promise.resolve(/*! require.ensure */).then((function () {
        _.each(modules, _.bind(function (value, key) {
          var module = requireContext(value);
          modules[key] = module;
        }, arrayArguments));

        callback(modules);
      }).bind(null, __webpack_require__))['catch'](__webpack_require__.oe);
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 16393:
/*!***********************************************!*\
  !*** ./public/bundles/pimui/js/translator.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387).translate;

/***/ }),

/***/ 46862:
/*!*************************************************!*\
  !*** ./public/bundles/pimui/js/user-context.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! @akeneo-pim-community/shared */ 58387).userContext;

/***/ }),

/***/ 32929:
/*!******************************************************************************************!*\
  !*** ./public/bundles/pimui/lib/bootstrap-datetimepicker/js/bootstrap-datetimepicker.js ***!
  \******************************************************************************************/
/***/ (() => {

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license
 * =========================================================
 * bootstrap-datetimepicker.js
 * http://www.eyecon.ro/bootstrap-datepicker
 * =========================================================
 * Copyright 2012 Stefan Petre
 *
 * Contributions:
 *  - Andrew Rowls
 *  - Thiago de Arruda
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================================================
 */
(function ($) {
  // Picker object
  var smartPhone = window.orientation != undefined;

  var DateTimePicker = function DateTimePicker(element, options) {
    this.id = dpgId++;
    this.init(element, options);
  };

  var dateToDate = function dateToDate(dt) {
    if (typeof dt === 'string') {
      return new Date(dt);
    }

    return dt;
  };

  DateTimePicker.prototype = {
    constructor: DateTimePicker,
    init: function init(element, options) {
      var icon;
      if (!(options.pickTime || options.pickDate)) throw new Error('Must choose at least one picker');
      this.options = options;
      this.$element = $(element);
      this.language = options.language in dates ? options.language : 'en';
      this.pickDate = options.pickDate;
      this.pickTime = options.pickTime;
      this.isInput = this.$element.is('input');
      this.component = false;
      if (this.$element.find('.input-append') || this.$element.find('.input-prepend')) this.component = this.$element.find('.add-on');
      this.format = options.format;

      if (!this.format) {
        if (this.isInput) this.format = this.$element.data('format');else this.format = this.$element.find('input').data('format');
        if (!this.format) this.format = 'MM/dd/yyyy';
      }

      this._compileFormat();

      if (this.component) {
        icon = this.component.find('i');
      }

      if (this.pickTime) {
        if (icon && icon.length) this.timeIcon = icon.data('time-icon');
        if (!this.timeIcon) this.timeIcon = 'icon-time';
        icon.addClass(this.timeIcon);
      }

      if (this.pickDate) {
        if (icon && icon.length) this.dateIcon = icon.data('date-icon');
        if (!this.dateIcon) this.dateIcon = 'icon-calendar';
        icon.removeClass(this.timeIcon);
        icon.addClass(this.dateIcon);
      }

      this.widget = $(getTemplate(this.timeIcon, options.pickDate, options.pickTime, options.pick12HourFormat, options.pickSeconds, options.collapse)).appendTo('body');
      this.minViewMode = options.minViewMode || this.$element.data('date-minviewmode') || 0;

      if (typeof this.minViewMode === 'string') {
        switch (this.minViewMode) {
          case 'months':
            this.minViewMode = 1;
            break;

          case 'years':
            this.minViewMode = 2;
            break;

          default:
            this.minViewMode = 0;
            break;
        }
      }

      this.viewMode = options.viewMode || this.$element.data('date-viewmode') || 0;

      if (typeof this.viewMode === 'string') {
        switch (this.viewMode) {
          case 'months':
            this.viewMode = 1;
            break;

          case 'years':
            this.viewMode = 2;
            break;

          default:
            this.viewMode = 0;
            break;
        }
      }

      this.startViewMode = this.viewMode;
      this.weekStart = options.weekStart || this.$element.data('date-weekstart') || 0;
      this.weekEnd = this.weekStart === 0 ? 6 : this.weekStart - 1;
      this.setStartDate(options.startDate || this.$element.data('date-startdate'));
      this.setEndDate(options.endDate || this.$element.data('date-enddate'));
      this.fillDow();
      this.fillMonths();
      this.fillHours();
      this.fillMinutes();
      this.fillSeconds();
      this.update();
      this.showMode();

      this._attachDatePickerEvents();
    },
    show: function show(e) {
      this.widget.show();
      this.height = this.component ? this.component.outerHeight() : this.$element.outerHeight();
      this.place();
      this.$element.trigger({
        type: 'show',
        date: this._date
      });

      this._attachDatePickerGlobalEvents();

      if (e) {
        e.stopPropagation();
        e.preventDefault();
      }
    },
    disable: function disable() {
      this.$element.find('input').prop('disabled', true);

      this._detachDatePickerEvents();
    },
    enable: function enable() {
      this.$element.find('input').prop('disabled', false);

      this._attachDatePickerEvents();
    },
    hide: function hide() {
      // Ignore event if in the middle of a picker transition
      var collapse = this.widget.find('.collapse');

      for (var i = 0; i < collapse.length; i++) {
        var collapseData = collapse.eq(i).data('collapse');
        if (collapseData && collapseData.transitioning) return;
      }

      this.widget.hide();
      this.viewMode = this.startViewMode;
      this.showMode();
      this.$element.trigger({
        type: 'hide',
        date: this._date
      });

      this._detachDatePickerGlobalEvents();
    },
    set: function set() {
      var formatted = '';
      if (!this._unset) formatted = this.formatDate(this._date);

      if (!this.isInput) {
        if (this.component) {
          var input = this.$element.find('input');
          input.val(formatted);

          this._resetMaskPos(input);
        }

        this.$element.data('date', formatted);
      } else {
        this.$element.val(formatted);

        this._resetMaskPos(this.$element);
      }
    },
    setValue: function setValue(newDate) {
      if (!newDate) {
        this._unset = true;
      } else {
        this._unset = false;
      }

      if (typeof newDate === 'string') {
        this._date = this.parseDate(newDate);
      } else if (newDate) {
        this._date = new Date(newDate);
      }

      this.set();
      this.viewDate = UTCDate(this._date.getUTCFullYear(), this._date.getUTCMonth(), 1, 0, 0, 0, 0);
      this.fillDate();
      this.fillTime();
    },
    getDate: function getDate() {
      if (this._unset) return null;
      return new Date(this._date.valueOf());
    },
    setDate: function setDate(date) {
      if (!date) this.setValue(null);else this.setValue(date.valueOf());
    },
    setStartDate: function setStartDate(date) {
      if (date instanceof Date) {
        this.startDate = date;
      } else if (typeof date === 'string') {
        this.startDate = new UTCDate(date);

        if (!this.startDate.getUTCFullYear()) {
          this.startDate = -Infinity;
        }
      } else {
        this.startDate = -Infinity;
      }

      if (this.viewDate) {
        this.update();
      }
    },
    setEndDate: function setEndDate(date) {
      if (date instanceof Date) {
        this.endDate = date;
      } else if (typeof date === 'string') {
        this.endDate = new UTCDate(date);

        if (!this.endDate.getUTCFullYear()) {
          this.endDate = Infinity;
        }
      } else {
        this.endDate = Infinity;
      }

      if (this.viewDate) {
        this.update();
      }
    },
    getLocalDate: function getLocalDate() {
      if (this._unset) return null;
      var d = this._date;
      return new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());
    },
    setLocalDate: function setLocalDate(localDate) {
      if (!localDate) this.setValue(null);else this.setValue(Date.UTC(localDate.getFullYear(), localDate.getMonth(), localDate.getDate(), localDate.getHours(), localDate.getMinutes(), localDate.getSeconds(), localDate.getMilliseconds()));
    },
    place: function place() {
      var position = 'absolute';
      var offset = this.component ? this.component.offset() : this.$element.offset();
      this.width = this.component ? this.component.outerWidth() : this.$element.outerWidth();
      offset.top = offset.top + this.height;
      var $window = $(window);

      if (this.options.width != undefined) {
        this.widget.width(this.options.width);
      }

      if (this.options.orientation == 'left') {
        this.widget.addClass('left-oriented');
        offset.left = offset.left - this.widget.width() + 20;
      }

      if (this._isInFixed()) {
        position = 'fixed';
        offset.top -= $window.scrollTop();
        offset.left -= $window.scrollLeft();
      }

      if ($window.width() < offset.left + this.widget.outerWidth()) {
        offset.right = $window.width() - offset.left - this.width;
        offset.left = 'auto';
        this.widget.addClass('pull-right');
      } else {
        offset.right = 'auto';
        this.widget.removeClass('pull-right');
      }

      this.widget.css({
        position: position,
        top: offset.top - this.widget.outerHeight() - (this.component ? this.component.outerHeight() : this.$element.outerHeight()),
        left: offset.left,
        right: offset.right
      });
    },
    notifyChange: function notifyChange() {
      this.$element.trigger({
        type: 'changeDate',
        date: this.getDate(),
        localDate: this.getLocalDate()
      });
    },
    update: function update(newDate) {
      var dateStr = newDate;

      if (!dateStr) {
        if (this.isInput) {
          dateStr = this.$element.val();
        } else {
          dateStr = this.$element.find('input').val();
        }

        if (dateStr) {
          this._date = this.parseDate(dateStr);
        }

        if (!this._date) {
          var tmp = new Date();
          this._date = UTCDate(tmp.getFullYear(), tmp.getMonth(), tmp.getDate(), tmp.getHours(), tmp.getMinutes(), tmp.getSeconds(), tmp.getMilliseconds());
        }
      }

      this.viewDate = UTCDate(this._date.getUTCFullYear(), this._date.getUTCMonth(), 1, 0, 0, 0, 0);
      this.fillDate();
      this.fillTime();
    },
    fillDow: function fillDow() {
      var dowCnt = this.weekStart;
      var html = $('<tr>');

      while (dowCnt < this.weekStart + 7) {
        html.append('<th class="dow">' + dates[this.language].daysMin[dowCnt++ % 7] + '</th>');
      }

      this.widget.find('.datepicker-days thead').append(html);
    },
    fillMonths: function fillMonths() {
      var html = '';
      var i = 0;

      while (i < 12) {
        html += '<span class="month">' + dates[this.language].monthsShort[i++] + '</span>';
      }

      this.widget.find('.datepicker-months td').append(html);
    },
    fillDate: function fillDate() {
      var year = this.viewDate.getUTCFullYear();
      var month = this.viewDate.getUTCMonth();
      var currentDate = UTCDate(this._date.getUTCFullYear(), this._date.getUTCMonth(), this._date.getUTCDate(), 0, 0, 0, 0);
      var startYear = _typeof(this.startDate) === 'object' ? this.startDate.getUTCFullYear() : -Infinity;
      var startMonth = _typeof(this.startDate) === 'object' ? this.startDate.getUTCMonth() : -1;
      var endYear = _typeof(this.endDate) === 'object' ? this.endDate.getUTCFullYear() : Infinity;
      var endMonth = _typeof(this.endDate) === 'object' ? this.endDate.getUTCMonth() : 12;
      this.widget.find('.datepicker-days').find('.disabled').removeClass('disabled');
      this.widget.find('.datepicker-months').find('.disabled').removeClass('disabled');
      this.widget.find('.datepicker-years').find('.disabled').removeClass('disabled');
      this.widget.find('.datepicker-days th:eq(1)').text(dates[this.language].months[month] + ' ' + year);
      var prevMonth = UTCDate(year, month - 1, 28, 0, 0, 0, 0);
      var day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());
      prevMonth.setUTCDate(day);
      prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.weekStart + 7) % 7);

      if (year == startYear && month <= startMonth || year < startYear) {
        this.widget.find('.datepicker-days th:eq(0)').addClass('disabled');
      }

      if (year == endYear && month >= endMonth || year > endYear) {
        this.widget.find('.datepicker-days th:eq(2)').addClass('disabled');
      }

      var nextMonth = new Date(prevMonth.valueOf());
      nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
      nextMonth = nextMonth.valueOf();
      var html = [];
      var row;
      var clsName;

      while (prevMonth.valueOf() < nextMonth) {
        if (prevMonth.getUTCDay() === this.weekStart) {
          row = $('<tr>');
          html.push(row);
        }

        clsName = '';

        if (prevMonth.getUTCFullYear() < year || prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() < month) {
          clsName += ' old';
        } else if (prevMonth.getUTCFullYear() > year || prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() > month) {
          clsName += ' new';
        }

        if (prevMonth.valueOf() === currentDate.valueOf()) {
          clsName += ' active';
        }

        if (prevMonth.valueOf() + 86400000 <= this.startDate) {
          clsName += ' disabled';
        }

        if (prevMonth.valueOf() > this.endDate) {
          clsName += ' disabled';
        }

        row.append('<td class="day' + clsName + '">' + prevMonth.getUTCDate() + '</td>');
        prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);
      }

      this.widget.find('.datepicker-days tbody').empty().append(html);

      var currentYear = this._date.getUTCFullYear();

      var months = this.widget.find('.datepicker-months').find('th:eq(1)').text(year).end().find('span').removeClass('active');

      if (currentYear === year) {
        months.eq(this._date.getUTCMonth()).addClass('active');
      }

      if (currentYear - 1 < startYear) {
        this.widget.find('.datepicker-months th:eq(0)').addClass('disabled');
      }

      if (currentYear + 1 > endYear) {
        this.widget.find('.datepicker-months th:eq(2)').addClass('disabled');
      }

      for (var i = 0; i < 12; i++) {
        if (year == startYear && startMonth > i || year < startYear) {
          $(months[i]).addClass('disabled');
        } else if (year == endYear && endMonth < i || year > endYear) {
          $(months[i]).addClass('disabled');
        }
      }

      html = '';
      year = parseInt(year / 10, 10) * 10;
      var yearCont = this.widget.find('.datepicker-years').find('th:eq(1)').text(year + '-' + (year + 9)).end().find('td');
      this.widget.find('.datepicker-years').find('th').removeClass('disabled');

      if (startYear > year) {
        this.widget.find('.datepicker-years').find('th:eq(0)').addClass('disabled');
      }

      if (endYear < year + 9) {
        this.widget.find('.datepicker-years').find('th:eq(2)').addClass('disabled');
      }

      year -= 1;

      for (var i = -1; i < 11; i++) {
        html += '<span class="year' + (i === -1 || i === 10 ? ' old' : '') + (currentYear === year ? ' active' : '') + (year < startYear || year > endYear ? ' disabled' : '') + '">' + year + '</span>';
        year += 1;
      }

      yearCont.html(html);
    },
    fillHours: function fillHours() {
      var table = this.widget.find('.timepicker .timepicker-hours table');
      table.parent().hide();
      var html = '';

      if (this.options.pick12HourFormat) {
        var current = 1;

        for (var i = 0; i < 3; i += 1) {
          html += '<tr>';

          for (var j = 0; j < 4; j += 1) {
            var c = current.toString();
            html += '<td class="hour">' + padLeft(c, 2, '0') + '</td>';
            current++;
          }

          html += '</tr>';
        }
      } else {
        var current = 0;

        for (var i = 0; i < 6; i += 1) {
          html += '<tr>';

          for (var j = 0; j < 4; j += 1) {
            var c = current.toString();
            html += '<td class="hour">' + padLeft(c, 2, '0') + '</td>';
            current++;
          }

          html += '</tr>';
        }
      }

      table.html(html);
    },
    fillMinutes: function fillMinutes() {
      var table = this.widget.find('.timepicker .timepicker-minutes table');
      table.parent().hide();
      var html = '';
      var current = 0;

      for (var i = 0; i < 5; i++) {
        html += '<tr>';

        for (var j = 0; j < 4; j += 1) {
          var c = current.toString();
          html += '<td class="minute">' + padLeft(c, 2, '0') + '</td>';
          current += 3;
        }

        html += '</tr>';
      }

      table.html(html);
    },
    fillSeconds: function fillSeconds() {
      var table = this.widget.find('.timepicker .timepicker-seconds table');
      table.parent().hide();
      var html = '';
      var current = 0;

      for (var i = 0; i < 5; i++) {
        html += '<tr>';

        for (var j = 0; j < 4; j += 1) {
          var c = current.toString();
          html += '<td class="second">' + padLeft(c, 2, '0') + '</td>';
          current += 3;
        }

        html += '</tr>';
      }

      table.html(html);
    },
    fillTime: function fillTime() {
      if (!this._date) return;
      var timeComponents = this.widget.find('.timepicker span[data-time-component]');
      var table = timeComponents.closest('table');
      var is12HourFormat = this.options.pick12HourFormat;

      var hour = this._date.getUTCHours();

      var period = 'AM';

      if (is12HourFormat) {
        if (hour >= 12) period = 'PM';
        if (hour === 0) hour = 12;else if (hour != 12) hour = hour % 12;
        this.widget.find('.timepicker [data-action=togglePeriod]').text(period);
      }

      hour = padLeft(hour.toString(), 2, '0');
      var minute = padLeft(this._date.getUTCMinutes().toString(), 2, '0');
      var second = padLeft(this._date.getUTCSeconds().toString(), 2, '0');
      timeComponents.filter('[data-time-component=hours]').text(hour);
      timeComponents.filter('[data-time-component=minutes]').text(minute);
      timeComponents.filter('[data-time-component=seconds]').text(second);
    },
    click: function click(e) {
      e.stopPropagation();
      e.preventDefault();
      this._unset = false;
      var target = $(e.target).closest('span, td, th');

      if (target.length === 1) {
        if (!target.is('.disabled')) {
          switch (target[0].nodeName.toLowerCase()) {
            case 'th':
              switch (target[0].className) {
                case 'switch':
                  this.showMode(1);
                  break;

                case 'prev':
                case 'next':
                  var vd = this.viewDate;
                  var navFnc = DPGlobal.modes[this.viewMode].navFnc;
                  var step = DPGlobal.modes[this.viewMode].navStep;
                  if (target[0].className === 'prev') step = step * -1;
                  vd['set' + navFnc](vd['get' + navFnc]() + step);
                  this.fillDate();
                  this.set();
                  break;
              }

              break;

            case 'span':
              if (target.is('.month')) {
                var month = target.parent().find('span').index(target);
                this.viewDate.setUTCMonth(month);
              } else {
                var year = parseInt(target.text(), 10) || 0;
                this.viewDate.setUTCFullYear(year);
              }

              if (this.viewMode !== 0) {
                this._date = UTCDate(this.viewDate.getUTCFullYear(), this.viewDate.getUTCMonth(), this.viewDate.getUTCDate(), this._date.getUTCHours(), this._date.getUTCMinutes(), this._date.getUTCSeconds(), this._date.getUTCMilliseconds());
                this.notifyChange();
              }

              this.showMode(-1);
              this.fillDate();
              this.set();
              break;

            case 'td':
              if (target.is('.day')) {
                var day = parseInt(target.text(), 10) || 1;
                var month = this.viewDate.getUTCMonth();
                var year = this.viewDate.getUTCFullYear();

                if (target.is('.old')) {
                  if (month === 0) {
                    month = 11;
                    year -= 1;
                  } else {
                    month -= 1;
                  }
                } else if (target.is('.new')) {
                  if (month == 11) {
                    month = 0;
                    year += 1;
                  } else {
                    month += 1;
                  }
                }

                this._date = UTCDate(year, month, day, this._date.getUTCHours(), this._date.getUTCMinutes(), this._date.getUTCSeconds(), this._date.getUTCMilliseconds());
                this.viewDate = UTCDate(year, month, Math.min(28, day), 0, 0, 0, 0);
                this.fillDate();
                this.set();
                this.notifyChange();
              }

              break;
          }
        }
      }
    },
    actions: {
      incrementHours: function incrementHours(e) {
        this._date.setUTCHours(this._date.getUTCHours() + 1);
      },
      incrementMinutes: function incrementMinutes(e) {
        this._date.setUTCMinutes(this._date.getUTCMinutes() + 1);
      },
      incrementSeconds: function incrementSeconds(e) {
        this._date.setUTCSeconds(this._date.getUTCSeconds() + 1);
      },
      decrementHours: function decrementHours(e) {
        this._date.setUTCHours(this._date.getUTCHours() - 1);
      },
      decrementMinutes: function decrementMinutes(e) {
        this._date.setUTCMinutes(this._date.getUTCMinutes() - 1);
      },
      decrementSeconds: function decrementSeconds(e) {
        this._date.setUTCSeconds(this._date.getUTCSeconds() - 1);
      },
      togglePeriod: function togglePeriod(e) {
        var hour = this._date.getUTCHours();

        if (hour >= 12) hour -= 12;else hour += 12;

        this._date.setUTCHours(hour);
      },
      showPicker: function showPicker() {
        this.widget.find('.timepicker > div:not(.timepicker-picker)').hide();
        this.widget.find('.timepicker .timepicker-picker').show();
      },
      showHours: function showHours() {
        this.widget.find('.timepicker .timepicker-picker').hide();
        this.widget.find('.timepicker .timepicker-hours').show();
      },
      showMinutes: function showMinutes() {
        this.widget.find('.timepicker .timepicker-picker').hide();
        this.widget.find('.timepicker .timepicker-minutes').show();
      },
      showSeconds: function showSeconds() {
        this.widget.find('.timepicker .timepicker-picker').hide();
        this.widget.find('.timepicker .timepicker-seconds').show();
      },
      selectHour: function selectHour(e) {
        var tgt = $(e.target);
        var value = parseInt(tgt.text(), 10);

        if (this.options.pick12HourFormat) {
          var current = this._date.getUTCHours();

          if (current >= 12) {
            if (value != 12) value = (value + 12) % 24;
          } else {
            if (value === 12) value = 0;else value = value % 12;
          }
        }

        this._date.setUTCHours(value);

        this.actions.showPicker.call(this);
      },
      selectMinute: function selectMinute(e) {
        var tgt = $(e.target);
        var value = parseInt(tgt.text(), 10);

        this._date.setUTCMinutes(value);

        this.actions.showPicker.call(this);
      },
      selectSecond: function selectSecond(e) {
        var tgt = $(e.target);
        var value = parseInt(tgt.text(), 10);

        this._date.setUTCSeconds(value);

        this.actions.showPicker.call(this);
      }
    },
    doAction: function doAction(e) {
      e.stopPropagation();
      e.preventDefault();
      if (!this._date) this._date = UTCDate(1970, 0, 0, 0, 0, 0, 0);
      var action = $(e.currentTarget).data('action');
      var rv = this.actions[action].apply(this, arguments);
      this.set();
      this.fillTime();
      this.notifyChange();
      return rv;
    },
    stopEvent: function stopEvent(e) {
      e.stopPropagation();
      e.preventDefault();
    },
    // part of the following code was taken from
    // http://cloud.github.com/downloads/digitalBush/jquery.maskedinput/jquery.maskedinput-1.3.js
    keydown: function keydown(e) {
      var self = this,
          k = e.which,
          input = $(e.target);

      if (k == 8 || k == 46) {
        // backspace and delete cause the maskPosition
        // to be recalculated
        setTimeout(function () {
          self._resetMaskPos(input);
        });
      }
    },
    keypress: function keypress(e) {
      var k = e.which;

      if (k == 8 || k == 46) {
        // For those browsers which will trigger
        // keypress on backspace/delete
        return;
      }

      var input = $(e.target);
      var c = String.fromCharCode(k);
      var val = input.val() || '';
      val += c;
      var mask = this._mask[this._maskPos];

      if (!mask) {
        return false;
      }

      if (mask.end != val.length) {
        return;
      }

      if (!mask.pattern.test(val.slice(mask.start))) {
        val = val.slice(0, val.length - 1);

        while ((mask = this._mask[this._maskPos]) && mask.character) {
          val += mask.character; // advance mask position past static
          // part

          this._maskPos++;
        }

        val += c;

        if (mask.end != val.length) {
          input.val(val);
          return false;
        } else {
          if (!mask.pattern.test(val.slice(mask.start))) {
            input.val(val.slice(0, mask.start));
            return false;
          } else {
            input.val(val);
            this._maskPos++;
            return false;
          }
        }
      } else {
        this._maskPos++;
      }
    },
    change: function change(e) {
      var input = $(e.target);
      var val = input.val();

      if (this._formatPattern.test(val)) {
        this.update();
        this.setValue(this._date.getTime());
        this.notifyChange();
        this.set();
      } else if (val && val.trim()) {
        this.setValue(this._date.getTime());
        if (this._date) this.set();else input.val('');
      } else {
        if (this._date) {
          this.setValue(null); // unset the date when the input is
          // erased

          this.notifyChange();
          this._unset = true;
        }
      }

      this._resetMaskPos(input);
    },
    showMode: function showMode(dir) {
      if (dir) {
        this.viewMode = Math.max(this.minViewMode, Math.min(2, this.viewMode + dir));
      }

      this.widget.find('.datepicker > div').hide().filter('.datepicker-' + DPGlobal.modes[this.viewMode].clsName).show();
    },
    destroy: function destroy() {
      this._detachDatePickerEvents();

      this._detachDatePickerGlobalEvents();

      this.widget.remove();
      this.$element.removeData('datetimepicker');
      this.component.removeData('datetimepicker');
    },
    formatDate: function formatDate(d) {
      return this.format.replace(formatReplacer, function (match) {
        var methodName,
            property,
            rv,
            len = match.length;
        if (match === 'ms') len = 1;
        property = dateFormatComponents[match].property;

        if (property === 'Hours12') {
          rv = d.getUTCHours();
          if (rv === 0) rv = 12;else if (rv !== 12) rv = rv % 12;
        } else if (property === 'Period12') {
          if (d.getUTCHours() >= 12) return 'PM';else return 'AM';
        } else if (property === 'UTCYear') {
          rv = d.getUTCFullYear();
          rv = rv.toString().substr(2);
        } else {
          methodName = 'get' + property;
          rv = d[methodName]();
        }

        if (methodName === 'getUTCMonth') rv = rv + 1;
        return padLeft(rv.toString(), len, '0');
      });
    },
    parseDate: function parseDate(str) {
      var match,
          i,
          property,
          methodName,
          value,
          parsed = {};
      if (!(match = this._formatPattern.exec(str))) return null;

      for (i = 1; i < match.length; i++) {
        property = this._propertiesByIndex[i];
        if (!property) continue;
        value = match[i];
        if (/^\d+$/.test(value)) value = parseInt(value, 10);
        parsed[property] = value;
      }

      return this._finishParsingDate(parsed);
    },
    _resetMaskPos: function _resetMaskPos(input) {
      var val = input.val();

      for (var i = 0; i < this._mask.length; i++) {
        if (this._mask[i].end > val.length) {
          // If the mask has ended then jump to
          // the next
          this._maskPos = i;
          break;
        } else if (this._mask[i].end === val.length) {
          this._maskPos = i + 1;
          break;
        }
      }
    },
    _finishParsingDate: function _finishParsingDate(parsed) {
      var year, month, date, hours, minutes, seconds, milliseconds;
      year = parsed.UTCFullYear;
      if (parsed.UTCYear) year = 2000 + parsed.UTCYear;
      if (!year) year = 1970;
      if (parsed.UTCMonth) month = parsed.UTCMonth - 1;else month = 0;
      date = parsed.UTCDate || 1;
      hours = parsed.UTCHours || 0;
      minutes = parsed.UTCMinutes || 0;
      seconds = parsed.UTCSeconds || 0;
      milliseconds = parsed.UTCMilliseconds || 0;

      if (parsed.Hours12) {
        hours = parsed.Hours12;
      }

      if (parsed.Period12) {
        if (/pm/i.test(parsed.Period12)) {
          if (hours != 12) hours = (hours + 12) % 24;
        } else {
          hours = hours % 12;
        }
      }

      return UTCDate(year, month, date, hours, minutes, seconds, milliseconds);
    },
    _compileFormat: function _compileFormat() {
      var match,
          component,
          components = [],
          mask = [],
          str = this.format,
          propertiesByIndex = {},
          i = 0,
          pos = 0;

      while (match = formatComponent.exec(str)) {
        component = match[0];

        if (component in dateFormatComponents) {
          i++;
          propertiesByIndex[i] = dateFormatComponents[component].property;
          components.push('\\s*' + dateFormatComponents[component].getPattern(this) + '\\s*');
          mask.push({
            pattern: new RegExp(dateFormatComponents[component].getPattern(this)),
            property: dateFormatComponents[component].property,
            start: pos,
            end: pos += component.length
          });
        } else {
          components.push(escapeRegExp(component));
          mask.push({
            pattern: new RegExp(escapeRegExp(component)),
            character: component,
            start: pos,
            end: ++pos
          });
        }

        str = str.slice(component.length);
      }

      this._mask = mask;
      this._maskPos = 0;
      this._formatPattern = new RegExp('^\\s*' + components.join('') + '\\s*$');
      this._propertiesByIndex = propertiesByIndex;
    },
    _attachDatePickerEvents: function _attachDatePickerEvents() {
      var self = this; // this handles date picker clicks

      this.widget.on('click', '.datepicker *', $.proxy(this.click, this)); // this handles time picker clicks

      this.widget.on('click', '[data-action]', $.proxy(this.doAction, this));
      this.widget.on('mousedown', $.proxy(this.stopEvent, this));

      if (this.pickDate && this.pickTime) {
        this.widget.on('click.togglePicker', '.accordion-toggle', function (e) {
          e.stopPropagation();
          var $this = $(this);
          var $parent = $this.closest('ul');
          var expanded = $parent.find('.collapse.in');
          var closed = $parent.find('.collapse:not(.in)');

          if (expanded && expanded.length) {
            var collapseData = expanded.data('collapse');
            if (collapseData && collapseData.transitioning) return;
            expanded.collapse('hide');
            closed.collapse('show');
            $this.find('i').toggleClass(self.timeIcon + ' ' + self.dateIcon);
            self.$element.find('.add-on i').toggleClass(self.timeIcon + ' ' + self.dateIcon);
          }
        });
      }

      if (this.isInput) {
        this.$element.on({
          focus: $.proxy(this.show, this),
          change: $.proxy(this.change, this)
        });

        if (this.options.maskInput) {
          this.$element.on({
            keydown: $.proxy(this.keydown, this),
            keypress: $.proxy(this.keypress, this)
          });
        }
      } else {
        this.$element.on({
          change: $.proxy(this.change, this)
        }, 'input');

        if (this.options.maskInput) {
          this.$element.on({
            keydown: $.proxy(this.keydown, this),
            keypress: $.proxy(this.keypress, this)
          }, 'input');
        }

        if (this.component) {
          this.component.on('click', $.proxy(this.show, this));
        } else {
          this.$element.on('click', $.proxy(this.show, this));
        }
      }
    },
    _attachDatePickerGlobalEvents: function _attachDatePickerGlobalEvents() {
      $(window).on('resize.datetimepicker' + this.id, $.proxy(this.place, this));

      if (!this.isInput) {
        $(document).on('mousedown.datetimepicker' + this.id, $.proxy(this.hide, this));
      }
    },
    _detachDatePickerEvents: function _detachDatePickerEvents() {
      this.widget.off('click', '.datepicker *', this.click);
      this.widget.off('click', '[data-action]');
      this.widget.off('mousedown', this.stopEvent);

      if (this.pickDate && this.pickTime) {
        this.widget.off('click.togglePicker');
      }

      if (this.isInput) {
        this.$element.off({
          focus: this.show,
          change: this.change
        });

        if (this.options.maskInput) {
          this.$element.off({
            keydown: this.keydown,
            keypress: this.keypress
          });
        }
      } else {
        this.$element.off({
          change: this.change
        }, 'input');

        if (this.options.maskInput) {
          this.$element.off({
            keydown: this.keydown,
            keypress: this.keypress
          }, 'input');
        }

        if (this.component) {
          this.component.off('click', this.show);
        } else {
          this.$element.off('click', this.show);
        }
      }
    },
    _detachDatePickerGlobalEvents: function _detachDatePickerGlobalEvents() {
      $(window).off('resize.datetimepicker' + this.id);

      if (!this.isInput) {
        $(document).off('mousedown.datetimepicker' + this.id);
      }
    },
    _isInFixed: function _isInFixed() {
      if (this.$element) {
        var parents = this.$element.parents();
        var inFixed = false;

        for (var i = 0; i < parents.length; i++) {
          if ($(parents[i]).css('position') == 'fixed') {
            inFixed = true;
            break;
          }
        }

        return inFixed;
      } else {
        return false;
      }
    }
  };

  $.fn.datetimepicker = function (option, val) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('datetimepicker'),
          options = _typeof(option) === 'object' && option;

      if (!data) {
        $this.data('datetimepicker', data = new DateTimePicker(this, $.extend({}, $.fn.datetimepicker.defaults, options)));
      }

      if (typeof option === 'string') data[option](val);
    });
  };

  $.fn.datetimepicker.defaults = {
    maskInput: false,
    pickDate: true,
    pickTime: true,
    pick12HourFormat: false,
    pickSeconds: true,
    startDate: -Infinity,
    endDate: Infinity,
    collapse: true
  };
  $.fn.datetimepicker.Constructor = DateTimePicker;
  var dpgId = 0;
  var dates = $.fn.datetimepicker.dates = {
    en: {
      days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
      daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
      daysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],
      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
      monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
    }
  };
  var dateFormatComponents = {
    d: {
      property: 'UTCDate',
      getPattern: function getPattern() {
        return '(0?[1-9]|[1-2][0-9]|3[0-1])\\b';
      }
    },
    dd: {
      property: 'UTCDate',
      getPattern: function getPattern() {
        return '(0?[1-9]|[1-2][0-9]|3[0-1])\\b';
      }
    },
    M: {
      property: 'UTCMonth',
      getPattern: function getPattern() {
        return '(0?[1-9]|1[0-2])\\b';
      }
    },
    MM: {
      property: 'UTCMonth',
      getPattern: function getPattern() {
        return '(0?[1-9]|1[0-2])\\b';
      }
    },
    yyyy: {
      property: 'UTCFullYear',
      getPattern: function getPattern() {
        return '(\\d{4})\\b';
      }
    },
    yy: {
      property: 'UTCYear',
      getPattern: function getPattern() {
        return '(\\d{2})\\b';
      }
    },
    y: {
      property: 'UTCFullYear',
      getPattern: function getPattern() {
        return '(\\d{4})\\b';
      }
    },
    HH: {
      property: 'UTCHours',
      getPattern: function getPattern() {
        return '(0?[0-9]|1[0-9]|2[0-3])\\b';
      }
    },
    H: {
      property: 'UTCHours',
      getPattern: function getPattern() {
        return '(0?[0-9]|1[0-9]|2[0-3])\\b';
      }
    },
    mm: {
      property: 'UTCMinutes',
      getPattern: function getPattern() {
        return '(0?[0-9]|[1-5][0-9])\\b';
      }
    },
    ss: {
      property: 'UTCSeconds',
      getPattern: function getPattern() {
        return '(0?[0-9]|[1-5][0-9])\\b';
      }
    },
    ms: {
      property: 'UTCMilliseconds',
      getPattern: function getPattern() {
        return '([0-9]{1,3})\\b';
      }
    },
    hh: {
      property: 'Hours12',
      getPattern: function getPattern() {
        return '(0?[1-9]|1[0-2])\\b';
      }
    },
    PP: {
      property: 'Period12',
      getPattern: function getPattern() {
        return '(AM|PM|am|pm|Am|aM|Pm|pM)\\b';
      }
    },
    a: {
      property: 'Period12',
      getPattern: function getPattern() {
        return '(AM|PM|am|pm|Am|aM|Pm|pM)\\b';
      }
    }
  };
  var keys = [];

  for (var k in dateFormatComponents) {
    keys.push(k);
  }

  keys[keys.length - 1] += '\\b';
  keys.push('.');
  var formatComponent = new RegExp(keys.join('\\b|'));
  keys.pop();
  var formatReplacer = new RegExp(keys.join('\\b|'), 'g');

  function escapeRegExp(str) {
    // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex
    return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
  }

  function padLeft(s, l, c) {
    if (l < s.length) return s;else return Array(l - s.length + 1).join(c || ' ') + s;
  }

  function getTemplate(timeIcon, pickDate, pickTime, is12Hours, showSeconds, collapse) {
    if (pickDate && pickTime) {
      return '<div class="bootstrap-datetimepicker-widget dropdown-menu">' + '<ul>' + '<li' + (collapse ? ' class="collapse in"' : '') + '>' + '<div class="datepicker">' + DPGlobal.template + '</div>' + '</li>' + '<li class="picker-switch accordion-toggle"><a><i class="' + timeIcon + '"></i></a></li>' + '<li' + (collapse ? ' class="collapse"' : '') + '>' + '<div class="timepicker">' + TPGlobal.getTemplate(is12Hours, showSeconds) + '</div>' + '</li>' + '</ul>' + '</div>';
    } else if (pickTime) {
      return '<div class="bootstrap-datetimepicker-widget dropdown-menu">' + '<div class="timepicker">' + TPGlobal.getTemplate(is12Hours, showSeconds) + '</div>' + '</div>';
    } else {
      return '<div class="bootstrap-datetimepicker-widget dropdown-menu">' + '<div class="datepicker">' + DPGlobal.template + '</div>' + '</div>';
    }
  }

  function UTCDate() {
    return new Date(Date.UTC.apply(Date, arguments));
  }

  var DPGlobal = {
    modes: [{
      clsName: 'days',
      navFnc: 'UTCMonth',
      navStep: 1
    }, {
      clsName: 'months',
      navFnc: 'UTCFullYear',
      navStep: 1
    }, {
      clsName: 'years',
      navFnc: 'UTCFullYear',
      navStep: 10
    }],
    isLeapYear: function isLeapYear(year) {
      return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
    },
    getDaysInMonth: function getDaysInMonth(year, month) {
      return [31, DPGlobal.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
    },
    headTemplate: '<thead>' + '<tr>' + '<th class="prev">&lsaquo;</th>' + '<th colspan="5" class="switch"></th>' + '<th class="next">&rsaquo;</th>' + '</tr>' + '</thead>',
    contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>'
  };
  DPGlobal.template = '<div class="datepicker-days">' + '<table class="table-condensed">' + DPGlobal.headTemplate + '<tbody></tbody>' + '</table>' + '</div>' + '<div class="datepicker-months">' + '<table class="table-condensed">' + DPGlobal.headTemplate + DPGlobal.contTemplate + '</table>' + '</div>' + '<div class="datepicker-years">' + '<table class="table-condensed">' + DPGlobal.headTemplate + DPGlobal.contTemplate + '</table>' + '</div>';
  var TPGlobal = {
    hourTemplate: '<span data-action="showHours" data-time-component="hours" class="timepicker-hour"></span>',
    minuteTemplate: '<span data-action="showMinutes" data-time-component="minutes" class="timepicker-minute"></span>',
    secondTemplate: '<span data-action="showSeconds" data-time-component="seconds" class="timepicker-second"></span>'
  };

  TPGlobal.getTemplate = function (is12Hours, showSeconds) {
    return '<div class="timepicker-picker">' + '<table class="table-condensed"' + (is12Hours ? ' data-hour-format="12"' : '') + '>' + '<tr>' + '<td><a href="#" class="btn" data-action="incrementHours"><i class="icon-chevron-up"></i></a></td>' + '<td class="separator"></td>' + '<td><a href="#" class="btn" data-action="incrementMinutes"><i class="icon-chevron-up"></i></a></td>' + (showSeconds ? '<td class="separator"></td>' + '<td><a href="#" class="btn" data-action="incrementSeconds"><i class="icon-chevron-up"></i></a></td>' : '') + (is12Hours ? '<td class="separator"></td>' : '') + '</tr>' + '<tr>' + '<td>' + TPGlobal.hourTemplate + '</td> ' + '<td class="separator">:</td>' + '<td>' + TPGlobal.minuteTemplate + '</td> ' + (showSeconds ? '<td class="separator">:</td>' + '<td>' + TPGlobal.secondTemplate + '</td>' : '') + (is12Hours ? '<td class="separator"></td>' + '<td>' + '<button type="button" class="btn btn-primary" data-action="togglePeriod"></button>' + '</td>' : '') + '</tr>' + '<tr>' + '<td><a href="#" class="btn" data-action="decrementHours"><i class="icon-chevron-down"></i></a></td>' + '<td class="separator"></td>' + '<td><a href="#" class="btn" data-action="decrementMinutes"><i class="icon-chevron-down"></i></a></td>' + (showSeconds ? '<td class="separator"></td>' + '<td><a href="#" class="btn" data-action="decrementSeconds"><i class="icon-chevron-down"></i></a></td>' : '') + (is12Hours ? '<td class="separator"></td>' : '') + '</tr>' + '</table>' + '</div>' + '<div class="timepicker-hours" data-action="selectHour">' + '<table class="table-condensed">' + '</table>' + '</div>' + '<div class="timepicker-minutes" data-action="selectMinute">' + '<table class="table-condensed">' + '</table>' + '</div>' + (showSeconds ? '<div class="timepicker-seconds" data-action="selectSecond">' + '<table class="table-condensed">' + '</table>' + '</div>' : '');
  };
})(window.jQuery);

/***/ }),

/***/ 21430:
/*!*********************************************************************!*\
  !*** ./public/bundles/pimui/lib/bootstrap-modal/bootstrap-modal.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 49845);
/* provided dependency */ var _ = __webpack_require__(/*! underscore */ 13469);
/* provided dependency */ var Backbone = __webpack_require__(/*! backbone */ 2918);
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Bootstrap Modal wrapper for use with Backbone.
 *
 * Takes care of instantiation, manages multiple modals,
 * adds several options and removes the element from the DOM when closed
 *
 * @author Charles Davison <charlie@powmedia.co.uk>
 *
 * Events:
 * shown: Fired when the modal has finished animating in
 * hidden: Fired when the modal has finished animating out
 * cancel: The user dismissed the modal
 * ok: The user clicked OK
 */
(function ($, _, Backbone) {
  var template = _.template('\
    <div class="AknFullPage">\
      <div class="AknFullPage-content<% if (typeof picture !== \'undefined\' || typeof illustrationClass !== \'undefined\') { %> AknFullPage-content--withIllustration<% } %>">\
        <div>\
          <% if (typeof picture !== \'undefined\') { %>\
            <img src="bundles/pimui/images/<%- picture %>" alt="<%- picture %>"/>\
          <% } else { %>\
            <div class="AknFullPage-image AknFullPage-illustration<% if (typeof illustrationClass !== \'undefined\') { %> AknFullPage-illustration--<%- illustrationClass %><% } %>"></div>\
          <% } %>\
        </div>\
        <div>\
          <div class="AknFullPage-titleContainer">\
            <% if (typeof subtitle !== \'undefined\') { %>\
              <div class="AknFullPage-subTitle"><%- subtitle %></div>\
            <% } %>\
            <div class="AknFullPage-title"><%- title %></div>\
            <% if (typeof innerDescription !== \'undefined\') { %>\
              <div class="AknFullPage-description">\
                <%- innerDescription %>\
              </div>\
            <% } %>\
          </div>\
          <div class="modal-body"><%= content %></div>\
          <div class="AknButtonList">\
            <% if (typeof cancelText !== undefined && cancelText !== \'\') { %>\
              <div class="AknButton AknButton--grey AknButtonList-item cancel"><%- cancelText %></div>\
            <% } %>\
            <div title="<%- okText %>" class="AknButton AknButtonList-item AknButton--apply<% if (typeof buttonClass !== \'undefined\') { %> <%- buttonClass %><% } %> ok"><%- okText %></div>\
          </div>\
        </div>\
      </div>\
    </div>\
    <div class="AknFullPage-cancel cancel"></div>\
  ');

  var Modal = Backbone.View.extend({
    className: 'modal',
    events: {
      'click .close': function clickClose(event) {
        event.preventDefault();
        this.trigger('cancel');

        if (this.options.content && this.options.content.trigger) {
          this.options.content.trigger('cancel', this);
        }
      },
      'click .cancel': function clickCancel(event) {
        event.preventDefault();
        this.trigger('cancel');

        if (this.options.content && this.options.content.trigger) {
          this.options.content.trigger('cancel', this);
        }
      },
      'click .ok': function clickOk(event) {
        event.preventDefault();
        this.trigger('ok');

        if (this.options.content && this.options.content.trigger) {
          this.options.content.trigger('ok', this);
        }

        if (this.options.okCloses) {
          this.close();
        }
      }
    },

    /**
     * Creates an instance of a Bootstrap Modal
     *
     * @see http://twitter.github.com/bootstrap/javascript.html#modals
     *
     * @param {Object} options
     * @param {String|View} [options.content] Modal content. Default: none
     * @param {String} [options.title]        Title. Default: none
     * @param {String} [options.okText]       Text for the OK button. Default: 'OK'
     * @param {String} [options.cancelText]   Text for the cancel button. Default: 'Cancel'. If passed a falsey value, the button will be removed
     * @param {Boolean} [options.allowCancel  Whether the modal can be closed, other than by pressing OK. Default: true
     * @param {Boolean} [options.escape]      Whether the 'esc' key can dismiss the modal. Default: true, but false if options.cancellable is true
     * @param {Boolean} [options.animate]     Whether to animate in/out. Default: false
     * @param {Function} [options.template]   Compiled underscore template to override the default one
     * @param {string} [options.picture]      Image filename to load for a custom illustration.
     */
    initialize: function initialize(options) {
      this.options = _.extend({
        title: null,
        okText: 'OK',
        focusOk: true,
        okCloses: true,
        cancelText: _.__('pim_common.cancel'),
        allowCancel: true,
        escape: true,
        animate: false,
        buttons: true,
        template: template,
        picture: undefined
      }, options);
    },

    /**
     * Creates the DOM element
     *
     * @api private
     */
    render: function render() {
      var $el = this.$el,
          options = this.options,
          content = options.content; //Create the modal container

      $el.html(options.template(options));
      var $content = this.$content = $el.find('.modal-body'); //Insert the main content if it's a view

      if (content.$el) {
        content.render();
        $el.find('.modal-body').html(content.$el);
      }

      if (options.animate) $el.addClass('fade');
      this.isRendered = true;
      return this;
    },

    /**
     * Renders and shows the modal
     *
     * @param {Function} [cb]     Optional callback that runs only when OK is pressed.
     */
    open: function open(cb) {
      if (!this.isRendered) this.render();
      this.delegateEvents();
      var self = this,
          $el = this.$el; //Create it

      $el.modal(_.extend({
        keyboard: this.options.allowCancel,
        backdrop: this.options.allowCancel ? true : 'static'
      }, this.options.modalOptions)); //Focus OK button

      $el.one('shown', function () {
        if (self.options.focusOk) {
          $el.find('.btn.ok').focus();
        }

        if (self.options.content && self.options.content.trigger) {
          self.options.content.trigger('shown', self);
        }

        self.trigger('shown');
      }); //Adjust the modal and backdrop z-index; for dealing with multiple modals

      var numModals = Modal.count,
          $backdrop = $('.modal-backdrop:eq(' + numModals + ')'),
          backdropIndex = parseInt($backdrop.css('z-index'), 10),
          elIndex = parseInt($backdrop.css('z-index'), 10) + 1;
      $backdrop.css('z-index', backdropIndex + numModals);
      this.$el.css('z-index', elIndex + numModals);

      if (this.options.allowCancel) {
        $backdrop.one('click', function () {
          if (self.options.content && self.options.content.trigger) {
            self.options.content.trigger('cancel', self);
          }

          self.trigger('cancel');
        });
        $(document).one('keyup.dismiss.modal', function (e) {
          e.which == 27 && self.trigger('cancel');

          if (self.options.content && self.options.content.trigger) {
            e.which == 27 && self.options.content.trigger('shown', self);
          }
        });
      }

      this.once('cancel', function () {
        self.close();
      });
      Modal.count++; //Run callback on OK if provided

      if (cb) {
        self.on('ok', cb);
      }

      return this;
    },

    /**
     * Closes the modal
     */
    close: function close() {
      var self = this,
          $el = this.$el; //Check if the modal should stay open

      if (this._preventClose) {
        this._preventClose = false;
        return;
      }

      $el.one('hidden', function onHidden(e) {
        // Ignore events propagated from interior objects, like bootstrap tooltips
        if (e.target !== e.currentTarget) {
          return $el.one('hidden', onHidden);
        }

        self.remove();

        if (self.options.content && self.options.content.trigger) {
          self.options.content.trigger('hidden', self);
        }

        self.trigger('hidden');
      });
      $el.modal('hide');
      Modal.count--;
    },

    /**
     * Stop the modal from closing.
     * Can be called from within a 'close' or 'ok' event listener.
     */
    preventClose: function preventClose() {
      this._preventClose = true;
    }
  }, {
    //STATICS
    //The number of modals on display
    count: 0
  }); //EXPORTS
  //CommonJS

  if ( true && exports) {
    module.exports = Modal;
  } //AMD / RequireJS


  if (true) {
    return !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      Backbone.BootstrapModal = Modal;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } //Regular; add to Backbone.Bootstrap.Modal
  else {}
})(jQuery, _, Backbone);

/***/ }),

/***/ 86049:
/*!***********************************************************************!*\
  !*** ./public/bundles/pimui/lib/bootstrap-switch/bootstrap.switch.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 49845);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* ============================================================
 * bootstrapSwitch v1.4 by Larentis Mattia @spiritualGuru
 * http://www.larentis.eu/switch/
 * ============================================================
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 * ============================================================ */
!function ($) {
  'use strict';

  $.fn['bootstrapSwitch'] = function (method) {
    var methods = {
      init: function init() {
        return this.each(function () {
          var $element = $(this),
              $div,
              $switchLeft,
              $switchRight,
              $label,
              myClasses = '',
              classes = $element.attr('class'),
              color,
              moving,
              onLabel = 'ON',
              offLabel = 'OFF',
              icon = false;
          $.each(['switch-mini', 'switch-small', 'switch-large'], function (i, el) {
            if (classes.indexOf(el) >= 0) myClasses = el;
          });

          if ($element.hasClass('has-switch')) {
            return;
          }

          $element.addClass('has-switch');
          if ($element.data('on') !== undefined) color = 'switch-' + $element.data('on');
          if ($element.data('on-label') !== undefined) onLabel = $element.data('on-label');
          if ($element.data('off-label') !== undefined) offLabel = $element.data('off-label');
          if ($element.data('icon') !== undefined) icon = $element.data('icon');
          $switchLeft = $('<span>').addClass('switch-left').addClass(myClasses).addClass(color).html(onLabel);
          color = '';
          if ($element.data('off') !== undefined) color = 'switch-' + $element.data('off');
          $switchRight = $('<span>').addClass('switch-right').addClass(myClasses).addClass(color).html(offLabel);
          $label = $('<label>').html('&nbsp;').addClass(myClasses).attr('for', $element.find('input').attr('id'));

          if (icon) {
            $label.html('<i class="icon icon-' + icon + '"></i>');
          }

          $div = $element.find(':checkbox').wrap($('<div>')).parent().data('animated', false);
          if ($element.data('animated') !== false) $div.addClass('switch-animate').data('animated', true);
          $div.append($switchLeft).append($label).append($switchRight);
          $element.find('>div').addClass($element.find('input').is(':checked') ? 'switch-on' : 'switch-off');
          if ($element.find('input').is(':disabled')) $(this).addClass('deactivate');

          var changeStatus = function changeStatus($this) {
            $this.siblings('label').trigger('mousedown').trigger('mouseup').trigger('click');
          };

          $element.on('keydown', function (e) {
            if (e.keyCode === 32) {
              e.stopImmediatePropagation();
              e.preventDefault();
              changeStatus($(e.target).find('span:first'));
            }
          });
          $switchLeft.on('click', function (e) {
            changeStatus($(this));
          });
          $switchRight.on('click', function (e) {
            changeStatus($(this));
          });
          $element.find('input').on('change', function (e, skipOnChange) {
            var $this = $(this),
                $element = $this.parent(),
                thisState = $this.is(':checked'),
                state = $element.is('.switch-off');
            e.preventDefault();
            $element.css('left', '');

            if (state === thisState) {
              if (thisState) $element.removeClass('switch-off').addClass('switch-on');else $element.removeClass('switch-on').addClass('switch-off');
              if ($element.data('animated') !== false) $element.addClass('switch-animate');
              if (typeof skipOnChange === 'boolean' && skipOnChange) return;
              $element.parent().trigger('switch-change', {
                el: $this,
                value: thisState
              });
            }
          });
          $element.find('label').on('mousedown touchstart', function (e) {
            var $this = $(this);
            moving = false;
            e.preventDefault();
            e.stopImmediatePropagation();
            $this.closest('div').removeClass('switch-animate');
            if ($this.closest('.has-switch').is('.deactivate')) $this.off('click');else {
              $this.on('mousemove touchmove', function (e) {
                var $element = $(this).closest('.switch'),
                    relativeX = (e.pageX || e.originalEvent.targetTouches[0].pageX) - $element.offset().left,
                    percent = relativeX / $element.width() * 100,
                    left = 25,
                    right = 75;
                moving = true;
                if (percent < left) percent = left;else if (percent > right) percent = right;
                $element.find('>div').css('left', percent - right + '%');
              });
              $this.on('click touchend', function (e) {
                var $this = $(this),
                    $target = $(e.target),
                    $myCheckBox = $target.siblings('input');
                e.stopImmediatePropagation();
                e.preventDefault();
                $this.off('mouseleave');
                if (moving) $myCheckBox.prop('checked', !(parseInt($this.parent().css('left')) < -25));else $myCheckBox.prop('checked', !$myCheckBox.is(':checked'));
                moving = false;
                $myCheckBox.trigger('change');
              });
              $this.on('mouseleave', function (e) {
                var $this = $(this),
                    $myCheckBox = $this.siblings('input');
                e.preventDefault();
                e.stopImmediatePropagation();
                $this.off('mouseleave');
                $this.trigger('mouseup');
                $myCheckBox.prop('checked', !(parseInt($this.parent().css('left')) < -25)).trigger('change');
              });
              $this.on('mouseup', function (e) {
                e.stopImmediatePropagation();
                e.preventDefault();
                $(this).off('mousemove');
              });
            }
          });
        });
      },
      toggleActivation: function toggleActivation() {
        var $this = $(this);
        $this.toggleClass('deactivate');
        $this.find('input:checkbox').attr('disabled', $this.is('.deactivate'));
      },
      isActive: function isActive() {
        return !$(this).hasClass('deactivate');
      },
      setActive: function setActive(active) {
        var $this = $(this);

        if (active) {
          $this.removeClass('deactivate');
          $this.find('input:checkbox').attr('disabled', false);
        } else {
          $this.addClass('deactivate');
          $this.find('input:checkbox').attr('disabled', true);
        }
      },
      toggleState: function toggleState(skipOnChange) {
        var $input = $(this).find('input:checkbox');
        $input.prop('checked', !$input.is(':checked')).trigger('change', skipOnChange);
      },
      setState: function setState(value, skipOnChange) {
        $(this).find('input:checkbox').prop('checked', value).trigger('change', skipOnChange);
      },
      status: function status() {
        return $(this).find('input:checkbox').is(':checked');
      },
      destroy: function destroy() {
        var $div = $(this).find('div'),
            $checkbox;
        $div.find(':not(input:checkbox)').remove();
        $checkbox = $div.children();
        $checkbox.unwrap().unwrap();
        $checkbox.off('change');
        return $checkbox;
      }
    };
    if (methods[method]) return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));else if (_typeof(method) === 'object' || !method) return methods.init.apply(this, arguments);else $.error('Method ' + method + ' does not exist!');
  };
}(jQuery);

/***/ }),

/***/ 16486:
/*!************************************************************!*\
  !*** ./public/bundles/pimui/lib/bootstrap/js/bootstrap.js ***!
  \************************************************************/
/***/ (() => {

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* ===================================================
 * bootstrap-transition.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#transitions
 * ===================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */
!function ($) {
  'use strict'; // jshint ;_;

  /* CSS TRANSITION SUPPORT (http://www.modernizr.com/)
   * ======================================================= */

  $(function () {
    $.support.transition = function () {
      var transitionEnd = function () {
        var el = document.createElement('bootstrap'),
            transEndEventNames = {
          WebkitTransition: 'webkitTransitionEnd',
          MozTransition: 'transitionend',
          OTransition: 'oTransitionEnd otransitionend',
          transition: 'transitionend'
        },
            name;

        for (name in transEndEventNames) {
          if (el.style[name] !== undefined) {
            return transEndEventNames[name];
          }
        }
      }();

      return transitionEnd && {
        end: transitionEnd
      };
    }();
  });
}(window.jQuery);
/* ==========================================================
 * bootstrap-alert.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#alerts
 * ==========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

!function ($) {
  'use strict'; // jshint ;_;

  /* ALERT CLASS DEFINITION
   * ====================== */

  var dismiss = '[data-dismiss="alert"]',
      Alert = function Alert(el) {
    $(el).on('click', dismiss, this.close);
  };

  Alert.prototype.close = function (e) {
    var $this = $(this),
        selector = $this.attr('data-target'),
        $parent;

    if (!selector) {
      selector = $this.attr('href');
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ''); //strip for ie7
    }

    $parent = $(selector);
    e && e.preventDefault();
    $parent.length || ($parent = $this.hasClass('alert') ? $this : $this.parent());
    $parent.trigger(e = $.Event('close'));
    if (e.isDefaultPrevented()) return;
    $parent.removeClass('in');

    function removeElement() {
      $parent.trigger('closed').remove();
    }

    $.support.transition && $parent.hasClass('fade') ? $parent.on($.support.transition.end, removeElement) : removeElement();
  };
  /* ALERT PLUGIN DEFINITION
   * ======================= */


  var old = $.fn.alert;

  $.fn.alert = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('alert');
      if (!data) $this.data('alert', data = new Alert(this));
      if (typeof option == 'string') data[option].call($this);
    });
  };

  $.fn.alert.Constructor = Alert;
  /* ALERT NO CONFLICT
   * ================= */

  $.fn.alert.noConflict = function () {
    $.fn.alert = old;
    return this;
  };
  /* ALERT DATA-API
   * ============== */


  $(document).on('click.alert.data-api', dismiss, Alert.prototype.close);
}(window.jQuery);
/* ============================================================
 * bootstrap-button.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#buttons
 * ============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */

!function ($) {
  'use strict'; // jshint ;_;

  /* BUTTON PUBLIC CLASS DEFINITION
   * ============================== */

  var Button = function Button(element, options) {
    this.$element = $(element);
    this.options = $.extend({}, $.fn.button.defaults, options);
  };

  Button.prototype.setState = function (state) {
    var d = 'disabled',
        $el = this.$element,
        data = $el.data(),
        val = $el.is('input') ? 'val' : 'html';
    state = state + 'Text';
    data.resetText || $el.data('resetText', $el[val]());
    $el[val](data[state] || this.options[state]); // push to event loop to allow forms to submit

    setTimeout(function () {
      state == 'loadingText' ? $el.addClass(d).attr(d, d) : $el.removeClass(d).removeAttr(d);
    }, 0);
  };

  Button.prototype.toggle = function () {
    var $parent = this.$element.closest('[data-toggle="buttons-radio"]');
    $parent && $parent.find('.active').removeClass('active');
    this.$element.toggleClass('active');
  };
  /* BUTTON PLUGIN DEFINITION
   * ======================== */


  var old = $.fn.button;

  $.fn.button = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('button'),
          options = _typeof(option) == 'object' && option;
      if (!data) $this.data('button', data = new Button(this, options));
      if (option == 'toggle') data.toggle();else if (option) data.setState(option);
    });
  };

  $.fn.button.defaults = {
    loadingText: 'loading...'
  };
  $.fn.button.Constructor = Button;
  /* BUTTON NO CONFLICT
   * ================== */

  $.fn.button.noConflict = function () {
    $.fn.button = old;
    return this;
  };
  /* BUTTON DATA-API
   * =============== */


  $(document).on('click.button.data-api', '[data-toggle^=button]', function (e) {
    var $btn = $(e.target);
    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn');
    $btn.button('toggle');
  });
}(window.jQuery);
/* =============================================================
 * bootstrap-collapse.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#collapse
 * =============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */

!function ($) {
  'use strict'; // jshint ;_;

  /* COLLAPSE PUBLIC CLASS DEFINITION
   * ================================ */

  var Collapse = function Collapse(element, options) {
    this.$element = $(element);
    this.options = $.extend({}, $.fn.collapse.defaults, options);

    if (this.options.parent) {
      this.$parent = $(this.options.parent);
    }

    this.options.toggle && this.toggle();
  };

  Collapse.prototype = {
    constructor: Collapse,
    dimension: function dimension() {
      var hasWidth = this.$element.hasClass('width');
      return hasWidth ? 'width' : 'height';
    },
    show: function show() {
      var dimension, scroll, actives, hasData;
      if (this.transitioning || this.$element.hasClass('in')) return;
      dimension = this.dimension();
      scroll = $.camelCase(['scroll', dimension].join('-'));
      actives = this.$parent && this.$parent.find('> .accordion-group > .in');

      if (actives && actives.length) {
        hasData = actives.data('collapse');
        if (hasData && hasData.transitioning) return;
        actives.collapse('hide');
        hasData || actives.data('collapse', null);
      }

      this.$element[dimension](0);
      this.transition('addClass', $.Event('show'), 'shown');
      $.support.transition && this.$element[dimension](this.$element[0][scroll]);
    },
    hide: function hide() {
      var dimension;
      if (this.transitioning || !this.$element.hasClass('in')) return;
      dimension = this.dimension();
      this.reset(this.$element[dimension]());
      this.transition('removeClass', $.Event('hide'), 'hidden');
      this.$element[dimension](0);
    },
    reset: function reset(size) {
      var dimension = this.dimension();
      this.$element.removeClass('collapse')[dimension](size || 'auto')[0].offsetWidth;
      this.$element[size !== null ? 'addClass' : 'removeClass']('collapse');
      return this;
    },
    transition: function transition(method, startEvent, completeEvent) {
      var that = this,
          complete = function complete() {
        if (startEvent.type == 'show') that.reset();
        that.transitioning = 0;
        that.$element.trigger(completeEvent);
      };

      this.$element.trigger(startEvent);
      if (startEvent.isDefaultPrevented()) return;
      this.transitioning = 1;
      this.$element[method]('in');
      $.support.transition && this.$element.hasClass('collapse') ? this.$element.one($.support.transition.end, complete) : complete();
    },
    toggle: function toggle() {
      this[this.$element.hasClass('in') ? 'hide' : 'show']();
    }
  };
  /* COLLAPSE PLUGIN DEFINITION
   * ========================== */

  var old = $.fn.collapse;

  $.fn.collapse = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('collapse'),
          options = $.extend({}, $.fn.collapse.defaults, $this.data(), _typeof(option) == 'object' && option);
      if (!data) $this.data('collapse', data = new Collapse(this, options));
      if (typeof option == 'string') data[option]();
    });
  };

  $.fn.collapse.defaults = {
    toggle: true
  };
  $.fn.collapse.Constructor = Collapse;
  /* COLLAPSE NO CONFLICT
   * ==================== */

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old;
    return this;
  };
  /* COLLAPSE DATA-API
   * ================= */


  $(document).on('click.collapse.data-api', '[data-toggle=collapse]', function (e) {
    var $this = $(this),
        href,
        target = $this.attr('data-target') || e.preventDefault() || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, ''),
        //strip for ie7
    option = $(target).data('collapse') ? 'toggle' : $this.data();
    $this[$(target).hasClass('in') ? 'addClass' : 'removeClass']('collapsed');
    $(target).collapse(option);
  });
}(window.jQuery);
/* ============================================================
 * bootstrap-dropdown.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#dropdowns
 * ============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */

!function ($) {
  'use strict'; // jshint ;_;

  /* DROPDOWN CLASS DEFINITION
   * ========================= */

  var toggle = '[data-toggle=dropdown]',
      Dropdown = function Dropdown(element) {
    var $el = $(element).on('click.dropdown.data-api', this.toggle);
    $('html').on('click.dropdown.data-api', function () {
      $el.parent().removeClass('open');
    });
  };

  Dropdown.prototype = {
    constructor: Dropdown,
    toggle: function toggle(e) {
      var $this = $(this),
          $parent,
          isActive;
      if ($this.is('.disabled, :disabled')) return;
      $parent = getParent($this);
      isActive = $parent.hasClass('open');
      clearMenus();

      if (!isActive) {
        if ('ontouchstart' in document.documentElement) {
          // if mobile we we use a backdrop because click events don't delegate
          $('<div class="dropdown-backdrop"></div>').insertBefore($(this)).on('click', clearMenus);
        } // This little code block will set correct position for dropdown elements.


        var gap = 30;
        var outerWidth = $parent.find('.AknDropdown-menu').outerWidth();
        var outerHeight = $parent.find('.AknDropdown-menuLink').length * 26 + 44;
        var bodyHeight = $('body').height(); // Lists have a max height of 70vh

        var maxHeight = bodyHeight * 0.7;
        var parentOffset = $parent.offset().top;
        var boundedHeight = Math.min(outerHeight, maxHeight);
        var isScrollable = outerHeight > maxHeight;
        var listIsLongerThanPage = boundedHeight + parentOffset + gap > bodyHeight;
        var parentOffsetBottom = $parent.offset().top + $parent.height();
        var listIsOverlappingTop = parentOffsetBottom - outerHeight < 0;

        if (false === isScrollable && listIsLongerThanPage && false === listIsOverlappingTop) {
          $parent.toggleClass('top', true);
        }

        if (outerWidth + $parent.offset().left + gap > $('body').width()) {
          $parent.addClass('left');
        } else {
          $parent.removeClass('left');
        }

        $parent.toggleClass('open');
      }

      $this.focus();
      return false;
    },
    keydown: function keydown(e) {
      var $this, $items, $active, $parent, isActive, index;
      if (!/(38|40|27)/.test(e.keyCode)) return;
      $this = $(this);
      e.preventDefault();
      e.stopPropagation();
      if ($this.is('.disabled, :disabled')) return;
      $parent = getParent($this);
      isActive = $parent.hasClass('open');

      if (!isActive || isActive && e.keyCode == 27) {
        if (e.which == 27) $parent.find(toggle).focus();
        return $this.click();
      }

      $items = $('[role=menu] li:not(.divider):visible a', $parent);
      if (!$items.length) return;
      index = $items.index($items.filter(':focus'));
      if (e.keyCode == 38 && index > 0) index--; // up

      if (e.keyCode == 40 && index < $items.length - 1) index++; // down

      if (!~index) index = 0;
      $items.eq(index).focus();
    }
  };

  function clearMenus() {
    $('.dropdown-backdrop').remove();
    $(toggle).each(function () {
      getParent($(this)).removeClass('open');
    });
  }

  function getParent($this) {
    var selector = $this.attr('data-target'),
        $parent;

    if (!selector) {
      selector = $this.attr('href');
      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, ''); //strip for ie7
    }

    $parent = selector && $(selector);
    if (!$parent || !$parent.length) $parent = $this.parent();
    return $parent;
  }
  /* DROPDOWN PLUGIN DEFINITION
   * ========================== */


  var old = $.fn.dropdown;

  $.fn.dropdown = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('dropdown');
      if (!data) $this.data('dropdown', data = new Dropdown(this));
      if (typeof option == 'string') data[option].call($this);
    });
  };

  $.fn.dropdown.Constructor = Dropdown;
  /* DROPDOWN NO CONFLICT
   * ==================== */

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old;
    return this;
  };
  /* APPLY TO STANDARD DROPDOWN ELEMENTS
   * =================================== */


  $(document).on('click.dropdown.data-api', clearMenus).on('click.dropdown.data-api', '.dropdown form', function (e) {
    e.stopPropagation();
  }).on('click.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.dropdown.data-api', toggle + ', [role=menu]', Dropdown.prototype.keydown);
}(window.jQuery);
/* =========================================================
 * bootstrap-modal.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#modals
 * =========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */

!function ($) {
  'use strict'; // jshint ;_;

  /* MODAL CLASS DEFINITION
   * ====================== */

  var Modal = function Modal(element, options) {
    this.options = options;
    this.$element = $(element).delegate('[data-dismiss="modal"]', 'click.dismiss.modal', $.proxy(this.hide, this));
    this.options.remote && this.$element.find('.modal-body').load(this.options.remote);
  };

  Modal.prototype = {
    constructor: Modal,
    toggle: function toggle() {
      return this[!this.isShown ? 'show' : 'hide']();
    },
    show: function show() {
      var that = this,
          e = $.Event('show');
      this.$element.trigger(e);
      if (this.isShown || e.isDefaultPrevented()) return;
      this.isShown = true;
      this.escape();
      this.backdrop(function () {
        var transition = $.support.transition && that.$element.hasClass('fade');

        if (!that.$element.parent().length) {
          that.$element.appendTo(document.body); //don't move modals dom position
        }

        that.$element.show();

        if (transition) {
          that.$element[0].offsetWidth; // force reflow
        }

        that.$element.addClass('in').attr('aria-hidden', false);
        that.enforceFocus();
        transition ? that.$element.one($.support.transition.end, function () {
          that.$element.focus().trigger('shown');
        }) : that.$element.focus().trigger('shown');
      });
    },
    hide: function hide(e) {
      e && e.preventDefault();
      var that = this;
      e = $.Event('hide');
      this.$element.trigger(e);
      if (!this.isShown || e.isDefaultPrevented()) return;
      this.isShown = false;
      this.escape();
      $(document).off('focusin.modal');
      this.$element.removeClass('in').attr('aria-hidden', true);
      $.support.transition && this.$element.hasClass('fade') ? this.hideWithTransition() : this.hideModal();
    },
    enforceFocus: function enforceFocus() {
      var that = this;
      $(document).on('focusin.modal', function (e) {
        if (that.$element[0] !== e.target && !that.$element.has(e.target).length) {
          that.$element.focus();
        }
      });
    },
    escape: function escape() {
      var that = this;

      if (this.isShown && this.options.keyboard) {
        this.$element.on('keyup.dismiss.modal', function (e) {
          e.which == 27 && that.hide();
        });
      } else if (!this.isShown) {
        this.$element.off('keyup.dismiss.modal');
      }
    },
    hideWithTransition: function hideWithTransition() {
      var that = this,
          timeout = setTimeout(function () {
        that.$element.off($.support.transition.end);
        that.hideModal();
      }, 500);
      this.$element.one($.support.transition.end, function () {
        clearTimeout(timeout);
        that.hideModal();
      });
    },
    hideModal: function hideModal() {
      var that = this;
      this.$element.hide();
      this.backdrop(function () {
        that.removeBackdrop();
        that.$element.trigger('hidden');
      });
    },
    removeBackdrop: function removeBackdrop() {
      this.$backdrop && this.$backdrop.remove();
      this.$backdrop = null;
    },
    backdrop: function backdrop(callback) {
      var that = this,
          animate = this.$element.hasClass('fade') ? 'fade' : '';

      if (this.isShown && this.options.backdrop) {
        var doAnimate = $.support.transition && animate;
        this.$backdrop = $('<div class="modal-backdrop ' + animate + '"></div>').appendTo(document.body);
        this.$backdrop.click(this.options.backdrop == 'static' ? $.proxy(this.$element[0].focus, this.$element[0]) : $.proxy(this.hide, this));
        if (doAnimate) this.$backdrop[0].offsetWidth; // force reflow

        this.$backdrop.addClass('in');
        if (!callback) return;
        doAnimate ? this.$backdrop.one($.support.transition.end, callback) : callback();
      } else if (!this.isShown && this.$backdrop) {
        this.$backdrop.removeClass('in');
        $.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one($.support.transition.end, callback) : callback();
      } else if (callback) {
        callback();
      }
    }
  };
  /* MODAL PLUGIN DEFINITION
   * ======================= */

  var old = $.fn.modal;

  $.fn.modal = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('modal'),
          options = $.extend({}, $.fn.modal.defaults, $this.data(), _typeof(option) == 'object' && option);
      if (!data) $this.data('modal', data = new Modal(this, options));
      if (typeof option == 'string') data[option]();else if (options.show) data.show();
    });
  };

  $.fn.modal.defaults = {
    backdrop: true,
    keyboard: true,
    show: true
  };
  $.fn.modal.Constructor = Modal;
  /* MODAL NO CONFLICT
   * ================= */

  $.fn.modal.noConflict = function () {
    $.fn.modal = old;
    return this;
  };
  /* MODAL DATA-API
   * ============== */


  $(document).on('click.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this = $(this),
        href = $this.attr('href'),
        $target = $($this.attr('data-target') || href && href.replace(/.*(?=#[^\s]+$)/, '')),
        //strip for ie7
    option = $target.data('modal') ? 'toggle' : $.extend({
      remote: !/#/.test(href) && href
    }, $target.data(), $this.data());
    e.preventDefault();
    $target.modal(option).one('hide', function () {
      $this.focus();
    });
  });
}(window.jQuery);
/* ===========================================================
 * bootstrap-tooltip.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#tooltips
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ===========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

!function ($) {
  'use strict'; // jshint ;_;

  /* TOOLTIP PUBLIC CLASS DEFINITION
   * =============================== */

  var Tooltip = function Tooltip(element, options) {
    this.init('tooltip', element, options);
  };

  Tooltip.prototype = {
    constructor: Tooltip,
    init: function init(type, element, options) {
      var eventIn, eventOut, triggers, trigger, i;
      this.type = type;
      this.$element = $(element);
      this.options = this.getOptions(options);
      this.enabled = true;
      triggers = this.options.trigger.split(' ');

      for (i = triggers.length; i--;) {
        trigger = triggers[i];

        if (trigger == 'click') {
          this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this));
        } else if (trigger != 'manual') {
          eventIn = trigger == 'hover' ? 'mouseenter' : 'focus';
          eventOut = trigger == 'hover' ? 'mouseleave' : 'blur';
          this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this));
          this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this));
        }
      }

      this.options.selector ? this._options = $.extend({}, this.options, {
        trigger: 'manual',
        selector: ''
      }) : this.fixTitle();
    },
    getOptions: function getOptions(options) {
      options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options);

      if (options.delay && typeof options.delay == 'number') {
        options.delay = {
          show: options.delay,
          hide: options.delay
        };
      }

      return options;
    },
    enter: function enter(e) {
      var defaults = $.fn[this.type].defaults,
          options = {},
          self;
      this._options && $.each(this._options, function (key, value) {
        if (defaults[key] != value) options[key] = value;
      }, this);
      self = $(e.currentTarget)[this.type](options).data(this.type);
      if (!self.options.delay || !self.options.delay.show) return self.show();
      clearTimeout(this.timeout);
      self.hoverState = 'in';
      this.timeout = setTimeout(function () {
        if (self.hoverState == 'in') self.show();
      }, self.options.delay.show);
    },
    leave: function leave(e) {
      var self = $(e.currentTarget)[this.type](this._options).data(this.type);
      if (this.timeout) clearTimeout(this.timeout);
      if (!self.options.delay || !self.options.delay.hide) return self.hide();
      self.hoverState = 'out';
      this.timeout = setTimeout(function () {
        if (self.hoverState == 'out') self.hide();
      }, self.options.delay.hide);
    },
    show: function show() {
      var $tip,
          pos,
          actualWidth,
          actualHeight,
          placement,
          tp,
          e = $.Event('show');

      if (this.hasContent() && this.enabled) {
        this.$element.trigger(e);
        if (e.isDefaultPrevented()) return;
        $tip = this.tip();
        this.setContent();

        if (this.options.animation) {
          $tip.addClass('fade');
        }

        placement = typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement;
        $tip.detach().css({
          top: 0,
          left: 0,
          display: 'block'
        });
        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element);
        pos = this.getPosition();
        actualWidth = $tip[0].offsetWidth;
        actualHeight = $tip[0].offsetHeight;

        switch (placement) {
          case 'bottom':
            tp = {
              top: pos.top + pos.height,
              left: pos.left + pos.width / 2 - actualWidth / 2
            };
            break;

          case 'top':
            tp = {
              top: pos.top - actualHeight,
              left: pos.left + pos.width / 2 - actualWidth / 2
            };
            break;

          case 'left':
            tp = {
              top: pos.top + pos.height / 2 - actualHeight / 2,
              left: pos.left - actualWidth
            };
            break;

          case 'right':
            tp = {
              top: pos.top + pos.height / 2 - actualHeight / 2,
              left: pos.left + pos.width
            };
            break;
        }

        this.applyPlacement(tp, placement);
        this.$element.trigger('shown');
      }
    },
    applyPlacement: function applyPlacement(offset, placement) {
      var $tip = this.tip(),
          width = $tip[0].offsetWidth,
          height = $tip[0].offsetHeight,
          actualWidth,
          actualHeight,
          delta,
          replace;
      $tip.offset(offset).addClass(placement).addClass('in');
      actualWidth = $tip[0].offsetWidth;
      actualHeight = $tip[0].offsetHeight;

      if (placement == 'top' && actualHeight != height) {
        offset.top = offset.top + height - actualHeight;
        replace = true;
      }

      if (placement == 'bottom' || placement == 'top') {
        delta = 0;

        if (offset.left < 0) {
          delta = offset.left * -2;
          offset.left = 0;
          $tip.offset(offset);
          actualWidth = $tip[0].offsetWidth;
          actualHeight = $tip[0].offsetHeight;
        }

        this.replaceArrow(delta - width + actualWidth, actualWidth, 'left');
      } else {
        this.replaceArrow(actualHeight - height, actualHeight, 'top');
      }

      if (replace) $tip.offset(offset);
    },
    replaceArrow: function replaceArrow(delta, dimension, position) {
      this.arrow().css(position, delta ? 50 * (1 - delta / dimension) + '%' : '');
    },
    setContent: function setContent() {
      var $tip = this.tip(),
          title = this.getTitle();
      $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title);
      $tip.removeClass('fade in top bottom left right');
    },
    hide: function hide() {
      var that = this,
          $tip = this.tip(),
          e = $.Event('hide');
      this.$element.trigger(e);
      if (e.isDefaultPrevented()) return;
      $tip.removeClass('in');

      function removeWithAnimation() {
        var timeout = setTimeout(function () {
          $tip.off($.support.transition.end).detach();
        }, 500);
        $tip.one($.support.transition.end, function () {
          clearTimeout(timeout);
          $tip.detach();
        });
      }

      $.support.transition && this.$tip.hasClass('fade') ? removeWithAnimation() : $tip.detach();
      this.$element.trigger('hidden');
      return this;
    },
    fixTitle: function fixTitle() {
      var $e = this.$element;

      if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
        $e.attr('data-original-title', $e.attr('title') || '').attr('title', '');
      }
    },
    hasContent: function hasContent() {
      return this.getTitle();
    },
    getPosition: function getPosition() {
      var el = this.$element[0];
      return $.extend({}, typeof el.getBoundingClientRect == 'function' ? el.getBoundingClientRect() : {
        width: el.offsetWidth,
        height: el.offsetHeight
      }, this.$element.offset());
    },
    getTitle: function getTitle() {
      var title,
          $e = this.$element,
          o = this.options;
      title = $e.attr('data-original-title') || (typeof o.title == 'function' ? o.title.call($e[0]) : o.title);
      return title;
    },
    tip: function tip() {
      return this.$tip = this.$tip || $(this.options.template);
    },
    arrow: function arrow() {
      return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow');
    },
    validate: function validate() {
      if (!this.$element[0].parentNode) {
        this.hide();
        this.$element = null;
        this.options = null;
      }
    },
    enable: function enable() {
      this.enabled = true;
    },
    disable: function disable() {
      this.enabled = false;
    },
    toggleEnabled: function toggleEnabled() {
      this.enabled = !this.enabled;
    },
    toggle: function toggle(e) {
      var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type) : this;
      self.tip().hasClass('in') ? self.hide() : self.show();
    },
    destroy: function destroy() {
      this.hide().$element.off('.' + this.type).removeData(this.type);
    }
  };
  /* TOOLTIP PLUGIN DEFINITION
   * ========================= */

  var old = $.fn.tooltip;

  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('tooltip'),
          options = _typeof(option) == 'object' && option;
      if (!data) $this.data('tooltip', data = new Tooltip(this, options));
      if (typeof option == 'string') data[option]();
    });
  };

  $.fn.tooltip.Constructor = Tooltip;
  $.fn.tooltip.defaults = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false
  };
  /* TOOLTIP NO CONFLICT
   * =================== */

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old;
    return this;
  };
}(window.jQuery);
/* ===========================================================
 * bootstrap-popover.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#popovers
 * ===========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================================================== */

!function ($) {
  'use strict'; // jshint ;_;

  /* POPOVER PUBLIC CLASS DEFINITION
   * =============================== */

  var Popover = function Popover(element, options) {
    this.init('popover', element, options);
  };
  /* NOTE: POPOVER EXTENDS BOOTSTRAP-TOOLTIP.js
     ========================================== */


  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype, {
    constructor: Popover,
    setContent: function setContent() {
      var $tip = this.tip(),
          title = this.getTitle(),
          content = this.getContent();
      $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title);
      $tip.find('.popover-content')[this.options.html ? 'html' : 'text'](content);
      $tip.removeClass('fade top bottom left right in');
    },
    hasContent: function hasContent() {
      return this.getTitle() || this.getContent();
    },
    getContent: function getContent() {
      var content,
          $e = this.$element,
          o = this.options;
      content = (typeof o.content == 'function' ? o.content.call($e[0]) : o.content) || $e.attr('data-content');
      return content;
    },
    tip: function tip() {
      if (!this.$tip) {
        this.$tip = $(this.options.template);
      }

      return this.$tip;
    },
    destroy: function destroy() {
      this.hide().$element.off('.' + this.type).removeData(this.type);
    }
  });
  /* POPOVER PLUGIN DEFINITION
   * ======================= */

  var old = $.fn.popover;

  $.fn.popover = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('popover'),
          options = _typeof(option) == 'object' && option;
      if (!data) $this.data('popover', data = new Popover(this, options));
      if (typeof option == 'string') data[option]();
    });
  };

  $.fn.popover.Constructor = Popover;
  $.fn.popover.defaults = $.extend({}, $.fn.tooltip.defaults, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  });
  /* POPOVER NO CONFLICT
   * =================== */

  $.fn.popover.noConflict = function () {
    $.fn.popover = old;
    return this;
  };
}(window.jQuery);
/* =============================================================
 * bootstrap-scrollspy.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#scrollspy
 * =============================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================== */

!function ($) {
  'use strict'; // jshint ;_;

  /* SCROLLSPY CLASS DEFINITION
   * ========================== */

  function ScrollSpy(element, options) {
    var process = $.proxy(this.process, this),
        $element = $(element).is('body') ? $(window) : $(element),
        href;
    this.options = $.extend({}, $.fn.scrollspy.defaults, options);
    this.$scrollElement = $element.on('scroll.scroll-spy.data-api', process);
    this.selector = (this.options.target || (href = $(element).attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') || //strip for ie7
    '') + ' .nav li > a';
    this.$body = $('body');
    this.refresh();
    this.process();
  }

  ScrollSpy.prototype = {
    constructor: ScrollSpy,
    refresh: function refresh() {
      var self = this,
          $targets;
      this.offsets = $([]);
      this.targets = $([]);
      $targets = this.$body.find(this.selector).map(function () {
        var $el = $(this),
            href = $el.data('target') || $el.attr('href'),
            $href = /^#\w/.test(href) && $(href);
        return $href && $href.length && [[$href.position().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href]] || null;
      }).sort(function (a, b) {
        return a[0] - b[0];
      }).each(function () {
        self.offsets.push(this[0]);
        self.targets.push(this[1]);
      });
    },
    process: function process() {
      var scrollTop = this.$scrollElement.scrollTop() + this.options.offset,
          scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight,
          maxScroll = scrollHeight - this.$scrollElement.height(),
          offsets = this.offsets,
          targets = this.targets,
          activeTarget = this.activeTarget,
          i;

      if (scrollTop >= maxScroll) {
        return activeTarget != (i = targets.last()[0]) && this.activate(i);
      }

      for (i = offsets.length; i--;) {
        activeTarget != targets[i] && scrollTop >= offsets[i] && (!offsets[i + 1] || scrollTop <= offsets[i + 1]) && this.activate(targets[i]);
      }
    },
    activate: function activate(target) {
      var active, selector;
      this.activeTarget = target;
      $(this.selector).parent('.active').removeClass('active AknHorizontalNavtab-item--active AknVerticalNavtab-item--active');
      selector = this.selector + '[data-target="' + target + '"],' + this.selector + '[href="' + target + '"]';
      active = $(selector).parent('li').addClass('active AknHorizontalNavtab-item--active AknVerticalNavtab-item--active');

      if (active.parent('.dropdown-menu').length) {
        active = active.closest('li.dropdown').addClass('active');
      }

      active.trigger('activate');
    }
  };
  /* SCROLLSPY PLUGIN DEFINITION
   * =========================== */

  var old = $.fn.scrollspy;

  $.fn.scrollspy = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('scrollspy'),
          options = _typeof(option) == 'object' && option;
      if (!data) $this.data('scrollspy', data = new ScrollSpy(this, options));
      if (typeof option == 'string') data[option]();
    });
  };

  $.fn.scrollspy.Constructor = ScrollSpy;
  $.fn.scrollspy.defaults = {
    offset: 10
  };
  /* SCROLLSPY NO CONFLICT
   * ===================== */

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old;
    return this;
  };
  /* SCROLLSPY DATA-API
   * ================== */


  $(window).on('load', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this);
      $spy.scrollspy($spy.data());
    });
  });
}(window.jQuery);
/* ========================================================
 * bootstrap-tab.js v2.3.2
 * http://getbootstrap.com/2.3.2/javascript.html#tabs
 * ========================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================== */

!function ($) {
  'use strict'; // jshint ;_;

  /* TAB CLASS DEFINITION
   * ==================== */

  var Tab = function Tab(element) {
    this.element = $(element);
  };

  Tab.prototype = {
    constructor: Tab,
    show: function show() {
      var $this = this.element,
          $ul = $this.closest('ul:not(.dropdown-menu)'),
          selector = $this.attr('data-target'),
          previous,
          $target,
          e;

      if (!selector) {
        selector = $this.attr('href');
        selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ''); //strip for ie7
      }

      if ($this.parent('li').hasClass('active')) return;
      previous = $ul.find('.active:last a')[0];
      e = $.Event('show', {
        relatedTarget: previous
      });
      $this.trigger(e);
      if (e.isDefaultPrevented()) return;
      $target = $(selector);
      this.activate($this.parent('li'), $ul);
      this.activate($target, $target.parent(), function () {
        $this.trigger({
          type: 'shown',
          relatedTarget: previous
        });
      });
    },
    activate: function activate(element, container, callback) {
      var $active = container.find('> .active'),
          transition = callback && $.support.transition && $active.hasClass('fade');

      function next() {
        $active.removeClass('active AknHorizontalNavtab-item--active AknVerticalNavtab-item--active').find('> .dropdown-menu > .active').removeClass('active');
        element.addClass('active AknHorizontalNavtab-item--active AknVerticalNavtab-item--active');

        if (transition) {
          element[0].offsetWidth; // reflow for transition

          element.addClass('in');
        } else {
          element.removeClass('fade');
        }

        if (element.parent('.dropdown-menu')) {
          element.closest('li.dropdown').addClass('active');
        }

        callback && callback();
      }

      transition ? $active.one($.support.transition.end, next) : next();
      $active.removeClass('in');
    }
  };
  /* TAB PLUGIN DEFINITION
   * ===================== */

  var old = $.fn.tab;

  $.fn.tab = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('tab');
      if (!data) $this.data('tab', data = new Tab(this));
      if (typeof option == 'string') data[option]();
    });
  };

  $.fn.tab.Constructor = Tab;
  /* TAB NO CONFLICT
   * =============== */

  $.fn.tab.noConflict = function () {
    $.fn.tab = old;
    return this;
  };
  /* TAB DATA-API
   * ============ */


  $(document).on('click.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {
    e.preventDefault();
    $(this).tab('show');
  });
}(window.jQuery);

/***/ }),

/***/ 19849:
/*!*************************************************************!*\
  !*** ./public/bundles/pimui/lib/jquery-form/jquery.form.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 49845);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * jQuery Form Plugin
 * version: 3.32.0-2013.04.09
 * @requires jQuery v1.5 or later
 * Copyright (c) 2013 M. Alsup
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Project repository: https://github.com/malsup/form
 * Dual licensed under the MIT and GPL licenses.
 * https://github.com/malsup/form#copyright-and-license
 */

/*global ActiveXObject */
(function ($) {
  'use strict';
  /*
    Usage Note:
    -----------
    Do not use both ajaxSubmit and ajaxForm on the same form.  These
    functions are mutually exclusive.  Use ajaxSubmit if you want
    to bind your own submit handler to the form.  For example,
     $(document).ready(function() {
        $('#myForm').on('submit', function(e) {
            e.preventDefault(); // <-- important
            $(this).ajaxSubmit({
                target: '#output'
            });
        });
    });
     Use ajaxForm when you want the plugin to manage all the event binding
    for you.  For example,
     $(document).ready(function() {
        $('#myForm').ajaxForm({
            target: '#output'
        });
    });
     You can also use ajaxForm with delegation (requires jQuery v1.7+), so the
    form does not have to exist when you invoke ajaxForm:
     $('#myForm').ajaxForm({
        delegation: true,
        target: '#output'
    });
     When using ajaxForm, the ajaxSubmit function will be invoked for you
    at the appropriate time.
  */

  /**
   * Feature detection
   */

  var feature = {};
  feature.fileapi = $("<input type='file'/>").get(0).files !== undefined;
  feature.formdata = window.FormData !== undefined;
  var hasProp = !!$.fn.prop; // attr2 uses prop when it can but checks the return type for
  // an expected string.  this accounts for the case where a form
  // contains inputs with names like "action" or "method"; in those
  // cases "prop" returns the element

  $.fn.attr2 = function () {
    if (!hasProp) return this.attr.apply(this, arguments);
    var val = this.prop.apply(this, arguments);
    if (val && val.jquery || typeof val === 'string') return val;
    return this.attr.apply(this, arguments);
  };
  /**
   * ajaxSubmit() provides a mechanism for immediately submitting
   * an HTML form using AJAX.
   */


  $.fn.ajaxSubmit = function (options) {
    /*jshint scripturl:true */
    // fast fail if nothing selected (http://dev.jquery.com/ticket/2752)
    if (!this.length) {
      log('ajaxSubmit: skipping submit process - no element selected');
      return this;
    }

    var method,
        action,
        url,
        $form = this;

    if (typeof options == 'function') {
      options = {
        success: options
      };
    }

    method = this.attr2('method');
    action = this.attr2('action');
    url = typeof action === 'string' ? $.trim(action) : '';
    url = url || window.location.href || '';

    if (url) {
      // clean url (don't include hash vaue)
      url = (url.match(/^([^#]+)/) || [])[1];
    }

    options = $.extend(true, {
      url: url,
      success: $.ajaxSettings.success,
      type: method || 'GET',
      iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank'
    }, options); // hook for manipulating the form data before it is extracted;
    // convenient for use with rich editors like tinyMCE or FCKEditor

    var veto = {};
    this.trigger('form-pre-serialize', [this, options, veto]);

    if (veto.veto) {
      log('ajaxSubmit: submit vetoed via form-pre-serialize trigger');
      return this;
    } // provide opportunity to alter form data before it is serialized


    if (options.beforeSerialize && options.beforeSerialize(this, options) === false) {
      log('ajaxSubmit: submit aborted via beforeSerialize callback');
      return this;
    }

    var traditional = options.traditional;

    if (traditional === undefined) {
      traditional = $.ajaxSettings.traditional;
    }

    var elements = [];
    var qx,
        a = this.formToArray(options.semantic, elements);

    if (options.data) {
      options.extraData = options.data;
      qx = $.param(options.data, traditional);
    } // give pre-submit callback an opportunity to abort the submit


    if (options.beforeSubmit && options.beforeSubmit(a, this, options) === false) {
      log('ajaxSubmit: submit aborted via beforeSubmit callback');
      return this;
    } // fire vetoable 'validate' event


    this.trigger('form-submit-validate', [a, this, options, veto]);

    if (veto.veto) {
      log('ajaxSubmit: submit vetoed via form-submit-validate trigger');
      return this;
    }

    var q = $.param(a, traditional);

    if (qx) {
      q = q ? q + '&' + qx : qx;
    }

    if (options.type.toUpperCase() == 'GET') {
      options.url += (options.url.indexOf('?') >= 0 ? '&' : '?') + q;
      options.data = null; // data is null for 'get'
    } else {
      options.data = q; // data is the query string for 'post'
    }

    var callbacks = [];

    if (options.resetForm) {
      callbacks.push(function () {
        $form.resetForm();
      });
    }

    if (options.clearForm) {
      callbacks.push(function () {
        $form.clearForm(options.includeHidden);
      });
    } // perform a load on the target only if dataType is not provided


    if (!options.dataType && options.target) {
      var oldSuccess = options.success || function () {};

      callbacks.push(function (data) {
        var fn = options.replaceTarget ? 'replaceWith' : 'html';
        $(options.target)[fn](data).each(oldSuccess, arguments);
      });
    } else if (options.success) {
      callbacks.push(options.success);
    }

    options.success = function (data, status, xhr) {
      // jQuery 1.4+ passes xhr as 3rd arg
      var context = options.context || this; // jQuery 1.4+ supports scope context

      for (var i = 0, max = callbacks.length; i < max; i++) {
        callbacks[i].apply(context, [data, status, xhr || $form, $form]);
      }
    }; // are there files to upload?
    // [value] (issue #113), also see comment:
    // https://github.com/malsup/form/commit/588306aedba1de01388032d5f42a60159eea9228#commitcomment-2180219


    var fileInputs = $('input[type=file]:enabled[value!=""]', this);
    var hasFileInputs = fileInputs.length > 0;
    var mp = 'multipart/form-data';
    var multipart = $form.attr('enctype') == mp || $form.attr('encoding') == mp;
    var fileAPI = feature.fileapi && feature.formdata;
    log('fileAPI :' + fileAPI);
    var shouldUseFrame = (hasFileInputs || multipart) && !fileAPI;
    var jqxhr; // options.iframe allows user to force iframe mode
    // 06-NOV-09: now defaulting to iframe mode if file input is detected

    if (options.iframe !== false && (options.iframe || shouldUseFrame)) {
      // hack to fix Safari hang (thanks to Tim Molendijk for this)
      // see:  http://groups.google.com/group/jquery-dev/browse_thread/thread/36395b7ab510dd5d
      if (options.closeKeepAlive) {
        $.get(options.closeKeepAlive, function () {
          jqxhr = fileUploadIframe(a);
        });
      } else {
        jqxhr = fileUploadIframe(a);
      }
    } else if ((hasFileInputs || multipart) && fileAPI) {
      jqxhr = fileUploadXhr(a);
    } else {
      jqxhr = $.ajax(options);
    }

    $form.removeData('jqxhr').data('jqxhr', jqxhr); // clear element array

    for (var k = 0; k < elements.length; k++) {
      elements[k] = null;
    } // fire 'notify' event


    this.trigger('form-submit-notify', [this, options]);
    return this; // utility fn for deep serialization

    function deepSerialize(extraData) {
      var serialized = $.param(extraData).split('&');
      var len = serialized.length;
      var result = [];
      var i, part;

      for (i = 0; i < len; i++) {
        // #252; undo param space replacement
        serialized[i] = serialized[i].replace(/\+/g, ' ');
        part = serialized[i].split('='); // #278; use array instead of object storage, favoring array serializations

        result.push([decodeURIComponent(part[0]), decodeURIComponent(part[1])]);
      }

      return result;
    } // XMLHttpRequest Level 2 file uploads (big hat tip to francois2metz)


    function fileUploadXhr(a) {
      var formdata = new FormData();

      for (var i = 0; i < a.length; i++) {
        formdata.append(a[i].name, a[i].value);
      }

      if (options.extraData) {
        var serializedData = deepSerialize(options.extraData);

        for (i = 0; i < serializedData.length; i++) {
          if (serializedData[i]) formdata.append(serializedData[i][0], serializedData[i][1]);
        }
      }

      options.data = null;
      var s = $.extend(true, {}, $.ajaxSettings, options, {
        contentType: false,
        processData: false,
        cache: false,
        type: method || 'POST'
      });

      if (options.uploadProgress) {
        // workaround because jqXHR does not expose upload property
        s.xhr = function () {
          var xhr = jQuery.ajaxSettings.xhr();

          if (xhr.upload) {
            xhr.upload.addEventListener('progress', function (event) {
              var percent = 0;
              var position = event.loaded || event.position;
              /*event.position is deprecated*/

              var total = event.total;

              if (event.lengthComputable) {
                percent = Math.ceil(position / total * 100);
              }

              options.uploadProgress(event, position, total, percent);
            }, false);
          }

          return xhr;
        };
      }

      s.data = null;
      var beforeSend = s.beforeSend;

      s.beforeSend = function (xhr, o) {
        o.data = formdata;
        if (beforeSend) beforeSend.call(this, xhr, o);
      };

      return $.ajax(s);
    } // private function for handling file uploads (hat tip to YAHOO!)


    function fileUploadIframe(a) {
      var form = $form[0],
          el,
          i,
          s,
          g,
          id,
          $io,
          io,
          xhr,
          sub,
          n,
          timedOut,
          timeoutHandle;
      var deferred = $.Deferred();

      if (a) {
        // ensure that every serialized input is still enabled
        for (i = 0; i < elements.length; i++) {
          el = $(elements[i]);
          if (hasProp) el.prop('disabled', false);else el.removeAttr('disabled');
        }
      }

      s = $.extend(true, {}, $.ajaxSettings, options);
      s.context = s.context || s;
      id = 'jqFormIO' + new Date().getTime();

      if (s.iframeTarget) {
        $io = $(s.iframeTarget);
        n = $io.attr2('name');
        if (!n) $io.attr2('name', id);else id = n;
      } else {
        $io = $('<iframe name="' + id + '" src="' + s.iframeSrc + '" />');
        $io.css({
          position: 'absolute',
          top: '-1000px',
          left: '-1000px'
        });
      }

      io = $io[0];
      xhr = {
        // mock object
        aborted: 0,
        responseText: null,
        responseXML: null,
        status: 0,
        statusText: 'n/a',
        getAllResponseHeaders: function getAllResponseHeaders() {},
        getResponseHeader: function getResponseHeader() {},
        setRequestHeader: function setRequestHeader() {},
        abort: function abort(status) {
          var e = status === 'timeout' ? 'timeout' : 'aborted';
          log('aborting upload... ' + e);
          this.aborted = 1;

          try {
            // #214, #257
            if (io.contentWindow.document.execCommand) {
              io.contentWindow.document.execCommand('Stop');
            }
          } catch (ignore) {}

          $io.attr('src', s.iframeSrc); // abort op in progress

          xhr.error = e;
          if (s.error) s.error.call(s.context, xhr, e, status);
          if (g) $.event.trigger('ajaxError', [xhr, s, e]);
          if (s.complete) s.complete.call(s.context, xhr, e);
        }
      };
      g = s.global; // trigger ajax global events so that activity/block indicators work like normal

      if (g && 0 === $.active++) {
        $.event.trigger('ajaxStart');
      }

      if (g) {
        $.event.trigger('ajaxSend', [xhr, s]);
      }

      if (s.beforeSend && s.beforeSend.call(s.context, xhr, s) === false) {
        if (s.global) {
          $.active--;
        }

        deferred.reject();
        return deferred;
      }

      if (xhr.aborted) {
        deferred.reject();
        return deferred;
      } // add submitting element to data if we know it


      sub = form.clk;

      if (sub) {
        n = sub.name;

        if (n && !sub.disabled) {
          s.extraData = s.extraData || {};
          s.extraData[n] = sub.value;

          if (sub.type == 'image') {
            s.extraData[n + '.x'] = form.clk_x;
            s.extraData[n + '.y'] = form.clk_y;
          }
        }
      }

      var CLIENT_TIMEOUT_ABORT = 1;
      var SERVER_ABORT = 2;

      function getDoc(frame) {
        /* it looks like contentWindow or contentDocument do not
         * carry the protocol property in ie8, when running under ssl
         * frame.document is the only valid response document, since
         * the protocol is know but not on the other two objects. strange?
         * "Same origin policy" http://en.wikipedia.org/wiki/Same_origin_policy
         */
        var doc = null; // IE8 cascading access check

        try {
          if (frame.contentWindow) {
            doc = frame.contentWindow.document;
          }
        } catch (err) {
          // IE8 access denied under ssl & missing protocol
          log('cannot get iframe.contentWindow document: ' + err);
        }

        if (doc) {
          // successful getting content
          return doc;
        }

        try {
          // simply checking may throw in ie8 under ssl or mismatched protocol
          doc = frame.contentDocument ? frame.contentDocument : frame.document;
        } catch (err) {
          // last attempt
          log('cannot get iframe.contentDocument: ' + err);
          doc = frame.document;
        }

        return doc;
      } // Rails CSRF hack (thanks to Yvan Barthelemy)


      var csrf_token = $('meta[name=csrf-token]').attr('content');
      var csrf_param = $('meta[name=csrf-param]').attr('content');

      if (csrf_param && csrf_token) {
        s.extraData = s.extraData || {};
        s.extraData[csrf_param] = csrf_token;
      } // take a breath so that pending repaints get some cpu time before the upload starts


      function doSubmit() {
        // make sure form attrs are set
        var t = $form.attr2('target'),
            a = $form.attr2('action'); // update form attrs in IE friendly way

        form.setAttribute('target', id);

        if (!method) {
          form.setAttribute('method', 'POST');
        }

        if (a != s.url) {
          form.setAttribute('action', s.url);
        } // ie borks in some cases when setting encoding


        if (!s.skipEncodingOverride && (!method || /post/i.test(method))) {
          $form.attr({
            encoding: 'multipart/form-data',
            enctype: 'multipart/form-data'
          });
        } // support timout


        if (s.timeout) {
          timeoutHandle = setTimeout(function () {
            timedOut = true;
            cb(CLIENT_TIMEOUT_ABORT);
          }, s.timeout);
        } // look for server aborts


        function checkState() {
          try {
            var state = getDoc(io).readyState;
            log('state = ' + state);
            if (state && state.toLowerCase() == 'uninitialized') setTimeout(checkState, 50);
          } catch (e) {
            log('Server abort: ', e, ' (', e.name, ')');
            cb(SERVER_ABORT);
            if (timeoutHandle) clearTimeout(timeoutHandle);
            timeoutHandle = undefined;
          }
        } // add "extra" data to form if provided in options


        var extraInputs = [];

        try {
          if (s.extraData) {
            for (var n in s.extraData) {
              if (s.extraData.hasOwnProperty(n)) {
                // if using the $.param format that allows for multiple values with the same name
                if ($.isPlainObject(s.extraData[n]) && s.extraData[n].hasOwnProperty('name') && s.extraData[n].hasOwnProperty('value')) {
                  extraInputs.push($('<input type="hidden" name="' + s.extraData[n].name + '">').val(s.extraData[n].value).appendTo(form)[0]);
                } else {
                  extraInputs.push($('<input type="hidden" name="' + n + '">').val(s.extraData[n]).appendTo(form)[0]);
                }
              }
            }
          }

          if (!s.iframeTarget) {
            // add iframe to doc and submit the form
            $io.appendTo('body');
            if (io.attachEvent) io.attachEvent('onload', cb);else io.addEventListener('load', cb, false);
          }

          setTimeout(checkState, 15);

          try {
            form.submit();
          } catch (err) {
            // just in case form has element with name/id of 'submit'
            var submitFn = document.createElement('form').submit;
            submitFn.apply(form);
          }
        } finally {
          // reset attrs and remove "extra" input elements
          form.setAttribute('action', a);

          if (t) {
            form.setAttribute('target', t);
          } else {
            $form.removeAttr('target');
          }

          $(extraInputs).remove();
        }
      }

      if (s.forceSync) {
        doSubmit();
      } else {
        setTimeout(doSubmit, 10); // this lets dom updates render
      }

      var data,
          doc,
          domCheckCount = 50,
          callbackProcessed;

      function cb(e) {
        if (xhr.aborted || callbackProcessed) {
          return;
        }

        doc = getDoc(io);

        if (!doc) {
          log('cannot access response document');
          e = SERVER_ABORT;
        }

        if (e === CLIENT_TIMEOUT_ABORT && xhr) {
          xhr.abort('timeout');
          deferred.reject(xhr, 'timeout');
          return;
        } else if (e == SERVER_ABORT && xhr) {
          xhr.abort('server abort');
          deferred.reject(xhr, 'error', 'server abort');
          return;
        }

        if (!doc || doc.location.href == s.iframeSrc) {
          // response not received yet
          if (!timedOut) return;
        }

        if (io.detachEvent) io.detachEvent('onload', cb);else io.removeEventListener('load', cb, false);
        var status = 'success',
            errMsg;

        try {
          if (timedOut) {
            throw 'timeout';
          }

          var isXml = s.dataType == 'xml' || doc.XMLDocument || $.isXMLDoc(doc);
          log('isXml=' + isXml);

          if (!isXml && window.opera && (doc.body === null || !doc.body.innerHTML)) {
            if (--domCheckCount) {
              // in some browsers (Opera) the iframe DOM is not always traversable when
              // the onload callback fires, so we loop a bit to accommodate
              log('requeing onLoad callback, DOM not available');
              setTimeout(cb, 250);
              return;
            } // let this fall through because server response could be an empty document
            //log('Could not access iframe DOM after mutiple tries.');
            //throw 'DOMException: not available';

          } //log('response detected');


          var docRoot = doc.body ? doc.body : doc.documentElement;
          xhr.responseText = docRoot ? docRoot.innerHTML : null;
          xhr.responseXML = doc.XMLDocument ? doc.XMLDocument : doc;
          if (isXml) s.dataType = 'xml';

          xhr.getResponseHeader = function (header) {
            var headers = {
              'content-type': s.dataType
            };
            return headers[header];
          }; // support for XHR 'status' & 'statusText' emulation :


          if (docRoot) {
            xhr.status = Number(docRoot.getAttribute('status')) || xhr.status;
            xhr.statusText = docRoot.getAttribute('statusText') || xhr.statusText;
          }

          var dt = (s.dataType || '').toLowerCase();
          var scr = /(json|script|text)/.test(dt);

          if (scr || s.textarea) {
            // see if user embedded response in textarea
            var ta = doc.getElementsByTagName('textarea')[0];

            if (ta) {
              xhr.responseText = ta.value; // support for XHR 'status' & 'statusText' emulation :

              xhr.status = Number(ta.getAttribute('status')) || xhr.status;
              xhr.statusText = ta.getAttribute('statusText') || xhr.statusText;
            } else if (scr) {
              // account for browsers injecting pre around json response
              var pre = doc.getElementsByTagName('pre')[0];
              var b = doc.getElementsByTagName('body')[0];

              if (pre) {
                xhr.responseText = pre.textContent ? pre.textContent : pre.innerText;
              } else if (b) {
                xhr.responseText = b.textContent ? b.textContent : b.innerText;
              }
            }
          } else if (dt == 'xml' && !xhr.responseXML && xhr.responseText) {
            xhr.responseXML = toXml(xhr.responseText);
          }

          try {
            data = httpData(xhr, dt, s);
          } catch (err) {
            status = 'parsererror';
            xhr.error = errMsg = err || status;
          }
        } catch (err) {
          log('error caught: ', err);
          status = 'error';
          xhr.error = errMsg = err || status;
        }

        if (xhr.aborted) {
          log('upload aborted');
          status = null;
        }

        if (xhr.status) {
          // we've set xhr.status
          status = xhr.status >= 200 && xhr.status < 300 || xhr.status === 304 ? 'success' : 'error';
        } // ordering of these callbacks/triggers is odd, but that's how $.ajax does it


        if (status === 'success') {
          if (s.success) s.success.call(s.context, data, 'success', xhr);
          deferred.resolve(xhr.responseText, 'success', xhr);
          if (g) $.event.trigger('ajaxSuccess', [xhr, s]);
        } else if (status) {
          if (errMsg === undefined) errMsg = xhr.statusText;
          if (s.error) s.error.call(s.context, xhr, status, errMsg);
          deferred.reject(xhr, 'error', errMsg);
          if (g) $.event.trigger('ajaxError', [xhr, s, errMsg]);
        }

        if (g) $.event.trigger('ajaxComplete', [xhr, s]);

        if (g && ! --$.active) {
          $.event.trigger('ajaxStop');
        }

        if (s.complete) s.complete.call(s.context, xhr, status);
        callbackProcessed = true;
        if (s.timeout) clearTimeout(timeoutHandle); // clean up

        setTimeout(function () {
          if (!s.iframeTarget) $io.remove();
          xhr.responseXML = null;
        }, 100);
      }

      var toXml = $.parseXML || function (s, doc) {
        // use parseXML if available (jQuery 1.5+)
        if (window.ActiveXObject) {
          doc = new ActiveXObject('Microsoft.XMLDOM');
          doc.async = 'false';
          doc.loadXML(s);
        } else {
          doc = new DOMParser().parseFromString(s, 'text/xml');
        }

        return doc && doc.documentElement && doc.documentElement.nodeName != 'parsererror' ? doc : null;
      };

      var parseJSON = $.parseJSON || function (s) {
        /*jslint evil:true */
        return window['eval']('(' + s + ')');
      };

      var httpData = function httpData(xhr, type, s) {
        // mostly lifted from jq1.4.4
        var ct = xhr.getResponseHeader('content-type') || '',
            xml = type === 'xml' || !type && ct.indexOf('xml') >= 0,
            data = xml ? xhr.responseXML : xhr.responseText;

        if (xml && data.documentElement.nodeName === 'parsererror') {
          if ($.error) $.error('parsererror');
        }

        if (s && s.dataFilter) {
          data = s.dataFilter(data, type);
        }

        if (typeof data === 'string') {
          if (type === 'json' || !type && ct.indexOf('json') >= 0) {
            data = parseJSON(data);
          } else if (type === 'script' || !type && ct.indexOf('javascript') >= 0) {
            $.globalEval(data);
          }
        }

        return data;
      };

      return deferred;
    }
  };
  /**
   * ajaxForm() provides a mechanism for fully automating form submission.
   *
   * The advantages of using this method instead of ajaxSubmit() are:
   *
   * 1: This method will include coordinates for <input type="image" /> elements (if the element
   *    is used to submit the form).
   * 2. This method will include the submit element's name/value data (for the element that was
   *    used to submit the form).
   * 3. This method binds the submit() method to the form for you.
   *
   * The options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely
   * passes the options argument along after properly binding events for submit elements and
   * the form itself.
   */


  $.fn.ajaxForm = function (options) {
    options = options || {};
    options.delegation = options.delegation && $.isFunction($.fn.on); // in jQuery 1.3+ we can fix mistakes with the ready state

    if (!options.delegation && this.length === 0) {
      var o = {
        s: this.selector,
        c: this.context
      };

      if (!$.isReady && o.s) {
        log('DOM not ready, queuing ajaxForm');
        $(function () {
          $(o.s, o.c).ajaxForm(options);
        });
        return this;
      } // is your DOM ready?  http://docs.jquery.com/Tutorials:Introducing_$(document).ready()


      log('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));
      return this;
    }

    if (options.delegation) {
      $(document).off('submit.form-plugin', this.selector, doAjaxSubmit).off('click.form-plugin', this.selector, captureSubmittingElement).on('submit.form-plugin', this.selector, options, doAjaxSubmit).on('click.form-plugin', this.selector, options, captureSubmittingElement);
      return this;
    }

    return this.ajaxFormUnbind().on('submit.form-plugin', options, doAjaxSubmit).on('click.form-plugin', options, captureSubmittingElement);
  }; // private event handlers


  function doAjaxSubmit(e) {
    /*jshint validthis:true */
    var options = e.data;

    if (!e.isDefaultPrevented()) {
      // if event has been canceled, don't proceed
      e.preventDefault();
      $(this).ajaxSubmit(options);
    }
  }

  function captureSubmittingElement(e) {
    /*jshint validthis:true */
    var target = e.target;
    var $el = $(target);

    if (!$el.is('[type=submit],[type=image]')) {
      // is this a child element of the submit el?  (ex: a span within a button)
      var t = $el.closest('[type=submit]');

      if (t.length === 0) {
        return;
      }

      target = t[0];
    }

    var form = this;
    form.clk = target;

    if (target.type == 'image') {
      if (e.offsetX !== undefined) {
        form.clk_x = e.offsetX;
        form.clk_y = e.offsetY;
      } else if (typeof $.fn.offset == 'function') {
        var offset = $el.offset();
        form.clk_x = e.pageX - offset.left;
        form.clk_y = e.pageY - offset.top;
      } else {
        form.clk_x = e.pageX - target.offsetLeft;
        form.clk_y = e.pageY - target.offsetTop;
      }
    } // clear form vars


    setTimeout(function () {
      form.clk = form.clk_x = form.clk_y = null;
    }, 100);
  } // ajaxFormUnbind unbinds the event handlers that were bound by ajaxForm


  $.fn.ajaxFormUnbind = function () {
    return this.off('submit.form-plugin click.form-plugin');
  };
  /**
   * formToArray() gathers form element data into an array of objects that can
   * be passed to any of the following ajax functions: $.get, $.post, or load.
   * Each object in the array has both a 'name' and 'value' property.  An example of
   * an array for a simple login form might be:
   *
   * [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]
   *
   * It is this array that is passed to pre-submit callback functions provided to the
   * ajaxSubmit() and ajaxForm() methods.
   */


  $.fn.formToArray = function (semantic, elements) {
    var a = [];

    if (this.length === 0) {
      return a;
    }

    var form = this[0];
    var els = semantic ? form.getElementsByTagName('*') : form.elements;

    if (!els) {
      return a;
    }

    var i, j, n, v, el, max, jmax;

    for (i = 0, max = els.length; i < max; i++) {
      el = els[i];
      n = el.name;

      if (!n || el.disabled) {
        continue;
      }

      if (semantic && form.clk && el.type == 'image') {
        // handle image inputs on the fly when semantic == true
        if (form.clk == el) {
          a.push({
            name: n,
            value: $(el).val(),
            type: el.type
          });
          a.push({
            name: n + '.x',
            value: form.clk_x
          }, {
            name: n + '.y',
            value: form.clk_y
          });
        }

        continue;
      }

      v = $.fieldValue(el, true);

      if (v && v.constructor == Array) {
        if (elements) elements.push(el);

        for (j = 0, jmax = v.length; j < jmax; j++) {
          a.push({
            name: n,
            value: v[j]
          });
        }
      } else if (feature.fileapi && el.type == 'file') {
        if (elements) elements.push(el);
        var files = el.files;

        if (files.length) {
          for (j = 0; j < files.length; j++) {
            a.push({
              name: n,
              value: files[j],
              type: el.type
            });
          }
        } else {
          // #180
          a.push({
            name: n,
            value: '',
            type: el.type
          });
        }
      } else if (v !== null && typeof v != 'undefined') {
        if (elements) elements.push(el);
        a.push({
          name: n,
          value: v,
          type: el.type,
          required: el.required
        });
      }
    }

    if (!semantic && form.clk) {
      // input type=='image' are not found in elements array! handle it here
      var $input = $(form.clk),
          input = $input[0];
      n = input.name;

      if (n && !input.disabled && input.type == 'image') {
        a.push({
          name: n,
          value: $input.val()
        });
        a.push({
          name: n + '.x',
          value: form.clk_x
        }, {
          name: n + '.y',
          value: form.clk_y
        });
      }
    }

    return a;
  };
  /**
   * Serializes form data into a 'submittable' string. This method will return a string
   * in the format: name1=value1&amp;name2=value2
   */


  $.fn.formSerialize = function (semantic) {
    //hand off to jQuery.param for proper encoding
    return $.param(this.formToArray(semantic));
  };
  /**
   * Serializes all field elements in the jQuery object into a query string.
   * This method will return a string in the format: name1=value1&amp;name2=value2
   */


  $.fn.fieldSerialize = function (successful) {
    var a = [];
    this.each(function () {
      var n = this.name;

      if (!n) {
        return;
      }

      var v = $.fieldValue(this, successful);

      if (v && v.constructor == Array) {
        for (var i = 0, max = v.length; i < max; i++) {
          a.push({
            name: n,
            value: v[i]
          });
        }
      } else if (v !== null && typeof v != 'undefined') {
        a.push({
          name: this.name,
          value: v
        });
      }
    }); //hand off to jQuery.param for proper encoding

    return $.param(a);
  };
  /**
   * Returns the value(s) of the element in the matched set.  For example, consider the following form:
   *
   *  <form><fieldset>
   *      <input name="A" type="text" />
   *      <input name="A" type="text" />
   *      <input name="B" type="checkbox" value="B1" />
   *      <input name="B" type="checkbox" value="B2"/>
   *      <input name="C" type="radio" value="C1" />
   *      <input name="C" type="radio" value="C2" />
   *  </fieldset></form>
   *
   *  var v = $('input[type=text]').fieldValue();
   *  // if no values are entered into the text inputs
   *  v == ['','']
   *  // if values entered into the text inputs are 'foo' and 'bar'
   *  v == ['foo','bar']
   *
   *  var v = $('input[type=checkbox]').fieldValue();
   *  // if neither checkbox is checked
   *  v === undefined
   *  // if both checkboxes are checked
   *  v == ['B1', 'B2']
   *
   *  var v = $('input[type=radio]').fieldValue();
   *  // if neither radio is checked
   *  v === undefined
   *  // if first radio is checked
   *  v == ['C1']
   *
   * The successful argument controls whether or not the field element must be 'successful'
   * (per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).
   * The default value of the successful argument is true.  If this value is false the value(s)
   * for each element is returned.
   *
   * Note: This method *always* returns an array.  If no valid value can be determined the
   *    array will be empty, otherwise it will contain one or more values.
   */


  $.fn.fieldValue = function (successful) {
    for (var val = [], i = 0, max = this.length; i < max; i++) {
      var el = this[i];
      var v = $.fieldValue(el, successful);

      if (v === null || typeof v == 'undefined' || v.constructor == Array && !v.length) {
        continue;
      }

      if (v.constructor == Array) $.merge(val, v);else val.push(v);
    }

    return val;
  };
  /**
   * Returns the value of the field element.
   */


  $.fieldValue = function (el, successful) {
    var n = el.name,
        t = el.type,
        tag = el.tagName.toLowerCase();

    if (successful === undefined) {
      successful = true;
    }

    if (successful && (!n || el.disabled || t == 'reset' || t == 'button' || (t == 'checkbox' || t == 'radio') && !el.checked || (t == 'submit' || t == 'image') && el.form && el.form.clk != el || tag == 'select' && el.selectedIndex == -1)) {
      return null;
    }

    if (tag == 'select') {
      var index = el.selectedIndex;

      if (index < 0) {
        return null;
      }

      var a = [],
          ops = el.options;
      var one = t == 'select-one';
      var max = one ? index + 1 : ops.length;

      for (var i = one ? index : 0; i < max; i++) {
        var op = ops[i];

        if (op.selected) {
          var v = op.value;

          if (!v) {
            // extra pain for IE...
            v = op.attributes && op.attributes['value'] && !op.attributes['value'].specified ? op.text : op.value;
          }

          if (one) {
            return v;
          }

          a.push(v);
        }
      }

      return a;
    }

    return $(el).val();
  };
  /**
   * Clears the form data.  Takes the following actions on the form's input fields:
   *  - input text fields will have their 'value' property set to the empty string
   *  - select elements will have their 'selectedIndex' property set to -1
   *  - checkbox and radio inputs will have their 'checked' property set to false
   *  - inputs of type submit, button, reset, and hidden will *not* be effected
   *  - button elements will *not* be effected
   */


  $.fn.clearForm = function (includeHidden) {
    return this.each(function () {
      $('input,select,textarea', this).clearFields(includeHidden);
    });
  };
  /**
   * Clears the selected form elements.
   */


  $.fn.clearFields = $.fn.clearInputs = function (includeHidden) {
    var re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i; // 'hidden' is not in this list

    return this.each(function () {
      var t = this.type,
          tag = this.tagName.toLowerCase();

      if (re.test(t) || tag == 'textarea') {
        this.value = '';
      } else if (t == 'checkbox' || t == 'radio') {
        this.checked = false;
      } else if (tag == 'select') {
        this.selectedIndex = -1;
      } else if (t == 'file') {
        if (/MSIE/.test(navigator.userAgent)) {
          $(this).replaceWith($(this).clone(true));
        } else {
          $(this).val('');
        }
      } else if (includeHidden) {
        // includeHidden can be the value true, or it can be a selector string
        // indicating a special test; for example:
        //  $('#myForm').clearForm('.special:hidden')
        // the above would clean hidden inputs that have the class of 'special'
        if (includeHidden === true && /hidden/.test(t) || typeof includeHidden == 'string' && $(this).is(includeHidden)) this.value = '';
      }
    });
  };
  /**
   * Resets the form data.  Causes all form elements to be reset to their original value.
   */


  $.fn.resetForm = function () {
    return this.each(function () {
      // guard against an input with the name of 'reset'
      // note that IE reports the reset function as an 'object'
      if (typeof this.reset == 'function' || _typeof(this.reset) == 'object' && !this.reset.nodeType) {
        this.reset();
      }
    });
  };
  /**
   * Enables or disables any matching elements.
   */


  $.fn.enable = function (b) {
    if (b === undefined) {
      b = true;
    }

    return this.each(function () {
      this.disabled = !b;
    });
  };
  /**
   * Checks/unchecks any matching checkboxes or radio buttons and
   * selects/deselects and matching option elements.
   */


  $.fn.selected = function (select) {
    if (select === undefined) {
      select = true;
    }

    return this.each(function () {
      var t = this.type;

      if (t == 'checkbox' || t == 'radio') {
        this.checked = select;
      } else if (this.tagName.toLowerCase() == 'option') {
        var $sel = $(this).parent('select');

        if (select && $sel[0] && $sel[0].type == 'select-one') {
          // deselect all other options
          $sel.find('option').selected(false);
        }

        this.selected = select;
      }
    });
  }; // expose debug var


  $.fn.ajaxSubmit.debug = false; // helper fn for console logging

  function log() {
    if (!$.fn.ajaxSubmit.debug) return;
    var msg = '[jquery.form] ' + Array.prototype.join.call(arguments, '');

    if (window.console && window.console.log) {
      window.console.log(msg);
    } else if (window.opera && window.opera.postError) {
      window.opera.postError(msg);
    }
  }
})(jQuery);

/***/ }),

/***/ 5232:
/*!***************************************************************************!*\
  !*** ./public/bundles/pimui/lib/jquery-ui/jquery-ui-1.12.1.custom.min.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*! jQuery UI - v1.12.1 - 2019-01-31
 * http://jqueryui.com
 * Includes: widget.js, position.js, data.js, disable-selection.js, focusable.js, form-reset-mixin.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/draggable.js, widgets/resizable.js, widgets/sortable.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/dialog.js, widgets/mouse.js
 * Copyright jQuery Foundation and other contributors; Licensed MIT */
(function (t) {
   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
})(function (t) {
  function e(t) {
    for (var e = t.css('visibility'); 'inherit' === e;) {
      t = t.parent(), e = t.css('visibility');
    }

    return 'hidden' !== e;
  }

  t.ui = t.ui || {}, t.ui.version = '1.12.1';
  var i = 0,
      s = Array.prototype.slice;
  t.cleanData = function (e) {
    return function (i) {
      var s, n, o;

      for (o = 0; null != (n = i[o]); o++) {
        try {
          s = t._data(n, 'events'), s && s.remove && t(n).triggerHandler('remove');
        } catch (a) {}
      }

      e(i);
    };
  }(t.cleanData), t.widget = function (e, i, s) {
    var n,
        o,
        a,
        r = {},
        l = e.split('.')[0];
    e = e.split('.')[1];
    var h = l + '-' + e;
    return s || (s = i, i = t.Widget), t.isArray(s) && (s = t.extend.apply(null, [{}].concat(s))), t.expr[':'][h.toLowerCase()] = function (e) {
      return !!t.data(e, h);
    }, t[l] = t[l] || {}, n = t[l][e], o = t[l][e] = function (t, e) {
      return this._createWidget ? (arguments.length && this._createWidget(t, e), void 0) : new o(t, e);
    }, t.extend(o, n, {
      version: s.version,
      _proto: t.extend({}, s),
      _childConstructors: []
    }), a = new i(), a.options = t.widget.extend({}, a.options), t.each(s, function (e, s) {
      return t.isFunction(s) ? (r[e] = function () {
        function t() {
          return i.prototype[e].apply(this, arguments);
        }

        function n(t) {
          return i.prototype[e].apply(this, t);
        }

        return function () {
          var e,
              i = this._super,
              o = this._superApply;
          return this._super = t, this._superApply = n, e = s.apply(this, arguments), this._super = i, this._superApply = o, e;
        };
      }(), void 0) : (r[e] = s, void 0);
    }), o.prototype = t.widget.extend(a, {
      widgetEventPrefix: n ? a.widgetEventPrefix || e : e
    }, r, {
      constructor: o,
      namespace: l,
      widgetName: e,
      widgetFullName: h
    }), n ? (t.each(n._childConstructors, function (e, i) {
      var s = i.prototype;
      t.widget(s.namespace + '.' + s.widgetName, o, i._proto);
    }), delete n._childConstructors) : i._childConstructors.push(o), t.widget.bridge(e, o), o;
  }, t.widget.extend = function (e) {
    for (var i, n, o = s.call(arguments, 1), a = 0, r = o.length; r > a; a++) {
      for (i in o[a]) {
        n = o[a][i], o[a].hasOwnProperty(i) && void 0 !== n && (e[i] = t.isPlainObject(n) ? t.isPlainObject(e[i]) ? t.widget.extend({}, e[i], n) : t.widget.extend({}, n) : n);
      }
    }

    return e;
  }, t.widget.bridge = function (e, i) {
    var n = i.prototype.widgetFullName || e;

    t.fn[e] = function (o) {
      var a = 'string' == typeof o,
          r = s.call(arguments, 1),
          l = this;
      return a ? this.length || 'instance' !== o ? this.each(function () {
        var i,
            s = t.data(this, n);
        return 'instance' === o ? (l = s, !1) : s ? t.isFunction(s[o]) && '_' !== o.charAt(0) ? (i = s[o].apply(s, r), i !== s && void 0 !== i ? (l = i && i.jquery ? l.pushStack(i.get()) : i, !1) : void 0) : t.error("no such method '" + o + "' for " + e + ' widget instance') : t.error('cannot call methods on ' + e + ' prior to initialization; ' + "attempted to call method '" + o + "'");
      }) : l = void 0 : (r.length && (o = t.widget.extend.apply(null, [o].concat(r))), this.each(function () {
        var e = t.data(this, n);
        e ? (e.option(o || {}), e._init && e._init()) : t.data(this, n, new i(o, this));
      })), l;
    };
  }, t.Widget = function () {}, t.Widget._childConstructors = [], t.Widget.prototype = {
    widgetName: 'widget',
    widgetEventPrefix: '',
    defaultElement: '<div>',
    options: {
      classes: {},
      disabled: !1,
      create: null
    },
    _createWidget: function _createWidget(e, s) {
      s = t(s || this.defaultElement || this)[0], this.element = t(s), this.uuid = i++, this.eventNamespace = '.' + this.widgetName + this.uuid, this.bindings = t(), this.hoverable = t(), this.focusable = t(), this.classesElementLookup = {}, s !== this && (t.data(s, this.widgetFullName, this), this._on(!0, this.element, {
        remove: function remove(t) {
          t.target === s && this.destroy();
        }
      }), this.document = t(s.style ? s.ownerDocument : s.document || s), this.window = t(this.document[0].defaultView || this.document[0].parentWindow)), this.options = t.widget.extend({}, this.options, this._getCreateOptions(), e), this._create(), this.options.disabled && this._setOptionDisabled(this.options.disabled), this._trigger('create', null, this._getCreateEventData()), this._init();
    },
    _getCreateOptions: function _getCreateOptions() {
      return {};
    },
    _getCreateEventData: t.noop,
    _create: t.noop,
    _init: t.noop,
    destroy: function destroy() {
      var e = this;
      this._destroy(), t.each(this.classesElementLookup, function (t, i) {
        e._removeClass(i, t);
      }), this.element.off(this.eventNamespace).removeData(this.widgetFullName), this.widget().off(this.eventNamespace).removeAttr('aria-disabled'), this.bindings.off(this.eventNamespace);
    },
    _destroy: t.noop,
    widget: function widget() {
      return this.element;
    },
    option: function option(e, i) {
      var s,
          n,
          o,
          a = e;
      if (0 === arguments.length) return t.widget.extend({}, this.options);
      if ('string' == typeof e) if (a = {}, s = e.split('.'), e = s.shift(), s.length) {
        for (n = a[e] = t.widget.extend({}, this.options[e]), o = 0; s.length - 1 > o; o++) {
          n[s[o]] = n[s[o]] || {}, n = n[s[o]];
        }

        if (e = s.pop(), 1 === arguments.length) return void 0 === n[e] ? null : n[e];
        n[e] = i;
      } else {
        if (1 === arguments.length) return void 0 === this.options[e] ? null : this.options[e];
        a[e] = i;
      }
      return this._setOptions(a), this;
    },
    _setOptions: function _setOptions(t) {
      var e;

      for (e in t) {
        this._setOption(e, t[e]);
      }

      return this;
    },
    _setOption: function _setOption(t, e) {
      return 'classes' === t && this._setOptionClasses(e), this.options[t] = e, 'disabled' === t && this._setOptionDisabled(e), this;
    },
    _setOptionClasses: function _setOptionClasses(e) {
      var i, s, n;

      for (i in e) {
        n = this.classesElementLookup[i], e[i] !== this.options.classes[i] && n && n.length && (s = t(n.get()), this._removeClass(n, i), s.addClass(this._classes({
          element: s,
          keys: i,
          classes: e,
          add: !0
        })));
      }
    },
    _setOptionDisabled: function _setOptionDisabled(t) {
      this._toggleClass(this.widget(), this.widgetFullName + '-disabled', null, !!t), t && (this._removeClass(this.hoverable, null, 'ui-state-hover'), this._removeClass(this.focusable, null, 'ui-state-focus'));
    },
    enable: function enable() {
      return this._setOptions({
        disabled: !1
      });
    },
    disable: function disable() {
      return this._setOptions({
        disabled: !0
      });
    },
    _classes: function _classes(e) {
      function i(i, o) {
        var a, r;

        for (r = 0; i.length > r; r++) {
          a = n.classesElementLookup[i[r]] || t(), a = e.add ? t(t.unique(a.get().concat(e.element.get()))) : t(a.not(e.element).get()), n.classesElementLookup[i[r]] = a, s.push(i[r]), o && e.classes[i[r]] && s.push(e.classes[i[r]]);
        }
      }

      var s = [],
          n = this;
      return e = t.extend({
        element: this.element,
        classes: this.options.classes || {}
      }, e), this._on(e.element, {
        remove: '_untrackClassesElement'
      }), e.keys && i(e.keys.match(/\S+/g) || [], !0), e.extra && i(e.extra.match(/\S+/g) || []), s.join(' ');
    },
    _untrackClassesElement: function _untrackClassesElement(e) {
      var i = this;
      t.each(i.classesElementLookup, function (s, n) {
        -1 !== t.inArray(e.target, n) && (i.classesElementLookup[s] = t(n.not(e.target).get()));
      });
    },
    _removeClass: function _removeClass(t, e, i) {
      return this._toggleClass(t, e, i, !1);
    },
    _addClass: function _addClass(t, e, i) {
      return this._toggleClass(t, e, i, !0);
    },
    _toggleClass: function _toggleClass(t, e, i, s) {
      s = 'boolean' == typeof s ? s : i;
      var n = 'string' == typeof t || null === t,
          o = {
        extra: n ? e : i,
        keys: n ? t : e,
        element: n ? this.element : t,
        add: s
      };
      return o.element.toggleClass(this._classes(o), s), this;
    },
    _on: function _on(e, i, s) {
      var n,
          o = this;
      'boolean' != typeof e && (s = i, i = e, e = !1), s ? (i = n = t(i), this.bindings = this.bindings.add(i)) : (s = i, i = this.element, n = this.widget()), t.each(s, function (s, a) {
        function r() {
          return e || o.options.disabled !== !0 && !t(this).hasClass('ui-state-disabled') ? ('string' == typeof a ? o[a] : a).apply(o, arguments) : void 0;
        }

        'string' != typeof a && (r.guid = a.guid = a.guid || r.guid || t.guid++);
        var l = s.match(/^([\w:-]*)\s*(.*)$/),
            h = l[1] + o.eventNamespace,
            c = l[2];
        c ? n.on(h, c, r) : i.on(h, r);
      });
    },
    _off: function _off(e, i) {
      i = (i || '').split(' ').join(this.eventNamespace + ' ') + this.eventNamespace, e.off(i).off(i), this.bindings = t(this.bindings.not(e).get()), this.focusable = t(this.focusable.not(e).get()), this.hoverable = t(this.hoverable.not(e).get());
    },
    _delay: function _delay(t, e) {
      function i() {
        return ('string' == typeof t ? s[t] : t).apply(s, arguments);
      }

      var s = this;
      return setTimeout(i, e || 0);
    },
    _hoverable: function _hoverable(e) {
      this.hoverable = this.hoverable.add(e), this._on(e, {
        mouseenter: function mouseenter(e) {
          this._addClass(t(e.currentTarget), null, 'ui-state-hover');
        },
        mouseleave: function mouseleave(e) {
          this._removeClass(t(e.currentTarget), null, 'ui-state-hover');
        }
      });
    },
    _focusable: function _focusable(e) {
      this.focusable = this.focusable.add(e), this._on(e, {
        focusin: function focusin(e) {
          this._addClass(t(e.currentTarget), null, 'ui-state-focus');
        },
        focusout: function focusout(e) {
          this._removeClass(t(e.currentTarget), null, 'ui-state-focus');
        }
      });
    },
    _trigger: function _trigger(e, i, s) {
      var n,
          o,
          a = this.options[e];
      if (s = s || {}, i = t.Event(i), i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase(), i.target = this.element[0], o = i.originalEvent) for (n in o) {
        n in i || (i[n] = o[n]);
      }
      return this.element.trigger(i, s), !(t.isFunction(a) && a.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented());
    }
  }, t.each({
    show: 'fadeIn',
    hide: 'fadeOut'
  }, function (e, i) {
    t.Widget.prototype['_' + e] = function (s, n, o) {
      'string' == typeof n && (n = {
        effect: n
      });
      var a,
          r = n ? n === !0 || 'number' == typeof n ? i : n.effect || i : e;
      n = n || {}, 'number' == typeof n && (n = {
        duration: n
      }), a = !t.isEmptyObject(n), n.complete = o, n.delay && s.delay(n.delay), a && t.effects && t.effects.effect[r] ? s[e](n) : r !== e && s[r] ? s[r](n.duration, n.easing, o) : s.queue(function (i) {
        t(this)[e](), o && o.call(s[0]), i();
      });
    };
  }), t.widget, function () {
    function e(t, e, i) {
      return [parseFloat(t[0]) * (u.test(t[0]) ? e / 100 : 1), parseFloat(t[1]) * (u.test(t[1]) ? i / 100 : 1)];
    }

    function i(e, i) {
      return parseInt(t.css(e, i), 10) || 0;
    }

    function s(e) {
      var i = e[0];
      return 9 === i.nodeType ? {
        width: e.width(),
        height: e.height(),
        offset: {
          top: 0,
          left: 0
        }
      } : t.isWindow(i) ? {
        width: e.width(),
        height: e.height(),
        offset: {
          top: e.scrollTop(),
          left: e.scrollLeft()
        }
      } : i.preventDefault ? {
        width: 0,
        height: 0,
        offset: {
          top: i.pageY,
          left: i.pageX
        }
      } : {
        width: e.outerWidth(),
        height: e.outerHeight(),
        offset: e.offset()
      };
    }

    var n,
        o = Math.max,
        a = Math.abs,
        r = /left|center|right/,
        l = /top|center|bottom/,
        h = /[\+\-]\d+(\.[\d]+)?%?/,
        c = /^\w+/,
        u = /%$/,
        d = t.fn.position;
    t.position = {
      scrollbarWidth: function scrollbarWidth() {
        if (void 0 !== n) return n;
        var e,
            i,
            s = t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
            o = s.children()[0];
        return t('body').append(s), e = o.offsetWidth, s.css('overflow', 'scroll'), i = o.offsetWidth, e === i && (i = s[0].clientWidth), s.remove(), n = e - i;
      },
      getScrollInfo: function getScrollInfo(e) {
        var i = e.isWindow || e.isDocument ? '' : e.element.css('overflow-x'),
            s = e.isWindow || e.isDocument ? '' : e.element.css('overflow-y'),
            n = 'scroll' === i || 'auto' === i && e.width < e.element[0].scrollWidth,
            o = 'scroll' === s || 'auto' === s && e.height < e.element[0].scrollHeight;
        return {
          width: o ? t.position.scrollbarWidth() : 0,
          height: n ? t.position.scrollbarWidth() : 0
        };
      },
      getWithinInfo: function getWithinInfo(e) {
        var i = t(e || window),
            s = t.isWindow(i[0]),
            n = !!i[0] && 9 === i[0].nodeType,
            o = !s && !n;
        return {
          element: i,
          isWindow: s,
          isDocument: n,
          offset: o ? t(e).offset() : {
            left: 0,
            top: 0
          },
          scrollLeft: i.scrollLeft(),
          scrollTop: i.scrollTop(),
          width: i.outerWidth(),
          height: i.outerHeight()
        };
      }
    }, t.fn.position = function (n) {
      if (!n || !n.of) return d.apply(this, arguments);
      n = t.extend({}, n);

      var u,
          p,
          f,
          g,
          m,
          _,
          v = t(n.of),
          b = t.position.getWithinInfo(n.within),
          y = t.position.getScrollInfo(b),
          w = (n.collision || 'flip').split(' '),
          k = {};

      return _ = s(v), v[0].preventDefault && (n.at = 'left top'), p = _.width, f = _.height, g = _.offset, m = t.extend({}, g), t.each(['my', 'at'], function () {
        var t,
            e,
            i = (n[this] || '').split(' ');
        1 === i.length && (i = r.test(i[0]) ? i.concat(['center']) : l.test(i[0]) ? ['center'].concat(i) : ['center', 'center']), i[0] = r.test(i[0]) ? i[0] : 'center', i[1] = l.test(i[1]) ? i[1] : 'center', t = h.exec(i[0]), e = h.exec(i[1]), k[this] = [t ? t[0] : 0, e ? e[0] : 0], n[this] = [c.exec(i[0])[0], c.exec(i[1])[0]];
      }), 1 === w.length && (w[1] = w[0]), 'right' === n.at[0] ? m.left += p : 'center' === n.at[0] && (m.left += p / 2), 'bottom' === n.at[1] ? m.top += f : 'center' === n.at[1] && (m.top += f / 2), u = e(k.at, p, f), m.left += u[0], m.top += u[1], this.each(function () {
        var s,
            r,
            l = t(this),
            h = l.outerWidth(),
            c = l.outerHeight(),
            d = i(this, 'marginLeft'),
            _ = i(this, 'marginTop'),
            x = h + d + i(this, 'marginRight') + y.width,
            C = c + _ + i(this, 'marginBottom') + y.height,
            D = t.extend({}, m),
            T = e(k.my, l.outerWidth(), l.outerHeight());

        'right' === n.my[0] ? D.left -= h : 'center' === n.my[0] && (D.left -= h / 2), 'bottom' === n.my[1] ? D.top -= c : 'center' === n.my[1] && (D.top -= c / 2), D.left += T[0], D.top += T[1], s = {
          marginLeft: d,
          marginTop: _
        }, t.each(['left', 'top'], function (e, i) {
          t.ui.position[w[e]] && t.ui.position[w[e]][i](D, {
            targetWidth: p,
            targetHeight: f,
            elemWidth: h,
            elemHeight: c,
            collisionPosition: s,
            collisionWidth: x,
            collisionHeight: C,
            offset: [u[0] + T[0], u[1] + T[1]],
            my: n.my,
            at: n.at,
            within: b,
            elem: l
          });
        }), n.using && (r = function r(t) {
          var e = g.left - D.left,
              i = e + p - h,
              s = g.top - D.top,
              r = s + f - c,
              u = {
            target: {
              element: v,
              left: g.left,
              top: g.top,
              width: p,
              height: f
            },
            element: {
              element: l,
              left: D.left,
              top: D.top,
              width: h,
              height: c
            },
            horizontal: 0 > i ? 'left' : e > 0 ? 'right' : 'center',
            vertical: 0 > r ? 'top' : s > 0 ? 'bottom' : 'middle'
          };
          h > p && p > a(e + i) && (u.horizontal = 'center'), c > f && f > a(s + r) && (u.vertical = 'middle'), u.important = o(a(e), a(i)) > o(a(s), a(r)) ? 'horizontal' : 'vertical', n.using.call(this, t, u);
        }), l.offset(t.extend(D, {
          using: r
        }));
      });
    }, t.ui.position = {
      fit: {
        left: function left(t, e) {
          var i,
              s = e.within,
              n = s.isWindow ? s.scrollLeft : s.offset.left,
              a = s.width,
              r = t.left - e.collisionPosition.marginLeft,
              l = n - r,
              h = r + e.collisionWidth - a - n;
          e.collisionWidth > a ? l > 0 && 0 >= h ? (i = t.left + l + e.collisionWidth - a - n, t.left += l - i) : t.left = h > 0 && 0 >= l ? n : l > h ? n + a - e.collisionWidth : n : l > 0 ? t.left += l : h > 0 ? t.left -= h : t.left = o(t.left - r, t.left);
        },
        top: function top(t, e) {
          var i,
              s = e.within,
              n = s.isWindow ? s.scrollTop : s.offset.top,
              a = e.within.height,
              r = t.top - e.collisionPosition.marginTop,
              l = n - r,
              h = r + e.collisionHeight - a - n;
          e.collisionHeight > a ? l > 0 && 0 >= h ? (i = t.top + l + e.collisionHeight - a - n, t.top += l - i) : t.top = h > 0 && 0 >= l ? n : l > h ? n + a - e.collisionHeight : n : l > 0 ? t.top += l : h > 0 ? t.top -= h : t.top = o(t.top - r, t.top);
        }
      },
      flip: {
        left: function left(t, e) {
          var i,
              s,
              n = e.within,
              o = n.offset.left + n.scrollLeft,
              r = n.width,
              l = n.isWindow ? n.scrollLeft : n.offset.left,
              h = t.left - e.collisionPosition.marginLeft,
              c = h - l,
              u = h + e.collisionWidth - r - l,
              d = 'left' === e.my[0] ? -e.elemWidth : 'right' === e.my[0] ? e.elemWidth : 0,
              p = 'left' === e.at[0] ? e.targetWidth : 'right' === e.at[0] ? -e.targetWidth : 0,
              f = -2 * e.offset[0];
          0 > c ? (i = t.left + d + p + f + e.collisionWidth - r - o, (0 > i || a(c) > i) && (t.left += d + p + f)) : u > 0 && (s = t.left - e.collisionPosition.marginLeft + d + p + f - l, (s > 0 || u > a(s)) && (t.left += d + p + f));
        },
        top: function top(t, e) {
          var i,
              s,
              n = e.within,
              o = n.offset.top + n.scrollTop,
              r = n.height,
              l = n.isWindow ? n.scrollTop : n.offset.top,
              h = t.top - e.collisionPosition.marginTop,
              c = h - l,
              u = h + e.collisionHeight - r - l,
              d = 'top' === e.my[1],
              p = d ? -e.elemHeight : 'bottom' === e.my[1] ? e.elemHeight : 0,
              f = 'top' === e.at[1] ? e.targetHeight : 'bottom' === e.at[1] ? -e.targetHeight : 0,
              g = -2 * e.offset[1];
          0 > c ? (s = t.top + p + f + g + e.collisionHeight - r - o, (0 > s || a(c) > s) && (t.top += p + f + g)) : u > 0 && (i = t.top - e.collisionPosition.marginTop + p + f + g - l, (i > 0 || u > a(i)) && (t.top += p + f + g));
        }
      },
      flipfit: {
        left: function left() {
          t.ui.position.flip.left.apply(this, arguments), t.ui.position.fit.left.apply(this, arguments);
        },
        top: function top() {
          t.ui.position.flip.top.apply(this, arguments), t.ui.position.fit.top.apply(this, arguments);
        }
      }
    };
  }(), t.ui.position, t.extend(t.expr[':'], {
    data: t.expr.createPseudo ? t.expr.createPseudo(function (e) {
      return function (i) {
        return !!t.data(i, e);
      };
    }) : function (e, i, s) {
      return !!t.data(e, s[3]);
    }
  }), t.fn.extend({
    disableSelection: function () {
      var t = 'onselectstart' in document.createElement('div') ? 'selectstart' : 'mousedown';
      return function () {
        return this.on(t + '.ui-disableSelection', function (t) {
          t.preventDefault();
        });
      };
    }(),
    enableSelection: function enableSelection() {
      return this.off('.ui-disableSelection');
    }
  }), t.ui.focusable = function (i, s) {
    var n,
        o,
        a,
        r,
        l,
        h = i.nodeName.toLowerCase();
    return 'area' === h ? (n = i.parentNode, o = n.name, i.href && o && 'map' === n.nodeName.toLowerCase() ? (a = t("img[usemap='#" + o + "']"), a.length > 0 && a.is(':visible')) : !1) : (/^(input|select|textarea|button|object)$/.test(h) ? (r = !i.disabled, r && (l = t(i).closest('fieldset')[0], l && (r = !l.disabled))) : r = 'a' === h ? i.href || s : s, r && t(i).is(':visible') && e(t(i)));
  }, t.extend(t.expr[':'], {
    focusable: function focusable(e) {
      return t.ui.focusable(e, null != t.attr(e, 'tabindex'));
    }
  }), t.ui.focusable, t.fn.form = function () {
    return 'string' == typeof this[0].form ? this.closest('form') : t(this[0].form);
  }, t.ui.formResetMixin = {
    _formResetHandler: function _formResetHandler() {
      var e = t(this);
      setTimeout(function () {
        var i = e.data('ui-form-reset-instances');
        t.each(i, function () {
          this.refresh();
        });
      });
    },
    _bindFormResetHandler: function _bindFormResetHandler() {
      if (this.form = this.element.form(), this.form.length) {
        var t = this.form.data('ui-form-reset-instances') || [];
        t.length || this.form.on('reset.ui-form-reset', this._formResetHandler), t.push(this), this.form.data('ui-form-reset-instances', t);
      }
    },
    _unbindFormResetHandler: function _unbindFormResetHandler() {
      if (this.form.length) {
        var e = this.form.data('ui-form-reset-instances');
        e.splice(t.inArray(this, e), 1), e.length ? this.form.data('ui-form-reset-instances', e) : this.form.removeData('ui-form-reset-instances').off('reset.ui-form-reset');
      }
    }
  }, t.ui.keyCode = {
    BACKSPACE: 8,
    COMMA: 188,
    DELETE: 46,
    DOWN: 40,
    END: 35,
    ENTER: 13,
    ESCAPE: 27,
    HOME: 36,
    LEFT: 37,
    PAGE_DOWN: 34,
    PAGE_UP: 33,
    PERIOD: 190,
    RIGHT: 39,
    SPACE: 32,
    TAB: 9,
    UP: 38
  }, t.ui.escapeSelector = function () {
    var t = /([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;
    return function (e) {
      return e.replace(t, '\\$1');
    };
  }(), t.fn.labels = function () {
    var e, i, s, n, o;
    return this[0].labels && this[0].labels.length ? this.pushStack(this[0].labels) : (n = this.eq(0).parents('label'), s = this.attr('id'), s && (e = this.eq(0).parents().last(), o = e.add(e.length ? e.siblings() : this.siblings()), i = "label[for='" + t.ui.escapeSelector(s) + "']", n = n.add(o.find(i).addBack(i))), this.pushStack(n));
  }, t.fn.scrollParent = function (e) {
    var i = this.css('position'),
        s = 'absolute' === i,
        n = e ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
        o = this.parents().filter(function () {
      var e = t(this);
      return s && 'static' === e.css('position') ? !1 : n.test(e.css('overflow') + e.css('overflow-y') + e.css('overflow-x'));
    }).eq(0);
    return 'fixed' !== i && o.length ? o : t(this[0].ownerDocument || document);
  }, t.extend(t.expr[':'], {
    tabbable: function tabbable(e) {
      var i = t.attr(e, 'tabindex'),
          s = null != i;
      return (!s || i >= 0) && t.ui.focusable(e, s);
    }
  }), t.fn.extend({
    uniqueId: function () {
      var t = 0;
      return function () {
        return this.each(function () {
          this.id || (this.id = 'ui-id-' + ++t);
        });
      };
    }(),
    removeUniqueId: function removeUniqueId() {
      return this.each(function () {
        /^ui-id-\d+$/.test(this.id) && t(this).removeAttr('id');
      });
    }
  }), t.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
  var n = !1;
  t(document).on('mouseup', function () {
    n = !1;
  }), t.widget('ui.mouse', {
    version: '1.12.1',
    options: {
      cancel: 'input, textarea, button, select, option',
      distance: 1,
      delay: 0
    },
    _mouseInit: function _mouseInit() {
      var e = this;
      this.element.on('mousedown.' + this.widgetName, function (t) {
        return e._mouseDown(t);
      }).on('click.' + this.widgetName, function (i) {
        return !0 === t.data(i.target, e.widgetName + '.preventClickEvent') ? (t.removeData(i.target, e.widgetName + '.preventClickEvent'), i.stopImmediatePropagation(), !1) : void 0;
      }), this.started = !1;
    },
    _mouseDestroy: function _mouseDestroy() {
      this.element.off('.' + this.widgetName), this._mouseMoveDelegate && this.document.off('mousemove.' + this.widgetName, this._mouseMoveDelegate).off('mouseup.' + this.widgetName, this._mouseUpDelegate);
    },
    _mouseDown: function _mouseDown(e) {
      if (!n) {
        this._mouseMoved = !1, this._mouseStarted && this._mouseUp(e), this._mouseDownEvent = e;
        var i = this,
            s = 1 === e.which,
            o = 'string' == typeof this.options.cancel && e.target.nodeName ? t(e.target).closest(this.options.cancel).length : !1;
        return s && !o && this._mouseCapture(e) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () {
          i.mouseDelayMet = !0;
        }, this.options.delay)), this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(e) !== !1, !this._mouseStarted) ? (e.preventDefault(), !0) : (!0 === t.data(e.target, this.widgetName + '.preventClickEvent') && t.removeData(e.target, this.widgetName + '.preventClickEvent'), this._mouseMoveDelegate = function (t) {
          return i._mouseMove(t);
        }, this._mouseUpDelegate = function (t) {
          return i._mouseUp(t);
        }, this.document.on('mousemove.' + this.widgetName, this._mouseMoveDelegate).on('mouseup.' + this.widgetName, this._mouseUpDelegate), e.preventDefault(), n = !0, !0)) : !0;
      }
    },
    _mouseMove: function _mouseMove(e) {
      if (this._mouseMoved) {
        if (t.ui.ie && (!document.documentMode || 9 > document.documentMode) && !e.button) return this._mouseUp(e);
        if (!e.which) if (e.originalEvent.altKey || e.originalEvent.ctrlKey || e.originalEvent.metaKey || e.originalEvent.shiftKey) this.ignoreMissingWhich = !0;else if (!this.ignoreMissingWhich) return this._mouseUp(e);
      }

      return (e.which || e.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(e), e.preventDefault()) : (this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== !1, this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)), !this._mouseStarted);
    },
    _mouseUp: function _mouseUp(e) {
      this.document.off('mousemove.' + this.widgetName, this._mouseMoveDelegate).off('mouseup.' + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, e.target === this._mouseDownEvent.target && t.data(e.target, this.widgetName + '.preventClickEvent', !0), this._mouseStop(e)), this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer), this.ignoreMissingWhich = !1, n = !1, e.preventDefault();
    },
    _mouseDistanceMet: function _mouseDistanceMet(t) {
      return Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance;
    },
    _mouseDelayMet: function _mouseDelayMet() {
      return this.mouseDelayMet;
    },
    _mouseStart: function _mouseStart() {},
    _mouseDrag: function _mouseDrag() {},
    _mouseStop: function _mouseStop() {},
    _mouseCapture: function _mouseCapture() {
      return !0;
    }
  }), t.ui.plugin = {
    add: function add(e, i, s) {
      var n,
          o = t.ui[e].prototype;

      for (n in s) {
        o.plugins[n] = o.plugins[n] || [], o.plugins[n].push([i, s[n]]);
      }
    },
    call: function call(t, e, i, s) {
      var n,
          o = t.plugins[e];
      if (o && (s || t.element[0].parentNode && 11 !== t.element[0].parentNode.nodeType)) for (n = 0; o.length > n; n++) {
        t.options[o[n][0]] && o[n][1].apply(t.element, i);
      }
    }
  }, t.ui.safeActiveElement = function (t) {
    var e;

    try {
      e = t.activeElement;
    } catch (i) {
      e = t.body;
    }

    return e || (e = t.body), e.nodeName || (e = t.body), e;
  }, t.ui.safeBlur = function (e) {
    e && 'body' !== e.nodeName.toLowerCase() && t(e).trigger('blur');
  }, t.widget('ui.draggable', t.ui.mouse, {
    version: '1.12.1',
    widgetEventPrefix: 'drag',
    options: {
      addClasses: !0,
      appendTo: 'parent',
      axis: !1,
      connectToSortable: !1,
      containment: !1,
      cursor: 'auto',
      cursorAt: !1,
      grid: !1,
      handle: !1,
      helper: 'original',
      iframeFix: !1,
      opacity: !1,
      refreshPositions: !1,
      revert: !1,
      revertDuration: 500,
      scope: 'default',
      scroll: !0,
      scrollSensitivity: 20,
      scrollSpeed: 20,
      snap: !1,
      snapMode: 'both',
      snapTolerance: 20,
      stack: !1,
      zIndex: !1,
      drag: null,
      start: null,
      stop: null
    },
    _create: function _create() {
      'original' === this.options.helper && this._setPositionRelative(), this.options.addClasses && this._addClass('ui-draggable'), this._setHandleClassName(), this._mouseInit();
    },
    _setOption: function _setOption(t, e) {
      this._super(t, e), 'handle' === t && (this._removeHandleClassName(), this._setHandleClassName());
    },
    _destroy: function _destroy() {
      return (this.helper || this.element).is('.ui-draggable-dragging') ? (this.destroyOnClear = !0, void 0) : (this._removeHandleClassName(), this._mouseDestroy(), void 0);
    },
    _mouseCapture: function _mouseCapture(e) {
      var i = this.options;
      return this.helper || i.disabled || t(e.target).closest('.ui-resizable-handle').length > 0 ? !1 : (this.handle = this._getHandle(e), this.handle ? (this._blurActiveElement(e), this._blockFrames(i.iframeFix === !0 ? 'iframe' : i.iframeFix), !0) : !1);
    },
    _blockFrames: function _blockFrames(e) {
      this.iframeBlocks = this.document.find(e).map(function () {
        var e = t(this);
        return t('<div>').css('position', 'absolute').appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0];
      });
    },
    _unblockFrames: function _unblockFrames() {
      this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
    },
    _blurActiveElement: function _blurActiveElement(e) {
      var i = t.ui.safeActiveElement(this.document[0]),
          s = t(e.target);
      s.closest(i).length || t.ui.safeBlur(i);
    },
    _mouseStart: function _mouseStart(e) {
      var i = this.options;
      return this.helper = this._createHelper(e), this._addClass(this.helper, 'ui-draggable-dragging'), this._cacheHelperProportions(), t.ui.ddmanager && (t.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css('position'), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = this.helper.parents().filter(function () {
        return 'fixed' === t(this).css('position');
      }).length > 0, this.positionAbs = this.element.offset(), this._refreshOffsets(e), this.originalPosition = this.position = this._generatePosition(e, !1), this.originalPageX = e.pageX, this.originalPageY = e.pageY, i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt), this._setContainment(), this._trigger('start', e) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), t.ui.ddmanager && !i.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e), this._mouseDrag(e, !0), t.ui.ddmanager && t.ui.ddmanager.dragStart(this, e), !0);
    },
    _refreshOffsets: function _refreshOffsets(t) {
      this.offset = {
        top: this.positionAbs.top - this.margins.top,
        left: this.positionAbs.left - this.margins.left,
        scroll: !1,
        parent: this._getParentOffset(),
        relative: this._getRelativeOffset()
      }, this.offset.click = {
        left: t.pageX - this.offset.left,
        top: t.pageY - this.offset.top
      };
    },
    _mouseDrag: function _mouseDrag(e, i) {
      if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(e, !0), this.positionAbs = this._convertPositionTo('absolute'), !i) {
        var s = this._uiHash();

        if (this._trigger('drag', e, s) === !1) return this._mouseUp(new t.Event('mouseup', e)), !1;
        this.position = s.position;
      }

      return this.helper[0].style.left = this.position.left + 'px', this.helper[0].style.top = this.position.top + 'px', t.ui.ddmanager && t.ui.ddmanager.drag(this, e), !1;
    },
    _mouseStop: function _mouseStop(e) {
      var i = this,
          s = !1;
      return t.ui.ddmanager && !this.options.dropBehaviour && (s = t.ui.ddmanager.drop(this, e)), this.dropped && (s = this.dropped, this.dropped = !1), 'invalid' === this.options.revert && !s || 'valid' === this.options.revert && s || this.options.revert === !0 || t.isFunction(this.options.revert) && this.options.revert.call(this.element, s) ? t(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
        i._trigger('stop', e) !== !1 && i._clear();
      }) : this._trigger('stop', e) !== !1 && this._clear(), !1;
    },
    _mouseUp: function _mouseUp(e) {
      return this._unblockFrames(), t.ui.ddmanager && t.ui.ddmanager.dragStop(this, e), this.handleElement.is(e.target) && this.element.trigger('focus'), t.ui.mouse.prototype._mouseUp.call(this, e);
    },
    cancel: function cancel() {
      return this.helper.is('.ui-draggable-dragging') ? this._mouseUp(new t.Event('mouseup', {
        target: this.element[0]
      })) : this._clear(), this;
    },
    _getHandle: function _getHandle(e) {
      return this.options.handle ? !!t(e.target).closest(this.element.find(this.options.handle)).length : !0;
    },
    _setHandleClassName: function _setHandleClassName() {
      this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this._addClass(this.handleElement, 'ui-draggable-handle');
    },
    _removeHandleClassName: function _removeHandleClassName() {
      this._removeClass(this.handleElement, 'ui-draggable-handle');
    },
    _createHelper: function _createHelper(e) {
      var i = this.options,
          s = t.isFunction(i.helper),
          n = s ? t(i.helper.apply(this.element[0], [e])) : 'clone' === i.helper ? this.element.clone().removeAttr('id') : this.element;
      return n.parents('body').length || n.appendTo('parent' === i.appendTo ? this.element[0].parentNode : i.appendTo), s && n[0] === this.element[0] && this._setPositionRelative(), n[0] === this.element[0] || /(fixed|absolute)/.test(n.css('position')) || n.css('position', 'absolute'), n;
    },
    _setPositionRelative: function _setPositionRelative() {
      /^(?:r|a|f)/.test(this.element.css('position')) || (this.element[0].style.position = 'relative');
    },
    _adjustOffsetFromHelper: function _adjustOffsetFromHelper(e) {
      'string' == typeof e && (e = e.split(' ')), t.isArray(e) && (e = {
        left: +e[0],
        top: +e[1] || 0
      }), 'left' in e && (this.offset.click.left = e.left + this.margins.left), 'right' in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left), 'top' in e && (this.offset.click.top = e.top + this.margins.top), 'bottom' in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top);
    },
    _isRootNode: function _isRootNode(t) {
      return /(html|body)/i.test(t.tagName) || t === this.document[0];
    },
    _getParentOffset: function _getParentOffset() {
      var e = this.offsetParent.offset(),
          i = this.document[0];
      return 'absolute' === this.cssPosition && this.scrollParent[0] !== i && t.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(), e.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (e = {
        top: 0,
        left: 0
      }), {
        top: e.top + (parseInt(this.offsetParent.css('borderTopWidth'), 10) || 0),
        left: e.left + (parseInt(this.offsetParent.css('borderLeftWidth'), 10) || 0)
      };
    },
    _getRelativeOffset: function _getRelativeOffset() {
      if ('relative' !== this.cssPosition) return {
        top: 0,
        left: 0
      };

      var t = this.element.position(),
          e = this._isRootNode(this.scrollParent[0]);

      return {
        top: t.top - (parseInt(this.helper.css('top'), 10) || 0) + (e ? 0 : this.scrollParent.scrollTop()),
        left: t.left - (parseInt(this.helper.css('left'), 10) || 0) + (e ? 0 : this.scrollParent.scrollLeft())
      };
    },
    _cacheMargins: function _cacheMargins() {
      this.margins = {
        left: parseInt(this.element.css('marginLeft'), 10) || 0,
        top: parseInt(this.element.css('marginTop'), 10) || 0,
        right: parseInt(this.element.css('marginRight'), 10) || 0,
        bottom: parseInt(this.element.css('marginBottom'), 10) || 0
      };
    },
    _cacheHelperProportions: function _cacheHelperProportions() {
      this.helperProportions = {
        width: this.helper.outerWidth(),
        height: this.helper.outerHeight()
      };
    },
    _setContainment: function _setContainment() {
      var e,
          i,
          s,
          n = this.options,
          o = this.document[0];
      return this.relativeContainer = null, n.containment ? 'window' === n.containment ? (this.containment = [t(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, t(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, t(window).scrollLeft() + t(window).width() - this.helperProportions.width - this.margins.left, t(window).scrollTop() + (t(window).height() || o.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : 'document' === n.containment ? (this.containment = [0, 0, t(o).width() - this.helperProportions.width - this.margins.left, (t(o).height() || o.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : n.containment.constructor === Array ? (this.containment = n.containment, void 0) : ('parent' === n.containment && (n.containment = this.helper[0].parentNode), i = t(n.containment), s = i[0], s && (e = /(scroll|auto)/.test(i.css('overflow')), this.containment = [(parseInt(i.css('borderLeftWidth'), 10) || 0) + (parseInt(i.css('paddingLeft'), 10) || 0), (parseInt(i.css('borderTopWidth'), 10) || 0) + (parseInt(i.css('paddingTop'), 10) || 0), (e ? Math.max(s.scrollWidth, s.offsetWidth) : s.offsetWidth) - (parseInt(i.css('borderRightWidth'), 10) || 0) - (parseInt(i.css('paddingRight'), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (e ? Math.max(s.scrollHeight, s.offsetHeight) : s.offsetHeight) - (parseInt(i.css('borderBottomWidth'), 10) || 0) - (parseInt(i.css('paddingBottom'), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = i), void 0) : (this.containment = null, void 0);
    },
    _convertPositionTo: function _convertPositionTo(t, e) {
      e || (e = this.position);

      var i = 'absolute' === t ? 1 : -1,
          s = this._isRootNode(this.scrollParent[0]);

      return {
        top: e.top + this.offset.relative.top * i + this.offset.parent.top * i - ('fixed' === this.cssPosition ? -this.offset.scroll.top : s ? 0 : this.offset.scroll.top) * i,
        left: e.left + this.offset.relative.left * i + this.offset.parent.left * i - ('fixed' === this.cssPosition ? -this.offset.scroll.left : s ? 0 : this.offset.scroll.left) * i
      };
    },
    _generatePosition: function _generatePosition(t, e) {
      var i,
          s,
          n,
          o,
          a = this.options,
          r = this._isRootNode(this.scrollParent[0]),
          l = t.pageX,
          h = t.pageY;

      return r && this.offset.scroll || (this.offset.scroll = {
        top: this.scrollParent.scrollTop(),
        left: this.scrollParent.scrollLeft()
      }), e && (this.containment && (this.relativeContainer ? (s = this.relativeContainer.offset(), i = [this.containment[0] + s.left, this.containment[1] + s.top, this.containment[2] + s.left, this.containment[3] + s.top]) : i = this.containment, t.pageX - this.offset.click.left < i[0] && (l = i[0] + this.offset.click.left), t.pageY - this.offset.click.top < i[1] && (h = i[1] + this.offset.click.top), t.pageX - this.offset.click.left > i[2] && (l = i[2] + this.offset.click.left), t.pageY - this.offset.click.top > i[3] && (h = i[3] + this.offset.click.top)), a.grid && (n = a.grid[1] ? this.originalPageY + Math.round((h - this.originalPageY) / a.grid[1]) * a.grid[1] : this.originalPageY, h = i ? n - this.offset.click.top >= i[1] || n - this.offset.click.top > i[3] ? n : n - this.offset.click.top >= i[1] ? n - a.grid[1] : n + a.grid[1] : n, o = a.grid[0] ? this.originalPageX + Math.round((l - this.originalPageX) / a.grid[0]) * a.grid[0] : this.originalPageX, l = i ? o - this.offset.click.left >= i[0] || o - this.offset.click.left > i[2] ? o : o - this.offset.click.left >= i[0] ? o - a.grid[0] : o + a.grid[0] : o), 'y' === a.axis && (l = this.originalPageX), 'x' === a.axis && (h = this.originalPageY)), {
        top: h - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ('fixed' === this.cssPosition ? -this.offset.scroll.top : r ? 0 : this.offset.scroll.top),
        left: l - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ('fixed' === this.cssPosition ? -this.offset.scroll.left : r ? 0 : this.offset.scroll.left)
      };
    },
    _clear: function _clear() {
      this._removeClass(this.helper, 'ui-draggable-dragging'), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy();
    },
    _trigger: function _trigger(e, i, s) {
      return s = s || this._uiHash(), t.ui.plugin.call(this, e, [i, s, this], !0), /^(drag|start|stop)/.test(e) && (this.positionAbs = this._convertPositionTo('absolute'), s.offset = this.positionAbs), t.Widget.prototype._trigger.call(this, e, i, s);
    },
    plugins: {},
    _uiHash: function _uiHash() {
      return {
        helper: this.helper,
        position: this.position,
        originalPosition: this.originalPosition,
        offset: this.positionAbs
      };
    }
  }), t.ui.plugin.add('draggable', 'connectToSortable', {
    start: function start(e, i, s) {
      var n = t.extend({}, i, {
        item: s.element
      });
      s.sortables = [], t(s.options.connectToSortable).each(function () {
        var i = t(this).sortable('instance');
        i && !i.options.disabled && (s.sortables.push(i), i.refreshPositions(), i._trigger('activate', e, n));
      });
    },
    stop: function stop(e, i, s) {
      var n = t.extend({}, i, {
        item: s.element
      });
      s.cancelHelperRemoval = !1, t.each(s.sortables, function () {
        var t = this;
        t.isOver ? (t.isOver = 0, s.cancelHelperRemoval = !0, t.cancelHelperRemoval = !1, t._storedCSS = {
          position: t.placeholder.css('position'),
          top: t.placeholder.css('top'),
          left: t.placeholder.css('left')
        }, t._mouseStop(e), t.options.helper = t.options._helper) : (t.cancelHelperRemoval = !0, t._trigger('deactivate', e, n));
      });
    },
    drag: function drag(e, i, s) {
      t.each(s.sortables, function () {
        var n = !1,
            o = this;
        o.positionAbs = s.positionAbs, o.helperProportions = s.helperProportions, o.offset.click = s.offset.click, o._intersectsWith(o.containerCache) && (n = !0, t.each(s.sortables, function () {
          return this.positionAbs = s.positionAbs, this.helperProportions = s.helperProportions, this.offset.click = s.offset.click, this !== o && this._intersectsWith(this.containerCache) && t.contains(o.element[0], this.element[0]) && (n = !1), n;
        })), n ? (o.isOver || (o.isOver = 1, s._parent = i.helper.parent(), o.currentItem = i.helper.appendTo(o.element).data('ui-sortable-item', !0), o.options._helper = o.options.helper, o.options.helper = function () {
          return i.helper[0];
        }, e.target = o.currentItem[0], o._mouseCapture(e, !0), o._mouseStart(e, !0, !0), o.offset.click.top = s.offset.click.top, o.offset.click.left = s.offset.click.left, o.offset.parent.left -= s.offset.parent.left - o.offset.parent.left, o.offset.parent.top -= s.offset.parent.top - o.offset.parent.top, s._trigger('toSortable', e), s.dropped = o.element, t.each(s.sortables, function () {
          this.refreshPositions();
        }), s.currentItem = s.element, o.fromOutside = s), o.currentItem && (o._mouseDrag(e), i.position = o.position)) : o.isOver && (o.isOver = 0, o.cancelHelperRemoval = !0, o.options._revert = o.options.revert, o.options.revert = !1, o._trigger('out', e, o._uiHash(o)), o._mouseStop(e, !0), o.options.revert = o.options._revert, o.options.helper = o.options._helper, o.placeholder && o.placeholder.remove(), i.helper.appendTo(s._parent), s._refreshOffsets(e), i.position = s._generatePosition(e, !0), s._trigger('fromSortable', e), s.dropped = !1, t.each(s.sortables, function () {
          this.refreshPositions();
        }));
      });
    }
  }), t.ui.plugin.add('draggable', 'cursor', {
    start: function start(e, i, s) {
      var n = t('body'),
          o = s.options;
      n.css('cursor') && (o._cursor = n.css('cursor')), n.css('cursor', o.cursor);
    },
    stop: function stop(e, i, s) {
      var n = s.options;
      n._cursor && t('body').css('cursor', n._cursor);
    }
  }), t.ui.plugin.add('draggable', 'opacity', {
    start: function start(e, i, s) {
      var n = t(i.helper),
          o = s.options;
      n.css('opacity') && (o._opacity = n.css('opacity')), n.css('opacity', o.opacity);
    },
    stop: function stop(e, i, s) {
      var n = s.options;
      n._opacity && t(i.helper).css('opacity', n._opacity);
    }
  }), t.ui.plugin.add('draggable', 'scroll', {
    start: function start(t, e, i) {
      i.scrollParentNotHidden || (i.scrollParentNotHidden = i.helper.scrollParent(!1)), i.scrollParentNotHidden[0] !== i.document[0] && 'HTML' !== i.scrollParentNotHidden[0].tagName && (i.overflowOffset = i.scrollParentNotHidden.offset());
    },
    drag: function drag(e, i, s) {
      var n = s.options,
          o = !1,
          a = s.scrollParentNotHidden[0],
          r = s.document[0];
      a !== r && 'HTML' !== a.tagName ? (n.axis && 'x' === n.axis || (s.overflowOffset.top + a.offsetHeight - e.pageY < n.scrollSensitivity ? a.scrollTop = o = a.scrollTop + n.scrollSpeed : e.pageY - s.overflowOffset.top < n.scrollSensitivity && (a.scrollTop = o = a.scrollTop - n.scrollSpeed)), n.axis && 'y' === n.axis || (s.overflowOffset.left + a.offsetWidth - e.pageX < n.scrollSensitivity ? a.scrollLeft = o = a.scrollLeft + n.scrollSpeed : e.pageX - s.overflowOffset.left < n.scrollSensitivity && (a.scrollLeft = o = a.scrollLeft - n.scrollSpeed))) : (n.axis && 'x' === n.axis || (e.pageY - t(r).scrollTop() < n.scrollSensitivity ? o = t(r).scrollTop(t(r).scrollTop() - n.scrollSpeed) : t(window).height() - (e.pageY - t(r).scrollTop()) < n.scrollSensitivity && (o = t(r).scrollTop(t(r).scrollTop() + n.scrollSpeed))), n.axis && 'y' === n.axis || (e.pageX - t(r).scrollLeft() < n.scrollSensitivity ? o = t(r).scrollLeft(t(r).scrollLeft() - n.scrollSpeed) : t(window).width() - (e.pageX - t(r).scrollLeft()) < n.scrollSensitivity && (o = t(r).scrollLeft(t(r).scrollLeft() + n.scrollSpeed)))), o !== !1 && t.ui.ddmanager && !n.dropBehaviour && t.ui.ddmanager.prepareOffsets(s, e);
    }
  }), t.ui.plugin.add('draggable', 'snap', {
    start: function start(e, i, s) {
      var n = s.options;
      s.snapElements = [], t(n.snap.constructor !== String ? n.snap.items || ':data(ui-draggable)' : n.snap).each(function () {
        var e = t(this),
            i = e.offset();
        this !== s.element[0] && s.snapElements.push({
          item: this,
          width: e.outerWidth(),
          height: e.outerHeight(),
          top: i.top,
          left: i.left
        });
      });
    },
    drag: function drag(e, i, s) {
      var n,
          o,
          a,
          r,
          l,
          h,
          c,
          u,
          d,
          p,
          f = s.options,
          g = f.snapTolerance,
          m = i.offset.left,
          _ = m + s.helperProportions.width,
          v = i.offset.top,
          b = v + s.helperProportions.height;

      for (d = s.snapElements.length - 1; d >= 0; d--) {
        l = s.snapElements[d].left - s.margins.left, h = l + s.snapElements[d].width, c = s.snapElements[d].top - s.margins.top, u = c + s.snapElements[d].height, l - g > _ || m > h + g || c - g > b || v > u + g || !t.contains(s.snapElements[d].item.ownerDocument, s.snapElements[d].item) ? (s.snapElements[d].snapping && s.options.snap.release && s.options.snap.release.call(s.element, e, t.extend(s._uiHash(), {
          snapItem: s.snapElements[d].item
        })), s.snapElements[d].snapping = !1) : ('inner' !== f.snapMode && (n = g >= Math.abs(c - b), o = g >= Math.abs(u - v), a = g >= Math.abs(l - _), r = g >= Math.abs(h - m), n && (i.position.top = s._convertPositionTo('relative', {
          top: c - s.helperProportions.height,
          left: 0
        }).top), o && (i.position.top = s._convertPositionTo('relative', {
          top: u,
          left: 0
        }).top), a && (i.position.left = s._convertPositionTo('relative', {
          top: 0,
          left: l - s.helperProportions.width
        }).left), r && (i.position.left = s._convertPositionTo('relative', {
          top: 0,
          left: h
        }).left)), p = n || o || a || r, 'outer' !== f.snapMode && (n = g >= Math.abs(c - v), o = g >= Math.abs(u - b), a = g >= Math.abs(l - m), r = g >= Math.abs(h - _), n && (i.position.top = s._convertPositionTo('relative', {
          top: c,
          left: 0
        }).top), o && (i.position.top = s._convertPositionTo('relative', {
          top: u - s.helperProportions.height,
          left: 0
        }).top), a && (i.position.left = s._convertPositionTo('relative', {
          top: 0,
          left: l
        }).left), r && (i.position.left = s._convertPositionTo('relative', {
          top: 0,
          left: h - s.helperProportions.width
        }).left)), !s.snapElements[d].snapping && (n || o || a || r || p) && s.options.snap.snap && s.options.snap.snap.call(s.element, e, t.extend(s._uiHash(), {
          snapItem: s.snapElements[d].item
        })), s.snapElements[d].snapping = n || o || a || r || p);
      }
    }
  }), t.ui.plugin.add('draggable', 'stack', {
    start: function start(e, i, s) {
      var n,
          o = s.options,
          a = t.makeArray(t(o.stack)).sort(function (e, i) {
        return (parseInt(t(e).css('zIndex'), 10) || 0) - (parseInt(t(i).css('zIndex'), 10) || 0);
      });
      a.length && (n = parseInt(t(a[0]).css('zIndex'), 10) || 0, t(a).each(function (e) {
        t(this).css('zIndex', n + e);
      }), this.css('zIndex', n + a.length));
    }
  }), t.ui.plugin.add('draggable', 'zIndex', {
    start: function start(e, i, s) {
      var n = t(i.helper),
          o = s.options;
      n.css('zIndex') && (o._zIndex = n.css('zIndex')), n.css('zIndex', o.zIndex);
    },
    stop: function stop(e, i, s) {
      var n = s.options;
      n._zIndex && t(i.helper).css('zIndex', n._zIndex);
    }
  }), t.ui.draggable, t.widget('ui.resizable', t.ui.mouse, {
    version: '1.12.1',
    widgetEventPrefix: 'resize',
    options: {
      alsoResize: !1,
      animate: !1,
      animateDuration: 'slow',
      animateEasing: 'swing',
      aspectRatio: !1,
      autoHide: !1,
      classes: {
        'ui-resizable-se': 'ui-icon ui-icon-gripsmall-diagonal-se'
      },
      containment: !1,
      ghost: !1,
      grid: !1,
      handles: 'e,s,se',
      helper: !1,
      maxHeight: null,
      maxWidth: null,
      minHeight: 10,
      minWidth: 10,
      zIndex: 90,
      resize: null,
      start: null,
      stop: null
    },
    _num: function _num(t) {
      return parseFloat(t) || 0;
    },
    _isNumber: function _isNumber(t) {
      return !isNaN(parseFloat(t));
    },
    _hasScroll: function _hasScroll(e, i) {
      if ('hidden' === t(e).css('overflow')) return !1;
      var s = i && 'left' === i ? 'scrollLeft' : 'scrollTop',
          n = !1;
      return e[s] > 0 ? !0 : (e[s] = 1, n = e[s] > 0, e[s] = 0, n);
    },
    _create: function _create() {
      var e,
          i = this.options,
          s = this;
      this._addClass('ui-resizable'), t.extend(this, {
        _aspectRatio: !!i.aspectRatio,
        aspectRatio: i.aspectRatio,
        originalElement: this.element,
        _proportionallyResizeElements: [],
        _helper: i.helper || i.ghost || i.animate ? i.helper || 'ui-resizable-helper' : null
      }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
        position: this.element.css('position'),
        width: this.element.outerWidth(),
        height: this.element.outerHeight(),
        top: this.element.css('top'),
        left: this.element.css('left')
      })), this.element = this.element.parent().data('ui-resizable', this.element.resizable('instance')), this.elementIsWrapper = !0, e = {
        marginTop: this.originalElement.css('marginTop'),
        marginRight: this.originalElement.css('marginRight'),
        marginBottom: this.originalElement.css('marginBottom'),
        marginLeft: this.originalElement.css('marginLeft')
      }, this.element.css(e), this.originalElement.css('margin', 0), this.originalResizeStyle = this.originalElement.css('resize'), this.originalElement.css('resize', 'none'), this._proportionallyResizeElements.push(this.originalElement.css({
        position: 'static',
        zoom: 1,
        display: 'block'
      })), this.originalElement.css(e), this._proportionallyResize()), this._setupHandles(), i.autoHide && t(this.element).on('mouseenter', function () {
        i.disabled || (s._removeClass('ui-resizable-autohide'), s._handles.show());
      }).on('mouseleave', function () {
        i.disabled || s.resizing || (s._addClass('ui-resizable-autohide'), s._handles.hide());
      }), this._mouseInit();
    },
    _destroy: function _destroy() {
      this._mouseDestroy();

      var e,
          i = function i(e) {
        t(e).removeData('resizable').removeData('ui-resizable').off('.resizable').find('.ui-resizable-handle').remove();
      };

      return this.elementIsWrapper && (i(this.element), e = this.element, this.originalElement.css({
        position: e.css('position'),
        width: e.outerWidth(),
        height: e.outerHeight(),
        top: e.css('top'),
        left: e.css('left')
      }).insertAfter(e), e.remove()), this.originalElement.css('resize', this.originalResizeStyle), i(this.originalElement), this;
    },
    _setOption: function _setOption(t, e) {
      switch (this._super(t, e), t) {
        case 'handles':
          this._removeHandles(), this._setupHandles();
          break;

        default:
      }
    },
    _setupHandles: function _setupHandles() {
      var e,
          i,
          s,
          n,
          o,
          a = this.options,
          r = this;
      if (this.handles = a.handles || (t('.ui-resizable-handle', this.element).length ? {
        n: '.ui-resizable-n',
        e: '.ui-resizable-e',
        s: '.ui-resizable-s',
        w: '.ui-resizable-w',
        se: '.ui-resizable-se',
        sw: '.ui-resizable-sw',
        ne: '.ui-resizable-ne',
        nw: '.ui-resizable-nw'
      } : 'e,s,se'), this._handles = t(), this.handles.constructor === String) for ('all' === this.handles && (this.handles = 'n,e,s,w,se,sw,ne,nw'), s = this.handles.split(','), this.handles = {}, i = 0; s.length > i; i++) {
        e = t.trim(s[i]), n = 'ui-resizable-' + e, o = t('<div>'), this._addClass(o, 'ui-resizable-handle ' + n), o.css({
          zIndex: a.zIndex
        }), this.handles[e] = '.ui-resizable-' + e, this.element.append(o);
      }
      this._renderAxis = function (e) {
        var i, s, n, o;
        e = e || this.element;

        for (i in this.handles) {
          this.handles[i].constructor === String ? this.handles[i] = this.element.children(this.handles[i]).first().show() : (this.handles[i].jquery || this.handles[i].nodeType) && (this.handles[i] = t(this.handles[i]), this._on(this.handles[i], {
            mousedown: r._mouseDown
          })), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (s = t(this.handles[i], this.element), o = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth(), n = ['padding', /ne|nw|n/.test(i) ? 'Top' : /se|sw|s/.test(i) ? 'Bottom' : /^e$/.test(i) ? 'Right' : 'Left'].join(''), e.css(n, o), this._proportionallyResize()), this._handles = this._handles.add(this.handles[i]);
        }
      }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find('.ui-resizable-handle')), this._handles.disableSelection(), this._handles.on('mouseover', function () {
        r.resizing || (this.className && (o = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), r.axis = o && o[1] ? o[1] : 'se');
      }), a.autoHide && (this._handles.hide(), this._addClass('ui-resizable-autohide'));
    },
    _removeHandles: function _removeHandles() {
      this._handles.remove();
    },
    _mouseCapture: function _mouseCapture(e) {
      var i,
          s,
          n = !1;

      for (i in this.handles) {
        s = t(this.handles[i])[0], (s === e.target || t.contains(s, e.target)) && (n = !0);
      }

      return !this.options.disabled && n;
    },
    _mouseStart: function _mouseStart(e) {
      var i,
          s,
          n,
          o = this.options,
          a = this.element;
      return this.resizing = !0, this._renderProxy(), i = this._num(this.helper.css('left')), s = this._num(this.helper.css('top')), o.containment && (i += t(o.containment).scrollLeft() || 0, s += t(o.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {
        left: i,
        top: s
      }, this.size = this._helper ? {
        width: this.helper.width(),
        height: this.helper.height()
      } : {
        width: a.width(),
        height: a.height()
      }, this.originalSize = this._helper ? {
        width: a.outerWidth(),
        height: a.outerHeight()
      } : {
        width: a.width(),
        height: a.height()
      }, this.sizeDiff = {
        width: a.outerWidth() - a.width(),
        height: a.outerHeight() - a.height()
      }, this.originalPosition = {
        left: i,
        top: s
      }, this.originalMousePosition = {
        left: e.pageX,
        top: e.pageY
      }, this.aspectRatio = 'number' == typeof o.aspectRatio ? o.aspectRatio : this.originalSize.width / this.originalSize.height || 1, n = t('.ui-resizable-' + this.axis).css('cursor'), t('body').css('cursor', 'auto' === n ? this.axis + '-resize' : n), this._addClass('ui-resizable-resizing'), this._propagate('start', e), !0;
    },
    _mouseDrag: function _mouseDrag(e) {
      var i,
          s,
          n = this.originalMousePosition,
          o = this.axis,
          a = e.pageX - n.left || 0,
          r = e.pageY - n.top || 0,
          l = this._change[o];
      return this._updatePrevProperties(), l ? (i = l.apply(this, [e, a, r]), this._updateVirtualBoundaries(e.shiftKey), (this._aspectRatio || e.shiftKey) && (i = this._updateRatio(i, e)), i = this._respectSize(i, e), this._updateCache(i), this._propagate('resize', e), s = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), t.isEmptyObject(s) || (this._updatePrevProperties(), this._trigger('resize', e, this.ui()), this._applyChanges()), !1) : !1;
    },
    _mouseStop: function _mouseStop(e) {
      this.resizing = !1;
      var i,
          s,
          n,
          o,
          a,
          r,
          l,
          h = this.options,
          c = this;
      return this._helper && (i = this._proportionallyResizeElements, s = i.length && /textarea/i.test(i[0].nodeName), n = s && this._hasScroll(i[0], 'left') ? 0 : c.sizeDiff.height, o = s ? 0 : c.sizeDiff.width, a = {
        width: c.helper.width() - o,
        height: c.helper.height() - n
      }, r = parseFloat(c.element.css('left')) + (c.position.left - c.originalPosition.left) || null, l = parseFloat(c.element.css('top')) + (c.position.top - c.originalPosition.top) || null, h.animate || this.element.css(t.extend(a, {
        top: l,
        left: r
      })), c.helper.height(c.size.height), c.helper.width(c.size.width), this._helper && !h.animate && this._proportionallyResize()), t('body').css('cursor', 'auto'), this._removeClass('ui-resizable-resizing'), this._propagate('stop', e), this._helper && this.helper.remove(), !1;
    },
    _updatePrevProperties: function _updatePrevProperties() {
      this.prevPosition = {
        top: this.position.top,
        left: this.position.left
      }, this.prevSize = {
        width: this.size.width,
        height: this.size.height
      };
    },
    _applyChanges: function _applyChanges() {
      var t = {};
      return this.position.top !== this.prevPosition.top && (t.top = this.position.top + 'px'), this.position.left !== this.prevPosition.left && (t.left = this.position.left + 'px'), this.size.width !== this.prevSize.width && (t.width = this.size.width + 'px'), this.size.height !== this.prevSize.height && (t.height = this.size.height + 'px'), this.helper.css(t), t;
    },
    _updateVirtualBoundaries: function _updateVirtualBoundaries(t) {
      var e,
          i,
          s,
          n,
          o,
          a = this.options;
      o = {
        minWidth: this._isNumber(a.minWidth) ? a.minWidth : 0,
        maxWidth: this._isNumber(a.maxWidth) ? a.maxWidth : 1 / 0,
        minHeight: this._isNumber(a.minHeight) ? a.minHeight : 0,
        maxHeight: this._isNumber(a.maxHeight) ? a.maxHeight : 1 / 0
      }, (this._aspectRatio || t) && (e = o.minHeight * this.aspectRatio, s = o.minWidth / this.aspectRatio, i = o.maxHeight * this.aspectRatio, n = o.maxWidth / this.aspectRatio, e > o.minWidth && (o.minWidth = e), s > o.minHeight && (o.minHeight = s), o.maxWidth > i && (o.maxWidth = i), o.maxHeight > n && (o.maxHeight = n)), this._vBoundaries = o;
    },
    _updateCache: function _updateCache(t) {
      this.offset = this.helper.offset(), this._isNumber(t.left) && (this.position.left = t.left), this._isNumber(t.top) && (this.position.top = t.top), this._isNumber(t.height) && (this.size.height = t.height), this._isNumber(t.width) && (this.size.width = t.width);
    },
    _updateRatio: function _updateRatio(t) {
      var e = this.position,
          i = this.size,
          s = this.axis;
      return this._isNumber(t.height) ? t.width = t.height * this.aspectRatio : this._isNumber(t.width) && (t.height = t.width / this.aspectRatio), 'sw' === s && (t.left = e.left + (i.width - t.width), t.top = null), 'nw' === s && (t.top = e.top + (i.height - t.height), t.left = e.left + (i.width - t.width)), t;
    },
    _respectSize: function _respectSize(t) {
      var e = this._vBoundaries,
          i = this.axis,
          s = this._isNumber(t.width) && e.maxWidth && e.maxWidth < t.width,
          n = this._isNumber(t.height) && e.maxHeight && e.maxHeight < t.height,
          o = this._isNumber(t.width) && e.minWidth && e.minWidth > t.width,
          a = this._isNumber(t.height) && e.minHeight && e.minHeight > t.height,
          r = this.originalPosition.left + this.originalSize.width,
          l = this.originalPosition.top + this.originalSize.height,
          h = /sw|nw|w/.test(i),
          c = /nw|ne|n/.test(i);
      return o && (t.width = e.minWidth), a && (t.height = e.minHeight), s && (t.width = e.maxWidth), n && (t.height = e.maxHeight), o && h && (t.left = r - e.minWidth), s && h && (t.left = r - e.maxWidth), a && c && (t.top = l - e.minHeight), n && c && (t.top = l - e.maxHeight), t.width || t.height || t.left || !t.top ? t.width || t.height || t.top || !t.left || (t.left = null) : t.top = null, t;
    },
    _getPaddingPlusBorderDimensions: function _getPaddingPlusBorderDimensions(t) {
      for (var e = 0, i = [], s = [t.css('borderTopWidth'), t.css('borderRightWidth'), t.css('borderBottomWidth'), t.css('borderLeftWidth')], n = [t.css('paddingTop'), t.css('paddingRight'), t.css('paddingBottom'), t.css('paddingLeft')]; 4 > e; e++) {
        i[e] = parseFloat(s[e]) || 0, i[e] += parseFloat(n[e]) || 0;
      }

      return {
        height: i[0] + i[2],
        width: i[1] + i[3]
      };
    },
    _proportionallyResize: function _proportionallyResize() {
      if (this._proportionallyResizeElements.length) for (var t, e = 0, i = this.helper || this.element; this._proportionallyResizeElements.length > e; e++) {
        t = this._proportionallyResizeElements[e], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(t)), t.css({
          height: i.height() - this.outerDimensions.height || 0,
          width: i.width() - this.outerDimensions.width || 0
        });
      }
    },
    _renderProxy: function _renderProxy() {
      var e = this.element,
          i = this.options;
      this.elementOffset = e.offset(), this._helper ? (this.helper = this.helper || t("<div style='overflow:hidden;'></div>"), this._addClass(this.helper, this._helper), this.helper.css({
        width: this.element.outerWidth(),
        height: this.element.outerHeight(),
        position: 'absolute',
        left: this.elementOffset.left + 'px',
        top: this.elementOffset.top + 'px',
        zIndex: ++i.zIndex
      }), this.helper.appendTo('body').disableSelection()) : this.helper = this.element;
    },
    _change: {
      e: function e(t, _e) {
        return {
          width: this.originalSize.width + _e
        };
      },
      w: function w(t, e) {
        var i = this.originalSize,
            s = this.originalPosition;
        return {
          left: s.left + e,
          width: i.width - e
        };
      },
      n: function n(t, e, i) {
        var s = this.originalSize,
            n = this.originalPosition;
        return {
          top: n.top + i,
          height: s.height - i
        };
      },
      s: function s(t, e, i) {
        return {
          height: this.originalSize.height + i
        };
      },
      se: function se(e, i, s) {
        return t.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, i, s]));
      },
      sw: function sw(e, i, s) {
        return t.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, i, s]));
      },
      ne: function ne(e, i, s) {
        return t.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, i, s]));
      },
      nw: function nw(e, i, s) {
        return t.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, i, s]));
      }
    },
    _propagate: function _propagate(e, i) {
      t.ui.plugin.call(this, e, [i, this.ui()]), 'resize' !== e && this._trigger(e, i, this.ui());
    },
    plugins: {},
    ui: function ui() {
      return {
        originalElement: this.originalElement,
        element: this.element,
        helper: this.helper,
        position: this.position,
        size: this.size,
        originalSize: this.originalSize,
        originalPosition: this.originalPosition
      };
    }
  }), t.ui.plugin.add('resizable', 'animate', {
    stop: function stop(e) {
      var i = t(this).resizable('instance'),
          s = i.options,
          n = i._proportionallyResizeElements,
          o = n.length && /textarea/i.test(n[0].nodeName),
          a = o && i._hasScroll(n[0], 'left') ? 0 : i.sizeDiff.height,
          r = o ? 0 : i.sizeDiff.width,
          l = {
        width: i.size.width - r,
        height: i.size.height - a
      },
          h = parseFloat(i.element.css('left')) + (i.position.left - i.originalPosition.left) || null,
          c = parseFloat(i.element.css('top')) + (i.position.top - i.originalPosition.top) || null;
      i.element.animate(t.extend(l, c && h ? {
        top: c,
        left: h
      } : {}), {
        duration: s.animateDuration,
        easing: s.animateEasing,
        step: function step() {
          var s = {
            width: parseFloat(i.element.css('width')),
            height: parseFloat(i.element.css('height')),
            top: parseFloat(i.element.css('top')),
            left: parseFloat(i.element.css('left'))
          };
          n && n.length && t(n[0]).css({
            width: s.width,
            height: s.height
          }), i._updateCache(s), i._propagate('resize', e);
        }
      });
    }
  }), t.ui.plugin.add('resizable', 'containment', {
    start: function start() {
      var e,
          i,
          s,
          n,
          o,
          a,
          r,
          l = t(this).resizable('instance'),
          h = l.options,
          c = l.element,
          u = h.containment,
          d = u instanceof t ? u.get(0) : /parent/.test(u) ? c.parent().get(0) : u;
      d && (l.containerElement = t(d), /document/.test(u) || u === document ? (l.containerOffset = {
        left: 0,
        top: 0
      }, l.containerPosition = {
        left: 0,
        top: 0
      }, l.parentData = {
        element: t(document),
        left: 0,
        top: 0,
        width: t(document).width(),
        height: t(document).height() || document.body.parentNode.scrollHeight
      }) : (e = t(d), i = [], t(['Top', 'Right', 'Left', 'Bottom']).each(function (t, s) {
        i[t] = l._num(e.css('padding' + s));
      }), l.containerOffset = e.offset(), l.containerPosition = e.position(), l.containerSize = {
        height: e.innerHeight() - i[3],
        width: e.innerWidth() - i[1]
      }, s = l.containerOffset, n = l.containerSize.height, o = l.containerSize.width, a = l._hasScroll(d, 'left') ? d.scrollWidth : o, r = l._hasScroll(d) ? d.scrollHeight : n, l.parentData = {
        element: d,
        left: s.left,
        top: s.top,
        width: a,
        height: r
      }));
    },
    resize: function resize(e) {
      var i,
          s,
          n,
          o,
          a = t(this).resizable('instance'),
          r = a.options,
          l = a.containerOffset,
          h = a.position,
          c = a._aspectRatio || e.shiftKey,
          u = {
        top: 0,
        left: 0
      },
          d = a.containerElement,
          p = !0;
      d[0] !== document && /static/.test(d.css('position')) && (u = l), h.left < (a._helper ? l.left : 0) && (a.size.width = a.size.width + (a._helper ? a.position.left - l.left : a.position.left - u.left), c && (a.size.height = a.size.width / a.aspectRatio, p = !1), a.position.left = r.helper ? l.left : 0), h.top < (a._helper ? l.top : 0) && (a.size.height = a.size.height + (a._helper ? a.position.top - l.top : a.position.top), c && (a.size.width = a.size.height * a.aspectRatio, p = !1), a.position.top = a._helper ? l.top : 0), n = a.containerElement.get(0) === a.element.parent().get(0), o = /relative|absolute/.test(a.containerElement.css('position')), n && o ? (a.offset.left = a.parentData.left + a.position.left, a.offset.top = a.parentData.top + a.position.top) : (a.offset.left = a.element.offset().left, a.offset.top = a.element.offset().top), i = Math.abs(a.sizeDiff.width + (a._helper ? a.offset.left - u.left : a.offset.left - l.left)), s = Math.abs(a.sizeDiff.height + (a._helper ? a.offset.top - u.top : a.offset.top - l.top)), i + a.size.width >= a.parentData.width && (a.size.width = a.parentData.width - i, c && (a.size.height = a.size.width / a.aspectRatio, p = !1)), s + a.size.height >= a.parentData.height && (a.size.height = a.parentData.height - s, c && (a.size.width = a.size.height * a.aspectRatio, p = !1)), p || (a.position.left = a.prevPosition.left, a.position.top = a.prevPosition.top, a.size.width = a.prevSize.width, a.size.height = a.prevSize.height);
    },
    stop: function stop() {
      var e = t(this).resizable('instance'),
          i = e.options,
          s = e.containerOffset,
          n = e.containerPosition,
          o = e.containerElement,
          a = t(e.helper),
          r = a.offset(),
          l = a.outerWidth() - e.sizeDiff.width,
          h = a.outerHeight() - e.sizeDiff.height;
      e._helper && !i.animate && /relative/.test(o.css('position')) && t(this).css({
        left: r.left - n.left - s.left,
        width: l,
        height: h
      }), e._helper && !i.animate && /static/.test(o.css('position')) && t(this).css({
        left: r.left - n.left - s.left,
        width: l,
        height: h
      });
    }
  }), t.ui.plugin.add('resizable', 'alsoResize', {
    start: function start() {
      var e = t(this).resizable('instance'),
          i = e.options;
      t(i.alsoResize).each(function () {
        var e = t(this);
        e.data('ui-resizable-alsoresize', {
          width: parseFloat(e.width()),
          height: parseFloat(e.height()),
          left: parseFloat(e.css('left')),
          top: parseFloat(e.css('top'))
        });
      });
    },
    resize: function resize(e, i) {
      var s = t(this).resizable('instance'),
          n = s.options,
          o = s.originalSize,
          a = s.originalPosition,
          r = {
        height: s.size.height - o.height || 0,
        width: s.size.width - o.width || 0,
        top: s.position.top - a.top || 0,
        left: s.position.left - a.left || 0
      };
      t(n.alsoResize).each(function () {
        var e = t(this),
            s = t(this).data('ui-resizable-alsoresize'),
            n = {},
            o = e.parents(i.originalElement[0]).length ? ['width', 'height'] : ['width', 'height', 'top', 'left'];
        t.each(o, function (t, e) {
          var i = (s[e] || 0) + (r[e] || 0);
          i && i >= 0 && (n[e] = i || null);
        }), e.css(n);
      });
    },
    stop: function stop() {
      t(this).removeData('ui-resizable-alsoresize');
    }
  }), t.ui.plugin.add('resizable', 'ghost', {
    start: function start() {
      var e = t(this).resizable('instance'),
          i = e.size;
      e.ghost = e.originalElement.clone(), e.ghost.css({
        opacity: 0.25,
        display: 'block',
        position: 'relative',
        height: i.height,
        width: i.width,
        margin: 0,
        left: 0,
        top: 0
      }), e._addClass(e.ghost, 'ui-resizable-ghost'), t.uiBackCompat !== !1 && 'string' == typeof e.options.ghost && e.ghost.addClass(this.options.ghost), e.ghost.appendTo(e.helper);
    },
    resize: function resize() {
      var e = t(this).resizable('instance');
      e.ghost && e.ghost.css({
        position: 'relative',
        height: e.size.height,
        width: e.size.width
      });
    },
    stop: function stop() {
      var e = t(this).resizable('instance');
      e.ghost && e.helper && e.helper.get(0).removeChild(e.ghost.get(0));
    }
  }), t.ui.plugin.add('resizable', 'grid', {
    resize: function resize() {
      var e,
          i = t(this).resizable('instance'),
          s = i.options,
          n = i.size,
          o = i.originalSize,
          a = i.originalPosition,
          r = i.axis,
          l = 'number' == typeof s.grid ? [s.grid, s.grid] : s.grid,
          h = l[0] || 1,
          c = l[1] || 1,
          u = Math.round((n.width - o.width) / h) * h,
          d = Math.round((n.height - o.height) / c) * c,
          p = o.width + u,
          f = o.height + d,
          g = s.maxWidth && p > s.maxWidth,
          m = s.maxHeight && f > s.maxHeight,
          _ = s.minWidth && s.minWidth > p,
          v = s.minHeight && s.minHeight > f;

      s.grid = l, _ && (p += h), v && (f += c), g && (p -= h), m && (f -= c), /^(se|s|e)$/.test(r) ? (i.size.width = p, i.size.height = f) : /^(ne)$/.test(r) ? (i.size.width = p, i.size.height = f, i.position.top = a.top - d) : /^(sw)$/.test(r) ? (i.size.width = p, i.size.height = f, i.position.left = a.left - u) : ((0 >= f - c || 0 >= p - h) && (e = i._getPaddingPlusBorderDimensions(this)), f - c > 0 ? (i.size.height = f, i.position.top = a.top - d) : (f = c - e.height, i.size.height = f, i.position.top = a.top + o.height - f), p - h > 0 ? (i.size.width = p, i.position.left = a.left - u) : (p = h - e.width, i.size.width = p, i.position.left = a.left + o.width - p));
    }
  }), t.ui.resizable, t.widget('ui.sortable', t.ui.mouse, {
    version: '1.12.1',
    widgetEventPrefix: 'sort',
    ready: !1,
    options: {
      appendTo: 'parent',
      axis: !1,
      connectWith: !1,
      containment: !1,
      cursor: 'auto',
      cursorAt: !1,
      dropOnEmpty: !0,
      forcePlaceholderSize: !1,
      forceHelperSize: !1,
      grid: !1,
      handle: !1,
      helper: 'original',
      items: '> *',
      opacity: !1,
      placeholder: !1,
      revert: !1,
      scroll: !0,
      scrollSensitivity: 20,
      scrollSpeed: 20,
      scope: 'default',
      tolerance: 'intersect',
      zIndex: 1e3,
      activate: null,
      beforeStop: null,
      change: null,
      deactivate: null,
      out: null,
      over: null,
      receive: null,
      remove: null,
      sort: null,
      start: null,
      stop: null,
      update: null
    },
    _isOverAxis: function _isOverAxis(t, e, i) {
      return t >= e && e + i > t;
    },
    _isFloating: function _isFloating(t) {
      return /left|right/.test(t.css('float')) || /inline|table-cell/.test(t.css('display'));
    },
    _create: function _create() {
      this.containerCache = {}, this._addClass('ui-sortable'), this.refresh(), this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = !0;
    },
    _setOption: function _setOption(t, e) {
      this._super(t, e), 'handle' === t && this._setHandleClassName();
    },
    _setHandleClassName: function _setHandleClassName() {
      var e = this;
      this._removeClass(this.element.find('.ui-sortable-handle'), 'ui-sortable-handle'), t.each(this.items, function () {
        e._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, 'ui-sortable-handle');
      });
    },
    _destroy: function _destroy() {
      this._mouseDestroy();

      for (var t = this.items.length - 1; t >= 0; t--) {
        this.items[t].item.removeData(this.widgetName + '-item');
      }

      return this;
    },
    _mouseCapture: function _mouseCapture(e, i) {
      var s = null,
          n = !1,
          o = this;
      return this.reverting ? !1 : this.options.disabled || 'static' === this.options.type ? !1 : (this._refreshItems(e), t(e.target).parents().each(function () {
        return t.data(this, o.widgetName + '-item') === o ? (s = t(this), !1) : void 0;
      }), t.data(e.target, o.widgetName + '-item') === o && (s = t(e.target)), s ? !this.options.handle || i || (t(this.options.handle, s).find('*').addBack().each(function () {
        this === e.target && (n = !0);
      }), n) ? (this.currentItem = s, this._removeCurrentsFromItems(), !0) : !1 : !1);
    },
    _mouseStart: function _mouseStart(e, i, s) {
      var n,
          o,
          a = this.options;
      if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(e), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {
        top: this.offset.top - this.margins.top,
        left: this.offset.left - this.margins.left
      }, t.extend(this.offset, {
        click: {
          left: e.pageX - this.offset.left,
          top: e.pageY - this.offset.top
        },
        parent: this._getParentOffset(),
        relative: this._getRelativeOffset()
      }), this.helper.css('position', 'absolute'), this.cssPosition = this.helper.css('position'), this.originalPosition = this._generatePosition(e), this.originalPageX = e.pageX, this.originalPageY = e.pageY, a.cursorAt && this._adjustOffsetFromHelper(a.cursorAt), this.domPosition = {
        prev: this.currentItem.prev()[0],
        parent: this.currentItem.parent()[0]
      }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), a.containment && this._setContainment(), a.cursor && 'auto' !== a.cursor && (o = this.document.find('body'), this.storedCursor = o.css('cursor'), o.css('cursor', a.cursor), this.storedStylesheet = t('<style>*{ cursor: ' + a.cursor + ' !important; }</style>').appendTo(o)), a.opacity && (this.helper.css('opacity') && (this._storedOpacity = this.helper.css('opacity')), this.helper.css('opacity', a.opacity)), a.zIndex && (this.helper.css('zIndex') && (this._storedZIndex = this.helper.css('zIndex')), this.helper.css('zIndex', a.zIndex)), this.scrollParent[0] !== this.document[0] && 'HTML' !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger('start', e, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !s) for (n = this.containers.length - 1; n >= 0; n--) {
        this.containers[n]._trigger('activate', e, this._uiHash(this));
      }
      return t.ui.ddmanager && (t.ui.ddmanager.current = this), t.ui.ddmanager && !a.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e), this.dragging = !0, this._addClass(this.helper, 'ui-sortable-helper'), this._mouseDrag(e), !0;
    },
    _mouseDrag: function _mouseDrag(e) {
      var i,
          s,
          n,
          o,
          a = this.options,
          r = !1;

      for (this.position = this._generatePosition(e), this.positionAbs = this._convertPositionTo('absolute'), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== this.document[0] && 'HTML' !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - e.pageY < a.scrollSensitivity ? this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop + a.scrollSpeed : e.pageY - this.overflowOffset.top < a.scrollSensitivity && (this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop - a.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - e.pageX < a.scrollSensitivity ? this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft + a.scrollSpeed : e.pageX - this.overflowOffset.left < a.scrollSensitivity && (this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft - a.scrollSpeed)) : (e.pageY - this.document.scrollTop() < a.scrollSensitivity ? r = this.document.scrollTop(this.document.scrollTop() - a.scrollSpeed) : this.window.height() - (e.pageY - this.document.scrollTop()) < a.scrollSensitivity && (r = this.document.scrollTop(this.document.scrollTop() + a.scrollSpeed)), e.pageX - this.document.scrollLeft() < a.scrollSensitivity ? r = this.document.scrollLeft(this.document.scrollLeft() - a.scrollSpeed) : this.window.width() - (e.pageX - this.document.scrollLeft()) < a.scrollSensitivity && (r = this.document.scrollLeft(this.document.scrollLeft() + a.scrollSpeed))), r !== !1 && t.ui.ddmanager && !a.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e)), this.positionAbs = this._convertPositionTo('absolute'), this.options.axis && 'y' === this.options.axis || (this.helper[0].style.left = this.position.left + 'px'), this.options.axis && 'x' === this.options.axis || (this.helper[0].style.top = this.position.top + 'px'), i = this.items.length - 1; i >= 0; i--) {
        if (s = this.items[i], n = s.item[0], o = this._intersectsWithPointer(s), o && s.instance === this.currentContainer && n !== this.currentItem[0] && this.placeholder[1 === o ? 'next' : 'prev']()[0] !== n && !t.contains(this.placeholder[0], n) && ('semi-dynamic' === this.options.type ? !t.contains(this.element[0], n) : !0)) {
          if (this.direction = 1 === o ? 'down' : 'up', 'pointer' !== this.options.tolerance && !this._intersectsWithSides(s)) break;
          this._rearrange(e, s), this._trigger('change', e, this._uiHash());
          break;
        }
      }

      return this._contactContainers(e), t.ui.ddmanager && t.ui.ddmanager.drag(this, e), this._trigger('sort', e, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1;
    },
    _mouseStop: function _mouseStop(e, i) {
      if (e) {
        if (t.ui.ddmanager && !this.options.dropBehaviour && t.ui.ddmanager.drop(this, e), this.options.revert) {
          var s = this,
              n = this.placeholder.offset(),
              o = this.options.axis,
              a = {};
          o && 'x' !== o || (a.left = n.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), o && 'y' !== o || (a.top = n.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, t(this.helper).animate(a, parseInt(this.options.revert, 10) || 500, function () {
            s._clear(e);
          });
        } else this._clear(e, i);

        return !1;
      }
    },
    cancel: function cancel() {
      if (this.dragging) {
        this._mouseUp(new t.Event('mouseup', {
          target: null
        })), 'original' === this.options.helper ? (this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, 'ui-sortable-helper')) : this.currentItem.show();

        for (var e = this.containers.length - 1; e >= 0; e--) {
          this.containers[e]._trigger('deactivate', null, this._uiHash(this)), this.containers[e].containerCache.over && (this.containers[e]._trigger('out', null, this._uiHash(this)), this.containers[e].containerCache.over = 0);
        }
      }

      return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), 'original' !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), t.extend(this, {
        helper: null,
        dragging: !1,
        reverting: !1,
        _noFinalSort: null
      }), this.domPosition.prev ? t(this.domPosition.prev).after(this.currentItem) : t(this.domPosition.parent).prepend(this.currentItem)), this;
    },
    serialize: function serialize(e) {
      var i = this._getItemsAsjQuery(e && e.connected),
          s = [];

      return e = e || {}, t(i).each(function () {
        var i = (t(e.item || this).attr(e.attribute || 'id') || '').match(e.expression || /(.+)[\-=_](.+)/);
        i && s.push((e.key || i[1] + '[]') + '=' + (e.key && e.expression ? i[1] : i[2]));
      }), !s.length && e.key && s.push(e.key + '='), s.join('&');
    },
    toArray: function toArray(e) {
      var i = this._getItemsAsjQuery(e && e.connected),
          s = [];

      return e = e || {}, i.each(function () {
        s.push(t(e.item || this).attr(e.attribute || 'id') || '');
      }), s;
    },
    _intersectsWith: function _intersectsWith(t) {
      var e = this.positionAbs.left,
          i = e + this.helperProportions.width,
          s = this.positionAbs.top,
          n = s + this.helperProportions.height,
          o = t.left,
          a = o + t.width,
          r = t.top,
          l = r + t.height,
          h = this.offset.click.top,
          c = this.offset.click.left,
          u = 'x' === this.options.axis || s + h > r && l > s + h,
          d = 'y' === this.options.axis || e + c > o && a > e + c,
          p = u && d;
      return 'pointer' === this.options.tolerance || this.options.forcePointerForContainers || 'pointer' !== this.options.tolerance && this.helperProportions[this.floating ? 'width' : 'height'] > t[this.floating ? 'width' : 'height'] ? p : e + this.helperProportions.width / 2 > o && a > i - this.helperProportions.width / 2 && s + this.helperProportions.height / 2 > r && l > n - this.helperProportions.height / 2;
    },
    _intersectsWithPointer: function _intersectsWithPointer(t) {
      var e,
          i,
          s = 'x' === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top, t.height),
          n = 'y' === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left, t.width),
          o = s && n;

      return o ? (e = this._getDragVerticalDirection(), i = this._getDragHorizontalDirection(), this.floating ? 'right' === i || 'down' === e ? 2 : 1 : e && ('down' === e ? 2 : 1)) : !1;
    },
    _intersectsWithSides: function _intersectsWithSides(t) {
      var e = this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top + t.height / 2, t.height),
          i = this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left + t.width / 2, t.width),
          s = this._getDragVerticalDirection(),
          n = this._getDragHorizontalDirection();

      return this.floating && n ? 'right' === n && i || 'left' === n && !i : s && ('down' === s && e || 'up' === s && !e);
    },
    _getDragVerticalDirection: function _getDragVerticalDirection() {
      var t = this.positionAbs.top - this.lastPositionAbs.top;
      return 0 !== t && (t > 0 ? 'down' : 'up');
    },
    _getDragHorizontalDirection: function _getDragHorizontalDirection() {
      var t = this.positionAbs.left - this.lastPositionAbs.left;
      return 0 !== t && (t > 0 ? 'right' : 'left');
    },
    refresh: function refresh(t) {
      return this._refreshItems(t), this._setHandleClassName(), this.refreshPositions(), this;
    },
    _connectWith: function _connectWith() {
      var t = this.options;
      return t.connectWith.constructor === String ? [t.connectWith] : t.connectWith;
    },
    _getItemsAsjQuery: function _getItemsAsjQuery(e) {
      function i() {
        r.push(this);
      }

      var s,
          n,
          o,
          a,
          r = [],
          l = [],
          h = this._connectWith();

      if (h && e) for (s = h.length - 1; s >= 0; s--) {
        for (o = t(h[s], this.document[0]), n = o.length - 1; n >= 0; n--) {
          a = t.data(o[n], this.widgetFullName), a && a !== this && !a.options.disabled && l.push([t.isFunction(a.options.items) ? a.options.items.call(a.element) : t(a.options.items, a.element).not('.ui-sortable-helper').not('.ui-sortable-placeholder'), a]);
        }
      }

      for (l.push([t.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
        options: this.options,
        item: this.currentItem
      }) : t(this.options.items, this.element).not('.ui-sortable-helper').not('.ui-sortable-placeholder'), this]), s = l.length - 1; s >= 0; s--) {
        l[s][0].each(i);
      }

      return t(r);
    },
    _removeCurrentsFromItems: function _removeCurrentsFromItems() {
      var e = this.currentItem.find(':data(' + this.widgetName + '-item)');
      this.items = t.grep(this.items, function (t) {
        for (var i = 0; e.length > i; i++) {
          if (e[i] === t.item[0]) return !1;
        }

        return !0;
      });
    },
    _refreshItems: function _refreshItems(e) {
      this.items = [], this.containers = [this];

      var i,
          s,
          n,
          o,
          a,
          r,
          l,
          h,
          c = this.items,
          u = [[t.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, {
        item: this.currentItem
      }) : t(this.options.items, this.element), this]],
          d = this._connectWith();

      if (d && this.ready) for (i = d.length - 1; i >= 0; i--) {
        for (n = t(d[i], this.document[0]), s = n.length - 1; s >= 0; s--) {
          o = t.data(n[s], this.widgetFullName), o && o !== this && !o.options.disabled && (u.push([t.isFunction(o.options.items) ? o.options.items.call(o.element[0], e, {
            item: this.currentItem
          }) : t(o.options.items, o.element), o]), this.containers.push(o));
        }
      }

      for (i = u.length - 1; i >= 0; i--) {
        for (a = u[i][1], r = u[i][0], s = 0, h = r.length; h > s; s++) {
          l = t(r[s]), l.data(this.widgetName + '-item', a), c.push({
            item: l,
            instance: a,
            width: 0,
            height: 0,
            left: 0,
            top: 0
          });
        }
      }
    },
    refreshPositions: function refreshPositions(e) {
      this.floating = this.items.length ? 'x' === this.options.axis || this._isFloating(this.items[0].item) : !1, this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
      var i, s, n, o;

      for (i = this.items.length - 1; i >= 0; i--) {
        s = this.items[i], s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0] || (n = this.options.toleranceElement ? t(this.options.toleranceElement, s.item) : s.item, e || (s.width = n.outerWidth(), s.height = n.outerHeight()), o = n.offset(), s.left = o.left, s.top = o.top);
      }

      if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);else for (i = this.containers.length - 1; i >= 0; i--) {
        o = this.containers[i].element.offset(), this.containers[i].containerCache.left = o.left, this.containers[i].containerCache.top = o.top, this.containers[i].containerCache.width = this.containers[i].element.outerWidth(), this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
      }
      return this;
    },
    _createPlaceholder: function _createPlaceholder(e) {
      e = e || this;
      var i,
          s = e.options;
      s.placeholder && s.placeholder.constructor !== String || (i = s.placeholder, s.placeholder = {
        element: function element() {
          var s = e.currentItem[0].nodeName.toLowerCase(),
              n = t('<' + s + '>', e.document[0]);
          return e._addClass(n, 'ui-sortable-placeholder', i || e.currentItem[0].className)._removeClass(n, 'ui-sortable-helper'), 'tbody' === s ? e._createTrPlaceholder(e.currentItem.find('tr').eq(0), t('<tr>', e.document[0]).appendTo(n)) : 'tr' === s ? e._createTrPlaceholder(e.currentItem, n) : 'img' === s && n.attr('src', e.currentItem.attr('src')), i || n.css('visibility', 'hidden'), n;
        },
        update: function update(t, n) {
          (!i || s.forcePlaceholderSize) && (n.height() || n.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css('paddingTop') || 0, 10) - parseInt(e.currentItem.css('paddingBottom') || 0, 10)), n.width() || n.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css('paddingLeft') || 0, 10) - parseInt(e.currentItem.css('paddingRight') || 0, 10)));
        }
      }), e.placeholder = t(s.placeholder.element.call(e.element, e.currentItem)), e.currentItem.after(e.placeholder), s.placeholder.update(e, e.placeholder);
    },
    _createTrPlaceholder: function _createTrPlaceholder(e, i) {
      var s = this;
      e.children().each(function () {
        t('<td>&#160;</td>', s.document[0]).attr('colspan', t(this).attr('colspan') || 1).appendTo(i);
      });
    },
    _contactContainers: function _contactContainers(e) {
      var i,
          s,
          n,
          o,
          a,
          r,
          l,
          h,
          c,
          u,
          d = null,
          p = null;

      for (i = this.containers.length - 1; i >= 0; i--) {
        if (!t.contains(this.currentItem[0], this.containers[i].element[0])) if (this._intersectsWith(this.containers[i].containerCache)) {
          if (d && t.contains(this.containers[i].element[0], d.element[0])) continue;
          d = this.containers[i], p = i;
        } else this.containers[i].containerCache.over && (this.containers[i]._trigger('out', e, this._uiHash(this)), this.containers[i].containerCache.over = 0);
      }

      if (d) if (1 === this.containers.length) this.containers[p].containerCache.over || (this.containers[p]._trigger('over', e, this._uiHash(this)), this.containers[p].containerCache.over = 1);else {
        for (n = 1e4, o = null, c = d.floating || this._isFloating(this.currentItem), a = c ? 'left' : 'top', r = c ? 'width' : 'height', u = c ? 'pageX' : 'pageY', s = this.items.length - 1; s >= 0; s--) {
          t.contains(this.containers[p].element[0], this.items[s].item[0]) && this.items[s].item[0] !== this.currentItem[0] && (l = this.items[s].item.offset()[a], h = !1, e[u] - l > this.items[s][r] / 2 && (h = !0), n > Math.abs(e[u] - l) && (n = Math.abs(e[u] - l), o = this.items[s], this.direction = h ? 'up' : 'down'));
        }

        if (!o && !this.options.dropOnEmpty) return;
        if (this.currentContainer === this.containers[p]) return this.currentContainer.containerCache.over || (this.containers[p]._trigger('over', e, this._uiHash()), this.currentContainer.containerCache.over = 1), void 0;
        o ? this._rearrange(e, o, null, !0) : this._rearrange(e, null, this.containers[p].element, !0), this._trigger('change', e, this._uiHash()), this.containers[p]._trigger('change', e, this._uiHash(this)), this.currentContainer = this.containers[p], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[p]._trigger('over', e, this._uiHash(this)), this.containers[p].containerCache.over = 1;
      }
    },
    _createHelper: function _createHelper(e) {
      var i = this.options,
          s = t.isFunction(i.helper) ? t(i.helper.apply(this.element[0], [e, this.currentItem])) : 'clone' === i.helper ? this.currentItem.clone() : this.currentItem;
      return s.parents('body').length || t('parent' !== i.appendTo ? i.appendTo : this.currentItem[0].parentNode)[0].appendChild(s[0]), s[0] === this.currentItem[0] && (this._storedCSS = {
        width: this.currentItem[0].style.width,
        height: this.currentItem[0].style.height,
        position: this.currentItem.css('position'),
        top: this.currentItem.css('top'),
        left: this.currentItem.css('left')
      }), (!s[0].style.width || i.forceHelperSize) && s.width(this.currentItem.width()), (!s[0].style.height || i.forceHelperSize) && s.height(this.currentItem.height()), s;
    },
    _adjustOffsetFromHelper: function _adjustOffsetFromHelper(e) {
      'string' == typeof e && (e = e.split(' ')), t.isArray(e) && (e = {
        left: +e[0],
        top: +e[1] || 0
      }), 'left' in e && (this.offset.click.left = e.left + this.margins.left), 'right' in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left), 'top' in e && (this.offset.click.top = e.top + this.margins.top), 'bottom' in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top);
    },
    _getParentOffset: function _getParentOffset() {
      this.offsetParent = this.helper.offsetParent();
      var e = this.offsetParent.offset();
      return 'absolute' === this.cssPosition && this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(), e.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && 'html' === this.offsetParent[0].tagName.toLowerCase() && t.ui.ie) && (e = {
        top: 0,
        left: 0
      }), {
        top: e.top + (parseInt(this.offsetParent.css('borderTopWidth'), 10) || 0),
        left: e.left + (parseInt(this.offsetParent.css('borderLeftWidth'), 10) || 0)
      };
    },
    _getRelativeOffset: function _getRelativeOffset() {
      if ('relative' === this.cssPosition) {
        var t = this.currentItem.position();
        return {
          top: t.top - (parseInt(this.helper.css('top'), 10) || 0) + this.scrollParent.scrollTop(),
          left: t.left - (parseInt(this.helper.css('left'), 10) || 0) + this.scrollParent.scrollLeft()
        };
      }

      return {
        top: 0,
        left: 0
      };
    },
    _cacheMargins: function _cacheMargins() {
      this.margins = {
        left: parseInt(this.currentItem.css('marginLeft'), 10) || 0,
        top: parseInt(this.currentItem.css('marginTop'), 10) || 0
      };
    },
    _cacheHelperProportions: function _cacheHelperProportions() {
      this.helperProportions = {
        width: this.helper.outerWidth(),
        height: this.helper.outerHeight()
      };
    },
    _setContainment: function _setContainment() {
      var e,
          i,
          s,
          n = this.options;
      'parent' === n.containment && (n.containment = this.helper[0].parentNode), ('document' === n.containment || 'window' === n.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, 'document' === n.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ('document' === n.containment ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(n.containment) || (e = t(n.containment)[0], i = t(n.containment).offset(), s = 'hidden' !== t(e).css('overflow'), this.containment = [i.left + (parseInt(t(e).css('borderLeftWidth'), 10) || 0) + (parseInt(t(e).css('paddingLeft'), 10) || 0) - this.margins.left, i.top + (parseInt(t(e).css('borderTopWidth'), 10) || 0) + (parseInt(t(e).css('paddingTop'), 10) || 0) - this.margins.top, i.left + (s ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(t(e).css('borderLeftWidth'), 10) || 0) - (parseInt(t(e).css('paddingRight'), 10) || 0) - this.helperProportions.width - this.margins.left, i.top + (s ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(t(e).css('borderTopWidth'), 10) || 0) - (parseInt(t(e).css('paddingBottom'), 10) || 0) - this.helperProportions.height - this.margins.top]);
    },
    _convertPositionTo: function _convertPositionTo(e, i) {
      i || (i = this.position);
      var s = 'absolute' === e ? 1 : -1,
          n = 'absolute' !== this.cssPosition || this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
          o = /(html|body)/i.test(n[0].tagName);
      return {
        top: i.top + this.offset.relative.top * s + this.offset.parent.top * s - ('fixed' === this.cssPosition ? -this.scrollParent.scrollTop() : o ? 0 : n.scrollTop()) * s,
        left: i.left + this.offset.relative.left * s + this.offset.parent.left * s - ('fixed' === this.cssPosition ? -this.scrollParent.scrollLeft() : o ? 0 : n.scrollLeft()) * s
      };
    },
    _generatePosition: function _generatePosition(e) {
      var i,
          s,
          n = this.options,
          o = e.pageX,
          a = e.pageY,
          r = 'absolute' !== this.cssPosition || this.scrollParent[0] !== this.document[0] && t.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
          l = /(html|body)/i.test(r[0].tagName);
      return 'relative' !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (e.pageX - this.offset.click.left < this.containment[0] && (o = this.containment[0] + this.offset.click.left), e.pageY - this.offset.click.top < this.containment[1] && (a = this.containment[1] + this.offset.click.top), e.pageX - this.offset.click.left > this.containment[2] && (o = this.containment[2] + this.offset.click.left), e.pageY - this.offset.click.top > this.containment[3] && (a = this.containment[3] + this.offset.click.top)), n.grid && (i = this.originalPageY + Math.round((a - this.originalPageY) / n.grid[1]) * n.grid[1], a = this.containment ? i - this.offset.click.top >= this.containment[1] && i - this.offset.click.top <= this.containment[3] ? i : i - this.offset.click.top >= this.containment[1] ? i - n.grid[1] : i + n.grid[1] : i, s = this.originalPageX + Math.round((o - this.originalPageX) / n.grid[0]) * n.grid[0], o = this.containment ? s - this.offset.click.left >= this.containment[0] && s - this.offset.click.left <= this.containment[2] ? s : s - this.offset.click.left >= this.containment[0] ? s - n.grid[0] : s + n.grid[0] : s)), {
        top: a - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ('fixed' === this.cssPosition ? -this.scrollParent.scrollTop() : l ? 0 : r.scrollTop()),
        left: o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ('fixed' === this.cssPosition ? -this.scrollParent.scrollLeft() : l ? 0 : r.scrollLeft())
      };
    },
    _rearrange: function _rearrange(t, e, i, s) {
      i ? i[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], 'down' === this.direction ? e.item[0] : e.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
      var n = this.counter;

      this._delay(function () {
        n === this.counter && this.refreshPositions(!s);
      });
    },
    _clear: function _clear(t, e) {
      function i(t, e, i) {
        return function (s) {
          i._trigger(t, s, e._uiHash(e));
        };
      }

      this.reverting = !1;
      var s,
          n = [];

      if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
        for (s in this._storedCSS) {
          ('auto' === this._storedCSS[s] || 'static' === this._storedCSS[s]) && (this._storedCSS[s] = '');
        }

        this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, 'ui-sortable-helper');
      } else this.currentItem.show();

      for (this.fromOutside && !e && n.push(function (t) {
        this._trigger('receive', t, this._uiHash(this.fromOutside));
      }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not('.ui-sortable-helper')[0] && this.domPosition.parent === this.currentItem.parent()[0] || e || n.push(function (t) {
        this._trigger('update', t, this._uiHash());
      }), this !== this.currentContainer && (e || (n.push(function (t) {
        this._trigger('remove', t, this._uiHash());
      }), n.push(function (t) {
        return function (e) {
          t._trigger('receive', e, this._uiHash(this));
        };
      }.call(this, this.currentContainer)), n.push(function (t) {
        return function (e) {
          t._trigger('update', e, this._uiHash(this));
        };
      }.call(this, this.currentContainer)))), s = this.containers.length - 1; s >= 0; s--) {
        e || n.push(i('deactivate', this, this.containers[s])), this.containers[s].containerCache.over && (n.push(i('out', this, this.containers[s])), this.containers[s].containerCache.over = 0);
      }

      if (this.storedCursor && (this.document.find('body').css('cursor', this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css('opacity', this._storedOpacity), this._storedZIndex && this.helper.css('zIndex', 'auto' === this._storedZIndex ? '' : this._storedZIndex), this.dragging = !1, e || this._trigger('beforeStop', t, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null), !e) {
        for (s = 0; n.length > s; s++) {
          n[s].call(this, t);
        }

        this._trigger('stop', t, this._uiHash());
      }

      return this.fromOutside = !1, !this.cancelHelperRemoval;
    },
    _trigger: function _trigger() {
      t.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel();
    },
    _uiHash: function _uiHash(e) {
      var i = e || this;
      return {
        helper: i.helper,
        placeholder: i.placeholder || t([]),
        position: i.position,
        originalPosition: i.originalPosition,
        offset: i.positionAbs,
        item: i.currentItem,
        sender: e ? e.element : null
      };
    }
  });
  var o = /ui-corner-([a-z]){2,6}/g;
  t.widget('ui.controlgroup', {
    version: '1.12.1',
    defaultElement: '<div>',
    options: {
      direction: 'horizontal',
      disabled: null,
      onlyVisible: !0,
      items: {
        button: 'input[type=button], input[type=submit], input[type=reset], button, a',
        controlgroupLabel: '.ui-controlgroup-label',
        checkboxradio: "input[type='checkbox'], input[type='radio']",
        selectmenu: 'select',
        spinner: '.ui-spinner-input'
      }
    },
    _create: function _create() {
      this._enhance();
    },
    _enhance: function _enhance() {
      this.element.attr('role', 'toolbar'), this.refresh();
    },
    _destroy: function _destroy() {
      this._callChildMethod('destroy'), this.childWidgets.removeData('ui-controlgroup-data'), this.element.removeAttr('role'), this.options.items.controlgroupLabel && this.element.find(this.options.items.controlgroupLabel).find('.ui-controlgroup-label-contents').contents().unwrap();
    },
    _initWidgets: function _initWidgets() {
      var e = this,
          i = [];
      t.each(this.options.items, function (s, n) {
        var o,
            a = {};
        return n ? 'controlgroupLabel' === s ? (o = e.element.find(n), o.each(function () {
          var e = t(this);
          e.children('.ui-controlgroup-label-contents').length || e.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>");
        }), e._addClass(o, null, 'ui-widget ui-widget-content ui-state-default'), i = i.concat(o.get()), void 0) : (t.fn[s] && (a = e['_' + s + 'Options'] ? e['_' + s + 'Options']('middle') : {
          classes: {}
        }, e.element.find(n).each(function () {
          var n = t(this),
              o = n[s]('instance'),
              r = t.widget.extend({}, a);

          if ('button' !== s || !n.parent('.ui-spinner').length) {
            o || (o = n[s]()[s]('instance')), o && (r.classes = e._resolveClassesValues(r.classes, o)), n[s](r);
            var l = n[s]('widget');
            t.data(l[0], 'ui-controlgroup-data', o ? o : n[s]('instance')), i.push(l[0]);
          }
        })), void 0) : void 0;
      }), this.childWidgets = t(t.unique(i)), this._addClass(this.childWidgets, 'ui-controlgroup-item');
    },
    _callChildMethod: function _callChildMethod(e) {
      this.childWidgets.each(function () {
        var i = t(this),
            s = i.data('ui-controlgroup-data');
        s && s[e] && s[e]();
      });
    },
    _updateCornerClass: function _updateCornerClass(t, e) {
      var i = 'ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all',
          s = this._buildSimpleOptions(e, 'label').classes.label;

      this._removeClass(t, null, i), this._addClass(t, null, s);
    },
    _buildSimpleOptions: function _buildSimpleOptions(t, e) {
      var i = 'vertical' === this.options.direction,
          s = {
        classes: {}
      };
      return s.classes[e] = {
        middle: '',
        first: 'ui-corner-' + (i ? 'top' : 'left'),
        last: 'ui-corner-' + (i ? 'bottom' : 'right'),
        only: 'ui-corner-all'
      }[t], s;
    },
    _spinnerOptions: function _spinnerOptions(t) {
      var e = this._buildSimpleOptions(t, 'ui-spinner');

      return e.classes['ui-spinner-up'] = '', e.classes['ui-spinner-down'] = '', e;
    },
    _buttonOptions: function _buttonOptions(t) {
      return this._buildSimpleOptions(t, 'ui-button');
    },
    _checkboxradioOptions: function _checkboxradioOptions(t) {
      return this._buildSimpleOptions(t, 'ui-checkboxradio-label');
    },
    _selectmenuOptions: function _selectmenuOptions(t) {
      var e = 'vertical' === this.options.direction;
      return {
        width: e ? 'auto' : !1,
        classes: {
          middle: {
            'ui-selectmenu-button-open': '',
            'ui-selectmenu-button-closed': ''
          },
          first: {
            'ui-selectmenu-button-open': 'ui-corner-' + (e ? 'top' : 'tl'),
            'ui-selectmenu-button-closed': 'ui-corner-' + (e ? 'top' : 'left')
          },
          last: {
            'ui-selectmenu-button-open': e ? '' : 'ui-corner-tr',
            'ui-selectmenu-button-closed': 'ui-corner-' + (e ? 'bottom' : 'right')
          },
          only: {
            'ui-selectmenu-button-open': 'ui-corner-top',
            'ui-selectmenu-button-closed': 'ui-corner-all'
          }
        }[t]
      };
    },
    _resolveClassesValues: function _resolveClassesValues(e, i) {
      var s = {};
      return t.each(e, function (n) {
        var a = i.options.classes[n] || '';
        a = t.trim(a.replace(o, '')), s[n] = (a + ' ' + e[n]).replace(/\s+/g, ' ');
      }), s;
    },
    _setOption: function _setOption(t, e) {
      return 'direction' === t && this._removeClass('ui-controlgroup-' + this.options.direction), this._super(t, e), 'disabled' === t ? (this._callChildMethod(e ? 'disable' : 'enable'), void 0) : (this.refresh(), void 0);
    },
    refresh: function refresh() {
      var e,
          i = this;
      this._addClass('ui-controlgroup ui-controlgroup-' + this.options.direction), 'horizontal' === this.options.direction && this._addClass(null, 'ui-helper-clearfix'), this._initWidgets(), e = this.childWidgets, this.options.onlyVisible && (e = e.filter(':visible')), e.length && (t.each(['first', 'last'], function (t, s) {
        var n = e[s]().data('ui-controlgroup-data');

        if (n && i['_' + n.widgetName + 'Options']) {
          var o = i['_' + n.widgetName + 'Options'](1 === e.length ? 'only' : s);
          o.classes = i._resolveClassesValues(o.classes, n), n.element[n.widgetName](o);
        } else i._updateCornerClass(e[s](), s);
      }), this._callChildMethod('refresh'));
    }
  }), t.widget('ui.checkboxradio', [t.ui.formResetMixin, {
    version: '1.12.1',
    options: {
      disabled: null,
      label: null,
      icon: !0,
      classes: {
        'ui-checkboxradio-label': 'ui-corner-all',
        'ui-checkboxradio-icon': 'ui-corner-all'
      }
    },
    _getCreateOptions: function _getCreateOptions() {
      var e,
          i,
          s = this,
          n = this._super() || {};
      return this._readType(), i = this.element.labels(), this.label = t(i[i.length - 1]), this.label.length || t.error('No label found for checkboxradio widget'), this.originalLabel = '', this.label.contents().not(this.element[0]).each(function () {
        s.originalLabel += 3 === this.nodeType ? t(this).text() : this.outerHTML;
      }), this.originalLabel && (n.label = this.originalLabel), e = this.element[0].disabled, null != e && (n.disabled = e), n;
    },
    _create: function _create() {
      var t = this.element[0].checked;
      this._bindFormResetHandler(), null == this.options.disabled && (this.options.disabled = this.element[0].disabled), this._setOption('disabled', this.options.disabled), this._addClass('ui-checkboxradio', 'ui-helper-hidden-accessible'), this._addClass(this.label, 'ui-checkboxradio-label', 'ui-button ui-widget'), 'radio' === this.type && this._addClass(this.label, 'ui-checkboxradio-radio-label'), this.options.label && this.options.label !== this.originalLabel ? this._updateLabel() : this.originalLabel && (this.options.label = this.originalLabel), this._enhance(), t && (this._addClass(this.label, 'ui-checkboxradio-checked', 'ui-state-active'), this.icon && this._addClass(this.icon, null, 'ui-state-hover')), this._on({
        change: '_toggleClasses',
        focus: function focus() {
          this._addClass(this.label, null, 'ui-state-focus ui-visual-focus');
        },
        blur: function blur() {
          this._removeClass(this.label, null, 'ui-state-focus ui-visual-focus');
        }
      });
    },
    _readType: function _readType() {
      var e = this.element[0].nodeName.toLowerCase();
      this.type = this.element[0].type, 'input' === e && /radio|checkbox/.test(this.type) || t.error("Can't create checkboxradio on element.nodeName=" + e + ' and element.type=' + this.type);
    },
    _enhance: function _enhance() {
      this._updateIcon(this.element[0].checked);
    },
    widget: function widget() {
      return this.label;
    },
    _getRadioGroup: function _getRadioGroup() {
      var e,
          i = this.element[0].name,
          s = "input[name='" + t.ui.escapeSelector(i) + "']";
      return i ? (e = this.form.length ? t(this.form[0].elements).filter(s) : t(s).filter(function () {
        return 0 === t(this).form().length;
      }), e.not(this.element)) : t([]);
    },
    _toggleClasses: function _toggleClasses() {
      var e = this.element[0].checked;
      this._toggleClass(this.label, 'ui-checkboxradio-checked', 'ui-state-active', e), this.options.icon && 'checkbox' === this.type && this._toggleClass(this.icon, null, 'ui-icon-check ui-state-checked', e)._toggleClass(this.icon, null, 'ui-icon-blank', !e), 'radio' === this.type && this._getRadioGroup().each(function () {
        var e = t(this).checkboxradio('instance');
        e && e._removeClass(e.label, 'ui-checkboxradio-checked', 'ui-state-active');
      });
    },
    _destroy: function _destroy() {
      this._unbindFormResetHandler(), this.icon && (this.icon.remove(), this.iconSpace.remove());
    },
    _setOption: function _setOption(t, e) {
      return 'label' !== t || e ? (this._super(t, e), 'disabled' === t ? (this._toggleClass(this.label, null, 'ui-state-disabled', e), this.element[0].disabled = e, void 0) : (this.refresh(), void 0)) : void 0;
    },
    _updateIcon: function _updateIcon(e) {
      var i = 'ui-icon ui-icon-background ';
      this.options.icon ? (this.icon || (this.icon = t('<span>'), this.iconSpace = t('<span> </span>'), this._addClass(this.iconSpace, 'ui-checkboxradio-icon-space')), 'checkbox' === this.type ? (i += e ? 'ui-icon-check ui-state-checked' : 'ui-icon-blank', this._removeClass(this.icon, null, e ? 'ui-icon-blank' : 'ui-icon-check')) : i += 'ui-icon-blank', this._addClass(this.icon, 'ui-checkboxradio-icon', i), e || this._removeClass(this.icon, null, 'ui-icon-check ui-state-checked'), this.icon.prependTo(this.label).after(this.iconSpace)) : void 0 !== this.icon && (this.icon.remove(), this.iconSpace.remove(), delete this.icon);
    },
    _updateLabel: function _updateLabel() {
      var t = this.label.contents().not(this.element[0]);
      this.icon && (t = t.not(this.icon[0])), this.iconSpace && (t = t.not(this.iconSpace[0])), t.remove(), this.label.append(this.options.label);
    },
    refresh: function refresh() {
      var t = this.element[0].checked,
          e = this.element[0].disabled;
      this._updateIcon(t), this._toggleClass(this.label, 'ui-checkboxradio-checked', 'ui-state-active', t), null !== this.options.label && this._updateLabel(), e !== this.options.disabled && this._setOptions({
        disabled: e
      });
    }
  }]), t.ui.checkboxradio, t.widget('ui.button', {
    version: '1.12.1',
    defaultElement: '<button>',
    options: {
      classes: {
        'ui-button': 'ui-corner-all'
      },
      disabled: null,
      icon: null,
      iconPosition: 'beginning',
      label: null,
      showLabel: !0
    },
    _getCreateOptions: function _getCreateOptions() {
      var t,
          e = this._super() || {};
      return this.isInput = this.element.is('input'), t = this.element[0].disabled, null != t && (e.disabled = t), this.originalLabel = this.isInput ? this.element.val() : this.element.html(), this.originalLabel && (e.label = this.originalLabel), e;
    },
    _create: function _create() {
      !this.option.showLabel & !this.options.icon && (this.options.showLabel = !0), null == this.options.disabled && (this.options.disabled = this.element[0].disabled || !1), this.hasTitle = !!this.element.attr('title'), this.options.label && this.options.label !== this.originalLabel && (this.isInput ? this.element.val(this.options.label) : this.element.html(this.options.label)), this._addClass('ui-button', 'ui-widget'), this._setOption('disabled', this.options.disabled), this._enhance(), this.element.is('a') && this._on({
        keyup: function keyup(e) {
          e.keyCode === t.ui.keyCode.SPACE && (e.preventDefault(), this.element[0].click ? this.element[0].click() : this.element.trigger('click'));
        }
      });
    },
    _enhance: function _enhance() {
      this.element.is('button') || this.element.attr('role', 'button'), this.options.icon && (this._updateIcon('icon', this.options.icon), this._updateTooltip());
    },
    _updateTooltip: function _updateTooltip() {
      this.title = this.element.attr('title'), this.options.showLabel || this.title || this.element.attr('title', this.options.label);
    },
    _updateIcon: function _updateIcon(e, i) {
      var s = 'iconPosition' !== e,
          n = s ? this.options.iconPosition : i,
          o = 'top' === n || 'bottom' === n;
      this.icon ? s && this._removeClass(this.icon, null, this.options.icon) : (this.icon = t('<span>'), this._addClass(this.icon, 'ui-button-icon', 'ui-icon'), this.options.showLabel || this._addClass('ui-button-icon-only')), s && this._addClass(this.icon, null, i), this._attachIcon(n), o ? (this._addClass(this.icon, null, 'ui-widget-icon-block'), this.iconSpace && this.iconSpace.remove()) : (this.iconSpace || (this.iconSpace = t('<span> </span>'), this._addClass(this.iconSpace, 'ui-button-icon-space')), this._removeClass(this.icon, null, 'ui-wiget-icon-block'), this._attachIconSpace(n));
    },
    _destroy: function _destroy() {
      this.element.removeAttr('role'), this.icon && this.icon.remove(), this.iconSpace && this.iconSpace.remove(), this.hasTitle || this.element.removeAttr('title');
    },
    _attachIconSpace: function _attachIconSpace(t) {
      this.icon[/^(?:end|bottom)/.test(t) ? 'before' : 'after'](this.iconSpace);
    },
    _attachIcon: function _attachIcon(t) {
      this.element[/^(?:end|bottom)/.test(t) ? 'append' : 'prepend'](this.icon);
    },
    _setOptions: function _setOptions(t) {
      var e = void 0 === t.showLabel ? this.options.showLabel : t.showLabel,
          i = void 0 === t.icon ? this.options.icon : t.icon;
      e || i || (t.showLabel = !0), this._super(t);
    },
    _setOption: function _setOption(t, e) {
      'icon' === t && (e ? this._updateIcon(t, e) : this.icon && (this.icon.remove(), this.iconSpace && this.iconSpace.remove())), 'iconPosition' === t && this._updateIcon(t, e), 'showLabel' === t && (this._toggleClass('ui-button-icon-only', null, !e), this._updateTooltip()), 'label' === t && (this.isInput ? this.element.val(e) : (this.element.html(e), this.icon && (this._attachIcon(this.options.iconPosition), this._attachIconSpace(this.options.iconPosition)))), this._super(t, e), 'disabled' === t && (this._toggleClass(null, 'ui-state-disabled', e), this.element[0].disabled = e, e && this.element.blur());
    },
    refresh: function refresh() {
      var t = this.element.is('input, button') ? this.element[0].disabled : this.element.hasClass('ui-button-disabled');
      t !== this.options.disabled && this._setOptions({
        disabled: t
      }), this._updateTooltip();
    }
  }), t.uiBackCompat !== !1 && (t.widget('ui.button', t.ui.button, {
    options: {
      text: !0,
      icons: {
        primary: null,
        secondary: null
      }
    },
    _create: function _create() {
      this.options.showLabel && !this.options.text && (this.options.showLabel = this.options.text), !this.options.showLabel && this.options.text && (this.options.text = this.options.showLabel), this.options.icon || !this.options.icons.primary && !this.options.icons.secondary ? this.options.icon && (this.options.icons.primary = this.options.icon) : this.options.icons.primary ? this.options.icon = this.options.icons.primary : (this.options.icon = this.options.icons.secondary, this.options.iconPosition = 'end'), this._super();
    },
    _setOption: function _setOption(t, e) {
      return 'text' === t ? (this._super('showLabel', e), void 0) : ('showLabel' === t && (this.options.text = e), 'icon' === t && (this.options.icons.primary = e), 'icons' === t && (e.primary ? (this._super('icon', e.primary), this._super('iconPosition', 'beginning')) : e.secondary && (this._super('icon', e.secondary), this._super('iconPosition', 'end'))), this._superApply(arguments), void 0);
    }
  }), t.fn.button = function (e) {
    return function () {
      return !this.length || this.length && 'INPUT' !== this[0].tagName || this.length && 'INPUT' === this[0].tagName && 'checkbox' !== this.attr('type') && 'radio' !== this.attr('type') ? e.apply(this, arguments) : (t.ui.checkboxradio || t.error('Checkboxradio widget missing'), 0 === arguments.length ? this.checkboxradio({
        icon: !1
      }) : this.checkboxradio.apply(this, arguments));
    };
  }(t.fn.button), t.fn.buttonset = function () {
    return t.ui.controlgroup || t.error('Controlgroup widget missing'), 'option' === arguments[0] && 'items' === arguments[1] && arguments[2] ? this.controlgroup.apply(this, [arguments[0], 'items.button', arguments[2]]) : 'option' === arguments[0] && 'items' === arguments[1] ? this.controlgroup.apply(this, [arguments[0], 'items.button']) : ('object' == _typeof(arguments[0]) && arguments[0].items && (arguments[0].items = {
      button: arguments[0].items
    }), this.controlgroup.apply(this, arguments));
  }), t.ui.button, t.widget('ui.dialog', {
    version: '1.12.1',
    options: {
      appendTo: 'body',
      autoOpen: !0,
      buttons: [],
      classes: {
        'ui-dialog': 'ui-corner-all',
        'ui-dialog-titlebar': 'ui-corner-all'
      },
      closeOnEscape: !0,
      closeText: 'Close',
      draggable: !0,
      hide: null,
      height: 'auto',
      maxHeight: null,
      maxWidth: null,
      minHeight: 150,
      minWidth: 150,
      modal: !1,
      position: {
        my: 'center',
        at: 'center',
        of: window,
        collision: 'fit',
        using: function using(e) {
          var i = t(this).css(e).offset().top;
          0 > i && t(this).css('top', e.top - i);
        }
      },
      resizable: !0,
      show: null,
      title: null,
      width: 300,
      beforeClose: null,
      close: null,
      drag: null,
      dragStart: null,
      dragStop: null,
      focus: null,
      open: null,
      resize: null,
      resizeStart: null,
      resizeStop: null
    },
    sizeRelatedOptions: {
      buttons: !0,
      height: !0,
      maxHeight: !0,
      maxWidth: !0,
      minHeight: !0,
      minWidth: !0,
      width: !0
    },
    resizableRelatedOptions: {
      maxHeight: !0,
      maxWidth: !0,
      minHeight: !0,
      minWidth: !0
    },
    _create: function _create() {
      this.originalCss = {
        display: this.element[0].style.display,
        width: this.element[0].style.width,
        minHeight: this.element[0].style.minHeight,
        maxHeight: this.element[0].style.maxHeight,
        height: this.element[0].style.height
      }, this.originalPosition = {
        parent: this.element.parent(),
        index: this.element.parent().children().index(this.element)
      }, this.originalTitle = this.element.attr('title'), null == this.options.title && null != this.originalTitle && (this.options.title = this.originalTitle), this.options.disabled && (this.options.disabled = !1), this._createWrapper(), this.element.show().removeAttr('title').appendTo(this.uiDialog), this._addClass('ui-dialog-content', 'ui-widget-content'), this._createTitlebar(), this._createButtonPane(), this.options.draggable && t.fn.draggable && this._makeDraggable(), this.options.resizable && t.fn.resizable && this._makeResizable(), this._isOpen = !1, this._trackFocus();
    },
    _init: function _init() {
      this.options.autoOpen && this.open();
    },
    _appendTo: function _appendTo() {
      var e = this.options.appendTo;
      return e && (e.jquery || e.nodeType) ? t(e) : this.document.find(e || 'body').eq(0);
    },
    _destroy: function _destroy() {
      var t,
          e = this.originalPosition;
      this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().css(this.originalCss).detach(), this.uiDialog.remove(), this.originalTitle && this.element.attr('title', this.originalTitle), t = e.parent.children().eq(e.index), t.length && t[0] !== this.element[0] ? t.before(this.element) : e.parent.append(this.element);
    },
    widget: function widget() {
      return this.uiDialog;
    },
    disable: t.noop,
    enable: t.noop,
    close: function close(e) {
      var i = this;
      this._isOpen && this._trigger('beforeClose', e) !== !1 && (this._isOpen = !1, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), this.opener.filter(':focusable').trigger('focus').length || t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])), this._hide(this.uiDialog, this.options.hide, function () {
        i._trigger('close', e);
      }));
    },
    isOpen: function isOpen() {
      return this._isOpen;
    },
    moveToTop: function moveToTop() {
      this._moveToTop();
    },
    _moveToTop: function _moveToTop(e, i) {
      var s = !1,
          n = this.uiDialog.siblings('.ui-front:visible').map(function () {
        return +t(this).css('z-index');
      }).get(),
          o = Math.max.apply(null, n);
      return o >= +this.uiDialog.css('z-index') && (this.uiDialog.css('z-index', o + 1), s = !0), s && !i && this._trigger('focus', e), s;
    },
    open: function open() {
      var e = this;
      return this._isOpen ? (this._moveToTop() && this._focusTabbable(), void 0) : (this._isOpen = !0, this.opener = t(t.ui.safeActiveElement(this.document[0])), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css('z-index', this.uiDialog.css('z-index') - 1), this._show(this.uiDialog, this.options.show, function () {
        e._focusTabbable(), e._trigger('focus');
      }), this._makeFocusTarget(), this._trigger('open'), void 0);
    },
    _focusTabbable: function _focusTabbable() {
      var t = this._focusedElement;
      t || (t = this.element.find('[autofocus]')), t.length || (t = this.element.find(':tabbable')), t.length || (t = this.uiDialogButtonPane.find(':tabbable')), t.length || (t = this.uiDialogTitlebarClose.filter(':tabbable')), t.length || (t = this.uiDialog), t.eq(0).trigger('focus');
    },
    _keepFocus: function _keepFocus(e) {
      function i() {
        var e = t.ui.safeActiveElement(this.document[0]),
            i = this.uiDialog[0] === e || t.contains(this.uiDialog[0], e);
        i || this._focusTabbable();
      }

      e.preventDefault(), i.call(this), this._delay(i);
    },
    _createWrapper: function _createWrapper() {
      this.uiDialog = t('<div>').hide().attr({
        tabIndex: -1,
        role: 'dialog'
      }).appendTo(this._appendTo()), this._addClass(this.uiDialog, 'ui-dialog', 'ui-widget ui-widget-content ui-front'), this._on(this.uiDialog, {
        keydown: function keydown(e) {
          if (this.options.closeOnEscape && !e.isDefaultPrevented() && e.keyCode && e.keyCode === t.ui.keyCode.ESCAPE) return e.preventDefault(), this.close(e), void 0;

          if (e.keyCode === t.ui.keyCode.TAB && !e.isDefaultPrevented()) {
            var i = this.uiDialog.find(':tabbable'),
                s = i.filter(':first'),
                n = i.filter(':last');
            e.target !== n[0] && e.target !== this.uiDialog[0] || e.shiftKey ? e.target !== s[0] && e.target !== this.uiDialog[0] || !e.shiftKey || (this._delay(function () {
              n.trigger('focus');
            }), e.preventDefault()) : (this._delay(function () {
              s.trigger('focus');
            }), e.preventDefault());
          }
        },
        mousedown: function mousedown(t) {
          this._moveToTop(t) && this._focusTabbable();
        }
      }), this.element.find('[aria-describedby]').length || this.uiDialog.attr({
        'aria-describedby': this.element.uniqueId().attr('id')
      });
    },
    _createTitlebar: function _createTitlebar() {
      var e;
      this.uiDialogTitlebar = t('<div>'), this._addClass(this.uiDialogTitlebar, 'ui-dialog-titlebar', 'ui-widget-header ui-helper-clearfix'), this._on(this.uiDialogTitlebar, {
        mousedown: function mousedown(e) {
          t(e.target).closest('.ui-dialog-titlebar-close') || this.uiDialog.trigger('focus');
        }
      }), this.uiDialogTitlebarClose = t("<button type='button'></button>").button({
        label: t('<a>').text(this.options.closeText).html(),
        icon: 'ui-icon-closethick',
        showLabel: !1
      }).appendTo(this.uiDialogTitlebar), this._addClass(this.uiDialogTitlebarClose, 'ui-dialog-titlebar-close'), this._on(this.uiDialogTitlebarClose, {
        click: function click(t) {
          t.preventDefault(), this.close(t);
        }
      }), e = t('<span>').uniqueId().prependTo(this.uiDialogTitlebar), this._addClass(e, 'ui-dialog-title'), this._title(e), this.uiDialogTitlebar.prependTo(this.uiDialog), this.uiDialog.attr({
        'aria-labelledby': e.attr('id')
      });
    },
    _title: function _title(t) {
      this.options.title ? t.text(this.options.title) : t.html('&#160;');
    },
    _createButtonPane: function _createButtonPane() {
      this.uiDialogButtonPane = t('<div>'), this._addClass(this.uiDialogButtonPane, 'ui-dialog-buttonpane', 'ui-widget-content ui-helper-clearfix'), this.uiButtonSet = t('<div>').appendTo(this.uiDialogButtonPane), this._addClass(this.uiButtonSet, 'ui-dialog-buttonset'), this._createButtons();
    },
    _createButtons: function _createButtons() {
      var e = this,
          i = this.options.buttons;
      return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), t.isEmptyObject(i) || t.isArray(i) && !i.length ? (this._removeClass(this.uiDialog, 'ui-dialog-buttons'), void 0) : (t.each(i, function (i, s) {
        var n, o;
        s = t.isFunction(s) ? {
          click: s,
          text: i
        } : s, s = t.extend({
          type: 'button'
        }, s), n = s.click, o = {
          icon: s.icon,
          iconPosition: s.iconPosition,
          showLabel: s.showLabel,
          icons: s.icons,
          text: s.text
        }, delete s.click, delete s.icon, delete s.iconPosition, delete s.showLabel, delete s.icons, 'boolean' == typeof s.text && delete s.text, t('<button></button>', s).button(o).appendTo(e.uiButtonSet).on('click', function () {
          n.apply(e.element[0], arguments);
        });
      }), this._addClass(this.uiDialog, 'ui-dialog-buttons'), this.uiDialogButtonPane.appendTo(this.uiDialog), void 0);
    },
    _makeDraggable: function _makeDraggable() {
      function e(t) {
        return {
          position: t.position,
          offset: t.offset
        };
      }

      var i = this,
          s = this.options;
      this.uiDialog.draggable({
        cancel: '.ui-dialog-content, .ui-dialog-titlebar-close',
        handle: '.ui-dialog-titlebar',
        containment: 'document',
        start: function start(s, n) {
          i._addClass(t(this), 'ui-dialog-dragging'), i._blockFrames(), i._trigger('dragStart', s, e(n));
        },
        drag: function drag(t, s) {
          i._trigger('drag', t, e(s));
        },
        stop: function stop(n, o) {
          var a = o.offset.left - i.document.scrollLeft(),
              r = o.offset.top - i.document.scrollTop();
          s.position = {
            my: 'left top',
            at: 'left' + (a >= 0 ? '+' : '') + a + ' ' + 'top' + (r >= 0 ? '+' : '') + r,
            of: i.window
          }, i._removeClass(t(this), 'ui-dialog-dragging'), i._unblockFrames(), i._trigger('dragStop', n, e(o));
        }
      });
    },
    _makeResizable: function _makeResizable() {
      function e(t) {
        return {
          originalPosition: t.originalPosition,
          originalSize: t.originalSize,
          position: t.position,
          size: t.size
        };
      }

      var i = this,
          s = this.options,
          n = s.resizable,
          o = this.uiDialog.css('position'),
          a = 'string' == typeof n ? n : 'n,e,s,w,se,sw,ne,nw';
      this.uiDialog.resizable({
        cancel: '.ui-dialog-content',
        containment: 'document',
        alsoResize: this.element,
        maxWidth: s.maxWidth,
        maxHeight: s.maxHeight,
        minWidth: s.minWidth,
        minHeight: this._minHeight(),
        handles: a,
        start: function start(s, n) {
          i._addClass(t(this), 'ui-dialog-resizing'), i._blockFrames(), i._trigger('resizeStart', s, e(n));
        },
        resize: function resize(t, s) {
          i._trigger('resize', t, e(s));
        },
        stop: function stop(n, o) {
          var a = i.uiDialog.offset(),
              r = a.left - i.document.scrollLeft(),
              l = a.top - i.document.scrollTop();
          s.height = i.uiDialog.height(), s.width = i.uiDialog.width(), s.position = {
            my: 'left top',
            at: 'left' + (r >= 0 ? '+' : '') + r + ' ' + 'top' + (l >= 0 ? '+' : '') + l,
            of: i.window
          }, i._removeClass(t(this), 'ui-dialog-resizing'), i._unblockFrames(), i._trigger('resizeStop', n, e(o));
        }
      }).css('position', o);
    },
    _trackFocus: function _trackFocus() {
      this._on(this.widget(), {
        focusin: function focusin(e) {
          this._makeFocusTarget(), this._focusedElement = t(e.target);
        }
      });
    },
    _makeFocusTarget: function _makeFocusTarget() {
      this._untrackInstance(), this._trackingInstances().unshift(this);
    },
    _untrackInstance: function _untrackInstance() {
      var e = this._trackingInstances(),
          i = t.inArray(this, e);

      -1 !== i && e.splice(i, 1);
    },
    _trackingInstances: function _trackingInstances() {
      var t = this.document.data('ui-dialog-instances');
      return t || (t = [], this.document.data('ui-dialog-instances', t)), t;
    },
    _minHeight: function _minHeight() {
      var t = this.options;
      return 'auto' === t.height ? t.minHeight : Math.min(t.minHeight, t.height);
    },
    _position: function _position() {
      var t = this.uiDialog.is(':visible');
      t || this.uiDialog.show(), this.uiDialog.position(this.options.position), t || this.uiDialog.hide();
    },
    _setOptions: function _setOptions(e) {
      var i = this,
          s = !1,
          n = {};
      t.each(e, function (t, e) {
        i._setOption(t, e), t in i.sizeRelatedOptions && (s = !0), t in i.resizableRelatedOptions && (n[t] = e);
      }), s && (this._size(), this._position()), this.uiDialog.is(':data(ui-resizable)') && this.uiDialog.resizable('option', n);
    },
    _setOption: function _setOption(e, i) {
      var s,
          n,
          o = this.uiDialog;
      'disabled' !== e && (this._super(e, i), 'appendTo' === e && this.uiDialog.appendTo(this._appendTo()), 'buttons' === e && this._createButtons(), 'closeText' === e && this.uiDialogTitlebarClose.button({
        label: t('<a>').text('' + this.options.closeText).html()
      }), 'draggable' === e && (s = o.is(':data(ui-draggable)'), s && !i && o.draggable('destroy'), !s && i && this._makeDraggable()), 'position' === e && this._position(), 'resizable' === e && (n = o.is(':data(ui-resizable)'), n && !i && o.resizable('destroy'), n && 'string' == typeof i && o.resizable('option', 'handles', i), n || i === !1 || this._makeResizable()), 'title' === e && this._title(this.uiDialogTitlebar.find('.ui-dialog-title')));
    },
    _size: function _size() {
      var t,
          e,
          i,
          s = this.options;
      this.element.show().css({
        width: 'auto',
        minHeight: 0,
        maxHeight: 'none',
        height: 0
      }), s.minWidth > s.width && (s.width = s.minWidth), t = this.uiDialog.css({
        height: 'auto',
        width: s.width
      }).outerHeight(), e = Math.max(0, s.minHeight - t), i = 'number' == typeof s.maxHeight ? Math.max(0, s.maxHeight - t) : 'none', 'auto' === s.height ? this.element.css({
        minHeight: e,
        maxHeight: i,
        height: 'auto'
      }) : this.element.height(Math.max(0, s.height - t)), this.uiDialog.is(':data(ui-resizable)') && this.uiDialog.resizable('option', 'minHeight', this._minHeight());
    },
    _blockFrames: function _blockFrames() {
      this.iframeBlocks = this.document.find('iframe').map(function () {
        var e = t(this);
        return t('<div>').css({
          position: 'absolute',
          width: e.outerWidth(),
          height: e.outerHeight()
        }).appendTo(e.parent()).offset(e.offset())[0];
      });
    },
    _unblockFrames: function _unblockFrames() {
      this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
    },
    _allowInteraction: function _allowInteraction(e) {
      return t(e.target).closest('.ui-dialog').length ? !0 : !!t(e.target).closest('.ui-datepicker').length;
    },
    _createOverlay: function _createOverlay() {
      if (this.options.modal) {
        var e = !0;
        this._delay(function () {
          e = !1;
        }), this.document.data('ui-dialog-overlays') || this._on(this.document, {
          focusin: function focusin(t) {
            e || this._allowInteraction(t) || (t.preventDefault(), this._trackingInstances()[0]._focusTabbable());
          }
        }), this.overlay = t('<div>').appendTo(this._appendTo()), this._addClass(this.overlay, null, 'ui-widget-overlay ui-front'), this._on(this.overlay, {
          mousedown: '_keepFocus'
        }), this.document.data('ui-dialog-overlays', (this.document.data('ui-dialog-overlays') || 0) + 1);
      }
    },
    _destroyOverlay: function _destroyOverlay() {
      if (this.options.modal && this.overlay) {
        var t = this.document.data('ui-dialog-overlays') - 1;
        t ? this.document.data('ui-dialog-overlays', t) : (this._off(this.document, 'focusin'), this.document.removeData('ui-dialog-overlays')), this.overlay.remove(), this.overlay = null;
      }
    }
  }), t.uiBackCompat !== !1 && t.widget('ui.dialog', t.ui.dialog, {
    options: {
      dialogClass: ''
    },
    _createWrapper: function _createWrapper() {
      this._super(), this.uiDialog.addClass(this.options.dialogClass);
    },
    _setOption: function _setOption(t, e) {
      'dialogClass' === t && this.uiDialog.removeClass(this.options.dialogClass).addClass(e), this._superApply(arguments);
    }
  }), t.ui.dialog;
});

/***/ }),

/***/ 33741:
/*!*****************************************************************!*\
  !*** ./public/bundles/pimui/lib/select2/select2-placeholder.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 49845);
/* provided dependency */ var _ = __webpack_require__(/*! underscore */ 13469);
(function ($, _) {
  /**
   * Extension of select2 to allow placeholder in the search input field
   * Original solution comes from
   * https://stackoverflow.com/questions/45819164/how-make-select2-placeholder-for-search-input
   *
   * @author    Pierre Allard <pierre.allard@akeneo.com>
   * @author    Tamara Robichet <tamara.noob@akeneo.com>
   * @copyright 2019 Akeneo SAS (http://www.akeneo.com)
   * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
   */
  'use strict';

  var Defaults = $.fn.select2.defaults;
  $.extend(Defaults, {
    searchInputPlaceholder: null
  });
  var createContainer = window.Select2['class']['single'].prototype.createContainer;

  window.Select2['class']['single'].prototype.createContainer = function () {
    var container = createContainer.apply(this, arguments);
    var placeholder = this.opts.searchInputPlaceholder;

    if (placeholder === null) {
      placeholder = _.__('pim_common.search');
    }

    container.find('.select2-input').attr('placeholder', placeholder);
    return container;
  };
})(jQuery, _);

/***/ }),

/***/ 53142:
/*!*****************************************************!*\
  !*** ./public/bundles/pimui/lib/select2/select2.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 49845);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*
Copyright 2012 Igor Vaynberg

Version: 3.4.1 Timestamp: Thu Jun 27 18:02:10 PDT 2013

This software is licensed under the Apache License, Version 2.0 (the "Apache License") or the GNU
General Public License version 2 (the "GPL License"). You may choose either license to govern your
use of this software only upon the condition that you accept all of the terms of either the Apache
License or the GPL License.

You may obtain a copy of the Apache License and the GPL License at:

    http://www.apache.org/licenses/LICENSE-2.0
    http://www.gnu.org/licenses/gpl-2.0.html

Unless required by applicable law or agreed to in writing, software distributed under the
Apache License or the GPL Licesnse is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Apache License and the GPL License for
the specific language governing permissions and limitations under the Apache License and the GPL License.
*/
(function ($) {
  if (typeof $.fn.each2 == 'undefined') {
    $.fn.extend({
      /*
       * 4-10 times faster .each replacement
       * use it carefully, as it overrides jQuery context of element on each iteration
       */
      each2: function each2(c) {
        var j = $([0]),
            i = -1,
            l = this.length;

        while (++i < l && (j.context = j[0] = this[i]) && c.call(j[0], i, j) !== false //"this"=DOM, i=index, j=jQuery object
        ) {
          ;
        }

        return this;
      }
    });
  }
})(jQuery);

(function ($, undefined) {
  'use strict';
  /*global document, window, jQuery, console */

  if (window.Select2 !== undefined) {
    return;
  }

  var KEY,
      AbstractSelect2,
      SingleSelect2,
      MultiSelect2,
      nextUid,
      sizer,
      lastMousePosition = {
    x: 0,
    y: 0
  },
      $document,
      scrollBarDimensions,
      KEY = {
    TAB: 9,
    ENTER: 13,
    ESC: 27,
    SPACE: 32,
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    PAGE_UP: 33,
    PAGE_DOWN: 34,
    HOME: 36,
    END: 35,
    BACKSPACE: 8,
    DELETE: 46,
    isArrow: function isArrow(k) {
      k = k.which ? k.which : k;

      switch (k) {
        case KEY.LEFT:
        case KEY.RIGHT:
        case KEY.UP:
        case KEY.DOWN:
          return true;
      }

      return false;
    },
    isControl: function isControl(e) {
      var k = e.which;

      switch (k) {
        case KEY.SHIFT:
        case KEY.CTRL:
        case KEY.ALT:
          return true;
      }

      if (e.metaKey) return true;
      return false;
    },
    isFunctionKey: function isFunctionKey(k) {
      k = k.which ? k.which : k;
      return k >= 112 && k <= 123;
    }
  },
      MEASURE_SCROLLBAR_TEMPLATE = "<div class='select2-measure-scrollbar'></div>";
  $document = $(document);

  nextUid = function () {
    var counter = 1;
    return function () {
      return counter++;
    };
  }();

  function indexOf(value, array) {
    var i = 0,
        l = array.length;

    for (; i < l; i = i + 1) {
      if (equal(value, array[i])) return i;
    }

    return -1;
  }

  function measureScrollbar() {
    var $template = $(MEASURE_SCROLLBAR_TEMPLATE);
    $template.appendTo('body');
    var dim = {
      width: $template.width() - $template[0].clientWidth,
      height: $template.height() - $template[0].clientHeight
    };
    $template.remove();
    return dim;
  }
  /**
   * Compares equality of a and b
   * @param a
   * @param b
   */


  function equal(a, b) {
    if (a === b) return true;
    if (a === undefined || b === undefined) return false;
    if (a === null || b === null) return false; // Check whether 'a' or 'b' is a string (primitive or object).
    // The concatenation of an empty string (+'') converts its argument to a string's primitive.

    if (a.constructor === String) return a + '' === b + ''; // a+'' - in case 'a' is a String object

    if (b.constructor === String) return b + '' === a + ''; // b+'' - in case 'b' is a String object

    return false;
  }
  /**
   * Splits the string into an array of values, trimming each value. An empty array is returned for nulls or empty
   * strings
   * @param string
   * @param separator
   */


  function splitVal(string, separator) {
    var val, i, l;
    if (string === null || string.length < 1) return [];
    val = string.split(separator);

    for (i = 0, l = val.length; i < l; i = i + 1) {
      val[i] = $.trim(val[i]);
    }

    return val;
  }

  function getSideBorderPadding(element) {
    return element.outerWidth(false) - element.width();
  }

  function installKeyUpChangeEvent(element) {
    var key = 'keyup-change-value';
    element.on('keydown', function () {
      if ($.data(element, key) === undefined) {
        $.data(element, key, element.val());
      }
    });
    element.on('keyup', function () {
      var val = $.data(element, key);

      if (val !== undefined && element.val() !== val) {
        $.removeData(element, key);
        element.trigger('keyup-change');
      }
    });
  }

  $document.on('mousemove', function (e) {
    lastMousePosition.x = e.pageX;
    lastMousePosition.y = e.pageY;
  });
  /**
   * filters mouse events so an event is fired only if the mouse moved.
   *
   * filters out mouse events that occur when mouse is stationary but
   * the elements under the pointer are scrolled.
   */

  function installFilteredMouseMove(element) {
    element.on('mousemove', function (e) {
      var lastpos = lastMousePosition;

      if (lastpos === undefined || lastpos.x !== e.pageX || lastpos.y !== e.pageY) {
        $(e.target).trigger('mousemove-filtered', e);
      }
    });
  }
  /**
   * Debounces a function. Returns a function that calls the original fn function only if no invocations have been made
   * within the last quietMillis milliseconds.
   *
   * @param quietMillis number of milliseconds to wait before invoking fn
   * @param fn function to be debounced
   * @param ctx object to be used as this reference within fn
   * @return debounced version of fn
   */


  function debounce(quietMillis, fn, ctx) {
    ctx = ctx || undefined;
    var timeout;
    return function () {
      var args = arguments;
      window.clearTimeout(timeout);
      timeout = window.setTimeout(function () {
        fn.apply(ctx, args);
      }, quietMillis);
    };
  }
  /**
   * A simple implementation of a thunk
   * @param formula function used to lazily initialize the thunk
   * @return {Function}
   */


  function thunk(formula) {
    var evaluated = false,
        value;
    return function () {
      if (evaluated === false) {
        value = formula();
        evaluated = true;
      }

      return value;
    };
  }

  function installDebouncedScroll(threshold, element) {
    var notify = debounce(threshold, function (e) {
      element.trigger('scroll-debounced', e);
    });
    element.on('scroll', function (e) {
      if (indexOf(e.target, element.get()) >= 0) notify(e);
    });
  }

  function focus($el) {
    if ($el[0] === document.activeElement) return;
    /* set the focus in a 0 timeout - that way the focus is set after the processing
            of the current event has finished - which seems like the only reliable way
            to set focus */

    window.setTimeout(function () {
      var el = $el[0],
          pos = $el.val().length,
          range;
      $el.focus();
      /* make sure el received focus so we do not error out when trying to manipulate the caret.
                sometimes modals or others listeners may steal it after its set */

      if ($el.is(':visible') && el === document.activeElement) {
        /* after the focus is set move the caret to the end, necessary when we val()
                    just before setting focus */
        if (el.setSelectionRange) {
          el.setSelectionRange(pos, pos);
        } else if (el.createTextRange) {
          range = el.createTextRange();
          range.collapse(false);
          range.select();
        }
      }
    }, 0);
  }

  function getCursorInfo(el) {
    el = $(el)[0];
    var offset = 0;
    var length = 0;

    if ('selectionStart' in el) {
      offset = el.selectionStart;
      length = el.selectionEnd - offset;
    } else if ('selection' in document) {
      el.focus();
      var sel = document.selection.createRange();
      length = document.selection.createRange().text.length;
      sel.moveStart('character', -el.value.length);
      offset = sel.text.length - length;
    }

    return {
      offset: offset,
      length: length
    };
  }

  function killEvent(event) {
    event.preventDefault();
    event.stopPropagation();
  }

  function killEventImmediately(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
  }

  function measureTextWidth(e) {
    if (!sizer) {
      var style = e[0].currentStyle || window.getComputedStyle(e[0], null);
      sizer = $(document.createElement('div')).css({
        position: 'absolute',
        left: '-10000px',
        top: '-10000px',
        display: 'none',
        fontSize: style.fontSize,
        fontFamily: style.fontFamily,
        fontStyle: style.fontStyle,
        fontWeight: style.fontWeight,
        letterSpacing: style.letterSpacing,
        textTransform: style.textTransform,
        whiteSpace: 'nowrap'
      });
      sizer.attr('class', 'select2-sizer');
      $('body').append(sizer);
    }

    sizer.text(e.val());
    return sizer.width();
  }

  function syncCssClasses(dest, src, adapter) {
    var classes,
        replacements = [],
        adapted;
    classes = dest.attr('class');

    if (classes) {
      classes = '' + classes; // for IE which returns object

      $(classes.split(' ')).each2(function () {
        if (this.indexOf('select2-') === 0) {
          replacements.push(this);
        }
      });
    }

    classes = src.attr('class');

    if (classes) {
      classes = '' + classes; // for IE which returns object

      $(classes.split(' ')).each2(function () {
        if (this.indexOf('select2-') !== 0) {
          adapted = adapter(this);

          if (adapted) {
            replacements.push(this);
          }
        }
      });
    }

    dest.attr('class', replacements.join(' '));
  }

  function markMatch(text, term, markup, escapeMarkup) {
    var match = text.toUpperCase().indexOf(term.toUpperCase()),
        tl = term.length;

    if (match < 0) {
      markup.push(escapeMarkup(text));
      return;
    }

    markup.push(escapeMarkup(text.substring(0, match)));
    markup.push("<span class='select2-match'>");
    markup.push(escapeMarkup(text.substring(match, match + tl)));
    markup.push('</span>');
    markup.push(escapeMarkup(text.substring(match + tl, text.length)));
  }

  function defaultEscapeMarkup(markup) {
    var replace_map = {
      '\\': '&#92;',
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;',
      '/': '&#47;'
    };
    return String(markup).replace(/[&<>"'\/\\]/g, function (match) {
      return replace_map[match];
    });
  }
  /**
   * Produces an ajax-based query function
   *
   * @param options object containing configuration paramters
   * @param options.params parameter map for the transport ajax call, can contain such options as cache, jsonpCallback, etc. see $.ajax
   * @param options.transport function that will be used to execute the ajax request. must be compatible with parameters supported by $.ajax
   * @param options.url url for the data
   * @param options.data a function(searchTerm, pageNumber, context) that should return an object containing query string parameters for the above url.
   * @param options.dataType request data type: ajax, jsonp, other datatatypes supported by jQuery's $.ajax function or the transport function if specified
   * @param options.quietMillis (optional) milliseconds to wait before making the ajaxRequest, helps debounce the ajax function if invoked too often
   * @param options.results a function(remoteData, pageNumber) that converts data returned form the remote request to the format expected by Select2.
   *      The expected format is an object containing the following keys:
   *      results array of objects that will be used as choices
   *      more (optional) boolean indicating whether there are more results available
   *      Example: {results:[{id:1, text:'Red'},{id:2, text:'Blue'}], more:true}
   */


  function ajax(options) {
    var timeout,
        // current scheduled but not yet executed request
    requestSequence = 0,
        // sequence used to drop out-of-order responses
    handler = null,
        quietMillis = options.quietMillis || 100,
        ajaxUrl = options.url,
        self = this;
    return function (query) {
      window.clearTimeout(timeout);
      timeout = window.setTimeout(function () {
        requestSequence += 1; // increment the sequence

        var requestNumber = requestSequence,
            // this request's sequence number
        data = options.data,
            // ajax data function
        url = ajaxUrl,
            // ajax url string or function
        transport = options.transport || $.fn.select2.ajaxDefaults.transport,
            // deprecated - to be removed in 4.0  - use params instead
        deprecated = {
          type: options.type || 'GET',
          // set type of request (GET or POST)
          cache: options.cache || false,
          jsonpCallback: options.jsonpCallback || undefined,
          dataType: options.dataType || 'json'
        },
            params = $.extend({}, $.fn.select2.ajaxDefaults.params, deprecated);
        data = data ? data.call(self, query.term, query.page, query.context) : null;
        url = typeof url === 'function' ? url.call(self, query.term, query.page, query.context) : url;

        if (handler) {
          handler.abort();
        }

        if (options.params) {
          if ($.isFunction(options.params)) {
            $.extend(params, options.params.call(self));
          } else {
            $.extend(params, options.params);
          }
        }

        $.extend(params, {
          url: url,
          dataType: options.dataType,
          data: data,
          success: function success(data) {
            if (requestNumber < requestSequence) {
              return;
            } // TODO - replace query.page with query so users have access to term, page, etc.


            var results = options.results(data, query.page);
            query.callback(results);
          }
        });
        handler = transport.call(self, params);
      }, quietMillis);
    };
  }
  /**
   * Produces a query function that works with a local array
   *
   * @param options object containing configuration parameters. The options parameter can either be an array or an
   * object.
   *
   * If the array form is used it is assumed that it contains objects with 'id' and 'text' keys.
   *
   * If the object form is used ti is assumed that it contains 'data' and 'text' keys. The 'data' key should contain
   * an array of objects that will be used as choices. These objects must contain at least an 'id' key. The 'text'
   * key can either be a String in which case it is expected that each element in the 'data' array has a key with the
   * value of 'text' which will be used to match choices. Alternatively, text can be a function(item) that can extract
   * the text.
   */


  function local(options) {
    var data = options,
        // data elements
    dataText,
        tmp,
        text = function text(item) {
      return '' + item.text;
    }; // function used to retrieve the text portion of a data item that is matched against the search


    if ($.isArray(data)) {
      tmp = data;
      data = {
        results: tmp
      };
    }

    if ($.isFunction(data) === false) {
      tmp = data;

      data = function data() {
        return tmp;
      };
    }

    var dataItem = data();

    if (dataItem.text) {
      text = dataItem.text; // if text is not a function we assume it to be a key name

      if (!$.isFunction(text)) {
        dataText = dataItem.text; // we need to store this in a separate variable because in the next step data gets reset and data.text is no longer available

        text = function text(item) {
          return item[dataText];
        };
      }
    }

    return function (query) {
      var t = query.term,
          filtered = {
        results: []
      },
          _process;

      if (t === '') {
        query.callback(data());
        return;
      }

      _process = function process(datum, collection) {
        var group, attr;
        datum = datum[0];

        if (datum.children) {
          group = {};

          for (attr in datum) {
            if (datum.hasOwnProperty(attr)) group[attr] = datum[attr];
          }

          group.children = [];
          $(datum.children).each2(function (i, childDatum) {
            _process(childDatum, group.children);
          });

          if (group.children.length || query.matcher(t, text(group), datum)) {
            collection.push(group);
          }
        } else {
          if (query.matcher(t, text(datum), datum)) {
            collection.push(datum);
          }
        }
      };

      $(data().results).each2(function (i, datum) {
        _process(datum, filtered.results);
      });
      query.callback(filtered);
    };
  } // TODO javadoc


  function tags(data) {
    var isFunc = $.isFunction(data);
    return function (query) {
      var t = query.term,
          filtered = {
        results: []
      };
      $(isFunc ? data() : data).each(function () {
        var isObject = this.text !== undefined,
            text = isObject ? this.text : this;

        if (t === '' || query.matcher(t, text)) {
          filtered.results.push(isObject ? this : {
            id: this,
            text: this
          });
        }
      });
      query.callback(filtered);
    };
  }
  /**
   * Checks if the formatter function should be used.
   *
   * Throws an error if it is not a function. Returns true if it should be used,
   * false if no formatting should be performed.
   *
   * @param formatter
   */


  function checkFormatter(formatter, formatterName) {
    if ($.isFunction(formatter)) return true;
    if (!formatter) return false;
    throw new Error(formatterName + ' must be a function or a falsy value');
  }

  function evaluate(val) {
    return $.isFunction(val) ? val() : val;
  }

  function countResults(results) {
    var count = 0;
    $.each(results, function (i, item) {
      if (item.children) {
        count += countResults(item.children);
      } else {
        count++;
      }
    });
    return count;
  }
  /**
   * Default tokenizer. This function uses breaks the input on substring match of any string from the
   * opts.tokenSeparators array and uses opts.createSearchChoice to create the choice object. Both of those
   * two options have to be defined in order for the tokenizer to work.
   *
   * @param input text user has typed so far or pasted into the search field
   * @param selection currently selected choices
   * @param selectCallback function(choice) callback tho add the choice to selection
   * @param opts select2's opts
   * @return undefined/null to leave the current input unchanged, or a string to change the input to the returned value
   */


  function defaultTokenizer(input, selection, selectCallback, opts) {
    var original = input,
        // store the original so we can compare and know if we need to tell the search to update its text
    dupe = false,
        // check for whether a token we extracted represents a duplicate selected choice
    token,
        // token
    index,
        // position at which the separator was found
    i,
        l,
        // looping variables
    separator; // the matched separator

    if (!opts.createSearchChoice || !opts.tokenSeparators || opts.tokenSeparators.length < 1) return undefined;

    while (true) {
      index = -1;

      for (i = 0, l = opts.tokenSeparators.length; i < l; i++) {
        separator = opts.tokenSeparators[i];
        index = input.indexOf(separator);
        if (index >= 0) break;
      }

      if (index < 0) break; // did not find any token separator in the input string, bail

      token = input.substring(0, index);
      input = input.substring(index + separator.length);

      if (token.length > 0) {
        token = opts.createSearchChoice.call(this, token, selection);

        if (token !== undefined && token !== null && opts.id(token) !== undefined && opts.id(token) !== null) {
          dupe = false;

          for (i = 0, l = selection.length; i < l; i++) {
            if (equal(opts.id(token), opts.id(selection[i]))) {
              dupe = true;
              break;
            }
          }

          if (!dupe) selectCallback(token);
        }
      }
    }

    if (original !== input) return input;
  }
  /**
   * Creates a new class
   *
   * @param superClass
   * @param methods
   */


  function clazz(SuperClass, methods) {
    var constructor = function constructor() {};

    constructor.prototype = new SuperClass();
    constructor.prototype.constructor = constructor;
    constructor.prototype.parent = SuperClass.prototype;
    constructor.prototype = $.extend(constructor.prototype, methods);
    return constructor;
  }

  AbstractSelect2 = clazz(Object, {
    // abstract
    bind: function bind(func) {
      var self = this;
      return function () {
        func.apply(self, arguments);
      };
    },
    // abstract
    init: function init(opts) {
      var results,
          search,
          resultsSelector = '.select2-results',
          disabled,
          readonly; // prepare options

      this.opts = opts = this.prepareOpts(opts);
      this.id = opts.id; // destroy if called on an existing component

      if (opts.element.data('select2') !== undefined && opts.element.data('select2') !== null) {
        opts.element.data('select2').destroy();
      }

      this.container = this.createContainer();
      this.containerId = 's2id_' + (opts.element.attr('id') || 'autogen' + nextUid());
      this.containerSelector = '#' + this.containerId.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, '\\$1');
      this.container.attr('id', this.containerId); // cache the body so future lookups are cheap

      this.body = thunk(function () {
        return opts.element.closest('body');
      });
      syncCssClasses(this.container, this.opts.element, this.opts.adaptContainerCssClass);
      this.container.css(evaluate(opts.containerCss));
      this.container.addClass(evaluate(opts.containerCssClass));
      this.elementTabIndex = this.opts.element.attr('tabindex'); // swap container for the element

      this.opts.element.data('select2', this).attr('tabindex', '-1').before(this.container);
      this.container.data('select2', this);
      this.dropdown = this.container.find('.select2-drop');
      this.dropdown.addClass(evaluate(opts.dropdownCssClass));
      this.dropdown.data('select2', this);
      this.results = results = this.container.find(resultsSelector);
      this.search = search = this.container.find('input.select2-input');
      this.resultsPage = 0;
      this.context = null; // initialize the container

      this.initContainer();
      installFilteredMouseMove(this.results);
      this.dropdown.on('mousemove-filtered touchstart touchmove touchend', resultsSelector, this.bind(this.highlightUnderEvent));
      installDebouncedScroll(80, this.results);
      this.dropdown.on('scroll-debounced', resultsSelector, this.bind(this.loadMoreIfNeeded)); // do not propagate change event from the search field out of the component

      $(this.container).on('change', '.select2-input', function (e) {
        e.stopPropagation();
      });
      $(this.dropdown).on('change', '.select2-input', function (e) {
        e.stopPropagation();
      }); // if jquery.mousewheel plugin is installed we can prevent out-of-bounds scrolling of results via mousewheel

      if ($.fn.mousewheel) {
        results.mousewheel(function (e, delta, deltaX, deltaY) {
          var top = results.scrollTop(),
              height;

          if (deltaY > 0 && top - deltaY <= 0) {
            results.scrollTop(0);
            killEvent(e);
          } else if (deltaY < 0 && results.get(0).scrollHeight - results.scrollTop() + deltaY <= results.height()) {
            results.scrollTop(results.get(0).scrollHeight - results.height());
            killEvent(e);
          }
        });
      }

      installKeyUpChangeEvent(search);
      search.on('keyup-change input paste', this.bind(this.updateResults));
      search.on('focus', function () {
        search.addClass('select2-focused');
      });
      search.on('blur', function () {
        search.removeClass('select2-focused');
      });
      this.dropdown.on('mouseup', resultsSelector, this.bind(function (e) {
        if ($(e.target).closest('.select2-result-selectable').length > 0) {
          this.highlightUnderEvent(e);
          this.selectHighlighted(e);
        }
      })); // trap all mouse events from leaving the dropdown. sometimes there may be a modal that is listening
      // for mouse events outside of itself so it can close itself. since the dropdown is now outside the select2's
      // dom it will trigger the popup close, which is not what we want

      this.dropdown.on('click mouseup mousedown', function (e) {
        e.stopPropagation();
      });

      if ($.isFunction(this.opts.initSelection)) {
        // initialize selection based on the current value of the source element
        this.initSelection(); // if the user has provided a function that can set selection based on the value of the source element
        // we monitor the change event on the element and trigger it, allowing for two way synchronization

        this.monitorSource();
      }

      if (opts.maximumInputLength !== null) {
        this.search.attr('maxlength', opts.maximumInputLength);
      }

      var disabled = opts.element.prop('disabled');
      if (disabled === undefined) disabled = false;
      this.enable(!disabled);
      var readonly = opts.element.prop('readonly');
      if (readonly === undefined) readonly = false;
      this.readonly(readonly); // Calculate size of scrollbar

      scrollBarDimensions = scrollBarDimensions || measureScrollbar();
      this.autofocus = opts.element.prop('autofocus');
      opts.element.prop('autofocus', false);
      if (this.autofocus) this.focus();
    },
    // abstract
    destroy: function destroy() {
      var element = this.opts.element,
          select2 = element.data('select2');

      if (this.propertyObserver) {
        delete this.propertyObserver;
        this.propertyObserver = null;
      }

      if (select2 !== undefined) {
        select2.container.remove();
        select2.dropdown.remove();
        element.removeClass('select2-offscreen').removeData('select2').off('.select2').prop('autofocus', this.autofocus || false);

        if (this.elementTabIndex) {
          element.attr({
            tabindex: this.elementTabIndex
          });
        } else {
          element.removeAttr('tabindex');
        }

        element.show();
      }
    },
    // abstract
    optionToData: function optionToData(element) {
      if (element.is('option')) {
        return {
          id: element.prop('value'),
          text: element.text(),
          element: element.get(),
          css: element.attr('class'),
          disabled: element.prop('disabled'),
          locked: equal(element.attr('locked'), 'locked') || equal(element.data('locked'), true)
        };
      } else if (element.is('optgroup')) {
        return {
          text: element.attr('label'),
          children: [],
          element: element.get(),
          css: element.attr('class')
        };
      }
    },
    // abstract
    prepareOpts: function prepareOpts(opts) {
      var element,
          select,
          idKey,
          ajaxUrl,
          self = this;
      element = opts.element;

      if (element.get(0).tagName.toLowerCase() === 'select') {
        this.select = select = opts.element;
      }

      if (select) {
        // these options are not allowed when attached to a select because they are picked up off the element itself
        $.each(['id', 'multiple', 'ajax', 'query', 'createSearchChoice', 'initSelection', 'data', 'tags'], function () {
          if (this in opts) {
            throw new Error("Option '" + this + "' is not allowed for Select2 when attached to a <select> element.");
          }
        });
      }

      opts = $.extend({}, {
        populateResults: function populateResults(container, results, query) {
          var _populate,
              data,
              result,
              children,
              id = this.opts.id;

          _populate = function populate(results, container, depth) {
            var i, l, result, selectable, disabled, compound, node, label, innerContainer, formatted;
            results = opts.sortResults(results, container, query);

            for (i = 0, l = results.length; i < l; i = i + 1) {
              result = results[i];
              disabled = result.disabled === true;
              selectable = !disabled && id(result) !== undefined;
              compound = result.children && result.children.length > 0;
              node = $('<li></li>');
              node.addClass('select2-results-dept-' + depth);
              node.addClass('select2-result');
              node.addClass(selectable ? 'select2-result-selectable' : 'select2-result-unselectable');

              if (disabled) {
                node.addClass('select2-disabled');
              }

              if (compound) {
                node.addClass('select2-result-with-children');
              }

              node.addClass(self.opts.formatResultCssClass(result));
              label = $(document.createElement('div'));
              label.addClass('select2-result-label');
              formatted = opts.formatResult(result, label, query, self.opts.escapeMarkup);

              if (formatted !== undefined) {
                label.html(formatted);
              }

              node.append(label);

              if (compound) {
                innerContainer = $('<ul></ul>');
                innerContainer.addClass('select2-result-sub');

                _populate(result.children, innerContainer, depth + 1);

                node.append(innerContainer);
              }

              node.data('select2-data', result);
              container.append(node);
            }
          };

          _populate(results, container, 0);
        }
      }, $.fn.select2.defaults, opts);

      if (typeof opts.id !== 'function') {
        idKey = opts.id;

        opts.id = function (e) {
          return e[idKey];
        };
      }

      if ($.isArray(opts.element.data('select2Tags'))) {
        if ('tags' in opts) {
          throw "tags specified as both an attribute 'data-select2-tags' and in options of Select2 " + opts.element.attr('id');
        }

        opts.tags = opts.element.data('select2Tags');
      }

      if (select) {
        opts.query = this.bind(function (query) {
          var data = {
            results: [],
            more: false
          },
              term = query.term,
              children,
              placeholderOption,
              _process2;

          _process2 = function process(element, collection) {
            var group;

            if (element.is('option')) {
              if (query.matcher(term, element.text(), element)) {
                collection.push(self.optionToData(element));
              }
            } else if (element.is('optgroup')) {
              group = self.optionToData(element);
              element.children().each2(function (i, elm) {
                _process2(elm, group.children);
              });

              if (group.children.length > 0) {
                collection.push(group);
              }
            }
          };

          children = element.children(); // ignore the placeholder option if there is one

          if (this.getPlaceholder() !== undefined && children.length > 0) {
            placeholderOption = this.getPlaceholderOption();

            if (placeholderOption) {
              children = children.not(placeholderOption);
            }
          }

          children.each2(function (i, elm) {
            _process2(elm, data.results);
          });
          query.callback(data);
        }); // this is needed because inside val() we construct choices from options and there id is hardcoded

        opts.id = function (e) {
          return e.id;
        };

        opts.formatResultCssClass = function (data) {
          return data.css;
        };
      } else {
        if (!('query' in opts)) {
          if ('ajax' in opts) {
            ajaxUrl = opts.element.data('ajax-url');

            if (ajaxUrl && ajaxUrl.length > 0) {
              opts.ajax.url = ajaxUrl;
            }

            opts.query = ajax.call(opts.element, opts.ajax);
          } else if ('data' in opts) {
            opts.query = local(opts.data);
          } else if ('tags' in opts) {
            opts.query = tags(opts.tags);

            if (opts.createSearchChoice === undefined) {
              opts.createSearchChoice = function (term) {
                return {
                  id: term,
                  text: term
                };
              };
            }

            if (opts.initSelection === undefined) {
              opts.initSelection = function (element, callback) {
                var data = [];
                $(splitVal(element.val(), opts.separator)).each(function () {
                  var id = this,
                      text = this,
                      tags = opts.tags;
                  if ($.isFunction(tags)) tags = tags();
                  $(tags).each(function () {
                    if (equal(this.id, id)) {
                      text = this.text;
                      return false;
                    }
                  });
                  data.push({
                    id: id,
                    text: text
                  });
                });
                callback(data);
              };
            }
          }
        }
      }

      if (typeof opts.query !== 'function') {
        throw 'query function not defined for Select2 ' + opts.element.attr('id');
      }

      return opts;
    },

    /**
     * Monitor the original element for changes and update select2 accordingly
     */
    // abstract
    monitorSource: function monitorSource() {
      var el = this.opts.element,
          sync;
      el.on('change.select2', this.bind(function (e) {
        if (this.opts.element.data('select2-change-triggered') !== true) {
          this.initSelection();
        }
      }));
      sync = this.bind(function () {
        var enabled,
            readonly,
            self = this; // sync enabled state

        var disabled = el.prop('disabled');
        if (disabled === undefined) disabled = false;
        this.enable(!disabled);
        var readonly = el.prop('readonly');
        if (readonly === undefined) readonly = false;
        this.readonly(readonly);
        syncCssClasses(this.container, this.opts.element, this.opts.adaptContainerCssClass);
        this.container.addClass(evaluate(this.opts.containerCssClass));
        syncCssClasses(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass);
        this.dropdown.addClass(evaluate(this.opts.dropdownCssClass));
      }); // mozilla and IE

      el.on('propertychange.select2 DOMAttrModified.select2', sync); // hold onto a reference of the callback to work around a chromium bug

      if (this.mutationCallback === undefined) {
        this.mutationCallback = function (mutations) {
          mutations.forEach(sync);
        };
      } // safari and chrome


      if (typeof WebKitMutationObserver !== 'undefined') {
        if (this.propertyObserver) {
          delete this.propertyObserver;
          this.propertyObserver = null;
        }

        this.propertyObserver = new WebKitMutationObserver(this.mutationCallback);
        this.propertyObserver.observe(el.get(0), {
          attributes: true,
          subtree: false
        });
      }
    },
    // abstract
    triggerSelect: function triggerSelect(data) {
      var evt = $.Event('select2-selecting', {
        val: this.id(data),
        object: data
      });
      this.opts.element.trigger(evt);
      return !evt.isDefaultPrevented();
    },

    /**
     * Triggers the change event on the source element
     */
    // abstract
    triggerChange: function triggerChange(details) {
      details = details || {};
      details = $.extend({}, details, {
        type: 'change',
        val: this.val()
      }); // prevents recursive triggering

      this.opts.element.data('select2-change-triggered', true);
      this.opts.element.trigger(details);
      this.opts.element.data('select2-change-triggered', false); // some validation frameworks ignore the change event and listen instead to keyup, click for selects
      // so here we trigger the click event manually

      this.opts.element.click(); // ValidationEngine ignorea the change event and listens instead to blur
      // so here we trigger the blur event manually if so desired

      if (this.opts.blurOnChange) this.opts.element.blur();
    },
    //abstract
    isInterfaceEnabled: function isInterfaceEnabled() {
      return this.enabledInterface === true;
    },
    // abstract
    enableInterface: function enableInterface() {
      var enabled = this._enabled && !this._readonly,
          disabled = !enabled;
      if (enabled === this.enabledInterface) return false;
      this.container.toggleClass('select2-container-disabled', disabled);
      this.close();
      this.enabledInterface = enabled;
      return true;
    },
    // abstract
    enable: function enable(enabled) {
      if (enabled === undefined) enabled = true;
      if (this._enabled === enabled) return false;
      this._enabled = enabled;
      this.opts.element.prop('disabled', !enabled);
      this.enableInterface();
      return true;
    },
    // abstract
    readonly: function readonly(enabled) {
      if (enabled === undefined) enabled = false;
      if (this._readonly === enabled) return false;
      this._readonly = enabled;
      this.opts.element.prop('readonly', enabled);
      this.enableInterface();
      return true;
    },
    // abstract
    opened: function opened() {
      return this.container.hasClass('select2-dropdown-open');
    },
    // abstract
    positionDropdown: function positionDropdown() {
      var $dropdown = this.dropdown,
          offset = this.container.offset(),
          height = this.container.outerHeight(false),
          width = this.container.outerWidth(false),
          dropHeight = $dropdown.outerHeight(false),
          viewPortRight = $(window).scrollLeft() + $(window).width(),
          viewportBottom = $(window).scrollTop() + $(window).height(),
          dropTop = offset.top + height,
          dropLeft = offset.left,
          enoughRoomBelow = dropTop + dropHeight <= viewportBottom,
          enoughRoomAbove = offset.top - dropHeight >= this.body().scrollTop(),
          dropWidth = $dropdown.outerWidth(false),
          enoughRoomOnRight = dropLeft + dropWidth <= viewPortRight,
          aboveNow = $dropdown.hasClass('select2-drop-above'),
          bodyOffset,
          above,
          css,
          resultsListNode;

      if (this.opts.dropdownAutoWidth) {
        resultsListNode = $('.select2-results', $dropdown)[0];
        $dropdown.addClass('select2-drop-auto-width');
        $dropdown.css('width', ''); // Add scrollbar width to dropdown if vertical scrollbar is present

        dropWidth = $dropdown.outerWidth(false) + (resultsListNode.scrollHeight === resultsListNode.clientHeight ? 0 : scrollBarDimensions.width);
        dropWidth > width ? width = dropWidth : dropWidth = width;
        enoughRoomOnRight = dropLeft + dropWidth <= viewPortRight;
      } else {
        this.container.removeClass('select2-drop-auto-width');
      } //console.log("below/ droptop:", dropTop, "dropHeight", dropHeight, "sum", (dropTop+dropHeight)+" viewport bottom", viewportBottom, "enough?", enoughRoomBelow);
      //console.log("above/ offset.top", offset.top, "dropHeight", dropHeight, "top", (offset.top-dropHeight), "scrollTop", this.body().scrollTop(), "enough?", enoughRoomAbove);
      // fix positioning when body has an offset and is not position: static


      if (this.body().css('position') !== 'static') {
        bodyOffset = this.body().offset();
        dropTop -= bodyOffset.top;
        dropLeft -= bodyOffset.left;
      } // always prefer the current above/below alignment, unless there is not enough room


      if (aboveNow) {
        above = true;
        if (!enoughRoomAbove && enoughRoomBelow) above = false;
      } else {
        above = false;
        if (!enoughRoomBelow && enoughRoomAbove) above = true;
      }

      if (!enoughRoomOnRight) {
        dropLeft = offset.left + width - dropWidth;
      }

      if (above) {
        dropTop = offset.top - dropHeight;
        this.container.addClass('select2-drop-above');
        $dropdown.addClass('select2-drop-above');
      } else {
        this.container.removeClass('select2-drop-above');
        $dropdown.removeClass('select2-drop-above');
      }

      css = $.extend({
        top: dropTop,
        left: dropLeft,
        width: width
      }, evaluate(this.opts.dropdownCss));
      $dropdown.css(css);
    },
    // abstract
    shouldOpen: function shouldOpen() {
      var event;
      if (this.opened()) return false;
      if (this._enabled === false || this._readonly === true) return false;
      event = $.Event('select2-opening');
      this.opts.element.trigger(event);
      return !event.isDefaultPrevented();
    },
    // abstract
    clearDropdownAlignmentPreference: function clearDropdownAlignmentPreference() {
      // clear the classes used to figure out the preference of where the dropdown should be opened
      this.container.removeClass('select2-drop-above');
      this.dropdown.removeClass('select2-drop-above');
    },

    /**
     * Opens the dropdown
     *
     * @return {Boolean} whether or not dropdown was opened. This method will return false if, for example,
     * the dropdown is already open, or if the 'open' event listener on the element called preventDefault().
     */
    // abstract
    open: function open() {
      if (!this.shouldOpen()) return false;
      this.opening();
      return true;
    },

    /**
     * Performs the opening of the dropdown
     */
    // abstract
    opening: function opening() {
      var cid = this.containerId,
          scroll = 'scroll.' + cid,
          resize = 'resize.' + cid,
          orient = 'orientationchange.' + cid,
          mask,
          maskCss;
      this.container.addClass('select2-dropdown-open').addClass('select2-container-active');
      this.clearDropdownAlignmentPreference();

      if (this.dropdown[0] !== this.body().children().last()[0]) {
        this.dropdown.detach().appendTo(this.body());
      } // create the dropdown mask if doesnt already exist


      mask = $('#select2-drop-mask');

      if (mask.length == 0) {
        mask = $(document.createElement('div'));
        mask.attr('id', 'select2-drop-mask').attr('class', 'select2-drop-mask');
        mask.hide();
        mask.appendTo(this.body());
        mask.on('mousedown touchstart click', function (e) {
          var dropdown = $('#select2-drop'),
              self;

          if (dropdown.length > 0) {
            self = dropdown.data('select2');

            if (self.opts.selectOnBlur) {
              self.selectHighlighted({
                noFocus: true
              });
            }

            self.close();
            e.preventDefault();
            e.stopPropagation();
          }
        });
      } // ensure the mask is always right before the dropdown


      if (this.dropdown.prev()[0] !== mask[0]) {
        this.dropdown.before(mask);
      } // move the global id to the correct dropdown


      $('#select2-drop').removeAttr('id');
      this.dropdown.attr('id', 'select2-drop'); // show the elements

      maskCss = _makeMaskCss();
      mask.css(maskCss).show();
      this.dropdown.show();
      this.positionDropdown();
      this.dropdown.addClass('select2-drop-active'); // attach listeners to events that can change the position of the container and thus require
      // the position of the dropdown to be updated as well so it does not come unglued from the container

      var that = this;
      this.container.parents().add(window).each(function () {
        $(this).on(resize + ' ' + scroll + ' ' + orient, function (e) {
          var maskCss = _makeMaskCss();

          $('#select2-drop-mask').css(maskCss);
          that.positionDropdown();
        });
      });

      function _makeMaskCss() {
        return {
          width: Math.max(document.documentElement.scrollWidth, $(window).width()),
          height: Math.max(document.documentElement.scrollHeight, $(window).height())
        };
      }
    },
    // abstract
    close: function close() {
      if (!this.opened()) return;
      var cid = this.containerId,
          scroll = 'scroll.' + cid,
          resize = 'resize.' + cid,
          orient = 'orientationchange.' + cid; // unbind event listeners

      this.container.parents().add(window).each(function () {
        $(this).off(scroll).off(resize).off(orient);
      });
      this.clearDropdownAlignmentPreference();
      $('#select2-drop-mask').hide();
      this.dropdown.removeAttr('id'); // only the active dropdown has the select2-drop id

      this.dropdown.hide();
      this.container.removeClass('select2-dropdown-open');
      this.results.empty();
      this.clearSearch();
      this.search.removeClass('select2-active');
      this.opts.element.trigger($.Event('select2-close'));
    },

    /**
     * Opens control, sets input value, and updates results.
     */
    // abstract
    externalSearch: function externalSearch(term) {
      this.open();
      this.search.val(term);
      this.updateResults(false);
    },
    // abstract
    clearSearch: function clearSearch() {},
    //abstract
    getMaximumSelectionSize: function getMaximumSelectionSize() {
      return evaluate(this.opts.maximumSelectionSize);
    },
    // abstract
    ensureHighlightVisible: function ensureHighlightVisible() {
      var results = this.results,
          children,
          index,
          child,
          hb,
          rb,
          y,
          more;
      index = this.highlight();
      if (index < 0) return;

      if (index == 0) {
        // if the first element is highlighted scroll all the way to the top,
        // that way any unselectable headers above it will also be scrolled
        // into view
        results.scrollTop(0);
        return;
      }

      children = this.findHighlightableChoices().find('.select2-result-label');
      child = $(children[index]);
      hb = child.offset().top + child.outerHeight(true); // if this is the last child lets also make sure select2-more-results is visible

      if (index === children.length - 1) {
        more = results.find('li.select2-more-results');

        if (more.length > 0) {
          hb = more.offset().top + more.outerHeight(true);
        }
      }

      rb = results.offset().top + results.outerHeight(true);

      if (hb > rb) {
        results.scrollTop(results.scrollTop() + (hb - rb));
      }

      y = child.offset().top - results.offset().top; // make sure the top of the element is visible

      if (y < 0 && child.css('display') != 'none') {
        results.scrollTop(results.scrollTop() + y); // y is negative
      }
    },
    // abstract
    findHighlightableChoices: function findHighlightableChoices() {
      return this.results.find('.select2-result-selectable:not(.select2-selected):not(.select2-disabled)');
    },
    // abstract
    moveHighlight: function moveHighlight(delta) {
      var choices = this.findHighlightableChoices(),
          index = this.highlight();

      while (index > -1 && index < choices.length) {
        index += delta;
        var choice = $(choices[index]);

        if (choice.hasClass('select2-result-selectable') && !choice.hasClass('select2-disabled') && !choice.hasClass('select2-selected')) {
          this.highlight(index);
          break;
        }
      }
    },
    // abstract
    highlight: function highlight(index) {
      var choices = this.findHighlightableChoices(),
          choice,
          data;

      if (arguments.length === 0) {
        return indexOf(choices.filter('.select2-highlighted')[0], choices.get());
      }

      if (index >= choices.length) index = choices.length - 1;
      if (index < 0) index = 0;
      this.results.find('.select2-highlighted').removeClass('select2-highlighted');
      choice = $(choices[index]);
      choice.addClass('select2-highlighted');
      this.ensureHighlightVisible();
      data = choice.data('select2-data');

      if (data) {
        this.opts.element.trigger({
          type: 'select2-highlight',
          val: this.id(data),
          choice: data
        });
      }
    },
    // abstract
    countSelectableResults: function countSelectableResults() {
      return this.findHighlightableChoices().length;
    },
    // abstract
    highlightUnderEvent: function highlightUnderEvent(event) {
      var el = $(event.target).closest('.select2-result-selectable');

      if (el.length > 0 && !el.is('.select2-highlighted')) {
        var choices = this.findHighlightableChoices();
        this.highlight(choices.index(el));
      } else if (el.length == 0) {
        // if we are over an unselectable item remove al highlights
        this.results.find('.select2-highlighted').removeClass('select2-highlighted');
      }
    },
    // abstract
    loadMoreIfNeeded: function loadMoreIfNeeded() {
      var results = this.results,
          more = results.find('li.select2-more-results'),
          below,
          // pixels the element is below the scroll fold, below==0 is when the element is starting to be visible
      offset = -1,
          // index of first element without data
      page = this.resultsPage + 1,
          self = this,
          term = this.search.val(),
          context = this.context;
      if (more.length === 0) return;
      below = more.offset().top - results.offset().top - results.height();

      if (below <= this.opts.loadMorePadding) {
        more.addClass('select2-active');
        this.opts.query({
          element: this.opts.element,
          term: term,
          page: page,
          context: context,
          matcher: this.opts.matcher,
          callback: this.bind(function (data) {
            // ignore a response if the select2 has been closed before it was received
            if (!self.opened()) return;
            self.opts.populateResults.call(this, results, data.results, {
              term: term,
              page: page,
              context: context
            });
            self.postprocessResults(data, false, false);

            if (data.more === true) {
              more.detach().appendTo(results).text(self.opts.formatLoadMore(page + 1));
              window.setTimeout(function () {
                self.loadMoreIfNeeded();
              }, 10);
            } else {
              more.remove();
            }

            self.positionDropdown();
            self.resultsPage = page;
            self.context = data.context;
          })
        });
      }
    },

    /**
     * Default tokenizer function which does nothing
     */
    tokenize: function tokenize() {},

    /**
     * @param initial whether or not this is the call to this method right after the dropdown has been opened
     */
    // abstract
    updateResults: function updateResults(initial) {
      var search = this.search,
          results = this.results,
          opts = this.opts,
          data,
          self = this,
          input,
          term = search.val(),
          lastTerm = $.data(this.container, 'select2-last-term'); // prevent duplicate queries against the same term

      if (initial !== true && lastTerm && equal(term, lastTerm)) return;
      $.data(this.container, 'select2-last-term', term); // if the search is currently hidden we do not alter the results

      if (initial !== true && (this.showSearchInput === false || !this.opened())) {
        return;
      }

      function postRender() {
        search.removeClass('select2-active');
        self.positionDropdown();
      }

      function render(html) {
        results.html(html);
        postRender();
      }

      var maxSelSize = this.getMaximumSelectionSize();

      if (maxSelSize >= 1) {
        data = this.data();

        if ($.isArray(data) && data.length >= maxSelSize && checkFormatter(opts.formatSelectionTooBig, 'formatSelectionTooBig')) {
          render("<li class='select2-selection-limit'>" + opts.formatSelectionTooBig(maxSelSize) + '</li>');
          return;
        }
      }

      if (search.val().length < opts.minimumInputLength) {
        if (checkFormatter(opts.formatInputTooShort, 'formatInputTooShort')) {
          render("<li class='select2-no-results'>" + opts.formatInputTooShort(search.val(), opts.minimumInputLength) + '</li>');
        } else {
          render('');
        }

        if (initial && this.showSearch) this.showSearch(true);
        return;
      }

      if (opts.maximumInputLength && search.val().length > opts.maximumInputLength) {
        if (checkFormatter(opts.formatInputTooLong, 'formatInputTooLong')) {
          render("<li class='select2-no-results'>" + opts.formatInputTooLong(search.val(), opts.maximumInputLength) + '</li>');
        } else {
          render('');
        }

        return;
      }

      if (opts.formatSearching && this.findHighlightableChoices().length === 0) {
        render("<li class='select2-searching'>" + opts.formatSearching() + '</li>');
      }

      search.addClass('select2-active'); // give the tokenizer a chance to pre-process the input

      input = this.tokenize();

      if (input != undefined && input != null) {
        search.val(input);
      }

      this.resultsPage = 1;
      opts.query({
        element: opts.element,
        term: search.val(),
        page: this.resultsPage,
        context: null,
        matcher: opts.matcher,
        callback: this.bind(function (data) {
          var def; // default choice
          // ignore a response if the select2 has been closed before it was received

          if (!this.opened()) {
            this.search.removeClass('select2-active');
            return;
          } // save context, if any


          this.context = data.context === undefined ? null : data.context; // create a default choice and prepend it to the list

          if (this.opts.createSearchChoice && search.val() !== '') {
            def = this.opts.createSearchChoice.call(self, search.val(), data.results);

            if (def !== undefined && def !== null && self.id(def) !== undefined && self.id(def) !== null) {
              if ($(data.results).filter(function () {
                return equal(self.id(this), self.id(def));
              }).length === 0) {
                data.results.unshift(def);
              }
            }
          }

          if (data.results.length === 0 && checkFormatter(opts.formatNoMatches, 'formatNoMatches')) {
            render("<li class='select2-no-results'>" + opts.formatNoMatches(search.val()) + '</li>');
            return;
          }

          results.empty();
          self.opts.populateResults.call(this, results, data.results, {
            term: search.val(),
            page: this.resultsPage,
            context: null
          });

          if (data.more === true && checkFormatter(opts.formatLoadMore, 'formatLoadMore')) {
            results.append("<li class='select2-more-results'>" + self.opts.escapeMarkup(opts.formatLoadMore(this.resultsPage)) + '</li>');
            window.setTimeout(function () {
              self.loadMoreIfNeeded();
            }, 10);
          }

          this.postprocessResults(data, initial);
          postRender();
          this.opts.element.trigger({
            type: 'select2-loaded',
            items: data
          });
        })
      });
    },
    // abstract
    cancel: function cancel() {
      this.close();
    },
    // abstract
    blur: function blur() {
      // if selectOnBlur == true, select the currently highlighted option
      if (this.opts.selectOnBlur) this.selectHighlighted({
        noFocus: true
      });
      this.close();
      this.container.removeClass('select2-container-active'); // synonymous to .is(':focus'), which is available in jquery >= 1.6

      if (this.search[0] === document.activeElement) {
        this.search.blur();
      }

      this.clearSearch();
      this.selection.find('.select2-search-choice-focus').removeClass('select2-search-choice-focus');
    },
    // abstract
    focusSearch: function focusSearch() {
      focus(this.search);
    },
    // abstract
    selectHighlighted: function selectHighlighted(options) {
      var index = this.highlight(),
          highlighted = this.results.find('.select2-highlighted'),
          data = highlighted.closest('.select2-result').data('select2-data');

      if (data) {
        this.highlight(index);
        this.onSelect(data, options);
      } else if (options && options.noFocus) {
        this.close();
      }
    },
    // abstract
    getPlaceholder: function getPlaceholder() {
      var placeholderOption;
      return this.opts.element.attr('placeholder') || this.opts.element.attr('data-placeholder') || // jquery 1.4 compat
      this.opts.element.data('placeholder') || this.opts.placeholder || ((placeholderOption = this.getPlaceholderOption()) !== undefined ? placeholderOption.text() : undefined);
    },
    // abstract
    getPlaceholderOption: function getPlaceholderOption() {
      if (this.select) {
        var firstOption = this.select.children().first();

        if (this.opts.placeholderOption !== undefined) {
          //Determine the placeholder option based on the specified placeholderOption setting
          return this.opts.placeholderOption === 'first' && firstOption || typeof this.opts.placeholderOption === 'function' && this.opts.placeholderOption(this.select);
        } else if (firstOption.text() === '' && firstOption.val() === '') {
          //No explicit placeholder option specified, use the first if it's blank
          return firstOption;
        }
      }
    },

    /**
     * Get the desired width for the container element.  This is
     * derived first from option `width` passed to select2, then
     * the inline 'style' on the original element, and finally
     * falls back to the jQuery calculated element width.
     */
    // abstract
    initContainerWidth: function initContainerWidth() {
      function resolveContainerWidth() {
        var style, attrs, matches, i, l;

        if (this.opts.width === 'off') {
          return null;
        } else if (this.opts.width === 'element') {
          return this.opts.element.outerWidth(false) === 0 ? 'auto' : this.opts.element.outerWidth(false) + 'px';
        } else if (this.opts.width === 'copy' || this.opts.width === 'resolve') {
          // check if there is inline style on the element that contains width
          style = this.opts.element.attr('style');

          if (style !== undefined) {
            attrs = style.split(';');

            for (i = 0, l = attrs.length; i < l; i = i + 1) {
              matches = attrs[i].replace(/\s/g, '').match(/width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i);
              if (matches !== null && matches.length >= 1) return matches[1];
            }
          }

          if (this.opts.width === 'resolve') {
            // next check if css('width') can resolve a width that is percent based, this is sometimes possible
            // when attached to input type=hidden or elements hidden via css
            style = this.opts.element.css('width');
            if (style.indexOf('%') > 0) return style; // finally, fallback on the calculated width of the element

            return this.opts.element.outerWidth(false) === 0 ? 'auto' : this.opts.element.outerWidth(false) + 'px';
          }

          return null;
        } else if ($.isFunction(this.opts.width)) {
          return this.opts.width();
        } else {
          return this.opts.width;
        }
      }

      var width = resolveContainerWidth.call(this);

      if (width !== null) {
        this.container.css('width', width);
      }
    }
  });
  SingleSelect2 = clazz(AbstractSelect2, {
    // single
    createContainer: function createContainer() {
      var container = $(document.createElement('div')).attr({
        "class": 'select2-container'
      }).html(["<a href='javascript:void(0)' class='select2-choice' tabindex='-1'>", "   <span class='select2-chosen'>&nbsp;</span><abbr class='select2-search-choice-close'></abbr>", "   <span class='select2-arrow'><b></b></span>", '</a>', "<input class='select2-focusser select2-offscreen' type='text'/>", "<div class='select2-drop select2-display-none'>", "   <div class='select2-search'>", "       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'/>", '   </div>', "   <ul class='select2-results'>", '   </ul>', '</div>'].join(''));
      return container;
    },
    // single
    enableInterface: function enableInterface() {
      if (this.parent.enableInterface.apply(this, arguments)) {
        this.focusser.prop('disabled', !this.isInterfaceEnabled());
      }
    },
    // single
    opening: function opening() {
      var el, range, len;

      if (this.opts.minimumResultsForSearch >= 0) {
        this.showSearch(true);
      }

      this.parent.opening.apply(this, arguments);

      if (this.showSearchInput !== false) {
        // IE appends focusser.val() at the end of field :/ so we manually insert it at the beginning using a range
        // all other browsers handle this just fine
        this.search.val(this.focusser.val());
      }

      this.search.focus(); // move the cursor to the end after focussing, otherwise it will be at the beginning and
      // new text will appear *before* focusser.val()

      el = this.search.get(0);

      if (el.createTextRange) {
        range = el.createTextRange();
        range.collapse(false);
        range.select();
      } else if (el.setSelectionRange) {
        len = this.search.val().length;
        el.setSelectionRange(len, len);
      }

      this.focusser.prop('disabled', true).val('');
      this.updateResults(true);
      this.opts.element.trigger($.Event('select2-open'));
    },
    // single
    close: function close() {
      if (!this.opened()) return;
      this.parent.close.apply(this, arguments);
      this.focusser.removeAttr('disabled');
      this.focusser.focus();
    },
    // single
    focus: function focus() {
      if (this.opened()) {
        this.close();
      } else {
        this.focusser.removeAttr('disabled');
        this.focusser.focus();
      }
    },
    // single
    isFocused: function isFocused() {
      return this.container.hasClass('select2-container-active');
    },
    // single
    cancel: function cancel() {
      this.parent.cancel.apply(this, arguments);
      this.focusser.removeAttr('disabled');
      this.focusser.focus();
    },
    // single
    initContainer: function initContainer() {
      var selection,
          container = this.container,
          dropdown = this.dropdown;

      if (this.opts.minimumResultsForSearch < 0) {
        this.showSearch(false);
      } else {
        this.showSearch(true);
      }

      this.selection = selection = container.find('.select2-choice');
      this.focusser = container.find('.select2-focusser'); // rewrite labels from original element to focusser

      this.focusser.attr('id', 's2id_autogen' + nextUid());
      $("label[for='" + this.opts.element.attr('id') + "']").attr('for', this.focusser.attr('id'));
      this.focusser.attr('tabindex', this.elementTabIndex);
      this.search.on('keydown', this.bind(function (e) {
        if (!this.isInterfaceEnabled()) return;

        if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {
          // prevent the page from scrolling
          killEvent(e);
          return;
        }

        switch (e.which) {
          case KEY.UP:
          case KEY.DOWN:
            this.moveHighlight(e.which === KEY.UP ? -1 : 1);
            killEvent(e);
            return;

          case KEY.ENTER:
            this.selectHighlighted();
            killEvent(e);
            return;

          case KEY.TAB:
            this.selectHighlighted({
              noFocus: true
            });
            return;

          case KEY.ESC:
            this.cancel(e);
            killEvent(e);
            return;
        }
      }));
      this.search.on('blur', this.bind(function (e) {
        // a workaround for chrome to keep the search field focussed when the scroll bar is used to scroll the dropdown.
        // without this the search field loses focus which is annoying
        if (document.activeElement === this.body().get(0)) {
          window.setTimeout(this.bind(function () {
            this.search.focus();
          }), 0);
        }
      }));
      this.focusser.on('keydown', this.bind(function (e) {
        if (!this.isInterfaceEnabled()) return;

        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {
          return;
        }

        if (this.opts.openOnEnter === false && e.which === KEY.ENTER) {
          killEvent(e);
          return;
        }

        if (e.which == KEY.DOWN || e.which == KEY.UP || e.which == KEY.ENTER && this.opts.openOnEnter) {
          if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) return;
          this.open();
          killEvent(e);
          return;
        }

        if (e.which == KEY.DELETE || e.which == KEY.BACKSPACE) {
          if (this.opts.allowClear) {
            this.clear();
          }

          killEvent(e);
          return;
        }
      }));
      installKeyUpChangeEvent(this.focusser);
      this.focusser.on('keyup-change input', this.bind(function (e) {
        if (this.opts.minimumResultsForSearch >= 0) {
          e.stopPropagation();
          if (this.opened()) return;
          this.open();
        }
      }));
      selection.on('mousedown', 'abbr', this.bind(function (e) {
        if (!this.isInterfaceEnabled()) return;
        this.clear();
        killEventImmediately(e);
        this.close();
        this.selection.focus();
      }));
      selection.on('mousedown', this.bind(function (e) {
        if (!this.container.hasClass('select2-container-active')) {
          this.opts.element.trigger($.Event('select2-focus'));
        }

        if (this.opened()) {
          this.close();
        } else if (this.isInterfaceEnabled()) {
          this.open();
        }

        killEvent(e);
      }));
      dropdown.on('mousedown', this.bind(function () {
        this.search.focus();
      }));
      selection.on('focus', this.bind(function (e) {
        killEvent(e);
      }));
      this.focusser.on('focus', this.bind(function () {
        if (!this.container.hasClass('select2-container-active')) {
          this.opts.element.trigger($.Event('select2-focus'));
        }

        this.container.addClass('select2-container-active');
      })).on('blur', this.bind(function () {
        if (!this.opened()) {
          this.container.removeClass('select2-container-active');
          this.opts.element.trigger($.Event('select2-blur'));
        }
      }));
      this.search.on('focus', this.bind(function () {
        if (!this.container.hasClass('select2-container-active')) {
          this.opts.element.trigger($.Event('select2-focus'));
        }

        this.container.addClass('select2-container-active');
      }));
      this.initContainerWidth();
      this.opts.element.addClass('select2-offscreen');
      this.setPlaceholder();
    },
    // single
    clear: function clear(triggerChange) {
      var data = this.selection.data('select2-data');

      if (data) {
        // guard against queued quick consecutive clicks
        var placeholderOption = this.getPlaceholderOption();
        this.opts.element.val(placeholderOption ? placeholderOption.val() : '');
        this.selection.find('.select2-chosen').empty();
        this.selection.removeData('select2-data');
        this.setPlaceholder();

        if (triggerChange !== false) {
          this.opts.element.trigger({
            type: 'select2-removed',
            val: this.id(data),
            choice: data
          });
          this.triggerChange({
            removed: data
          });
        }
      }
    },

    /**
     * Sets selection based on source element's value
     */
    // single
    initSelection: function initSelection() {
      var selected;

      if (this.isPlaceholderOptionSelected()) {
        this.updateSelection([]);
        this.close();
        this.setPlaceholder();
      } else {
        var self = this;
        this.opts.initSelection.call(null, this.opts.element, function (selected) {
          if (selected !== undefined && selected !== null) {
            self.updateSelection(selected);
            self.close();
            self.setPlaceholder();
          }
        });
      }
    },
    isPlaceholderOptionSelected: function isPlaceholderOptionSelected() {
      var placeholderOption;
      return (placeholderOption = this.getPlaceholderOption()) !== undefined && placeholderOption.is(':selected') || this.opts.element.val() === '' || this.opts.element.val() === undefined || this.opts.element.val() === null;
    },
    // single
    prepareOpts: function prepareOpts() {
      var opts = this.parent.prepareOpts.apply(this, arguments),
          self = this;

      if (opts.element.get(0).tagName.toLowerCase() === 'select') {
        // install the selection initializer
        opts.initSelection = function (element, callback) {
          var selected = element.find(':selected'); // a single select box always has a value, no need to null check 'selected'

          callback(self.optionToData(selected));
        };
      } else if ('data' in opts) {
        // install default initSelection when applied to hidden input and data is local
        opts.initSelection = opts.initSelection || function (element, callback) {
          var id = element.val(); //search in data by id, storing the actual matching item

          var match = null;
          opts.query({
            matcher: function matcher(term, text, el) {
              var is_match = equal(id, opts.id(el));

              if (is_match) {
                match = el;
              }

              return is_match;
            },
            callback: !$.isFunction(callback) ? $.noop : function () {
              callback(match);
            }
          });
        };
      }

      return opts;
    },
    // single
    getPlaceholder: function getPlaceholder() {
      // if a placeholder is specified on a single select without a valid placeholder option ignore it
      if (this.select) {
        if (this.getPlaceholderOption() === undefined) {
          return undefined;
        }
      }

      return this.parent.getPlaceholder.apply(this, arguments);
    },
    // single
    setPlaceholder: function setPlaceholder() {
      var placeholder = this.getPlaceholder();

      if (this.isPlaceholderOptionSelected() && placeholder !== undefined) {
        // check for a placeholder option if attached to a select
        if (this.select && this.getPlaceholderOption() === undefined) return;
        this.selection.find('.select2-chosen').html(this.opts.escapeMarkup(placeholder));
        this.selection.addClass('select2-default');
        this.container.removeClass('select2-allowclear');
      }
    },
    // single
    postprocessResults: function postprocessResults(data, initial, noHighlightUpdate) {
      var selected = 0,
          self = this,
          showSearchInput = true; // find the selected element in the result list

      this.findHighlightableChoices().each2(function (i, elm) {
        if (equal(self.id(elm.data('select2-data')), self.opts.element.val())) {
          selected = i;
          return false;
        }
      }); // and highlight it

      if (noHighlightUpdate !== false) {
        if (initial === true && selected >= 0) {
          this.highlight(selected);
        } else {
          this.highlight(0);
        }
      } // hide the search box if this is the first we got the results and there are enough of them for search


      if (initial === true) {
        var min = this.opts.minimumResultsForSearch;

        if (min >= 0) {
          this.showSearch(countResults(data.results) >= min);
        }
      }
    },
    // single
    showSearch: function showSearch(showSearchInput) {
      if (this.showSearchInput === showSearchInput) return;
      this.showSearchInput = showSearchInput;
      this.dropdown.find('.select2-search').toggleClass('select2-search-hidden', !showSearchInput);
      this.dropdown.find('.select2-search').toggleClass('select2-offscreen', !showSearchInput); //add "select2-with-searchbox" to the container if search box is shown

      $(this.dropdown, this.container).toggleClass('select2-with-searchbox', showSearchInput);
    },
    // single
    onSelect: function onSelect(data, options) {
      if (!this.triggerSelect(data)) {
        return;
      }

      var old = this.opts.element.val(),
          oldData = this.data();
      this.opts.element.val(this.id(data));
      this.updateSelection(data);
      this.opts.element.trigger({
        type: 'select2-selected',
        val: this.id(data),
        choice: data
      });
      this.close();
      if (!options || !options.noFocus) this.selection.focus();

      if (!equal(old, this.id(data))) {
        this.triggerChange({
          added: data,
          removed: oldData
        });
      }
    },
    // single
    updateSelection: function updateSelection(data) {
      var container = this.selection.find('.select2-chosen'),
          formatted,
          cssClass;
      this.selection.data('select2-data', data);
      container.empty();
      formatted = this.opts.formatSelection(data, container, this.opts.escapeMarkup);

      if (formatted !== undefined) {
        container.append(formatted);
      }

      cssClass = this.opts.formatSelectionCssClass(data, container);

      if (cssClass !== undefined) {
        container.addClass(cssClass);
      }

      this.selection.removeClass('select2-default');

      if (this.opts.allowClear && this.getPlaceholder() !== undefined) {
        this.container.addClass('select2-allowclear');
      }
    },
    // single
    val: function val() {
      var val,
          triggerChange = false,
          data = null,
          self = this,
          oldData = this.data();

      if (arguments.length === 0) {
        return this.opts.element.val();
      }

      val = arguments[0];

      if (arguments.length > 1) {
        triggerChange = arguments[1];
      }

      if (this.select) {
        this.select.val(val).find(':selected').each2(function (i, elm) {
          data = self.optionToData(elm);
          return false;
        });
        this.updateSelection(data);
        this.setPlaceholder();

        if (triggerChange) {
          this.triggerChange({
            added: data,
            removed: oldData
          });
        }
      } else {
        // val is an id. !val is true for [undefined,null,'',0] - 0 is legal
        if (!val && val !== 0) {
          this.clear(triggerChange);
          return;
        }

        if (this.opts.initSelection === undefined) {
          throw new Error('cannot call val() if initSelection() is not defined');
        }

        this.opts.element.val(val);
        this.opts.initSelection(this.opts.element, function (data) {
          self.opts.element.val(!data ? '' : self.id(data));
          self.updateSelection(data);
          self.setPlaceholder();

          if (triggerChange) {
            self.triggerChange({
              added: data,
              removed: oldData
            });
          }
        });
      }
    },
    // single
    clearSearch: function clearSearch() {
      this.search.val('');
      this.focusser.val('');
    },
    // single
    data: function data(value, triggerChange) {
      var data;

      if (arguments.length === 0) {
        data = this.selection.data('select2-data');
        if (data == undefined) data = null;
        return data;
      } else {
        if (!value || value === '') {
          this.clear(triggerChange);
        } else {
          data = this.data();
          this.opts.element.val(!value ? '' : this.id(value));
          this.updateSelection(value);

          if (triggerChange) {
            this.triggerChange({
              added: value,
              removed: data
            });
          }
        }
      }
    }
  });
  MultiSelect2 = clazz(AbstractSelect2, {
    // multi
    createContainer: function createContainer() {
      var container = $(document.createElement('div')).attr({
        "class": 'select2-container select2-container-multi'
      }).html(["<ul class='select2-choices'>", "  <li class='select2-search-field'>", "    <input type='text' autocomplete='off' autocorrect='off' autocapitilize='off' spellcheck='false' class='select2-input'>", '  </li>', '</ul>', "<div class='select2-drop select2-drop-multi select2-display-none'>", "   <ul class='select2-results'>", '   </ul>', '</div>'].join(''));
      return container;
    },
    // multi
    prepareOpts: function prepareOpts() {
      var opts = this.parent.prepareOpts.apply(this, arguments),
          self = this; // TODO validate placeholder is a string if specified

      if (opts.element.get(0).tagName.toLowerCase() === 'select') {
        // install sthe selection initializer
        opts.initSelection = function (element, callback) {
          var data = [];
          element.find(':selected').each2(function (i, elm) {
            data.push(self.optionToData(elm));
          });
          callback(data);
        };
      } else if ('data' in opts) {
        // install default initSelection when applied to hidden input and data is local
        opts.initSelection = opts.initSelection || function (element, callback) {
          var ids = splitVal(element.val(), opts.separator); //search in data by array of ids, storing matching items in a list

          var matches = [];
          opts.query({
            matcher: function matcher(term, text, el) {
              var is_match = $.grep(ids, function (id) {
                return equal(id, opts.id(el));
              }).length;

              if (is_match) {
                matches.push(el);
              }

              return is_match;
            },
            callback: !$.isFunction(callback) ? $.noop : function () {
              // reorder matches based on the order they appear in the ids array because right now
              // they are in the order in which they appear in data array
              var ordered = [];

              for (var i = 0; i < ids.length; i++) {
                var id = ids[i];

                for (var j = 0; j < matches.length; j++) {
                  var match = matches[j];

                  if (equal(id, opts.id(match))) {
                    ordered.push(match);
                    matches.splice(j, 1);
                    break;
                  }
                }
              }

              callback(ordered);
            }
          });
        };
      }

      return opts;
    },
    selectChoice: function selectChoice(choice) {
      var selected = this.container.find('.select2-search-choice-focus');

      if (selected.length && choice && choice[0] == selected[0]) {} else {
        if (selected.length) {
          this.opts.element.trigger('choice-deselected', selected);
        }

        selected.removeClass('select2-search-choice-focus');

        if (choice && choice.length) {
          this.close();
          choice.addClass('select2-search-choice-focus');
          this.opts.element.trigger('choice-selected', choice);
        }
      }
    },
    // multi
    initContainer: function initContainer() {
      var selector = '.select2-choices',
          selection;
      this.searchContainer = this.container.find('.select2-search-field');
      this.selection = selection = this.container.find(selector);

      var _this = this;

      this.selection.on('mousedown', '.select2-search-choice', function (e) {
        //killEvent(e);
        _this.search[0].focus();

        _this.selectChoice($(this));
      }); // rewrite labels from original element to focusser

      this.search.attr('id', 's2id_autogen' + nextUid());
      $("label[for='" + this.opts.element.attr('id') + "']").attr('for', this.search.attr('id'));
      this.search.on('input paste', this.bind(function () {
        if (!this.isInterfaceEnabled()) return;

        if (!this.opened()) {
          this.open();
        }
      }));
      this.search.attr('tabindex', this.elementTabIndex);
      this.keydowns = 0;
      this.search.on('keydown', this.bind(function (e) {
        if (!this.isInterfaceEnabled()) return;
        ++this.keydowns;
        var selected = selection.find('.select2-search-choice-focus');
        var prev = selected.prev('.select2-search-choice:not(.select2-locked)');
        var next = selected.next('.select2-search-choice:not(.select2-locked)');
        var pos = getCursorInfo(this.search);

        if (selected.length && (e.which == KEY.LEFT || e.which == KEY.RIGHT || e.which == KEY.BACKSPACE || e.which == KEY.DELETE || e.which == KEY.ENTER)) {
          var selectedChoice = selected;

          if (e.which == KEY.LEFT && prev.length) {
            selectedChoice = prev;
          } else if (e.which == KEY.RIGHT) {
            selectedChoice = next.length ? next : null;
          } else if (e.which === KEY.BACKSPACE) {
            this.unselect(selected.first());
            this.search.width(10);
            selectedChoice = prev.length ? prev : next;
          } else if (e.which == KEY.DELETE) {
            this.unselect(selected.first());
            this.search.width(10);
            selectedChoice = next.length ? next : null;
          } else if (e.which == KEY.ENTER) {
            selectedChoice = null;
          }

          this.selectChoice(selectedChoice);
          killEvent(e);

          if (!selectedChoice || !selectedChoice.length) {
            this.open();
          }

          return;
        } else if ((e.which === KEY.BACKSPACE && this.keydowns == 1 || e.which == KEY.LEFT) && pos.offset == 0 && !pos.length) {
          this.selectChoice(selection.find('.select2-search-choice:not(.select2-locked)').last());
          killEvent(e);
          return;
        } else {
          this.selectChoice(null);
        }

        if (this.opened()) {
          switch (e.which) {
            case KEY.UP:
            case KEY.DOWN:
              this.moveHighlight(e.which === KEY.UP ? -1 : 1);
              killEvent(e);
              return;

            case KEY.ENTER:
              this.selectHighlighted();
              killEvent(e);
              return;

            case KEY.TAB:
              this.selectHighlighted({
                noFocus: true
              });
              this.close();
              return;

            case KEY.ESC:
              this.cancel(e);
              killEvent(e);
              return;
          }
        }

        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.BACKSPACE || e.which === KEY.ESC) {
          return;
        }

        if (e.which === KEY.ENTER) {
          if (this.opts.openOnEnter === false) {
            return;
          } else if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {
            return;
          }
        }

        this.open();

        if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {
          // prevent the page from scrolling
          killEvent(e);
        }

        if (e.which === KEY.ENTER) {
          // prevent form from being submitted
          killEvent(e);
        }
      }));
      this.search.on('keyup', this.bind(function (e) {
        this.keydowns = 0;
        this.resizeSearch();
      }));
      this.search.on('blur', this.bind(function (e) {
        this.container.removeClass('select2-container-active');
        this.search.removeClass('select2-focused');
        this.selectChoice(null);
        if (!this.opened()) this.clearSearch();
        e.stopImmediatePropagation();
        this.opts.element.trigger($.Event('select2-blur'));
      }));
      this.container.on('click', selector, this.bind(function (e) {
        if (!this.isInterfaceEnabled()) return;

        if ($(e.target).closest('.select2-search-choice').length > 0) {
          // clicked inside a select2 search choice, do not open
          return;
        }

        this.selectChoice(null);
        this.clearPlaceholder();

        if (!this.container.hasClass('select2-container-active')) {
          this.opts.element.trigger($.Event('select2-focus'));
        }

        this.open();
        this.focusSearch();
        e.preventDefault();
      }));
      this.container.on('focus', selector, this.bind(function () {
        if (!this.isInterfaceEnabled()) return;

        if (!this.container.hasClass('select2-container-active')) {
          this.opts.element.trigger($.Event('select2-focus'));
        }

        this.container.addClass('select2-container-active');
        this.dropdown.addClass('select2-drop-active');
        this.clearPlaceholder();
      }));
      this.initContainerWidth();
      this.opts.element.addClass('select2-offscreen'); // set the placeholder if necessary

      this.clearSearch();
    },
    // multi
    enableInterface: function enableInterface() {
      if (this.parent.enableInterface.apply(this, arguments)) {
        this.search.prop('disabled', !this.isInterfaceEnabled());
      }
    },
    // multi
    initSelection: function initSelection() {
      var data;

      if (this.opts.element.val() === '' && this.opts.element.text() === '') {
        this.updateSelection([]);
        this.close(); // set the placeholder if necessary

        this.clearSearch();
      }

      if (this.select || this.opts.element.val() !== '') {
        var self = this;
        this.opts.initSelection.call(null, this.opts.element, function (data) {
          if (data !== undefined && data !== null) {
            self.updateSelection(data);
            self.close(); // set the placeholder if necessary

            self.clearSearch();
          }
        });
      }
    },
    // multi
    clearSearch: function clearSearch() {
      var placeholder = this.getPlaceholder(),
          maxWidth = this.getMaxSearchWidth();

      if (placeholder !== undefined && this.getVal().length === 0 && this.search.hasClass('select2-focused') === false) {
        this.search.val(placeholder).addClass('select2-default'); // stretch the search box to full width of the container so as much of the placeholder is visible as possible
        // we could call this.resizeSearch(), but we do not because that requires a sizer and we do not want to create one so early because of a firefox bug, see #944

        this.search.width(maxWidth > 0 ? maxWidth : this.container.css('width'));
      } else {
        this.search.val('').width(10);
      }
    },
    // multi
    clearPlaceholder: function clearPlaceholder() {
      if (this.search.hasClass('select2-default')) {
        this.search.val('').removeClass('select2-default');
      }
    },
    // multi
    opening: function opening() {
      this.clearPlaceholder(); // should be done before super so placeholder is not used to search

      this.resizeSearch();
      this.parent.opening.apply(this, arguments);
      this.focusSearch();
      this.updateResults(true);
      this.search.focus();
      this.opts.element.trigger($.Event('select2-open'));
    },
    // multi
    close: function close() {
      if (!this.opened()) return;
      this.parent.close.apply(this, arguments);
    },
    // multi
    focus: function focus() {
      this.close();
      this.search.focus();
    },
    // multi
    isFocused: function isFocused() {
      return this.search.hasClass('select2-focused');
    },
    // multi
    updateSelection: function updateSelection(data) {
      var ids = [],
          filtered = [],
          self = this; // filter out duplicates

      $(data).each(function () {
        if (indexOf(self.id(this), ids) < 0) {
          ids.push(self.id(this));
          filtered.push(this);
        }
      });
      data = filtered;
      this.selection.find('.select2-search-choice').remove();
      $(data).each(function () {
        self.addSelectedChoice(this);
      });
      self.postprocessResults();
    },
    // multi
    tokenize: function tokenize() {
      var input = this.search.val();
      input = this.opts.tokenizer.call(this, input, this.data(), this.bind(this.onSelect), this.opts);

      if (input != null && input != undefined) {
        this.search.val(input);

        if (input.length > 0) {
          this.open();
        }
      }
    },
    // multi
    onSelect: function onSelect(data, options) {
      if (!this.triggerSelect(data)) {
        return;
      }

      this.addSelectedChoice(data);
      this.opts.element.trigger({
        type: 'selected',
        val: this.id(data),
        choice: data
      });
      if (this.select || !this.opts.closeOnSelect) this.postprocessResults();

      if (this.opts.closeOnSelect) {
        this.close();
        this.search.width(10);
      } else {
        if (this.countSelectableResults() > 0) {
          this.search.width(10);
          this.resizeSearch();

          if (this.getMaximumSelectionSize() > 0 && this.val().length >= this.getMaximumSelectionSize()) {
            // if we reached max selection size repaint the results so choices
            // are replaced with the max selection reached message
            this.updateResults(true);
          }

          this.positionDropdown();
        } else {
          // if nothing left to select close
          this.close();
          this.search.width(10);
        }
      } // since its not possible to select an element that has already been
      // added we do not need to check if this is a new element before firing change


      this.triggerChange({
        added: data
      });
      if (!options || !options.noFocus) this.focusSearch();
    },
    // multi
    cancel: function cancel() {
      this.close();
      this.focusSearch();
    },
    addSelectedChoice: function addSelectedChoice(data) {
      var enableChoice = !data.locked,
          enabledItem = $("<li class='select2-search-choice'>" + '    <div></div>' + "    <a href='#' class='select2-search-choice-close' tabindex='-1'></a>" + '</li>'),
          disabledItem = $("<li class='select2-search-choice select2-locked'>" + '<div></div>' + '</li>');
      var choice = enableChoice ? enabledItem : disabledItem,
          id = this.id(data),
          val = this.getVal(),
          formatted,
          cssClass;
      formatted = this.opts.formatSelection(data, choice.find('div'), this.opts.escapeMarkup);

      if (formatted != undefined) {
        choice.find('div').replaceWith('<div>' + formatted + '</div>');
      }

      cssClass = this.opts.formatSelectionCssClass(data, choice.find('div'));

      if (cssClass != undefined) {
        choice.addClass(cssClass);
      }

      if (enableChoice) {
        choice.find('.select2-search-choice-close').on('mousedown', killEvent).on('click dblclick', this.bind(function (e) {
          if (!this.isInterfaceEnabled()) return;
          $(e.target).closest('.select2-search-choice').fadeOut('fast', this.bind(function () {
            this.unselect($(e.target));
            this.selection.find('.select2-search-choice-focus').removeClass('select2-search-choice-focus');
            this.close();
            this.focusSearch();
          })).dequeue();
          killEvent(e);
        })).on('focus', this.bind(function () {
          if (!this.isInterfaceEnabled()) return;
          this.container.addClass('select2-container-active');
          this.dropdown.addClass('select2-drop-active');
        }));
      }

      choice.data('select2-data', data);
      choice.insertBefore(this.searchContainer);
      val.push(id);
      this.setVal(val);
    },
    // multi
    unselect: function unselect(selected) {
      var val = this.getVal(),
          data,
          index;
      selected = selected.closest('.select2-search-choice');

      if (selected.length === 0) {
        throw 'Invalid argument: ' + selected + '. Must be .select2-search-choice';
      }

      data = selected.data('select2-data');

      if (!data) {
        // prevent a race condition when the 'x' is clicked really fast repeatedly the event can be queued
        // and invoked on an element already removed
        return;
      }

      index = indexOf(this.id(data), val);

      if (index >= 0) {
        val.splice(index, 1);
        this.setVal(val);
        if (this.select) this.postprocessResults();
      }

      selected.remove();
      this.opts.element.trigger({
        type: 'removed',
        val: this.id(data),
        choice: data
      });
      this.triggerChange({
        removed: data
      });
    },
    // multi
    postprocessResults: function postprocessResults(data, initial, noHighlightUpdate) {
      var val = this.getVal(),
          choices = this.results.find('.select2-result'),
          compound = this.results.find('.select2-result-with-children'),
          self = this;
      choices.each2(function (i, choice) {
        var id = self.id(choice.data('select2-data'));

        if (indexOf(id, val) >= 0) {
          choice.addClass('select2-selected'); // mark all children of the selected parent as selected

          choice.find('.select2-result-selectable').addClass('select2-selected');
        }
      });
      compound.each2(function (i, choice) {
        // hide an optgroup if it doesnt have any selectable children
        if (!choice.is('.select2-result-selectable') && choice.find('.select2-result-selectable:not(.select2-selected)').length === 0) {
          choice.addClass('select2-selected');
        }
      });

      if (this.highlight() == -1 && noHighlightUpdate !== false) {
        self.highlight(0);
      } //If all results are chosen render formatNoMAtches


      if (!this.opts.createSearchChoice && !choices.filter('.select2-result:not(.select2-selected)').length > 0) {
        if (!data || data && !data.more && this.results.find('.select2-no-results').length === 0) {
          if (checkFormatter(self.opts.formatNoMatches, 'formatNoMatches')) {
            this.results.append("<li class='select2-no-results'>" + self.opts.formatNoMatches(self.search.val()) + '</li>');
          }
        }
      }
    },
    // multi
    getMaxSearchWidth: function getMaxSearchWidth() {
      return this.selection.width() - getSideBorderPadding(this.search);
    },
    // multi
    resizeSearch: function resizeSearch() {
      var minimumWidth,
          left,
          maxWidth,
          containerLeft,
          searchWidth,
          sideBorderPadding = getSideBorderPadding(this.search);
      minimumWidth = measureTextWidth(this.search) + 10;
      left = this.search.offset().left;
      maxWidth = this.selection.width();
      containerLeft = this.selection.offset().left;
      searchWidth = maxWidth - (left - containerLeft) - sideBorderPadding;

      if (searchWidth < minimumWidth) {
        searchWidth = maxWidth - sideBorderPadding;
      }

      if (searchWidth < 40) {
        searchWidth = maxWidth - sideBorderPadding;
      }

      if (searchWidth <= 0) {
        searchWidth = minimumWidth;
      }

      this.search.width(searchWidth);
    },
    // multi
    getVal: function getVal() {
      var val;

      if (this.select) {
        val = this.select.val();
        return val === null ? [] : val;
      } else {
        val = this.opts.element.val();
        return splitVal(val, this.opts.separator);
      }
    },
    // multi
    setVal: function setVal(val) {
      var unique;

      if (this.select) {
        this.select.val(val);
      } else {
        unique = []; // filter out duplicates

        $(val).each(function () {
          if (indexOf(this, unique) < 0) unique.push(this);
        });
        this.opts.element.val(unique.length === 0 ? '' : unique.join(this.opts.separator));
      }
    },
    // multi
    buildChangeDetails: function buildChangeDetails(old, current) {
      var current = current.slice(0),
          old = old.slice(0); // remove intersection from each array

      for (var i = 0; i < current.length; i++) {
        for (var j = 0; j < old.length; j++) {
          if (equal(this.opts.id(current[i]), this.opts.id(old[j]))) {
            current.splice(i, 1);
            i--;
            old.splice(j, 1);
            j--;
          }
        }
      }

      return {
        added: current,
        removed: old
      };
    },
    // multi
    val: function val(_val, triggerChange) {
      var oldData,
          self = this,
          changeDetails;

      if (arguments.length === 0) {
        return this.getVal();
      }

      oldData = this.data();
      if (!oldData.length) oldData = []; // val is an id. !val is true for [undefined,null,'',0] - 0 is legal

      if (!_val && _val !== 0) {
        this.opts.element.val('');
        this.updateSelection([]);
        this.clearSearch();

        if (triggerChange) {
          this.triggerChange({
            added: this.data(),
            removed: oldData
          });
        }

        return;
      } // val is a list of ids


      this.setVal(_val);

      if (this.select) {
        this.opts.initSelection(this.select, this.bind(this.updateSelection));

        if (triggerChange) {
          this.triggerChange(this.buildChangeDetails(oldData, this.data()));
        }
      } else {
        if (this.opts.initSelection === undefined) {
          throw new Error('val() cannot be called if initSelection() is not defined');
        }

        this.opts.initSelection(this.opts.element, function (data) {
          var ids = $.map(data, self.id);
          self.setVal(ids);
          self.updateSelection(data);
          self.clearSearch();

          if (triggerChange) {
            self.triggerChange(this.buildChangeDetails(oldData, this.data()));
          }
        });
      }

      this.clearSearch();
    },
    // multi
    onSortStart: function onSortStart() {
      if (this.select) {
        throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");
      } // collapse search field into 0 width so its container can be collapsed as well


      this.search.width(0); // hide the container

      this.searchContainer.hide();
    },
    // multi
    onSortEnd: function onSortEnd() {
      var val = [],
          self = this; // show search and move it to the end of the list

      this.searchContainer.show(); // make sure the search container is the last item in the list

      this.searchContainer.appendTo(this.searchContainer.parent()); // since we collapsed the width in dragStarted, we resize it here

      this.resizeSearch(); // update selection

      this.selection.find('.select2-search-choice').each(function () {
        val.push(self.opts.id($(this).data('select2-data')));
      });
      this.setVal(val);
      this.triggerChange();
    },
    // multi
    data: function data(values, triggerChange) {
      var self = this,
          ids,
          old;

      if (arguments.length === 0) {
        return this.selection.find('.select2-search-choice').map(function () {
          return $(this).data('select2-data');
        }).get();
      } else {
        old = this.data();

        if (!values) {
          values = [];
        }

        ids = $.map(values, function (e) {
          return self.opts.id(e);
        });
        this.setVal(ids);
        this.updateSelection(values);
        this.clearSearch();

        if (triggerChange) {
          this.triggerChange(this.buildChangeDetails(old, this.data()));
        }
      }
    }
  });

  $.fn.select2 = function () {
    var args = Array.prototype.slice.call(arguments, 0),
        opts,
        select2,
        method,
        value,
        multiple,
        allowedMethods = ['val', 'destroy', 'opened', 'open', 'close', 'focus', 'isFocused', 'container', 'dropdown', 'onSortStart', 'onSortEnd', 'enable', 'readonly', 'positionDropdown', 'data', 'search'],
        valueMethods = ['val', 'opened', 'isFocused', 'container', 'data'],
        methodsMap = {
      search: 'externalSearch'
    };
    this.each(function () {
      if (args.length === 0 || _typeof(args[0]) === 'object') {
        opts = args.length === 0 ? {} : $.extend({}, args[0]);
        opts.element = $(this);

        if (opts.element.get(0).tagName.toLowerCase() === 'select') {
          multiple = opts.element.prop('multiple');
        } else {
          multiple = opts.multiple || false;

          if ('tags' in opts) {
            opts.multiple = multiple = true;
          }
        }

        select2 = multiple ? new MultiSelect2() : new SingleSelect2();
        select2.init(opts);
      } else if (typeof args[0] === 'string') {
        if (indexOf(args[0], allowedMethods) < 0) {
          throw 'Unknown method: ' + args[0];
        }

        value = undefined;
        select2 = $(this).data('select2');
        if (select2 === undefined) return;
        method = args[0];

        if (method === 'container') {
          value = select2.container;
        } else if (method === 'dropdown') {
          value = select2.dropdown;
        } else {
          if (methodsMap[method]) method = methodsMap[method];
          value = select2[method].apply(select2, args.slice(1));
        }

        if (indexOf(args[0], valueMethods) >= 0) {
          return false;
        }
      } else {
        throw 'Invalid arguments to select2 plugin: ' + args;
      }
    });
    return value === undefined ? this : value;
  }; // plugin defaults, accessible to users


  $.fn.select2.defaults = {
    width: 'copy',
    loadMorePadding: 0,
    closeOnSelect: true,
    openOnEnter: true,
    containerCss: {},
    dropdownCss: {},
    containerCssClass: '',
    dropdownCssClass: '',
    formatResult: function formatResult(result, container, query, escapeMarkup) {
      var markup = [];
      markMatch(result.text, query.term, markup, escapeMarkup);
      return markup.join('');
    },
    formatSelection: function formatSelection(data, container, escapeMarkup) {
      return data ? escapeMarkup(data.text) : undefined;
    },
    sortResults: function sortResults(results, container, query) {
      return results;
    },
    formatResultCssClass: function formatResultCssClass(data) {
      return undefined;
    },
    formatSelectionCssClass: function formatSelectionCssClass(data, container) {
      return undefined;
    },
    formatNoMatches: function formatNoMatches() {
      return 'No matches found';
    },
    formatInputTooShort: function formatInputTooShort(input, min) {
      var n = min - input.length;
      return 'Please enter ' + n + ' more character' + (n == 1 ? '' : 's');
    },
    formatInputTooLong: function formatInputTooLong(input, max) {
      var n = input.length - max;
      return 'Please delete ' + n + ' character' + (n == 1 ? '' : 's');
    },
    formatSelectionTooBig: function formatSelectionTooBig(limit) {
      return 'You can only select ' + limit + ' item' + (limit == 1 ? '' : 's');
    },
    formatLoadMore: function formatLoadMore(pageNumber) {
      return 'Loading more results...';
    },
    formatSearching: function formatSearching() {
      return 'Searching...';
    },
    minimumResultsForSearch: 0,
    minimumInputLength: 0,
    maximumInputLength: null,
    maximumSelectionSize: 0,
    id: function id(e) {
      return e.id;
    },
    matcher: function matcher(term, text) {
      return ('' + text).toUpperCase().indexOf(('' + term).toUpperCase()) >= 0;
    },
    separator: ',',
    tokenSeparators: [],
    tokenizer: defaultTokenizer,
    escapeMarkup: defaultEscapeMarkup,
    blurOnChange: false,
    selectOnBlur: false,
    adaptContainerCssClass: function adaptContainerCssClass(c) {
      return c;
    },
    adaptDropdownCssClass: function adaptDropdownCssClass(c) {
      return null;
    }
  };
  $.fn.select2.ajaxDefaults = {
    transport: $.ajax,
    params: {
      type: 'GET',
      cache: false,
      dataType: 'json'
    }
  }; // exports

  window.Select2 = {
    query: {
      ajax: ajax,
      local: local,
      tags: tags
    },
    util: {
      debounce: debounce,
      markMatch: markMatch,
      escapeMarkup: defaultEscapeMarkup
    },
    "class": {
      "abstract": AbstractSelect2,
      single: SingleSelect2,
      multi: MultiSelect2
    }
  };
})(jQuery);

/***/ }),

/***/ 22574:
/*!*******************************************************!*\
  !*** ./public/bundles/pimui/lib/slimbox2/slimbox2.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ 49845);
/*
	Slimbox v2.04 - The ultimate lightweight Lightbox clone for jQuery
	(c) 2007-2010 Christophe Beyls <http://www.digitalia.be>
	MIT-style license.
*/
(function (w) {
  var E = w(window),
      u,
      f,
      F = -1,
      n,
      x,
      D,
      v,
      y,
      L,
      r,
      m = !window.XMLHttpRequest,
      s = [],
      l = document.documentElement,
      k = {},
      t = new Image(),
      J = new Image(),
      H,
      a,
      g,
      p,
      I,
      d,
      G,
      c,
      A,
      K;
  w(function () {
    w('body').append(w([H = w('<div id="lbOverlay"></div>')[0], a = w('<div id="lbCenter"></div>')[0], G = w('<div id="lbBottomContainer"></div>')[0]]).css('display', 'none'));
    g = w('<div id="lbImage"></div>').appendTo(a).append(p = w('<div style="position: relative;"></div>').append([I = w('<a id="lbPrevLink" href="#"></a>').click(B)[0], d = w('<a id="lbNextLink" href="#"></a>').click(e)[0]])[0])[0];
    c = w('<div id="lbBottom"></div>').appendTo(G).append([w('<a id="lbCloseLink" href="#"></a>').add(H).click(C)[0], A = w('<div id="lbCaption"></div>')[0], K = w('<div id="lbNumber"></div>')[0], w('<div style="clear: both;"></div>')[0]])[0];
  });

  w.slimbox = function (O, N, M) {
    u = w.extend({
      loop: false,
      overlayOpacity: 0.8,
      overlayFadeDuration: 400,
      resizeDuration: 400,
      resizeEasing: 'swing',
      initialWidth: 250,
      initialHeight: 250,
      imageFadeDuration: 400,
      captionAnimationDuration: 400,
      counterText: 'Image {x} of {y}',
      closeKeys: [27, 88, 67],
      previousKeys: [37, 80],
      nextKeys: [39, 78]
    }, M);

    if (typeof O == 'string') {
      O = [[O, N]];
      N = 0;
    }

    y = E.scrollTop() + E.height() / 2;
    L = u.initialWidth;
    r = u.initialHeight;
    w(a).css({
      top: Math.max(0, y - r / 2),
      width: L,
      height: r,
      marginLeft: -L / 2
    }).show();
    v = m || H.currentStyle && H.currentStyle.position != 'fixed';

    if (v) {
      H.style.position = 'absolute';
    }

    w(H).css('opacity', u.overlayOpacity).fadeIn(u.overlayFadeDuration);
    z();
    j(1);
    f = O;
    u.loop = u.loop && f.length > 1;
    return b(N);
  };

  w.fn.slimbox = function (M, P, O) {
    P = P || function (Q) {
      return [Q.href, Q.title];
    };

    O = O || function () {
      return true;
    };

    var N = this;
    return N.off('click').click(function () {
      var S = this,
          U = 0,
          T,
          Q = 0,
          R;
      T = w.grep(N, function (W, V) {
        return O.call(S, W, V);
      });

      for (R = T.length; Q < R; ++Q) {
        if (T[Q] == S) {
          U = Q;
        }

        T[Q] = P(T[Q], Q);
      }

      return w.slimbox(T, U, M);
    });
  };

  function z() {
    var N = E.scrollLeft(),
        M = E.width();
    w([a, G]).css('left', N + M / 2);

    if (v) {
      w(H).css({
        left: N,
        top: E.scrollTop(),
        width: M,
        height: E.height()
      });
    }
  }

  function j(M) {
    if (M) {
      w('object').add(m ? 'select' : 'embed').each(function (O, P) {
        s[O] = [P, P.style.visibility];
        P.style.visibility = 'hidden';
      });
    } else {
      w.each(s, function (O, P) {
        P[0].style.visibility = P[1];
      });
      s = [];
    }

    var N = M ? 'bind' : 'unbind';
    E[N]('scroll resize', z);
    w(document)[N]('keydown', o);
  }

  function o(O) {
    var N = O.keyCode,
        M = w.inArray;
    return M(N, u.closeKeys) >= 0 ? C() : M(N, u.nextKeys) >= 0 ? e() : M(N, u.previousKeys) >= 0 ? B() : false;
  }

  function B() {
    return b(x);
  }

  function e() {
    return b(D);
  }

  function b(M) {
    if (M >= 0) {
      F = M;
      n = f[F][0];
      x = (F || (u.loop ? f.length : 0)) - 1;
      D = (F + 1) % f.length || (u.loop ? 0 : -1);
      q();
      a.className = 'lbLoading';
      k = new Image();
      k.onload = i;
      k.src = n;
    }

    return false;
  }

  function i() {
    a.className = ''; // https://stackoverflow.com/questions/3257059/limit-slimbox-lightbox-image-to-window-size

    var winWidth = w(window).width() - 20;
    var winHeight = w(window).height() - 20;
    var maxSize = winWidth > winHeight ? winHeight : winWidth;
    var my_w = k.width;
    var my_h = k.height;

    if (my_w > my_h) {
      my_h = maxSize * my_h / my_w;
      my_w = maxSize;
    } else {
      my_w = maxSize * my_w / my_h;
      my_h = maxSize;
    }

    if (k.width > my_w || k.height > my_h) {
      w(g).css({
        backgroundImage: 'url(' + n + ')',
        backgroundSize: my_w + 'px ' + my_h + 'px',
        visibility: 'hidden',
        display: ''
      });
      w(p).width(my_w);
      w([p, I, d]).height(my_h);
    } else {
      w(g).css({
        backgroundImage: 'url(' + n + ')',
        visibility: 'hidden',
        display: ''
      });
      w(p).width(k.width);
      w([p, I, d]).height(k.height);
    }

    w(A).html(f[F][1] || '');
    w(K).html((f.length > 1 && u.counterText || '').replace(/{x}/, F + 1).replace(/{y}/, f.length));

    if (x >= 0) {
      t.src = f[x][0];
    }

    if (D >= 0) {
      J.src = f[D][0];
    }

    L = g.offsetWidth;
    r = g.offsetHeight;
    var M = Math.max(0, y - r / 2);

    if (a.offsetHeight != r) {
      w(a).animate({
        height: r,
        top: M
      }, u.resizeDuration, u.resizeEasing);
    }

    if (a.offsetWidth != L) {
      w(a).animate({
        width: L,
        marginLeft: -L / 2
      }, u.resizeDuration, u.resizeEasing);
    }

    w(a).queue(function () {
      w(G).css({
        width: L,
        top: M + r,
        marginLeft: -L / 2,
        visibility: 'hidden',
        display: ''
      });
      w(g).css({
        display: 'none',
        visibility: '',
        opacity: ''
      }).fadeIn(u.imageFadeDuration, h);
    });
  }

  function h() {
    if (x >= 0) {
      w(I).show();
    }

    if (D >= 0) {
      w(d).show();
    }

    w(c).css('marginTop', -c.offsetHeight).animate({
      marginTop: 0
    }, u.captionAnimationDuration);
    G.style.visibility = '';
  }

  function q() {
    k.onload = null;
    k.src = t.src = J.src = n;
    w([a, g, c]).stop(true);
    w([I, d, g, G]).hide();
  }

  function C() {
    if (F >= 0) {
      q();
      F = x = D = -1;
      w(a).hide();
      w(H).stop().fadeOut(u.overlayFadeDuration, j);
    }

    return false;
  }
})(jQuery);

/***/ }),

/***/ 29959:
/*!**************************************************!*\
  !*** ./public/bundles/pimuser/js/form/delete.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * User delete extension
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2018 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/delete */ 60721), __webpack_require__(/*! pim/remover/user */ 66016)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (DeleteForm, UserRemover) {
  return DeleteForm.extend({
    remover: UserRemover,

    /**
     * {@inheritdoc}
     */
    getIdentifier: function getIdentifier() {
      return this.getFormData().meta.id;
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 318:
/*!*****************************************************!*\
  !*** ./public/bundles/pimuser/js/form/edit-form.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @copyright 2021 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */


!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! pim/form/common/edit-form */ 2891), __webpack_require__(/*! pim/user-context */ 46862)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (BaseEditForm, UserContext) {
  return BaseEditForm.extend({
    /**
     * {@inheritdoc}
     */
    configure: function configure() {
      this.on('pim_enrich:form:entity:post_fetch', this._refreshUserContext);
      return BaseEditForm.prototype.configure.apply(this, arguments);
    },
    _refreshUserContext: function _refreshUserContext() {
      UserContext.refresh();
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 11184:
/*!**************************************************!*\
  !*** ./public/bundles/pimuser/js/init-signin.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ 49845)], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {
  return function () {
    var hashUrl = window.location.hash;
    var hashUrlTag = '#';
    var hashArray;

    if (hashUrl.length && hashUrl.match(hashUrlTag)) {
      if (hashUrl.indexOf('|') !== -1) {
        hashUrl = hashUrl.substring(0, hashUrl.indexOf('|'));
      }

      hashUrl = hashUrl.replace(hashUrlTag, '');
      hashArray = hashUrl.split('php');

      if (hashArray[1]) {
        hashUrl = hashArray[1];
      }

      $('input[name="_target_path"]').val(hashUrl);
    }
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 66016:
/*!***************************************************!*\
  !*** ./public/bundles/pimuser/js/remover/user.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __moduleConfig = {"url":"pim_user_user_rest_delete"} ; 'use strict';
/**
 * Module to remove user
 *
 * @author    Pierre Allard <pierre.allard@akeneo.com>
 * @copyright 2018 Akeneo SAS (http://www.akeneo.com)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ 13469), __webpack_require__(/*! pim/remover/base */ 44206), __webpack_require__(/*! routing */ 60847)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, BaseRemover, Routing) {
  return _.extend({}, BaseRemover, {
    /**
     * {@inheritdoc}
     */
    getUrl: function getUrl(code) {
      return Routing.generate(__moduleConfig.url, {
        identifier: code
      });
    }
  });
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 76925:
/*!*****************************************************************************!*\
  !*** ./vendor/akeneo/pim-community-dev/frontend/webpack/require-context.js ***!
  \*****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! module-registry */ 2302)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (moduleRegistry) {
  return function (moduleName) {
    return moduleRegistry(moduleName);
  };
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 2302:
/*!**************************************!*\
  !*** ./public/js/module-registry.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = function(moduleName) {
            const paths = {'akeneocategory/js/category/history':/*require.resolve*/(/*! akeneocategory/js/category/history */ 77872),'akeneocategory/js/controller/CategoriesSettings':/*require.resolve*/(/*! akeneocategory/js/controller/CategoriesSettings */ 19702),'akeneocommunicationchannel/bridge/view/panel':/*require.resolve*/(/*! akeneocommunicationchannel/bridge/view/panel */ 44290),'akeneocommunicationchannel/menu/communication-channel':/*require.resolve*/(/*! akeneocommunicationchannel/menu/communication-channel */ 90312),'akeneoconnectivityconnection/js/controller/apps':/*require.resolve*/(/*! akeneoconnectivityconnection/js/controller/apps */ 9570),'akeneoconnectivityconnection/js/controller/audit':/*require.resolve*/(/*! akeneoconnectivityconnection/js/controller/audit */ 90514),'akeneoconnectivityconnection/js/controller/connected-apps':/*require.resolve*/(/*! akeneoconnectivityconnection/js/controller/connected-apps */ 13720),'akeneoconnectivityconnection/js/controller/error-management':/*require.resolve*/(/*! akeneoconnectivityconnection/js/controller/error-management */ 8990),'akeneoconnectivityconnection/js/controller/marketplace':/*require.resolve*/(/*! akeneoconnectivityconnection/js/controller/marketplace */ 20802),'akeneoconnectivityconnection/js/controller/settings':/*require.resolve*/(/*! akeneoconnectivityconnection/js/controller/settings */ 54291),'akeneoconnectivityconnection/js/controller/webhook':/*require.resolve*/(/*! akeneoconnectivityconnection/js/controller/webhook */ 55326),'akeneoconnectivityconnection/js/dependencies':/*require.resolve*/(/*! akeneoconnectivityconnection/js/dependencies */ 73617),'akeneoconnectivityconnection/js/menu/connection-params-provider':/*require.resolve*/(/*! akeneoconnectivityconnection/js/menu/connection-params-provider */ 28974),'akeneoconnectivityconnection/js/menu/highlight-menu':/*require.resolve*/(/*! akeneoconnectivityconnection/js/menu/highlight-menu */ 86210),'akeneoconnectivityconnection/js/react/react-controller':/*require.resolve*/(/*! akeneoconnectivityconnection/js/react/react-controller */ 36789),'akeneoconnectivityconnection/js/react/react-element-helper':/*require.resolve*/(/*! akeneoconnectivityconnection/js/react/react-element-helper */ 83583),'akeneoconnectivityconnection/js/registry/permission-form-registry':/*require.resolve*/(/*! akeneoconnectivityconnection/js/registry/permission-form-registry */ 98329),'akeneodataqualityinsights/js/controller/dqi-dashboard':/*require.resolve*/(/*! akeneodataqualityinsights/js/controller/dqi-dashboard */ 8906),'akeneodataqualityinsights/js/infrastructure/attribute-group/dqi-activation':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/attribute-group/dqi-activation */ 86176),'akeneodataqualityinsights/js/infrastructure/datagrid/cell/quality-score-badge-cell':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/datagrid/cell/quality-score-badge-cell */ 17029),'akeneodataqualityinsights/js/infrastructure/dqi-dashboard/base-dashboard':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/dqi-dashboard/base-dashboard */ 16586),'akeneodataqualityinsights/js/infrastructure/dqi-dashboard/channel-switcher':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/dqi-dashboard/channel-switcher */ 52419),'akeneodataqualityinsights/js/infrastructure/dqi-dashboard/dashboard-filters':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/dqi-dashboard/dashboard-filters */ 18800),'akeneodataqualityinsights/js/infrastructure/dqi-dashboard/locale-switcher':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/dqi-dashboard/locale-switcher */ 38381),'akeneodataqualityinsights/js/infrastructure/dqi-dashboard/section':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/dqi-dashboard/section */ 77755),'akeneodataqualityinsights/js/infrastructure/pim-view/back-link':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/pim-view/back-link */ 22537),'akeneodataqualityinsights/js/infrastructure/product-edit-form/attribute-filter-all-missing-attributes':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/product-edit-form/attribute-filter-all-missing-attributes */ 679),'akeneodataqualityinsights/js/infrastructure/product-edit-form/attributes-tab-content':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/product-edit-form/attributes-tab-content */ 47949),'akeneodataqualityinsights/js/infrastructure/product-edit-form/data-quality-insights-app':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/product-edit-form/data-quality-insights-app */ 26627),'akeneodataqualityinsights/js/infrastructure/product-edit-form/data-quality-insights-tab-content':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/product-edit-form/data-quality-insights-tab-content */ 77064),'akeneodataqualityinsights/js/infrastructure/product-edit-form/product-quality-score':/*require.resolve*/(/*! akeneodataqualityinsights/js/infrastructure/product-edit-form/product-quality-score */ 45744),'akeneoidentifiergenerator/js/controller/identifier-generator':/*require.resolve*/(/*! akeneoidentifiergenerator/js/controller/identifier-generator */ 10606),'akeneoidentifiergenerator/js/dependencies':/*require.resolve*/(/*! akeneoidentifiergenerator/js/dependencies */ 52273),'akeneojob/js/bridge/controller/job-instance':/*require.resolve*/(/*! akeneojob/js/bridge/controller/job-instance */ 49980),'akeneojob/js/bridge/controller/process-tracker':/*require.resolve*/(/*! akeneojob/js/bridge/controller/process-tracker */ 37459),'akeneomeasure/bridge/controller/settings':/*require.resolve*/(/*! akeneomeasure/bridge/controller/settings */ 58098),'akeneomeasure/bridge/dependencies':/*require.resolve*/(/*! akeneomeasure/bridge/dependencies */ 5267),'akeneopimstructure/js/attribute-option/AttributeOptionsApp':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/AttributeOptionsApp */ 51806),'akeneopimstructure/js/attribute-option/components/AttributeOptionForm':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/AttributeOptionForm */ 13776),'akeneopimstructure/js/attribute-option/components/AttributeOptionQualityBadge':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/AttributeOptionQualityBadge */ 63596),'akeneopimstructure/js/attribute-option/components/AttributeOptionRow':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/AttributeOptionRow */ 65481),'akeneopimstructure/js/attribute-option/components/AttributeOptionTable':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/AttributeOptionTable */ 89847),'akeneopimstructure/js/attribute-option/components/AttributeOptions':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/AttributeOptions */ 72658),'akeneopimstructure/js/attribute-option/components/AutoOptionSorting':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/AutoOptionSorting */ 24960),'akeneopimstructure/js/attribute-option/components/DeleteConfirmationModal':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/DeleteConfirmationModal */ 60768),'akeneopimstructure/js/attribute-option/components/Edit':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/Edit */ 83218),'akeneopimstructure/js/attribute-option/components/EmptyAttributeOptionsList':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/EmptyAttributeOptionsList */ 9583),'akeneopimstructure/js/attribute-option/components/New':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/New */ 20630),'akeneopimstructure/js/attribute-option/components/NewOptionPlaceholder':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/NewOptionPlaceholder */ 51781),'akeneopimstructure/js/attribute-option/components/NoResultOnSearch':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/NoResultOnSearch */ 5254),'akeneopimstructure/js/attribute-option/components/OverridePimStyles':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/OverridePimStyles */ 55010),'akeneopimstructure/js/attribute-option/components/QualityBadge':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/components/QualityBadge */ 62501),'akeneopimstructure/js/attribute-option/contexts/AttributeContext':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/contexts/AttributeContext */ 10502),'akeneopimstructure/js/attribute-option/contexts/AttributeOptionsContextProvider':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/contexts/AttributeOptionsContextProvider */ 65882),'akeneopimstructure/js/attribute-option/contexts/EditingOptionContext':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/contexts/EditingOptionContext */ 67723),'akeneopimstructure/js/attribute-option/contexts/LocalesContext':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/contexts/LocalesContext */ 42003),'akeneopimstructure/js/attribute-option/contexts/index':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/contexts/index */ 37564),'akeneopimstructure/js/attribute-option/fetchers/baseFetcher':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/fetchers/baseFetcher */ 51195),'akeneopimstructure/js/attribute-option/helper/getQualityBadgeLevel':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/helper/getQualityBadgeLevel */ 11762),'akeneopimstructure/js/attribute-option/hooks/index':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/index */ 66528),'akeneopimstructure/js/attribute-option/hooks/useAttributeContextState':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useAttributeContextState */ 42911),'akeneopimstructure/js/attribute-option/hooks/useCreateAttributeOption':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useCreateAttributeOption */ 78823),'akeneopimstructure/js/attribute-option/hooks/useDeleteAttributeOption':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useDeleteAttributeOption */ 36648),'akeneopimstructure/js/attribute-option/hooks/useEditingOptionContextState':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useEditingOptionContextState */ 20769),'akeneopimstructure/js/attribute-option/hooks/useLocales':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useLocales */ 67775),'akeneopimstructure/js/attribute-option/hooks/useManualSortAttributeOptions':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useManualSortAttributeOptions */ 46663),'akeneopimstructure/js/attribute-option/hooks/useSaveAttributeOption':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useSaveAttributeOption */ 520),'akeneopimstructure/js/attribute-option/hooks/useScrollIntoView':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useScrollIntoView */ 56157),'akeneopimstructure/js/attribute-option/hooks/useSortedAttributeOptions':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/hooks/useSortedAttributeOptions */ 29225),'akeneopimstructure/js/attribute-option/index':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/index */ 5701),'akeneopimstructure/js/attribute-option/model/AttributeOption.interface':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/model/AttributeOption.interface */ 94956),'akeneopimstructure/js/attribute-option/model/Events':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/model/Events */ 36278),'akeneopimstructure/js/attribute-option/model/Locale.interface':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/model/Locale.interface */ 49989),'akeneopimstructure/js/attribute-option/model/SpellcheckEvaluation':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/model/SpellcheckEvaluation */ 26636),'akeneopimstructure/js/attribute-option/model/index':/*require.resolve*/(/*! akeneopimstructure/js/attribute-option/model/index */ 85044),'akeneopimstructure/js/controller/AssociationTypesSettings':/*require.resolve*/(/*! akeneopimstructure/js/controller/AssociationTypesSettings */ 38867),'akeneopimstructure/js/controller/AttributeGroupsSettings':/*require.resolve*/(/*! akeneopimstructure/js/controller/AttributeGroupsSettings */ 45110),'akeneopimstructure/js/controller/LocalesSettings':/*require.resolve*/(/*! akeneopimstructure/js/controller/LocalesSettings */ 70058),'pimanalytics/js/SystemInfo':/*require.resolve*/(/*! pimanalytics/js/SystemInfo */ 13013),'pimanalytics/js/SystemInfoApp':/*require.resolve*/(/*! pimanalytics/js/SystemInfoApp */ 26446),'pimanalytics/js/SystemInfoFetcher':/*require.resolve*/(/*! pimanalytics/js/SystemInfoFetcher */ 9655),'pimanalytics/js/SystemInfoHook':/*require.resolve*/(/*! pimanalytics/js/SystemInfoHook */ 70998),'pimanalytics/js/controller/system-info-controller':/*require.resolve*/(/*! pimanalytics/js/controller/system-info-controller */ 76149),'pimdatagrid/js/datafilter/filters-column':/*require.resolve*/(/*! pimdatagrid/js/datafilter/filters-column */ 16501),'pimdatagrid/js/datafilter/filters-selector':/*require.resolve*/(/*! pimdatagrid/js/datafilter/filters-selector */ 91729),'pimdatagrid/js/datagrid/ProductGalleryRow':/*require.resolve*/(/*! pimdatagrid/js/datagrid/ProductGalleryRow */ 85474),'pimdatagrid/js/datagrid/action/delete-confirm':/*require.resolve*/(/*! pimdatagrid/js/datagrid/action/delete-confirm */ 25567),'pimdatagrid/js/datagrid/column-selector':/*require.resolve*/(/*! pimdatagrid/js/datagrid/column-selector */ 8813),'pimdatagrid/js/datagrid/header-cell/attribute-header-cell':/*require.resolve*/(/*! pimdatagrid/js/datagrid/header-cell/attribute-header-cell */ 27519),'pimdatagrid/js/datagrid/quickexport/component/Form':/*require.resolve*/(/*! pimdatagrid/js/datagrid/quickexport/component/Form */ 70593),'pimdatagrid/js/datagrid/quickexport/component/Option':/*require.resolve*/(/*! pimdatagrid/js/datagrid/quickexport/component/Option */ 85999),'pimdatagrid/js/datagrid/quickexport/component/QuickExportConfigurator':/*require.resolve*/(/*! pimdatagrid/js/datagrid/quickexport/component/QuickExportConfigurator */ 28247),'pimdatagrid/js/datagrid/quickexport/component/Select':/*require.resolve*/(/*! pimdatagrid/js/datagrid/quickexport/component/Select */ 84114),'pimimportexport/js/job/common/edit/storage-form':/*require.resolve*/(/*! pimimportexport/js/job/common/edit/storage-form */ 89833),'pimui/js/CategoryTreeFetcher':/*require.resolve*/(/*! pimui/js/CategoryTreeFetcher */ 40397),'pimui/js/TreeAssociate':/*require.resolve*/(/*! pimui/js/TreeAssociate */ 41314),'pimui/js/TreeView':/*require.resolve*/(/*! pimui/js/TreeView */ 32906),'pimui/js/attribute/form/CreateAttributeButtonApp':/*require.resolve*/(/*! pimui/js/attribute/form/CreateAttributeButtonApp */ 87044),'pimui/js/attribute/form/CreateAttributeCodeAndLabel':/*require.resolve*/(/*! pimui/js/attribute/form/CreateAttributeCodeAndLabel */ 21607),'pimui/js/attribute/form/SelectAttributeType':/*require.resolve*/(/*! pimui/js/attribute/form/SelectAttributeType */ 6794),'pimui/js/attribute/form/choices':/*require.resolve*/(/*! pimui/js/attribute/form/choices */ 95102),'pimui/js/attribute/form/delete/DeleteAction':/*require.resolve*/(/*! pimui/js/attribute/form/delete/DeleteAction */ 69386),'pimui/js/attribute/form/delete/DeleteModal':/*require.resolve*/(/*! pimui/js/attribute/form/delete/DeleteModal */ 97638),'pimui/js/attribute/form/delete':/*require.resolve*/(/*! pimui/js/attribute/form/delete */ 888),'pimui/js/attribute/form/properties/default-bool-value':/*require.resolve*/(/*! pimui/js/attribute/form/properties/default-bool-value */ 12612),'pimui/js/attribute/form/properties/guidelines':/*require.resolve*/(/*! pimui/js/attribute/form/properties/guidelines */ 76625),'pimui/js/config-registry':/*require.resolve*/(/*! pimui/js/config-registry */ 63124),'pimui/js/controller/catalog-volume':/*require.resolve*/(/*! pimui/js/controller/catalog-volume */ 12623),'pimui/js/controller/config':/*require.resolve*/(/*! pimui/js/controller/config */ 39877),'pimui/js/controller/dashboard':/*require.resolve*/(/*! pimui/js/controller/dashboard */ 10178),'pimui/js/controller/entity-categories-with-family-variant':/*require.resolve*/(/*! pimui/js/controller/entity-categories-with-family-variant */ 6001),'pimui/js/controller/settings':/*require.resolve*/(/*! pimui/js/controller/settings */ 59158),'pimui/js/controller/system-index':/*require.resolve*/(/*! pimui/js/controller/system-index */ 49562),'pimui/js/datagrid/action/delete-attribute-action':/*require.resolve*/(/*! pimui/js/datagrid/action/delete-attribute-action */ 29595),'pimui/js/datagrid/reactCell':/*require.resolve*/(/*! pimui/js/datagrid/reactCell */ 35920),'pimui/js/family/grid/mass-actions':/*require.resolve*/(/*! pimui/js/family/grid/mass-actions */ 47496),'pimui/js/feature-flags':/*require.resolve*/(/*! pimui/js/feature-flags */ 5857),'pimui/js/filter/product/category/Selector':/*require.resolve*/(/*! pimui/js/filter/product/category/Selector */ 73344),'pimui/js/form/common/attributes/create-button':/*require.resolve*/(/*! pimui/js/form/common/attributes/create-button */ 30730),'pimui/js/form/common/fields/available-locales':/*require.resolve*/(/*! pimui/js/form/common/fields/available-locales */ 3994),'pimui/js/form/common/fields/copiable-text':/*require.resolve*/(/*! pimui/js/form/common/fields/copiable-text */ 66681),'pimui/js/form/common/fields/media':/*require.resolve*/(/*! pimui/js/form/common/fields/media */ 2609),'pimui/js/form/common/fields/number':/*require.resolve*/(/*! pimui/js/form/common/fields/number */ 13832),'pimui/js/form/common/fields/password':/*require.resolve*/(/*! pimui/js/form/common/fields/password */ 18827),'pimui/js/form/common/product/product-grid-title':/*require.resolve*/(/*! pimui/js/form/common/product/product-grid-title */ 64376),'pimui/js/form/common/product/product-grid-view-title-context':/*require.resolve*/(/*! pimui/js/form/common/product/product-grid-view-title-context */ 6442),'pimui/js/form/common/product/product-main-image':/*require.resolve*/(/*! pimui/js/form/common/product/product-main-image */ 35907),'pimui/js/form/common/section':/*require.resolve*/(/*! pimui/js/form/common/section */ 15492),'pimui/js/form/common/user-main-image':/*require.resolve*/(/*! pimui/js/form/common/user-main-image */ 29805),'pimui/js/grid/ProductGridProjectDetails':/*require.resolve*/(/*! pimui/js/grid/ProductGridProjectDetails */ 15751),'pimui/js/grid/ProductGridViewTitle':/*require.resolve*/(/*! pimui/js/grid/ProductGridViewTitle */ 71843),'pimui/js/grid/view-selector-secondary-actions':/*require.resolve*/(/*! pimui/js/grid/view-selector-secondary-actions */ 32150),'pimui/js/i18n':/*require.resolve*/(/*! pimui/js/i18n */ 86705),'pimui/js/intl-duration':/*require.resolve*/(/*! pimui/js/intl-duration */ 72462),'pimui/js/job/common/breadcrumb/JobBreadcrumb':/*require.resolve*/(/*! pimui/js/job/common/breadcrumb/JobBreadcrumb */ 83870),'pimui/js/job/common/breadcrumb/breadcrumb':/*require.resolve*/(/*! pimui/js/job/common/breadcrumb/breadcrumb */ 42712),'pimui/js/job/common/duplicate/DuplicateJob':/*require.resolve*/(/*! pimui/js/job/common/duplicate/DuplicateJob */ 2674),'pimui/js/job/common/duplicate/duplicate':/*require.resolve*/(/*! pimui/js/job/common/duplicate/duplicate */ 93728),'pimui/js/job/common/edit/field/allow-file-upload':/*require.resolve*/(/*! pimui/js/job/common/edit/field/allow-file-upload */ 7782),'pimui/js/job/common/edit/field/file-path':/*require.resolve*/(/*! pimui/js/job/common/edit/field/file-path */ 5245),'pimui/js/job/execution/StopJobAction':/*require.resolve*/(/*! pimui/js/job/execution/StopJobAction */ 36553),'pimui/js/mass-edit/form/product/convert-to-simple-product':/*require.resolve*/(/*! pimui/js/mass-edit/form/product/convert-to-simple-product */ 61952),'pimui/js/menu/help':/*require.resolve*/(/*! pimui/js/menu/help */ 49674),'pimui/js/menu/navigation-back':/*require.resolve*/(/*! pimui/js/menu/navigation-back */ 74743),'pimui/js/messenger':/*require.resolve*/(/*! pimui/js/messenger */ 80581),'pimui/js/model/attribute-group':/*require.resolve*/(/*! pimui/js/model/attribute-group */ 79569),'pimui/js/model/attribute':/*require.resolve*/(/*! pimui/js/model/attribute */ 11497),'pimui/js/navigation-menu/column':/*require.resolve*/(/*! pimui/js/navigation-menu/column */ 14739),'pimui/js/navigation-menu/item':/*require.resolve*/(/*! pimui/js/navigation-menu/item */ 86399),'pimui/js/navigation-menu/menu':/*require.resolve*/(/*! pimui/js/navigation-menu/menu */ 20493),'pimui/js/navigation-menu/navigation-block':/*require.resolve*/(/*! pimui/js/navigation-menu/navigation-block */ 3876),'pimui/js/navigation-menu/tab':/*require.resolve*/(/*! pimui/js/navigation-menu/tab */ 22676),'pimui/js/pim-analytics':/*require.resolve*/(/*! pimui/js/pim-analytics */ 22499),'pimui/js/pim-app':/*require.resolve*/(/*! pimui/js/pim-app */ 74913),'pimui/js/pim-edition':/*require.resolve*/(/*! pimui/js/pim-edition */ 18747),'pimui/js/product/field/boolean-field':/*require.resolve*/(/*! pimui/js/product/field/boolean-field */ 2461),'pimui/js/product/form/convert-to-simple-product':/*require.resolve*/(/*! pimui/js/product/form/convert-to-simple-product */ 92422),'pimui/js/product/form/free-trial-start-copy':/*require.resolve*/(/*! pimui/js/product/form/free-trial-start-copy */ 9007),'pimui/js/product/form/main-image':/*require.resolve*/(/*! pimui/js/product/form/main-image */ 8962),'pimui/js/product/form/quantified-associations/components/QuantifiedAssociationRow':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/components/QuantifiedAssociationRow */ 76734),'pimui/js/product/form/quantified-associations/components/QuantifiedAssociations':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/components/QuantifiedAssociations */ 73460),'pimui/js/product/form/quantified-associations/components/index':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/components/index */ 22182),'pimui/js/product/form/quantified-associations/hooks/index':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/hooks/index */ 11824),'pimui/js/product/form/quantified-associations/hooks/useProductThumbnail':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/hooks/useProductThumbnail */ 89454),'pimui/js/product/form/quantified-associations/hooks/useProducts':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/hooks/useProducts */ 6925),'pimui/js/product/form/quantified-associations/models/identifier':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/models/identifier */ 73485),'pimui/js/product/form/quantified-associations/models/index':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/models/index */ 14178),'pimui/js/product/form/quantified-associations/models/product':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/models/product */ 81341),'pimui/js/product/form/quantified-associations/models/quantified-association':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/models/quantified-association */ 6829),'pimui/js/product/form/quantified-associations/models/row':/*require.resolve*/(/*! pimui/js/product/form/quantified-associations/models/row */ 7009),'pimui/js/product/form/sub-navigation':/*require.resolve*/(/*! pimui/js/product/form/sub-navigation */ 80766),'pimui/js/product/grid/mass-actions':/*require.resolve*/(/*! pimui/js/product/grid/mass-actions */ 75654),'pimui/js/product-model/form/completeness-follow-missing-attribute':/*require.resolve*/(/*! pimui/js/product-model/form/completeness-follow-missing-attribute */ 96472),'pimui/js/provider/to-fill-field-provider':/*require.resolve*/(/*! pimui/js/provider/to-fill-field-provider */ 26682),'pimui/js/view/base-interface':/*require.resolve*/(/*! pimui/js/view/base-interface */ 89262),'pimui/js/view/base':/*require.resolve*/(/*! pimui/js/view/base */ 59904),'pimuser/js/datagrid/action/duplicate-user-action':/*require.resolve*/(/*! pimuser/js/datagrid/action/duplicate-user-action */ 56691),'pimuser/js/fields/category-tree':/*require.resolve*/(/*! pimuser/js/fields/category-tree */ 52999),'pimuser/js/fields/channel':/*require.resolve*/(/*! pimuser/js/fields/channel */ 7467),'pimuser/js/fields/default-grid-views':/*require.resolve*/(/*! pimuser/js/fields/default-grid-views */ 32098),'pimuser/js/fields/default-product-grid-view':/*require.resolve*/(/*! pimuser/js/fields/default-product-grid-view */ 25758),'pimuser/js/fields/product-grid-filters':/*require.resolve*/(/*! pimuser/js/fields/product-grid-filters */ 21864),'pimuser/js/fields/timezone':/*require.resolve*/(/*! pimuser/js/fields/timezone */ 95586),'pimuser/js/fields/ui-locale':/*require.resolve*/(/*! pimuser/js/fields/ui-locale */ 21241),'pimuser/js/fields/user-group':/*require.resolve*/(/*! pimuser/js/fields/user-group */ 11571),'pimuser/js/fields/user-role':/*require.resolve*/(/*! pimuser/js/fields/user-role */ 36314),'pimuser/js/form/DuplicateMenuLink':/*require.resolve*/(/*! pimuser/js/form/DuplicateMenuLink */ 98729),'pimuser/js/form/create-user-button':/*require.resolve*/(/*! pimuser/js/form/create-user-button */ 23875),'pimuser/js/form/duplicate-secondary-action':/*require.resolve*/(/*! pimuser/js/form/duplicate-secondary-action */ 63091),'pimuser/js/form/fields/select-profile':/*require.resolve*/(/*! pimuser/js/form/fields/select-profile */ 17365),'pimuser/js/form/user-profile-tab-content':/*require.resolve*/(/*! pimuser/js/form/user-profile-tab-content */ 41196),'pimuser/js/tools/timezone-formatter':/*require.resolve*/(/*! pimuser/js/tools/timezone-formatter */ 54331),'pim/controller/measurements/settings':/*require.resolve*/(/*! pim/controller/measurements/settings */ 58098),'pim/user/fields/channel':/*require.resolve*/(/*! pim/user/fields/channel */ 7467),'pim/user/fields/category-tree':/*require.resolve*/(/*! pim/user/fields/category-tree */ 52999),'pim/user/fields/ui-locale':/*require.resolve*/(/*! pim/user/fields/ui-locale */ 21241),'pim/user/fields/timezone':/*require.resolve*/(/*! pim/user/fields/timezone */ 95586),'pim/user/fields/user-group':/*require.resolve*/(/*! pim/user/fields/user-group */ 11571),'pim/user/fields/user-role':/*require.resolve*/(/*! pim/user/fields/user-role */ 36314),'pim/user/fields/default-product-grid-view':/*require.resolve*/(/*! pim/user/fields/default-product-grid-view */ 25758),'pim/user/fields/default-grid-views':/*require.resolve*/(/*! pim/user/fields/default-grid-views */ 32098),'pim/user/fields/product-grid-filters':/*require.resolve*/(/*! pim/user/fields/product-grid-filters */ 21864),'pim/user/tools/timezone-formatter':/*require.resolve*/(/*! pim/user/tools/timezone-formatter */ 54331),'pim/user-edit-form/delete':/*require.resolve*/(/*! pim/user-edit-form/delete */ 29959),'pim/user-edit-form/edit-form':/*require.resolve*/(/*! pim/user-edit-form/edit-form */ 318),'pim/user-edit-form/duplicate':/*require.resolve*/(/*! pim/user-edit-form/duplicate */ 63091),'pim/remover/user':/*require.resolve*/(/*! pim/remover/user */ 66016),'oro/datagrid/duplicate-user-action':/*require.resolve*/(/*! oro/datagrid/duplicate-user-action */ 56691),'pim/user/form/fields/select-profile':/*require.resolve*/(/*! pim/user/form/fields/select-profile */ 17365),'pim/templates/user/form/fields/select-profile-container':/*require.resolve*/(/*! pim/templates/user/form/fields/select-profile-container */ 47151),'pim/user/form/user-profile-tab-content':/*require.resolve*/(/*! pim/user/form/user-profile-tab-content */ 41196),'pim/user/form/create-user-button':/*require.resolve*/(/*! pim/user/form/create-user-button */ 23875),'pim/reference-simple-select-field':/*require.resolve*/(/*! pim/reference-simple-select-field */ 45594),'pim/reference-multi-select-field':/*require.resolve*/(/*! pim/reference-multi-select-field */ 96422),'pim/attribute-edit-form/properties/ref-data-name':/*require.resolve*/(/*! pim/attribute-edit-form/properties/ref-data-name */ 63861),'pim/data-collector':/*require.resolve*/(/*! pim/data-collector */ 60063),'pim/patch-fetcher':/*require.resolve*/(/*! pim/patch-fetcher */ 99096),'pim-analytics-system-info-controller':/*require.resolve*/(/*! pim-analytics-system-info-controller */ 76149),'oro/datagrid/tab-redirect-action':/*require.resolve*/(/*! oro/datagrid/tab-redirect-action */ 89360),'pim/datagrid/column-selector':/*require.resolve*/(/*! pim/datagrid/column-selector */ 8813),'pim/datagrid/display-selector':/*require.resolve*/(/*! pim/datagrid/display-selector */ 18255),'oro/export-widget':/*require.resolve*/(/*! oro/export-widget */ 71582),'pim/datagrid/state':/*require.resolve*/(/*! pim/datagrid/state */ 30138),'pim/datagrid/state-listener':/*require.resolve*/(/*! pim/datagrid/state-listener */ 34498),'pim/datagrid/column-form-listener':/*require.resolve*/(/*! pim/datagrid/column-form-listener */ 44838),'oro/datagrid/action-launcher':/*require.resolve*/(/*! oro/datagrid/action-launcher */ 92993),'oro/datagrid/abstract-action':/*require.resolve*/(/*! oro/datagrid/abstract-action */ 8744),'oro/datagrid/delete-action':/*require.resolve*/(/*! oro/datagrid/delete-action */ 44878),'oro/datagrid/delete-confirm':/*require.resolve*/(/*! oro/datagrid/delete-confirm */ 25567),'oro/datagrid/sequential_edit-action':/*require.resolve*/(/*! oro/datagrid/sequential_edit-action */ 15398),'oro/datagrid/mass_delete-action':/*require.resolve*/(/*! oro/datagrid/mass_delete-action */ 92448),'oro/datagrid/revoke-action':/*require.resolve*/(/*! oro/datagrid/revoke-action */ 40043),'oro/datagrid/ajax-action':/*require.resolve*/(/*! oro/datagrid/ajax-action */ 66623),'oro/datagrid/mass-action':/*require.resolve*/(/*! oro/datagrid/mass-action */ 84978),'oro/datagrid/model-action':/*require.resolve*/(/*! oro/datagrid/model-action */ 98881),'oro/datagrid/navigate-action':/*require.resolve*/(/*! oro/datagrid/navigate-action */ 42498),'oro/datagrid/refresh-collection-action':/*require.resolve*/(/*! oro/datagrid/refresh-collection-action */ 57109),'oro/datagrid/reset-collection-action':/*require.resolve*/(/*! oro/datagrid/reset-collection-action */ 82811),'oro/datagrid/actions-panel':/*require.resolve*/(/*! oro/datagrid/actions-panel */ 66207),'oro/datagrid/action-column':/*require.resolve*/(/*! oro/datagrid/action-column */ 24365),'oro/datagrid/body':/*require.resolve*/(/*! oro/datagrid/body */ 87265),'oro/datagrid/action-cell':/*require.resolve*/(/*! oro/datagrid/action-cell */ 41765),'oro/datagrid/boolean-cell':/*require.resolve*/(/*! oro/datagrid/boolean-cell */ 42005),'oro/datagrid/html-cell':/*require.resolve*/(/*! oro/datagrid/html-cell */ 70275),'oro/datagrid/date-cell':/*require.resolve*/(/*! oro/datagrid/date-cell */ 663),'oro/datagrid/history-diff-cell':/*require.resolve*/(/*! oro/datagrid/history-diff-cell */ 96148),'oro/datagrid/datetime-cell':/*require.resolve*/(/*! oro/datagrid/datetime-cell */ 22538),'oro/datagrid/number-cell':/*require.resolve*/(/*! oro/datagrid/number-cell */ 3657),'oro/datagrid/integer-cell':/*require.resolve*/(/*! oro/datagrid/integer-cell */ 93590),'oro/datagrid/select-cell':/*require.resolve*/(/*! oro/datagrid/select-cell */ 24708),'oro/datagrid/select-row-cell':/*require.resolve*/(/*! oro/datagrid/select-row-cell */ 10405),'oro/datagrid/string-cell':/*require.resolve*/(/*! oro/datagrid/string-cell */ 10991),'oro/datagrid/completeness-cell':/*require.resolve*/(/*! oro/datagrid/completeness-cell */ 62775),'oro/datagrid/expand-history-cell':/*require.resolve*/(/*! oro/datagrid/expand-history-cell */ 73438),'oro/datagrid/enabled-cell':/*require.resolve*/(/*! oro/datagrid/enabled-cell */ 59248),'oro/datagrid/image-cell':/*require.resolve*/(/*! oro/datagrid/image-cell */ 5184),'oro/datagrid/boolean-label-cell':/*require.resolve*/(/*! oro/datagrid/boolean-label-cell */ 51434),'oro/datagrid/boolean-status-cell':/*require.resolve*/(/*! oro/datagrid/boolean-status-cell */ 88653),'oro/datagrid/credentials-cell':/*require.resolve*/(/*! oro/datagrid/credentials-cell */ 60431),'oro/datagrid/complete-variant-product-cell':/*require.resolve*/(/*! oro/datagrid/complete-variant-product-cell */ 37004),'oro/datagrid/label-cell':/*require.resolve*/(/*! oro/datagrid/label-cell */ 25662),'oro/datagrid/cell-formatter':/*require.resolve*/(/*! oro/datagrid/cell-formatter */ 83065),'oro/datagrid/grid':/*require.resolve*/(/*! oro/datagrid/grid */ 40319),'oro/datagrid/header-cell':/*require.resolve*/(/*! oro/datagrid/header-cell */ 58183),'oro/datagrid/select-all-header-cell':/*require.resolve*/(/*! oro/datagrid/select-all-header-cell */ 50053),'oro/datagrid/header':/*require.resolve*/(/*! oro/datagrid/header */ 67689),'oro/datagrid/abstract-listener':/*require.resolve*/(/*! oro/datagrid/abstract-listener */ 26510),'oro/datagrid/column-form-listener':/*require.resolve*/(/*! oro/datagrid/column-form-listener */ 91645),'oro/datagrid/callback-listener':/*require.resolve*/(/*! oro/datagrid/callback-listener */ 52488),'oro/datagrid/grid-views/view':/*require.resolve*/(/*! oro/datagrid/grid-views/view */ 76735),'oro/datagrid/grid-views/model':/*require.resolve*/(/*! oro/datagrid/grid-views/model */ 56117),'oro/datagrid/grid-views/collection':/*require.resolve*/(/*! oro/datagrid/grid-views/collection */ 21620),'oro/datagrid/pagination-input':/*require.resolve*/(/*! oro/datagrid/pagination-input */ 3587),'oro/datagrid/pagination':/*require.resolve*/(/*! oro/datagrid/pagination */ 13509),'oro/datagrid/row':/*require.resolve*/(/*! oro/datagrid/row */ 72803),'oro/datagrid/history-row':/*require.resolve*/(/*! oro/datagrid/history-row */ 30808),'oro/datagrid/product-row':/*require.resolve*/(/*! oro/datagrid/product-row */ 90286),'oro/datagrid-builder':/*require.resolve*/(/*! oro/datagrid-builder */ 10488),'oro/loading-mask':/*require.resolve*/(/*! oro/loading-mask */ 13284),'oro/pageable-collection':/*require.resolve*/(/*! oro/pageable-collection */ 3110),'pimdatagrid/datagrid/quickexport/component/QuickExportConfigurator':/*require.resolve*/(/*! pimdatagrid/datagrid/quickexport/component/QuickExportConfigurator */ 28247),'oro/datagrid/product-and-product-model-image-cell':/*require.resolve*/(/*! oro/datagrid/product-and-product-model-image-cell */ 4872),'oro/datagrid/product-and-product-model-label-cell':/*require.resolve*/(/*! oro/datagrid/product-and-product-model-label-cell */ 89505),'oro/datagrid/attribute-header-cell':/*require.resolve*/(/*! oro/datagrid/attribute-header-cell */ 27519),'backbone/pageable-collection':/*require.resolve*/(/*! backbone/pageable-collection */ 16168),'backgrid':/*require.resolve*/(/*! backgrid */ 27217),'jquery.multiselect':/*require.resolve*/(/*! jquery.multiselect */ 15077),'jquery.multiselect.filter':/*require.resolve*/(/*! jquery.multiselect.filter */ 96525),'oro/multiselect-decorator':/*require.resolve*/(/*! oro/multiselect-decorator */ 1157),'oro/datafilter/search-filter':/*require.resolve*/(/*! oro/datafilter/search-filter */ 1265),'oro/datafilter/label_or_identifier-filter':/*require.resolve*/(/*! oro/datafilter/label_or_identifier-filter */ 81297),'oro/datafilter/price-filter':/*require.resolve*/(/*! oro/datafilter/price-filter */ 74351),'oro/datafilter/metric-filter':/*require.resolve*/(/*! oro/datafilter/metric-filter */ 23269),'oro/datafilter/product_scope-filter':/*require.resolve*/(/*! oro/datafilter/product_scope-filter */ 10307),'oro/datafilter/product_category-filter':/*require.resolve*/(/*! oro/datafilter/product_category-filter */ 54688),'oro/datafilter/product_completeness-filter':/*require.resolve*/(/*! oro/datafilter/product_completeness-filter */ 99283),'oro/datafilter/ajax-choice-filter':/*require.resolve*/(/*! oro/datafilter/ajax-choice-filter */ 71306),'oro/datafilter/select2-choice-filter':/*require.resolve*/(/*! oro/datafilter/select2-choice-filter */ 78158),'oro/datafilter/select2-rest-choice-filter':/*require.resolve*/(/*! oro/datafilter/select2-rest-choice-filter */ 72951),'oro/datafilter/product_and_product_model_completeness-filter':/*require.resolve*/(/*! oro/datafilter/product_and_product_model_completeness-filter */ 99283),'oro/datafilter/filters-column':/*require.resolve*/(/*! oro/datafilter/filters-column */ 16501),'oro/datafilter/filters-selector':/*require.resolve*/(/*! oro/datafilter/filters-selector */ 91729),'oro/datafilter/filters-list':/*require.resolve*/(/*! oro/datafilter/filters-list */ 81520),'oro/datafilter/filters-button':/*require.resolve*/(/*! oro/datafilter/filters-button */ 41518),'oro/datafilter/abstract-filter':/*require.resolve*/(/*! oro/datafilter/abstract-filter */ 38510),'oro/datafilter/none-filter':/*require.resolve*/(/*! oro/datafilter/none-filter */ 78024),'oro/datafilter/choice-filter':/*require.resolve*/(/*! oro/datafilter/choice-filter */ 81398),'oro/datafilter/date-filter':/*require.resolve*/(/*! oro/datafilter/date-filter */ 43305),'oro/datafilter/datetime-filter':/*require.resolve*/(/*! oro/datafilter/datetime-filter */ 38712),'oro/datafilter/multiselect-filter':/*require.resolve*/(/*! oro/datafilter/multiselect-filter */ 40460),'oro/datafilter/number-filter':/*require.resolve*/(/*! oro/datafilter/number-filter */ 5434),'oro/datafilter/select-filter':/*require.resolve*/(/*! oro/datafilter/select-filter */ 92879),'oro/datafilter/grouped-variant-filter':/*require.resolve*/(/*! oro/datafilter/grouped-variant-filter */ 65664),'oro/datafilter/select-row-filter':/*require.resolve*/(/*! oro/datafilter/select-row-filter */ 86689),'oro/datafilter/text-filter':/*require.resolve*/(/*! oro/datafilter/text-filter */ 57796),'oro/datafilter/parent-filter':/*require.resolve*/(/*! oro/datafilter/parent-filter */ 84886),'oro/datafilter/identifier-filter':/*require.resolve*/(/*! oro/datafilter/identifier-filter */ 8339),'oro/datafilter/uuid-filter':/*require.resolve*/(/*! oro/datafilter/uuid-filter */ 82886),'pim/filter/text':/*require.resolve*/(/*! pim/filter/text */ 57796),'oro/datafilter/abstract-formatter':/*require.resolve*/(/*! oro/datafilter/abstract-formatter */ 42182),'oro/datafilter/filters-manager':/*require.resolve*/(/*! oro/datafilter/filters-manager */ 94449),'oro/datafilter/collection-filters-manager':/*require.resolve*/(/*! oro/datafilter/collection-filters-manager */ 91902),'oro/datafilter-builder':/*require.resolve*/(/*! oro/datafilter-builder */ 34287),'pim/datagrid-view-fetcher':/*require.resolve*/(/*! pim/datagrid-view-fetcher */ 9161),'pim/saver/datagrid-view':/*require.resolve*/(/*! pim/saver/datagrid-view */ 9165),'pim/remover/datagrid-view':/*require.resolve*/(/*! pim/remover/datagrid-view */ 62514),'pim/template/datagrid/action-launcher-button':/*require.resolve*/(/*! pim/template/datagrid/action-launcher-button */ 97704),'pim/template/datagrid/action-launcher-list-item':/*require.resolve*/(/*! pim/template/datagrid/action-launcher-list-item */ 13490),'pim/template/datagrid/action-configure-columns':/*require.resolve*/(/*! pim/template/datagrid/action-configure-columns */ 57823),'pim/template/datagrid/actions-group':/*require.resolve*/(/*! pim/template/datagrid/actions-group */ 23730),'pim/template/datagrid/add-filter-select':/*require.resolve*/(/*! pim/template/datagrid/add-filter-select */ 85125),'pim/template/datagrid/add-filter-button':/*require.resolve*/(/*! pim/template/datagrid/add-filter-button */ 30714),'pim/template/datagrid/done-container':/*require.resolve*/(/*! pim/template/datagrid/done-container */ 47932),'pim/template/datagrid/done-button':/*require.resolve*/(/*! pim/template/datagrid/done-button */ 83961),'pim/template/datagrid/pagination':/*require.resolve*/(/*! pim/template/datagrid/pagination */ 35311),'pim/template/datagrid/display-selector':/*require.resolve*/(/*! pim/template/datagrid/display-selector */ 26215),'pim/template/datagrid/filter/text-filter':/*require.resolve*/(/*! pim/template/datagrid/filter/text-filter */ 32220),'pim/template/datagrid/filter/price-filter':/*require.resolve*/(/*! pim/template/datagrid/filter/price-filter */ 87732),'pim/template/datagrid/filter/date-filter':/*require.resolve*/(/*! pim/template/datagrid/filter/date-filter */ 18779),'pim/template/datagrid/filter/metric-filter':/*require.resolve*/(/*! pim/template/datagrid/filter/metric-filter */ 20694),'pim/template/datagrid/filter/search-filter':/*require.resolve*/(/*! pim/template/datagrid/filter/search-filter */ 37636),'pim/template/datagrid/filter-column':/*require.resolve*/(/*! pim/template/datagrid/filter-column */ 35368),'pim/template/datagrid/filter-group':/*require.resolve*/(/*! pim/template/datagrid/filter-group */ 74340),'pim/template/datagrid/filter-grouped-variant':/*require.resolve*/(/*! pim/template/datagrid/filter-grouped-variant */ 26131),'pim/template/datagrid/cell/credentials-cell':/*require.resolve*/(/*! pim/template/datagrid/cell/credentials-cell */ 14543),'pim/template/datagrid/cell/history-diff-cell':/*require.resolve*/(/*! pim/template/datagrid/cell/history-diff-cell */ 5286),'pim/template/datagrid/cell/expand-history-cell':/*require.resolve*/(/*! pim/template/datagrid/cell/expand-history-cell */ 3631),'pim/template/datagrid/cell/enabled-cell':/*require.resolve*/(/*! pim/template/datagrid/cell/enabled-cell */ 12493),'pim/template/datagrid/filter/scope-filter':/*require.resolve*/(/*! pim/template/datagrid/filter/scope-filter */ 31269),'pim/template/datagrid/row/version':/*require.resolve*/(/*! pim/template/datagrid/row/version */ 54376),'pim/template/datagrid/row/changes':/*require.resolve*/(/*! pim/template/datagrid/row/changes */ 74456),'pim/template/datagrid/row/product':/*require.resolve*/(/*! pim/template/datagrid/row/product */ 75320),'pim/template/datagrid/row/product-thumbnail':/*require.resolve*/(/*! pim/template/datagrid/row/product-thumbnail */ 19675),'pim/template/datagrid/cell/image-cell':/*require.resolve*/(/*! pim/template/datagrid/cell/image-cell */ 61057),'pim/template/datagrid/cell/product-and-product-model-image-cell':/*require.resolve*/(/*! pim/template/datagrid/cell/product-and-product-model-image-cell */ 56874),'pim/template/datagrid/column-selector/button':/*require.resolve*/(/*! pim/template/datagrid/column-selector/button */ 58285),'pim/template/datagrid/column-selector/columns':/*require.resolve*/(/*! pim/template/datagrid/column-selector/columns */ 76961),'pim/template/datagrid/column-selector/modal':/*require.resolve*/(/*! pim/template/datagrid/column-selector/modal */ 28927),'pim/template/datagrid/column-selector/selected':/*require.resolve*/(/*! pim/template/datagrid/column-selector/selected */ 85935),'pim/indicator':/*require.resolve*/(/*! pim/indicator */ 63624),'pim/notifications':/*require.resolve*/(/*! pim/notifications */ 93394),'pim/notification-list':/*require.resolve*/(/*! pim/notification-list */ 80860),'pim/template/notification/notification':/*require.resolve*/(/*! pim/template/notification/notification */ 79838),'pim/template/notification/notification-footer':/*require.resolve*/(/*! pim/template/notification/notification-footer */ 54359),'pim/template/notification/notification-list':/*require.resolve*/(/*! pim/template/notification/notification-list */ 30186),'jquery-ui':/*require.resolve*/(/*! jquery-ui */ 5232),'jquery.select2':/*require.resolve*/(/*! jquery.select2 */ 53142),'jquery.select2.placeholder':/*require.resolve*/(/*! jquery.select2.placeholder */ 33741),'bootstrap':/*require.resolve*/(/*! bootstrap */ 16486),'bootstrap-modal':/*require.resolve*/(/*! bootstrap-modal */ 21430),'summernote':/*require.resolve*/(/*! summernote */ 73310),'oro/app':/*require.resolve*/(/*! oro/app */ 10501),'oro/error':/*require.resolve*/(/*! oro/error */ 57340),'oro/init-layout':/*require.resolve*/(/*! oro/init-layout */ 47534),'oro/jquery-setup':/*require.resolve*/(/*! oro/jquery-setup */ 22379),'oro/layout':/*require.resolve*/(/*! oro/layout */ 76896),'oro/mediator':/*require.resolve*/(/*! oro/mediator */ 27615),'oro/messenger':/*require.resolve*/(/*! oro/messenger */ 80581),'oro/delete-confirmation':/*require.resolve*/(/*! oro/delete-confirmation */ 91558),'oro/tools':/*require.resolve*/(/*! oro/tools */ 24998),'oro/form/state':/*require.resolve*/(/*! oro/form/state */ 18537),'jquery.slimbox':/*require.resolve*/(/*! jquery.slimbox */ 22574),'bootstrap.bootstrapswitch':/*require.resolve*/(/*! bootstrap.bootstrapswitch */ 86049),'bootstrap.datetimepicker':/*require.resolve*/(/*! bootstrap.datetimepicker */ 32929),'wysiwyg':/*require.resolve*/(/*! wysiwyg */ 85392),'datepicker':/*require.resolve*/(/*! datepicker */ 83586),'pim/ui':/*require.resolve*/(/*! pim/ui */ 66457),'pim/initselect2':/*require.resolve*/(/*! pim/initselect2 */ 3701),'pim/dialog':/*require.resolve*/(/*! pim/dialog */ 42905),'pim/formupdatelistener':/*require.resolve*/(/*! pim/formupdatelistener */ 3169),'pim/saveformstate':/*require.resolve*/(/*! pim/saveformstate */ 56153),'pim/fileinput':/*require.resolve*/(/*! pim/fileinput */ 7895),'pim/dialogform':/*require.resolve*/(/*! pim/dialogform */ 29831),'pim/analytics':/*require.resolve*/(/*! pim/analytics */ 22499),'pim/form/system/config/tab/loading-message':/*require.resolve*/(/*! pim/form/system/config/tab/loading-message */ 35598),'pim/template/system/tab/loading-message':/*require.resolve*/(/*! pim/template/system/tab/loading-message */ 50031),'jquery.form':/*require.resolve*/(/*! jquery.form */ 19849),'pim/app':/*require.resolve*/(/*! pim/app */ 74913),'pim/router':/*require.resolve*/(/*! pim/router */ 41774),'pim/route-matcher':/*require.resolve*/(/*! pim/route-matcher */ 80245),'pim/page-title':/*require.resolve*/(/*! pim/page-title */ 12764),'pim/init-translator':/*require.resolve*/(/*! pim/init-translator */ 80318),'pimuser/js/init-signin':/*require.resolve*/(/*! pimuser/js/init-signin */ 11184),'routing':/*require.resolve*/(/*! routing */ 60847),'jquery-setup':/*require.resolve*/(/*! jquery-setup */ 22379),'pim/controller-registry':/*require.resolve*/(/*! pim/controller-registry */ 81665),'pim/controller/base':/*require.resolve*/(/*! pim/controller/base */ 88191),'pim/controller/front':/*require.resolve*/(/*! pim/controller/front */ 834),'pim/controller/template':/*require.resolve*/(/*! pim/controller/template */ 28333),'pim/controller/form':/*require.resolve*/(/*! pim/controller/form */ 87026),'pim/controller/product':/*require.resolve*/(/*! pim/controller/product */ 96942),'pim/controller/product/index':/*require.resolve*/(/*! pim/controller/product/index */ 96942),'pim/controller/entity-with-family-variant':/*require.resolve*/(/*! pim/controller/entity-with-family-variant */ 55056),'pim/controller/entity-categories-with-family-variant':/*require.resolve*/(/*! pim/controller/entity-categories-with-family-variant */ 6001),'pim/controller/family':/*require.resolve*/(/*! pim/controller/family */ 66268),'pim/controller/config':/*require.resolve*/(/*! pim/controller/config */ 39877),'pim/controller/catalog-volume':/*require.resolve*/(/*! pim/controller/catalog-volume */ 12623),'pim/controller/channel/edit':/*require.resolve*/(/*! pim/controller/channel/edit */ 39371),'pim/controller/common/index':/*require.resolve*/(/*! pim/controller/common/index */ 97366),'pim/controller/association-type/edit':/*require.resolve*/(/*! pim/controller/association-type/edit */ 33694),'pim/controller/association-type/index':/*require.resolve*/(/*! pim/controller/association-type/index */ 38867),'pim/controller/redirect':/*require.resolve*/(/*! pim/controller/redirect */ 34928),'pim/controller/job-instance':/*require.resolve*/(/*! pim/controller/job-instance */ 31746),'pim/controller/group':/*require.resolve*/(/*! pim/controller/group */ 73789),'pim/controller/role':/*require.resolve*/(/*! pim/controller/role */ 12523),'pim/controller/group-type':/*require.resolve*/(/*! pim/controller/group-type */ 28758),'pim/controller/system':/*require.resolve*/(/*! pim/controller/system */ 87703),'pim/controller/user':/*require.resolve*/(/*! pim/controller/user */ 52835),'pim/controller/attribute-group/edit':/*require.resolve*/(/*! pim/controller/attribute-group/edit */ 99678),'pim/controller/attribute-group/create':/*require.resolve*/(/*! pim/controller/attribute-group/create */ 32293),'pim/controller/attribute-group/index':/*require.resolve*/(/*! pim/controller/attribute-group/index */ 45110),'pim/controller/attribute/edit':/*require.resolve*/(/*! pim/controller/attribute/edit */ 62726),'pim/controller/attribute/create':/*require.resolve*/(/*! pim/controller/attribute/create */ 49689),'pim/controller/mass-edit':/*require.resolve*/(/*! pim/controller/mass-edit */ 95170),'pim/controller/logout':/*require.resolve*/(/*! pim/controller/logout */ 11454),'pim/controller/locales/index':/*require.resolve*/(/*! pim/controller/locales/index */ 70058),'pim/controller/dashboard':/*require.resolve*/(/*! pim/controller/dashboard */ 10178),'pim/controller/settings':/*require.resolve*/(/*! pim/controller/settings */ 59158),'pim/controller/system-index':/*require.resolve*/(/*! pim/controller/system-index */ 49562),'pim/controller/categories/index':/*require.resolve*/(/*! pim/controller/categories/index */ 19702),'pim/init':/*require.resolve*/(/*! pim/init */ 82358),'pim/asynctab':/*require.resolve*/(/*! pim/asynctab */ 86113),'pim/optionform':/*require.resolve*/(/*! pim/optionform */ 792),'pim/config-registry':/*require.resolve*/(/*! pim/config-registry */ 63124),'pim/form-modal':/*require.resolve*/(/*! pim/form-modal */ 77154),'pim/scopable':/*require.resolve*/(/*! pim/scopable */ 6403),'pim/currencyfield':/*require.resolve*/(/*! pim/currencyfield */ 44373),'pim/tree/view':/*require.resolve*/(/*! pim/tree/view */ 32906),'pim/tree/associate':/*require.resolve*/(/*! pim/tree/associate */ 41314),'pim/attributeoptionview':/*require.resolve*/(/*! pim/attributeoptionview */ 3865),'pim/i18n':/*require.resolve*/(/*! pim/i18n */ 86705),'pim/user-context':/*require.resolve*/(/*! pim/user-context */ 46862),'pim/date-context':/*require.resolve*/(/*! pim/date-context */ 24846),'pim/error':/*require.resolve*/(/*! pim/error */ 84879),'oro/translator':/*require.resolve*/(/*! oro/translator */ 16393),'pim/common/property':/*require.resolve*/(/*! pim/common/property */ 64070),'pim/common/select2/family':/*require.resolve*/(/*! pim/common/select2/family */ 81851),'pim/common/form-modal-creator':/*require.resolve*/(/*! pim/common/form-modal-creator */ 2081),'pim/security-context':/*require.resolve*/(/*! pim/security-context */ 34770),'pim/feature-flags':/*require.resolve*/(/*! pim/feature-flags */ 5857),'pim/group-manager':/*require.resolve*/(/*! pim/group-manager */ 99555),'pim/attribute-manager':/*require.resolve*/(/*! pim/attribute-manager */ 41700),'pim/attribute-group-manager':/*require.resolve*/(/*! pim/attribute-group-manager */ 35962),'pim/fetcher-registry':/*require.resolve*/(/*! pim/fetcher-registry */ 60701),'pim/base-fetcher':/*require.resolve*/(/*! pim/base-fetcher */ 77289),'pim/attribute-fetcher':/*require.resolve*/(/*! pim/attribute-fetcher */ 2366),'pim/attribute-group-fetcher':/*require.resolve*/(/*! pim/attribute-group-fetcher */ 6574),'pim/locale-fetcher':/*require.resolve*/(/*! pim/locale-fetcher */ 45202),'pim/product-fetcher':/*require.resolve*/(/*! pim/product-fetcher */ 15693),'pim/product-model-fetcher':/*require.resolve*/(/*! pim/product-model-fetcher */ 62524),'pim/family-fetcher':/*require.resolve*/(/*! pim/family-fetcher */ 5180),'pim/channel-fetcher':/*require.resolve*/(/*! pim/channel-fetcher */ 96858),'pim/remover/base':/*require.resolve*/(/*! pim/remover/base */ 44206),'pim/remover/association-type':/*require.resolve*/(/*! pim/remover/association-type */ 8569),'pim/remover/attribute-group':/*require.resolve*/(/*! pim/remover/attribute-group */ 60217),'pim/remover/group-type':/*require.resolve*/(/*! pim/remover/group-type */ 26785),'pim/remover/channel':/*require.resolve*/(/*! pim/remover/channel */ 9240),'pim/remover/family':/*require.resolve*/(/*! pim/remover/family */ 37490),'pim/remover/family-variant':/*require.resolve*/(/*! pim/remover/family-variant */ 75682),'pim/remover/product':/*require.resolve*/(/*! pim/remover/product */ 34710),'pim/remover/product-model':/*require.resolve*/(/*! pim/remover/product-model */ 69245),'pim/remover/group':/*require.resolve*/(/*! pim/remover/group */ 7374),'pim/remover/job-instance-import':/*require.resolve*/(/*! pim/remover/job-instance-import */ 40215),'pim/remover/job-instance-export':/*require.resolve*/(/*! pim/remover/job-instance-export */ 77893),'pim/remover/attribute':/*require.resolve*/(/*! pim/remover/attribute */ 42849),'pim/saver/base':/*require.resolve*/(/*! pim/saver/base */ 6042),'pim/saver/entity-saver':/*require.resolve*/(/*! pim/saver/entity-saver */ 42775),'pim/saver/channel':/*require.resolve*/(/*! pim/saver/channel */ 75963),'pim/saver/family':/*require.resolve*/(/*! pim/saver/family */ 63108),'pim/saver/family-variant':/*require.resolve*/(/*! pim/saver/family-variant */ 95016),'pim/saver/product':/*require.resolve*/(/*! pim/saver/product */ 28574),'pim/saver/product-model':/*require.resolve*/(/*! pim/saver/product-model */ 19894),'pim/saver/group':/*require.resolve*/(/*! pim/saver/group */ 17073),'pim/saver/job-instance-export':/*require.resolve*/(/*! pim/saver/job-instance-export */ 62805),'pim/saver/job-instance-import':/*require.resolve*/(/*! pim/saver/job-instance-import */ 88150),'pim/media-url-generator':/*require.resolve*/(/*! pim/media-url-generator */ 72689),'pim/form-builder':/*require.resolve*/(/*! pim/form-builder */ 16371),'pim/form-registry':/*require.resolve*/(/*! pim/form-registry */ 27091),'pim/form-config-provider':/*require.resolve*/(/*! pim/form-config-provider */ 91598),'pim/cache-invalidator':/*require.resolve*/(/*! pim/cache-invalidator */ 69072),'pim/association-type-edit-form/delete':/*require.resolve*/(/*! pim/association-type-edit-form/delete */ 63024),'pim/model/attribute':/*require.resolve*/(/*! pim/model/attribute */ 11497),'pim/model/attribute-group':/*require.resolve*/(/*! pim/model/attribute-group */ 79569),'pim/attribute-group-edit-form/delete':/*require.resolve*/(/*! pim/attribute-group-edit-form/delete */ 87832),'pim/attribute-group-edit-form/list':/*require.resolve*/(/*! pim/attribute-group-edit-form/list */ 88730),'pim/group-type-edit-form/delete':/*require.resolve*/(/*! pim/group-type-edit-form/delete */ 41494),'pim/channel-edit-form/delete':/*require.resolve*/(/*! pim/channel-edit-form/delete */ 16481),'pim/channel-edit-form/save':/*require.resolve*/(/*! pim/channel-edit-form/save */ 94545),'pim/channel-edit-form/properties/general/currencies':/*require.resolve*/(/*! pim/channel-edit-form/properties/general/currencies */ 71140),'pim/channel-edit-form/properties/general/locales':/*require.resolve*/(/*! pim/channel-edit-form/properties/general/locales */ 36476),'pim/channel-edit-form/properties/general/category-tree':/*require.resolve*/(/*! pim/channel-edit-form/properties/general/category-tree */ 97430),'pim/channel-edit-form/properties/conversion-unit':/*require.resolve*/(/*! pim/channel-edit-form/properties/conversion-unit */ 97971),'pim/family-edit-form/delete':/*require.resolve*/(/*! pim/family-edit-form/delete */ 7275),'pim/family-edit-form/save':/*require.resolve*/(/*! pim/family-edit-form/save */ 20808),'pim/family-edit-form/family-variant':/*require.resolve*/(/*! pim/family-edit-form/family-variant */ 94792),'pim/family-edit-form/properties/general/code':/*require.resolve*/(/*! pim/family-edit-form/properties/general/code */ 56014),'pim/family-edit-form/properties/general/attribute-as-label':/*require.resolve*/(/*! pim/family-edit-form/properties/general/attribute-as-label */ 38894),'pim/family-edit-form/properties/general/attribute-as-image':/*require.resolve*/(/*! pim/family-edit-form/properties/general/attribute-as-image */ 48550),'pim/family-edit-form/properties/general/translation':/*require.resolve*/(/*! pim/family-edit-form/properties/general/translation */ 72123),'pim/family-edit-form/attributes/toolbar/add-select/attribute-group':/*require.resolve*/(/*! pim/family-edit-form/attributes/toolbar/add-select/attribute-group */ 73622),'pim/family-edit-form/attributes/toolbar/add-select/attribute':/*require.resolve*/(/*! pim/family-edit-form/attributes/toolbar/add-select/attribute */ 45210),'pim/family-edit-form/attributes/toolbar':/*require.resolve*/(/*! pim/family-edit-form/attributes/toolbar */ 74161),'pim/family-edit-form/attributes/attributes':/*require.resolve*/(/*! pim/family-edit-form/attributes/attributes */ 72461),'pim/family-edit-form/attributes':/*require.resolve*/(/*! pim/family-edit-form/attributes */ 92545),'pim/family-edit-form/properties/general':/*require.resolve*/(/*! pim/family-edit-form/properties/general */ 33212),'pim/family-edit-form/add-family-variant':/*require.resolve*/(/*! pim/family-edit-form/add-family-variant */ 72927),'pim/family-edit-form/add-family-variant-form':/*require.resolve*/(/*! pim/family-edit-form/add-family-variant-form */ 12741),'pim/family-edit-form/add-family-variant-header':/*require.resolve*/(/*! pim/family-edit-form/add-family-variant-header */ 35487),'pim/family-edit-form/add-family-variant-fields-container':/*require.resolve*/(/*! pim/family-edit-form/add-family-variant-fields-container */ 78254),'pim/family-variant-edit-form/attribute-set':/*require.resolve*/(/*! pim/family-variant-edit-form/attribute-set */ 49863),'pim/family-variant-edit-form/labels-container':/*require.resolve*/(/*! pim/family-variant-edit-form/labels-container */ 14405),'pim/family-variant-edit-form/save':/*require.resolve*/(/*! pim/family-variant-edit-form/save */ 537),'pim/family-variant-edit-form/delete':/*require.resolve*/(/*! pim/family-variant-edit-form/delete */ 19114),'pim/job-instance-edit-form/save':/*require.resolve*/(/*! pim/job-instance-edit-form/save */ 25261),'pim/job-instance-export-edit-form/save':/*require.resolve*/(/*! pim/job-instance-export-edit-form/save */ 7770),'pim/job-instance-import-edit-form/save':/*require.resolve*/(/*! pim/job-instance-import-edit-form/save */ 79051),'pim/job-instance/import/switcher':/*require.resolve*/(/*! pim/job-instance/import/switcher */ 77411),'pim/job-instance/import/switcher-item':/*require.resolve*/(/*! pim/job-instance/import/switcher-item */ 35158),'pim/product-edit-form/product-label':/*require.resolve*/(/*! pim/product-edit-form/product-label */ 71989),'pim/product-edit-form/product-completeness':/*require.resolve*/(/*! pim/product-edit-form/product-completeness */ 59643),'pim/product-edit-form/total-missing-required-attributes':/*require.resolve*/(/*! pim/product-edit-form/total-missing-required-attributes */ 43510),'pim/product-edit-form/main-image':/*require.resolve*/(/*! pim/product-edit-form/main-image */ 8962),'pim/product-edit-form/attribute-filter':/*require.resolve*/(/*! pim/product-edit-form/attribute-filter */ 79985),'pim/product-edit-form/attribute-filter-all':/*require.resolve*/(/*! pim/product-edit-form/attribute-filter-all */ 70363),'pim/product-edit-form/attribute-filter-missing-required':/*require.resolve*/(/*! pim/product-edit-form/attribute-filter-missing-required */ 35278),'pim/product-edit-form/attribute-filter-at-this-level':/*require.resolve*/(/*! pim/product-edit-form/attribute-filter-at-this-level */ 63608),'pim/product-edit-form/attributes/validation':/*require.resolve*/(/*! pim/product-edit-form/attributes/validation */ 52636),'pim/product-edit-form/attributes/validation-error':/*require.resolve*/(/*! pim/product-edit-form/attributes/validation-error */ 64090),'pim/product-edit-form/attributes/locale-specific':/*require.resolve*/(/*! pim/product-edit-form/attributes/locale-specific */ 55009),'pim/product-edit-form/attributes/read-only-form':/*require.resolve*/(/*! pim/product-edit-form/attributes/read-only-form */ 46790),'pim/product-edit-form/attributes/completeness':/*require.resolve*/(/*! pim/product-edit-form/attributes/completeness */ 70420),'pim/product-edit-form/attributes/localizable':/*require.resolve*/(/*! pim/product-edit-form/attributes/localizable */ 91543),'pim/product-edit-form/categories':/*require.resolve*/(/*! pim/product-edit-form/categories */ 30858),'pim/product-edit-form/associations':/*require.resolve*/(/*! pim/product-edit-form/associations */ 21856),'pim/product-edit-form/associated-product-row':/*require.resolve*/(/*! pim/product-edit-form/associated-product-row */ 64003),'pim/product-edit-form/associated-product-row-view':/*require.resolve*/(/*! pim/product-edit-form/associated-product-row-view */ 16442),'pim/product-edit-form/locale-switcher':/*require.resolve*/(/*! pim/product-edit-form/locale-switcher */ 31636),'pim/product-edit-form/scope-switcher':/*require.resolve*/(/*! pim/product-edit-form/scope-switcher */ 28295),'pim/product-edit-form/completeness':/*require.resolve*/(/*! pim/product-edit-form/completeness */ 12430),'pim/product-edit-form/history':/*require.resolve*/(/*! pim/product-edit-form/history */ 92882),'pim/product-edit-form/comments':/*require.resolve*/(/*! pim/product-edit-form/comments */ 46149),'pim/product-edit-form/save':/*require.resolve*/(/*! pim/product-edit-form/save */ 35882),'pim/product-edit-form/sequential-edit':/*require.resolve*/(/*! pim/product-edit-form/sequential-edit */ 89924),'pim/product-edit-form/delete':/*require.resolve*/(/*! pim/product-edit-form/delete */ 77273),'pim/product-edit-form/meta/family':/*require.resolve*/(/*! pim/product-edit-form/meta/family */ 15605),'pim/product-edit-form/meta/family-variant':/*require.resolve*/(/*! pim/product-edit-form/meta/family-variant */ 11513),'pim/product-edit-form/meta/change-family':/*require.resolve*/(/*! pim/product-edit-form/meta/change-family */ 14114),'pim/product-edit-form/meta/created':/*require.resolve*/(/*! pim/product-edit-form/meta/created */ 14770),'pim/product-edit-form/meta/updated':/*require.resolve*/(/*! pim/product-edit-form/meta/updated */ 15628),'pim/product-edit-form/meta/uuid':/*require.resolve*/(/*! pim/product-edit-form/meta/uuid */ 69824),'pim/product-edit-form/meta/groups':/*require.resolve*/(/*! pim/product-edit-form/meta/groups */ 28653),'pim/product-edit-form/meta/status-switcher':/*require.resolve*/(/*! pim/product-edit-form/meta/status-switcher */ 31221),'pim/product-edit-form/download-pdf':/*require.resolve*/(/*! pim/product-edit-form/download-pdf */ 88442),'pim/product-edit-form/attributes':/*require.resolve*/(/*! pim/product-edit-form/attributes */ 87840),'pim/product-edit-form/creation/identifier':/*require.resolve*/(/*! pim/product-edit-form/creation/identifier */ 89966),'pim/product-edit-form/creation/identifier-regarding-family':/*require.resolve*/(/*! pim/product-edit-form/creation/identifier-regarding-family */ 45136),'pim/product-edit-form/creation/modal':/*require.resolve*/(/*! pim/product-edit-form/creation/modal */ 45724),'pim/product-edit-form/free-trial-start-copy':/*require.resolve*/(/*! pim/product-edit-form/free-trial-start-copy */ 9007),'pim/product-edit-form/start-copy':/*require.resolve*/(/*! pim/product-edit-form/start-copy */ 92733),'pim/product-edit-form/convert-to-simple-product':/*require.resolve*/(/*! pim/product-edit-form/convert-to-simple-product */ 92422),'pim/product-edit-form/variant-navigation':/*require.resolve*/(/*! pim/product-edit-form/variant-navigation */ 16949),'pim/product-edit-form/attributes/variant-axes':/*require.resolve*/(/*! pim/product-edit-form/attributes/variant-axes */ 71553),'pim/product-edit-form/product-and-product-model-picker':/*require.resolve*/(/*! pim/product-edit-form/product-and-product-model-picker */ 84371),'pim/product-edit-form/attributes/read-only-parent-attributes':/*require.resolve*/(/*! pim/product-edit-form/attributes/read-only-parent-attributes */ 29881),'pim/product/product-grid-title':/*require.resolve*/(/*! pim/product/product-grid-title */ 64376),'pim/product/product-grid-view-title-context':/*require.resolve*/(/*! pim/product/product-grid-view-title-context */ 6442),'pim/datagrid/product-gallery-row':/*require.resolve*/(/*! pim/datagrid/product-gallery-row */ 85474),'pim/product-edit-form/sub-navigation':/*require.resolve*/(/*! pim/product-edit-form/sub-navigation */ 80766),'pim/product-model-edit-form/product-model-label':/*require.resolve*/(/*! pim/product-model-edit-form/product-model-label */ 45917),'pim/product-model-edit-form/save':/*require.resolve*/(/*! pim/product-model-edit-form/save */ 74900),'pim/product-model-edit-form/delete':/*require.resolve*/(/*! pim/product-model-edit-form/delete */ 62822),'pim/product-model-edit-form/complete-variant-product':/*require.resolve*/(/*! pim/product-model-edit-form/complete-variant-product */ 1153),'pim/product-model-edit-form/history':/*require.resolve*/(/*! pim/product-model-edit-form/history */ 92882),'pim/product-model/form/creation/variant':/*require.resolve*/(/*! pim/product-model/form/creation/variant */ 84948),'pim/product-model-edit-form/add-child-form':/*require.resolve*/(/*! pim/product-model-edit-form/add-child-form */ 13446),'pim/product-model-edit-form/add-child-form-header':/*require.resolve*/(/*! pim/product-model-edit-form/add-child-form-header */ 80447),'pim/product-model-edit-form/add-child-form-fields-container':/*require.resolve*/(/*! pim/product-model-edit-form/add-child-form-fields-container */ 4330),'pim/product-model-edit-form/completeness-follow-missing-attribute':/*require.resolve*/(/*! pim/product-model-edit-form/completeness-follow-missing-attribute */ 96472),'oro/datagrid/navigate-product-and-product-model-action':/*require.resolve*/(/*! oro/datagrid/navigate-product-and-product-model-action */ 56486),'oro/datagrid/edit-in-modal-action':/*require.resolve*/(/*! oro/datagrid/edit-in-modal-action */ 13605),'oro/datagrid/delete-product-action':/*require.resolve*/(/*! oro/datagrid/delete-product-action */ 5552),'oro/datagrid/delete-attribute-action':/*require.resolve*/(/*! oro/datagrid/delete-attribute-action */ 29595),'oro/datagrid/toggle-product-action':/*require.resolve*/(/*! oro/datagrid/toggle-product-action */ 28794),'oro/datagrid/react-cell':/*require.resolve*/(/*! oro/datagrid/react-cell */ 35920),'pim/attribute-group-form/tab/attribute':/*require.resolve*/(/*! pim/attribute-group-form/tab/attribute */ 46049),'pim/job/product/edit/content/readonly':/*require.resolve*/(/*! pim/job/product/edit/content/readonly */ 14666),'pim/job/product/edit/content/structure':/*require.resolve*/(/*! pim/job/product/edit/content/structure */ 68922),'pim/job/product/edit/content/structure/scope':/*require.resolve*/(/*! pim/job/product/edit/content/structure/scope */ 85812),'pim/job/product/edit/content/structure/locales':/*require.resolve*/(/*! pim/job/product/edit/content/structure/locales */ 13029),'pim/job/product/edit/content/structure/attributes':/*require.resolve*/(/*! pim/job/product/edit/content/structure/attributes */ 22349),'pim/job/product/edit/content/structure/attributes-selector':/*require.resolve*/(/*! pim/job/product/edit/content/structure/attributes-selector */ 22294),'pim/job/product/edit/content/data/add-select/attribute':/*require.resolve*/(/*! pim/job/product/edit/content/data/add-select/attribute */ 29777),'pim/job/product/edit/content/data/default-attribute-filters':/*require.resolve*/(/*! pim/job/product/edit/content/data/default-attribute-filters */ 36757),'pim/job/common/edit/content/data/help':/*require.resolve*/(/*! pim/job/common/edit/content/data/help */ 37873),'pim/job/product/edit/content/data':/*require.resolve*/(/*! pim/job/product/edit/content/data */ 2106),'pim/job/product/edit/field/date-format':/*require.resolve*/(/*! pim/job/product/edit/field/date-format */ 14130),'pim/job/product/edit/field/with-label':/*require.resolve*/(/*! pim/job/product/edit/field/with-label */ 95771),'pim/job/product/edit/field/header-with-label':/*require.resolve*/(/*! pim/job/product/edit/field/header-with-label */ 23807),'pim/job/product/edit/field/file-locale':/*require.resolve*/(/*! pim/job/product/edit/field/file-locale */ 29874),'pim/job/common/edit/field/decimal-separator':/*require.resolve*/(/*! pim/job/common/edit/field/decimal-separator */ 68932),'pim/job/common/edit/properties':/*require.resolve*/(/*! pim/job/common/edit/properties */ 53853),'pim/job/common/edit/field/field':/*require.resolve*/(/*! pim/job/common/edit/field/field */ 29072),'pim/job/common/edit/field/text':/*require.resolve*/(/*! pim/job/common/edit/field/text */ 90147),'pim/job/common/edit/field/select':/*require.resolve*/(/*! pim/job/common/edit/field/select */ 19553),'pim/job/common/edit/field/switch':/*require.resolve*/(/*! pim/job/common/edit/field/switch */ 50698),'pim/job/common/edit/label':/*require.resolve*/(/*! pim/job/common/edit/label */ 9881),'pim/job/common/edit/meta':/*require.resolve*/(/*! pim/job/common/edit/meta */ 24751),'pim/job/export/edit/delete':/*require.resolve*/(/*! pim/job/export/edit/delete */ 54658),'pim/job/import/edit/delete':/*require.resolve*/(/*! pim/job/import/edit/delete */ 68691),'pim/job/common/duplicate/duplicate':/*require.resolve*/(/*! pim/job/common/duplicate/duplicate */ 93728),'pim/job/common/breadcrumb/breadcrumb':/*require.resolve*/(/*! pim/job/common/breadcrumb/breadcrumb */ 42712),'pim/job/common/edit/validation':/*require.resolve*/(/*! pim/job/common/edit/validation */ 91449),'pim/job/common/edit/launch':/*require.resolve*/(/*! pim/job/common/edit/launch */ 97710),'pim/job/common/edit/upload':/*require.resolve*/(/*! pim/job/common/edit/upload */ 11079),'pim/job/common/edit/upload-launch':/*require.resolve*/(/*! pim/job/common/edit/upload-launch */ 54691),'pim/job/common/file-path':/*require.resolve*/(/*! pim/job/common/file-path */ 84269),'pim/job/product/edit/content':/*require.resolve*/(/*! pim/job/product/edit/content */ 68122),'pim/job/common/edit-button':/*require.resolve*/(/*! pim/job/common/edit-button */ 55039),'pim/filter/filter':/*require.resolve*/(/*! pim/filter/filter */ 53570),'pim/filter/product/family':/*require.resolve*/(/*! pim/filter/product/family */ 68438),'pim/filter/product/enabled':/*require.resolve*/(/*! pim/filter/product/enabled */ 29718),'pim/filter/product/updated':/*require.resolve*/(/*! pim/filter/product/updated */ 54787),'pim/filter/product/completeness':/*require.resolve*/(/*! pim/filter/product/completeness */ 75328),'pim/filter/product/quality-score':/*require.resolve*/(/*! pim/filter/product/quality-score */ 2490),'pim/filter/product/category':/*require.resolve*/(/*! pim/filter/product/category */ 56155),'pim/filter/product/category/selector':/*require.resolve*/(/*! pim/filter/product/category/selector */ 73344),'pim/filter/attribute/identifier':/*require.resolve*/(/*! pim/filter/attribute/identifier */ 44645),'pim/filter/attribute/attribute':/*require.resolve*/(/*! pim/filter/attribute/attribute */ 59356),'pim/filter/attribute/boolean':/*require.resolve*/(/*! pim/filter/attribute/boolean */ 30883),'pim/filter/attribute/string':/*require.resolve*/(/*! pim/filter/attribute/string */ 63251),'pim/filter/attribute/metric':/*require.resolve*/(/*! pim/filter/attribute/metric */ 48724),'pim/filter/attribute/price-collection':/*require.resolve*/(/*! pim/filter/attribute/price-collection */ 71469),'pim/filter/attribute/number':/*require.resolve*/(/*! pim/filter/attribute/number */ 3323),'pim/filter/attribute/select':/*require.resolve*/(/*! pim/filter/attribute/select */ 16698),'pim/filter/attribute/media':/*require.resolve*/(/*! pim/filter/attribute/media */ 17275),'pim/filter/attribute/date':/*require.resolve*/(/*! pim/filter/attribute/date */ 78982),'pim/mass-edit-form/form':/*require.resolve*/(/*! pim/mass-edit-form/form */ 47544),'pim/mass-edit-form/choose':/*require.resolve*/(/*! pim/mass-edit-form/choose */ 34304),'pim/mass-edit-form/product/operation':/*require.resolve*/(/*! pim/mass-edit-form/product/operation */ 34714),'pim/mass-edit-form/product/associate':/*require.resolve*/(/*! pim/mass-edit-form/product/associate */ 87283),'pim/mass-edit-form/product/change-status':/*require.resolve*/(/*! pim/mass-edit-form/product/change-status */ 86992),'pim/mass-edit-form/product/edit-common-attributes':/*require.resolve*/(/*! pim/mass-edit-form/product/edit-common-attributes */ 74738),'pim/mass-edit-form/product/add-attribute-values':/*require.resolve*/(/*! pim/mass-edit-form/product/add-attribute-values */ 74738),'pim/mass-edit-form/product/update-entity-with-family-variant-parent':/*require.resolve*/(/*! pim/mass-edit-form/product/update-entity-with-family-variant-parent */ 13461),'pim/mass-edit-form/product/convert-to-simple-product':/*require.resolve*/(/*! pim/mass-edit-form/product/convert-to-simple-product */ 61952),'pim/mass-edit-form/product/change-family':/*require.resolve*/(/*! pim/mass-edit-form/product/change-family */ 31864),'pim/mass-edit-form/product/add-to-group':/*require.resolve*/(/*! pim/mass-edit-form/product/add-to-group */ 12396),'pim/mass-edit-form/product/category':/*require.resolve*/(/*! pim/mass-edit-form/product/category */ 62647),'pim/mass-edit-form/product/mass-edit-field':/*require.resolve*/(/*! pim/mass-edit-form/product/mass-edit-field */ 28859),'pim/mass-edit-form/product/product-model-field':/*require.resolve*/(/*! pim/mass-edit-form/product/product-model-field */ 66079),'pim/mass-edit-form/product/variant-field':/*require.resolve*/(/*! pim/mass-edit-form/product/variant-field */ 79166),'pim/mass-edit-form/family/set-requirements':/*require.resolve*/(/*! pim/mass-edit-form/family/set-requirements */ 29644),'pim/field-manager':/*require.resolve*/(/*! pim/field-manager */ 4206),'pim/provider/to-fill-field-provider':/*require.resolve*/(/*! pim/provider/to-fill-field-provider */ 26682),'pim/provider/sequential-edit-provider':/*require.resolve*/(/*! pim/provider/sequential-edit-provider */ 83436),'pim/mass-product-edit-form/form-model-updater':/*require.resolve*/(/*! pim/mass-product-edit-form/form-model-updater */ 32895),'pim/mass-product-edit-form/attributes':/*require.resolve*/(/*! pim/mass-product-edit-form/attributes */ 81166),'pim/mass-family-edit-form/attributes':/*require.resolve*/(/*! pim/mass-family-edit-form/attributes */ 634),'pim/mass-family-edit-form/form-model-updater':/*require.resolve*/(/*! pim/mass-family-edit-form/form-model-updater */ 31057),'pim/mass-family-edit-form/toolbar/add-select/attribute':/*require.resolve*/(/*! pim/mass-family-edit-form/toolbar/add-select/attribute */ 45691),'pim/attribute-option-form':/*require.resolve*/(/*! pim/attribute-option-form */ 84304),'pim/attribute-option/create':/*require.resolve*/(/*! pim/attribute-option/create */ 16326),'pim/group-edit-form/products':/*require.resolve*/(/*! pim/group-edit-form/products */ 26494),'pim/group-edit-form/delete':/*require.resolve*/(/*! pim/group-edit-form/delete */ 5587),'pim/group-edit-form/properties/general':/*require.resolve*/(/*! pim/group-edit-form/properties/general */ 29982),'pim/group-edit-form/meta/product-count':/*require.resolve*/(/*! pim/group-edit-form/meta/product-count */ 58018),'pim/group-edit-form/save':/*require.resolve*/(/*! pim/group-edit-form/save */ 52498),'pim/attribute-edit-form/tab/choices':/*require.resolve*/(/*! pim/attribute-edit-form/tab/choices */ 95102),'pim/attribute-edit-form/choices/options-grid':/*require.resolve*/(/*! pim/attribute-edit-form/choices/options-grid */ 42916),'pim/attribute-edit-form/save-form':/*require.resolve*/(/*! pim/attribute-edit-form/save-form */ 92472),'pim/attribute-edit-form/delete':/*require.resolve*/(/*! pim/attribute-edit-form/delete */ 888),'pim/attribute-edit-form/properties/available-locales':/*require.resolve*/(/*! pim/attribute-edit-form/properties/available-locales */ 1833),'pim/attribute-edit-form/properties/default-bool-value':/*require.resolve*/(/*! pim/attribute-edit-form/properties/default-bool-value */ 12612),'pim/attribute-edit-form/properties/default-metric-unit':/*require.resolve*/(/*! pim/attribute-edit-form/properties/default-metric-unit */ 45513),'pim/attribute-edit-form/properties/group':/*require.resolve*/(/*! pim/attribute-edit-form/properties/group */ 61556),'pim/attribute-edit-form/properties/is-locale-specific':/*require.resolve*/(/*! pim/attribute-edit-form/properties/is-locale-specific */ 39867),'pim/attribute-edit-form/properties/localizable':/*require.resolve*/(/*! pim/attribute-edit-form/properties/localizable */ 33531),'pim/attribute-edit-form/properties/metric-family':/*require.resolve*/(/*! pim/attribute-edit-form/properties/metric-family */ 1072),'pim/attribute-edit-form/properties/scopable':/*require.resolve*/(/*! pim/attribute-edit-form/properties/scopable */ 21177),'pim/attribute-edit-form/properties/type':/*require.resolve*/(/*! pim/attribute-edit-form/properties/type */ 32788),'pim/attribute-edit-form/properties/unique':/*require.resolve*/(/*! pim/attribute-edit-form/properties/unique */ 4054),'pim/attribute-edit-form/properties/validation-regexp':/*require.resolve*/(/*! pim/attribute-edit-form/properties/validation-regexp */ 98995),'pim/attribute-edit-form/properties/guidelines':/*require.resolve*/(/*! pim/attribute-edit-form/properties/guidelines */ 76625),'pim/attribute-edit-form/type-specific-form':/*require.resolve*/(/*! pim/attribute-edit-form/type-specific-form */ 13194),'pim/attribute-edit-form/type-specific-form-registry':/*require.resolve*/(/*! pim/attribute-edit-form/type-specific-form-registry */ 21351),'pim/attribute-edit-form':/*require.resolve*/(/*! pim/attribute-edit-form */ 18356),'pim/attribute/grid':/*require.resolve*/(/*! pim/attribute/grid */ 48696),'pim/common/grid':/*require.resolve*/(/*! pim/common/grid */ 30820),'pim/common/redirect':/*require.resolve*/(/*! pim/common/redirect */ 47440),'pim/common/breadcrumbs':/*require.resolve*/(/*! pim/common/breadcrumbs */ 99683),'pim/common/tab/history':/*require.resolve*/(/*! pim/common/tab/history */ 86785),'pim/common/tab':/*require.resolve*/(/*! pim/common/tab */ 56135),'pim/common/properties/translation':/*require.resolve*/(/*! pim/common/properties/translation */ 11390),'pim/common/properties/general':/*require.resolve*/(/*! pim/common/properties/general */ 91532),'pim/common/add-select':/*require.resolve*/(/*! pim/common/add-select */ 64191),'pim/common/add-select/line':/*require.resolve*/(/*! pim/common/add-select/line */ 67184),'pim/common/add-select/footer':/*require.resolve*/(/*! pim/common/add-select/footer */ 26149),'pim/create/properties/general':/*require.resolve*/(/*! pim/create/properties/general */ 51458),'pim/common/simple-view':/*require.resolve*/(/*! pim/common/simple-view */ 8175),'pim/common/grid-title':/*require.resolve*/(/*! pim/common/grid-title */ 50314),'pim/common/item-picker':/*require.resolve*/(/*! pim/common/item-picker */ 49593),'pim/form/common/edit-form':/*require.resolve*/(/*! pim/form/common/edit-form */ 2891),'pim/form/common/label':/*require.resolve*/(/*! pim/form/common/label */ 8709),'pim/form/common/group-selector':/*require.resolve*/(/*! pim/form/common/group-selector */ 60593),'pim/form/common/attributes/attribute-group-selector':/*require.resolve*/(/*! pim/form/common/attributes/attribute-group-selector */ 98990),'pim/form/common/save':/*require.resolve*/(/*! pim/form/common/save */ 21153),'pim/form/common/delete':/*require.resolve*/(/*! pim/form/common/delete */ 60721),'pim/form/common/form-tabs':/*require.resolve*/(/*! pim/form/common/form-tabs */ 55229),'pim/form/common/column-tabs':/*require.resolve*/(/*! pim/form/common/column-tabs */ 69607),'pim/form/common/column-tabs-navigation':/*require.resolve*/(/*! pim/form/common/column-tabs-navigation */ 38645),'pim/form/common/save-form':/*require.resolve*/(/*! pim/form/common/save-form */ 64169),'pim/form/common/save-buttons':/*require.resolve*/(/*! pim/form/common/save-buttons */ 62548),'pim/form/common/state':/*require.resolve*/(/*! pim/form/common/state */ 76221),'pim/form/common/meta':/*require.resolve*/(/*! pim/form/common/meta */ 84689),'pim/form/common/subsection':/*require.resolve*/(/*! pim/form/common/subsection */ 8343),'pim/form/common/main-image':/*require.resolve*/(/*! pim/form/common/main-image */ 25163),'pim/form/common/user-main-image':/*require.resolve*/(/*! pim/form/common/user-main-image */ 29805),'pim/form/common/meta/created':/*require.resolve*/(/*! pim/form/common/meta/created */ 12139),'pim/form/common/meta/updated':/*require.resolve*/(/*! pim/form/common/meta/updated */ 29572),'pim/form/common/meta/uuid':/*require.resolve*/(/*! pim/form/common/meta/uuid */ 18746),'pim/form/common/attributes':/*require.resolve*/(/*! pim/form/common/attributes */ 70017),'pim/form/common/attributes/copy':/*require.resolve*/(/*! pim/form/common/attributes/copy */ 24561),'pim/form/common/attributes/copy-field':/*require.resolve*/(/*! pim/form/common/attributes/copy-field */ 23588),'pim/form/common/attributes/create-button':/*require.resolve*/(/*! pim/form/common/attributes/create-button */ 30730),'pim/form/common/download-file':/*require.resolve*/(/*! pim/form/common/download-file */ 29814),'pim/form/common/index/grid':/*require.resolve*/(/*! pim/form/common/index/grid */ 56354),'pim/form/common/index/create-button':/*require.resolve*/(/*! pim/form/common/index/create-button */ 16483),'pim/form/common/column':/*require.resolve*/(/*! pim/form/common/column */ 61752),'pim/form/common/secondary-actions':/*require.resolve*/(/*! pim/form/common/secondary-actions */ 70987),'pim/form/common/index/confirm-button':/*require.resolve*/(/*! pim/form/common/index/confirm-button */ 86579),'pim/form/common/creation/field':/*require.resolve*/(/*! pim/form/common/creation/field */ 71293),'pim/form/common/creation/modal':/*require.resolve*/(/*! pim/form/common/creation/modal */ 90906),'pim/form/common/creation/modal/client':/*require.resolve*/(/*! pim/form/common/creation/modal/client */ 39025),'pim/form/common/creation/modal/create-user':/*require.resolve*/(/*! pim/form/common/creation/modal/create-user */ 6603),'pim/form/common/creation/type':/*require.resolve*/(/*! pim/form/common/creation/type */ 69615),'pim/form/common/creation/job':/*require.resolve*/(/*! pim/form/common/creation/job */ 71290),'pim/form/common/product/create-button':/*require.resolve*/(/*! pim/form/common/product/create-button */ 57815),'pim/form/common/product/product-main-image':/*require.resolve*/(/*! pim/form/common/product/product-main-image */ 35907),'pim/form/common/section':/*require.resolve*/(/*! pim/form/common/section */ 15492),'pim/form/user/login-details':/*require.resolve*/(/*! pim/form/user/login-details */ 81066),'pim/form/common/exclusif-boolean':/*require.resolve*/(/*! pim/form/common/exclusif-boolean */ 87558),'pim/menu/menu':/*require.resolve*/(/*! pim/menu/menu */ 20493),'pim/menu/tab':/*require.resolve*/(/*! pim/menu/tab */ 22676),'pim/menu/item':/*require.resolve*/(/*! pim/menu/item */ 86399),'pim/menu/help':/*require.resolve*/(/*! pim/menu/help */ 49674),'pim/menu/navigation-back':/*require.resolve*/(/*! pim/menu/navigation-back */ 74743),'pim/menu/navigation-block':/*require.resolve*/(/*! pim/menu/navigation-block */ 3876),'pim/menu/resizable':/*require.resolve*/(/*! pim/menu/resizable */ 80787),'pim/menu/user-navigation':/*require.resolve*/(/*! pim/menu/user-navigation */ 34656),'pim/menu/logo':/*require.resolve*/(/*! pim/menu/logo */ 65773),'pim/menu/column':/*require.resolve*/(/*! pim/menu/column */ 14739),'pim/form/common/fields/field':/*require.resolve*/(/*! pim/form/common/fields/field */ 74695),'pim/form/common/fields/boolean':/*require.resolve*/(/*! pim/form/common/fields/boolean */ 46164),'pim/form/common/fields/date':/*require.resolve*/(/*! pim/form/common/fields/date */ 97136),'pim/form/common/fields/select':/*require.resolve*/(/*! pim/form/common/fields/select */ 71364),'pim/form/common/fields/simple-select-async':/*require.resolve*/(/*! pim/form/common/fields/simple-select-async */ 29915),'pim/form/common/fields/multi-select-async':/*require.resolve*/(/*! pim/form/common/fields/multi-select-async */ 48400),'pim/form/common/fields/text':/*require.resolve*/(/*! pim/form/common/fields/text */ 53228),'pim/form/common/fields/copiable-text':/*require.resolve*/(/*! pim/form/common/fields/copiable-text */ 66681),'pim/form/common/fields/textarea':/*require.resolve*/(/*! pim/form/common/fields/textarea */ 57749),'pim/form/common/fields/metric':/*require.resolve*/(/*! pim/form/common/fields/metric */ 14159),'pim/form/common/fields/password':/*require.resolve*/(/*! pim/form/common/fields/password */ 18827),'pim/form/common/fields/number':/*require.resolve*/(/*! pim/form/common/fields/number */ 13832),'pim/form/common/fields/media':/*require.resolve*/(/*! pim/form/common/fields/media */ 2609),'pim/form/common/fields/available-locales':/*require.resolve*/(/*! pim/form/common/fields/available-locales */ 3994),'pim/form/common/fields/values/boolean':/*require.resolve*/(/*! pim/form/common/fields/values/boolean */ 91557),'pim/form/common/fields/values/simple-select-async':/*require.resolve*/(/*! pim/form/common/fields/values/simple-select-async */ 40080),'pim/form/common/fields/values/text':/*require.resolve*/(/*! pim/form/common/fields/values/text */ 86871),'pim/form/common/fields/values/metric':/*require.resolve*/(/*! pim/form/common/fields/values/metric */ 4713),'pim/form/common/fields/values/values-behavior':/*require.resolve*/(/*! pim/form/common/fields/values/values-behavior */ 25955),'pim/field':/*require.resolve*/(/*! pim/field */ 62494),'pim/boolean-field':/*require.resolve*/(/*! pim/boolean-field */ 2461),'pim/date-field':/*require.resolve*/(/*! pim/date-field */ 92401),'pim/media-field':/*require.resolve*/(/*! pim/media-field */ 29043),'pim/metric-field':/*require.resolve*/(/*! pim/metric-field */ 6630),'pim/multi-select-field':/*require.resolve*/(/*! pim/multi-select-field */ 22088),'pim/number-field':/*require.resolve*/(/*! pim/number-field */ 33071),'pim/price-collection-field':/*require.resolve*/(/*! pim/price-collection-field */ 6262),'pim/simple-select-field':/*require.resolve*/(/*! pim/simple-select-field */ 29576),'pim/text-field':/*require.resolve*/(/*! pim/text-field */ 72429),'pim/textarea-field':/*require.resolve*/(/*! pim/textarea-field */ 66383),'pim/wysiwyg-field':/*require.resolve*/(/*! pim/wysiwyg-field */ 35892),'pim/product/add-select/attribute/line':/*require.resolve*/(/*! pim/product/add-select/attribute/line */ 79726),'pim/product/add-select/attribute':/*require.resolve*/(/*! pim/product/add-select/attribute */ 24018),'pim/attribute-group/add-select/attribute':/*require.resolve*/(/*! pim/attribute-group/add-select/attribute */ 82553),'pim/formatter/choices/base':/*require.resolve*/(/*! pim/formatter/choices/base */ 78464),'pim/formatter/date':/*require.resolve*/(/*! pim/formatter/date */ 54555),'pim/grid/locale-switcher':/*require.resolve*/(/*! pim/grid/locale-switcher */ 20818),'pim/grid/category-switcher':/*require.resolve*/(/*! pim/grid/category-switcher */ 88048),'pim/grid/mass-actions':/*require.resolve*/(/*! pim/grid/mass-actions */ 28137),'pim/product/grid/mass-actions':/*require.resolve*/(/*! pim/product/grid/mass-actions */ 75654),'pim/family/grid/mass-actions':/*require.resolve*/(/*! pim/family/grid/mass-actions */ 47496),'pim/grid/category-tree':/*require.resolve*/(/*! pim/grid/category-tree */ 52732),'pim/grid/category-tree-done':/*require.resolve*/(/*! pim/grid/category-tree-done */ 79418),'pim/grid/view-selector':/*require.resolve*/(/*! pim/grid/view-selector */ 89750),'pim/grid/view-selector/selector':/*require.resolve*/(/*! pim/grid/view-selector/selector */ 53158),'pim/grid/view-selector/view-selector-secondary-actions':/*require.resolve*/(/*! pim/grid/view-selector/view-selector-secondary-actions */ 32150),'pim/grid/view-selector/line':/*require.resolve*/(/*! pim/grid/view-selector/line */ 13149),'pim/grid/view-selector/create-view':/*require.resolve*/(/*! pim/grid/view-selector/create-view */ 77344),'pim/grid/view-selector/save-view':/*require.resolve*/(/*! pim/grid/view-selector/save-view */ 16137),'pim/grid/view-selector/remove-view':/*require.resolve*/(/*! pim/grid/view-selector/remove-view */ 33329),'pim/grid/view-selector/current':/*require.resolve*/(/*! pim/grid/view-selector/current */ 64957),'pim/grid/table':/*require.resolve*/(/*! pim/grid/table */ 13555),'pim/template/common/default-template':/*require.resolve*/(/*! pim/template/common/default-template */ 39781),'pim/template/common/drop-zone':/*require.resolve*/(/*! pim/template/common/drop-zone */ 46143),'pim/template/common/form-container':/*require.resolve*/(/*! pim/template/common/form-container */ 84311),'pim/template/common/no-data':/*require.resolve*/(/*! pim/template/common/no-data */ 73183),'pim/template/common/grid':/*require.resolve*/(/*! pim/template/common/grid */ 86128),'pim/template/common/item-picker':/*require.resolve*/(/*! pim/template/common/item-picker */ 74788),'pim/template/common/item-picker-basket':/*require.resolve*/(/*! pim/template/common/item-picker-basket */ 2372),'pim/template/common/description-header':/*require.resolve*/(/*! pim/template/common/description-header */ 83702),'pim/template/common/modal-centered':/*require.resolve*/(/*! pim/template/common/modal-centered */ 94596),'pim/template/common/section':/*require.resolve*/(/*! pim/template/common/section */ 43536),'pim/template/form/group-selector':/*require.resolve*/(/*! pim/template/form/group-selector */ 56915),'pim/template/form/save':/*require.resolve*/(/*! pim/template/form/save */ 75322),'pim/template/form/delete':/*require.resolve*/(/*! pim/template/form/delete */ 1653),'pim/template/form/tab/history':/*require.resolve*/(/*! pim/template/form/tab/history */ 81126),'pim/template/form/tab/section':/*require.resolve*/(/*! pim/template/form/tab/section */ 27238),'pim/template/form/tab/section-large':/*require.resolve*/(/*! pim/template/form/tab/section-large */ 65534),'pim/template/form/tab/sections':/*require.resolve*/(/*! pim/template/form/tab/sections */ 99615),'pim/template/form/grid':/*require.resolve*/(/*! pim/template/form/grid */ 97213),'pim/template/form/add-select/select':/*require.resolve*/(/*! pim/template/form/add-select/select */ 53486),'pim/template/form/add-select/line':/*require.resolve*/(/*! pim/template/form/add-select/line */ 53224),'pim/template/form/add-select/footer':/*require.resolve*/(/*! pim/template/form/add-select/footer */ 81627),'pim/template/form/properties/translation':/*require.resolve*/(/*! pim/template/form/properties/translation */ 62742),'pim/template/form/properties/general':/*require.resolve*/(/*! pim/template/form/properties/general */ 95478),'pim/template/form/properties/input':/*require.resolve*/(/*! pim/template/form/properties/input */ 34696),'pim/template/form/form-tabs':/*require.resolve*/(/*! pim/template/form/form-tabs */ 95239),'pim/template/form/state':/*require.resolve*/(/*! pim/template/form/state */ 89215),'pim/template/form/meta/created':/*require.resolve*/(/*! pim/template/form/meta/created */ 42183),'pim/template/form/meta/updated':/*require.resolve*/(/*! pim/template/form/meta/updated */ 55008),'pim/template/form/meta/uuid':/*require.resolve*/(/*! pim/template/form/meta/uuid */ 39005),'pim/template/form/meta':/*require.resolve*/(/*! pim/template/form/meta */ 78692),'pim/template/form/tab/attributes':/*require.resolve*/(/*! pim/template/form/tab/attributes */ 37961),'pim/template/form/save-buttons':/*require.resolve*/(/*! pim/template/form/save-buttons */ 12715),'pim/template/form/tab/attribute/attribute-filter':/*require.resolve*/(/*! pim/template/form/tab/attribute/attribute-filter */ 1715),'pim/template/form/tab/attribute/attribute-group-selector':/*require.resolve*/(/*! pim/template/form/tab/attribute/attribute-group-selector */ 71660),'pim/template/form/tab/attribute/attribute-group':/*require.resolve*/(/*! pim/template/form/tab/attribute/attribute-group */ 25404),'pim/template/form/tab/attribute/copy':/*require.resolve*/(/*! pim/template/form/tab/attribute/copy */ 42445),'pim/template/form/tab/attribute/copy-field':/*require.resolve*/(/*! pim/template/form/tab/attribute/copy-field */ 75236),'pim/template/form/tab/attribute/create-button':/*require.resolve*/(/*! pim/template/form/tab/attribute/create-button */ 68546),'pim/template/form/tab/attribute/create-modal-content':/*require.resolve*/(/*! pim/template/form/tab/attribute/create-modal-content */ 46528),'pim/template/form/redirect':/*require.resolve*/(/*! pim/template/form/redirect */ 32806),'pim/template/form/download-file':/*require.resolve*/(/*! pim/template/form/download-file */ 31170),'pim/template/form/index/index':/*require.resolve*/(/*! pim/template/form/index/index */ 67449),'pim/template/form/index/create-button':/*require.resolve*/(/*! pim/template/form/index/create-button */ 36342),'pim/template/form/index/confirm-button':/*require.resolve*/(/*! pim/template/form/index/confirm-button */ 2037),'pim/template/form/creation/modal':/*require.resolve*/(/*! pim/template/form/creation/modal */ 77123),'pim/template/form/creation/field':/*require.resolve*/(/*! pim/template/form/creation/field */ 19882),'pim/template/form/creation/type':/*require.resolve*/(/*! pim/template/form/creation/type */ 52844),'pim/template/form/creation/job':/*require.resolve*/(/*! pim/template/form/creation/job */ 46837),'pim/template/form/column':/*require.resolve*/(/*! pim/template/form/column */ 69167),'pim/template/form/column-navigation':/*require.resolve*/(/*! pim/template/form/column-navigation */ 66872),'pim/template/form/secondary-actions':/*require.resolve*/(/*! pim/template/form/secondary-actions */ 54861),'pim/template/form/column-tabs':/*require.resolve*/(/*! pim/template/form/column-tabs */ 89875),'pim/template/form/column-tabs-navigation':/*require.resolve*/(/*! pim/template/form/column-tabs-navigation */ 94134),'pim/template/form/subsection':/*require.resolve*/(/*! pim/template/form/subsection */ 92117),'pim/template/form/main-image':/*require.resolve*/(/*! pim/template/form/main-image */ 904),'pim/template/form/user/login-details':/*require.resolve*/(/*! pim/template/form/user/login-details */ 62678),'pim/template/form/exclusif-boolean':/*require.resolve*/(/*! pim/template/form/exclusif-boolean */ 39300),'pim/template/form/common/fields/field':/*require.resolve*/(/*! pim/template/form/common/fields/field */ 83102),'pim/template/form/common/fields/boolean':/*require.resolve*/(/*! pim/template/form/common/fields/boolean */ 83865),'pim/template/form/common/fields/date':/*require.resolve*/(/*! pim/template/form/common/fields/date */ 11847),'pim/template/form/common/fields/select':/*require.resolve*/(/*! pim/template/form/common/fields/select */ 60191),'pim/template/form/common/fields/simple-select-async':/*require.resolve*/(/*! pim/template/form/common/fields/simple-select-async */ 50427),'pim/template/form/common/fields/text':/*require.resolve*/(/*! pim/template/form/common/fields/text */ 71957),'pim/template/form/common/fields/copiable-text':/*require.resolve*/(/*! pim/template/form/common/fields/copiable-text */ 21421),'pim/template/form/common/fields/textarea':/*require.resolve*/(/*! pim/template/form/common/fields/textarea */ 37887),'pim/template/form/common/fields/textarea-monospaced':/*require.resolve*/(/*! pim/template/form/common/fields/textarea-monospaced */ 75240),'pim/template/form/common/fields/metric':/*require.resolve*/(/*! pim/template/form/common/fields/metric */ 17487),'pim/template/form/common/fields/password':/*require.resolve*/(/*! pim/template/form/common/fields/password */ 3785),'pim/template/form/common/fields/number':/*require.resolve*/(/*! pim/template/form/common/fields/number */ 77239),'pim/template/form/common/fields/media':/*require.resolve*/(/*! pim/template/form/common/fields/media */ 66306),'pim/template/form/attribute-group/tab/attribute':/*require.resolve*/(/*! pim/template/form/attribute-group/tab/attribute */ 9613),'pim/template/form/attribute-group/list':/*require.resolve*/(/*! pim/template/form/attribute-group/list */ 49644),'pim/template/channel/tab/properties/general/currencies':/*require.resolve*/(/*! pim/template/channel/tab/properties/general/currencies */ 77843),'pim/template/channel/tab/properties/general/locales':/*require.resolve*/(/*! pim/template/channel/tab/properties/general/locales */ 40536),'pim/template/channel/tab/properties/general/category-tree':/*require.resolve*/(/*! pim/template/channel/tab/properties/general/category-tree */ 7420),'pim/template/channel/tab/properties/conversion-unit':/*require.resolve*/(/*! pim/template/channel/tab/properties/conversion-unit */ 2036),'pim/template/family/tab/attributes/toolbar':/*require.resolve*/(/*! pim/template/family/tab/attributes/toolbar */ 39694),'pim/template/family/tab/attributes/attributes':/*require.resolve*/(/*! pim/template/family/tab/attributes/attributes */ 70213),'pim/template/family/tab/general/attribute-as-label':/*require.resolve*/(/*! pim/template/family/tab/general/attribute-as-label */ 7176),'pim/template/family/tab/attributes':/*require.resolve*/(/*! pim/template/family/tab/attributes */ 23306),'pim/template/family/tab/general/attribute-as-image':/*require.resolve*/(/*! pim/template/family/tab/general/attribute-as-image */ 4469),'pim/template/family/tab/family-variant':/*require.resolve*/(/*! pim/template/family/tab/family-variant */ 4972),'pim/template/family-variant/add-variant-form':/*require.resolve*/(/*! pim/template/family-variant/add-variant-form */ 94453),'pim/template/family-variant/add-variant-form-header':/*require.resolve*/(/*! pim/template/family-variant/add-variant-form-header */ 1406),'pim/template/family-variant/add-variant-form-fields-container':/*require.resolve*/(/*! pim/template/family-variant/add-variant-form-fields-container */ 41766),'pim/template/family-variant/edit':/*require.resolve*/(/*! pim/template/family-variant/edit */ 42546),'pim/template/family-variant/attribute-set':/*require.resolve*/(/*! pim/template/family-variant/attribute-set */ 83355),'pim/template/family-variant/attribute-group':/*require.resolve*/(/*! pim/template/family-variant/attribute-group */ 71708),'pim/template/family-variant/labels-container':/*require.resolve*/(/*! pim/template/family-variant/labels-container */ 86697),'pim/template/product/grid/locale-switcher':/*require.resolve*/(/*! pim/template/product/grid/locale-switcher */ 43646),'pim/template/product/grid/column-inner':/*require.resolve*/(/*! pim/template/product/grid/column-inner */ 23492),'pim/template/product/grid/category-switcher':/*require.resolve*/(/*! pim/template/product/grid/category-switcher */ 49569),'pim/template/product/grid/category-tree-done':/*require.resolve*/(/*! pim/template/product/grid/category-tree-done */ 99840),'pim/template/product/index':/*require.resolve*/(/*! pim/template/product/index */ 14151),'pim/template/product/tab/categories':/*require.resolve*/(/*! pim/template/product/tab/categories */ 32754),'pim/template/product/tab/catalog-switcher':/*require.resolve*/(/*! pim/template/product/tab/catalog-switcher */ 19598),'pim/template/product/tab/attribute/validation-error':/*require.resolve*/(/*! pim/template/product/tab/attribute/validation-error */ 30943),'pim/template/product/tab/associations':/*require.resolve*/(/*! pim/template/product/tab/associations */ 88312),'pim/template/product/tab/associated-product-row':/*require.resolve*/(/*! pim/template/product/tab/associated-product-row */ 3760),'pim/template/product/tab/association-panes':/*require.resolve*/(/*! pim/template/product/tab/association-panes */ 51839),'pim/template/product/tab/jstree-locked-item':/*require.resolve*/(/*! pim/template/product/tab/jstree-locked-item */ 41092),'pim/template/product/completeness':/*require.resolve*/(/*! pim/template/product/completeness */ 6689),'pim/template/product/history':/*require.resolve*/(/*! pim/template/product/history */ 43830),'pim/template/product/comments':/*require.resolve*/(/*! pim/template/product/comments */ 28360),'pim/template/product/locale-switcher':/*require.resolve*/(/*! pim/template/product/locale-switcher */ 32965),'pim/template/product/sequential-edit':/*require.resolve*/(/*! pim/template/product/sequential-edit */ 86878),'pim/template/product/download-pdf':/*require.resolve*/(/*! pim/template/product/download-pdf */ 55697),'pim/template/product/start-copy':/*require.resolve*/(/*! pim/template/product/start-copy */ 63492),'pim/template/product/meta/status-switcher':/*require.resolve*/(/*! pim/template/product/meta/status-switcher */ 16219),'pim/template/product/meta/family':/*require.resolve*/(/*! pim/template/product/meta/family */ 71159),'pim/template/product/meta/family-variant':/*require.resolve*/(/*! pim/template/product/meta/family-variant */ 28699),'pim/template/product/meta/change-family-modal':/*require.resolve*/(/*! pim/template/product/meta/change-family-modal */ 21063),'pim/template/product/meta/groups':/*require.resolve*/(/*! pim/template/product/meta/groups */ 81293),'pim/template/product/meta/group-modal':/*require.resolve*/(/*! pim/template/product/meta/group-modal */ 46559),'pim/template/product/meta/created':/*require.resolve*/(/*! pim/template/product/meta/created */ 27626),'pim/template/product/meta/updated':/*require.resolve*/(/*! pim/template/product/meta/updated */ 93265),'pim/template/product/meta/uuid':/*require.resolve*/(/*! pim/template/product/meta/uuid */ 47142),'pim/template/product/scope-switcher':/*require.resolve*/(/*! pim/template/product/scope-switcher */ 21521),'pim/template/product/field/field':/*require.resolve*/(/*! pim/template/product/field/field */ 43588),'pim/template/product/field/field-guidelines':/*require.resolve*/(/*! pim/template/product/field/field-guidelines */ 4241),'pim/template/product/field/date':/*require.resolve*/(/*! pim/template/product/field/date */ 33915),'pim/template/product/field/media':/*require.resolve*/(/*! pim/template/product/field/media */ 90196),'pim/template/product/field/metric':/*require.resolve*/(/*! pim/template/product/field/metric */ 25676),'pim/template/product/field/multi-select':/*require.resolve*/(/*! pim/template/product/field/multi-select */ 38638),'pim/template/product/field/number':/*require.resolve*/(/*! pim/template/product/field/number */ 39341),'pim/template/product/field/price-collection':/*require.resolve*/(/*! pim/template/product/field/price-collection */ 76877),'pim/template/product/field/simple-select':/*require.resolve*/(/*! pim/template/product/field/simple-select */ 95411),'pim/template/product/field/text':/*require.resolve*/(/*! pim/template/product/field/text */ 52633),'pim/template/product/field/textarea':/*require.resolve*/(/*! pim/template/product/field/textarea */ 59571),'pim/template/product-create-error':/*require.resolve*/(/*! pim/template/product-create-error */ 83377),'pim/template/product/create-button':/*require.resolve*/(/*! pim/template/product/create-button */ 93066),'pim/template/product/create-modal-content':/*require.resolve*/(/*! pim/template/product/create-modal-content */ 14702),'pim/template/product/create-helper':/*require.resolve*/(/*! pim/template/product/create-helper */ 19218),'pim/template/product/add-select/attribute/line':/*require.resolve*/(/*! pim/template/product/add-select/attribute/line */ 3675),'pim/template/product/form/total-missing-required-attributes':/*require.resolve*/(/*! pim/template/product/form/total-missing-required-attributes */ 86100),'pim/template/product/form/variant-navigation/navigation':/*require.resolve*/(/*! pim/template/product/form/variant-navigation/navigation */ 42255),'pim/template/product/form/variant-navigation/product-item':/*require.resolve*/(/*! pim/template/product/form/variant-navigation/product-item */ 4906),'pim/template/product/form/variant-navigation/product-model-item':/*require.resolve*/(/*! pim/template/product/form/variant-navigation/product-model-item */ 86665),'pim/template/product/form/variant-navigation/add-child-button':/*require.resolve*/(/*! pim/template/product/form/variant-navigation/add-child-button */ 29127),'pim/template/product/form/mass-edit/attributes':/*require.resolve*/(/*! pim/template/product/form/mass-edit/attributes */ 89164),'pim/template/attribute-option/form':/*require.resolve*/(/*! pim/template/attribute-option/form */ 71993),'pim/template/attribute-option/validation-error':/*require.resolve*/(/*! pim/template/attribute-option/validation-error */ 69554),'pim/template/attribute-option/index':/*require.resolve*/(/*! pim/template/attribute-option/index */ 43324),'pim/template/attribute-option/edit':/*require.resolve*/(/*! pim/template/attribute-option/edit */ 10055),'pim/template/attribute-option/show':/*require.resolve*/(/*! pim/template/attribute-option/show */ 58000),'pim/template/i18n/flag':/*require.resolve*/(/*! pim/template/i18n/flag */ 79951),'pim/template/error/error':/*require.resolve*/(/*! pim/template/error/error */ 44192),'pim/template/grid/mass-actions':/*require.resolve*/(/*! pim/template/grid/mass-actions */ 84115),'pim/template/mass-edit/form':/*require.resolve*/(/*! pim/template/mass-edit/form */ 76189),'pim/template/mass-edit/choose':/*require.resolve*/(/*! pim/template/mass-edit/choose */ 38354),'pim/template/mass-edit/product/associate/pick':/*require.resolve*/(/*! pim/template/mass-edit/product/associate/pick */ 91610),'pim/template/mass-edit/product/associate/confirm':/*require.resolve*/(/*! pim/template/mass-edit/product/associate/confirm */ 65579),'pim/template/mass-edit/product/change-status':/*require.resolve*/(/*! pim/template/mass-edit/product/change-status */ 21993),'pim/template/mass-edit/product/edit-common-attributes':/*require.resolve*/(/*! pim/template/mass-edit/product/edit-common-attributes */ 59544),'pim/template/mass-edit/product/update-entity-with-family-variant-parent':/*require.resolve*/(/*! pim/template/mass-edit/product/update-entity-with-family-variant-parent */ 97494),'pim/template/mass-edit/product/change-family':/*require.resolve*/(/*! pim/template/mass-edit/product/change-family */ 21898),'pim/template/mass-edit/product/add-to-group':/*require.resolve*/(/*! pim/template/mass-edit/product/add-to-group */ 87312),'pim/template/mass-edit/product/category':/*require.resolve*/(/*! pim/template/mass-edit/product/category */ 59472),'pim/template/mass-edit/family/set-requirements':/*require.resolve*/(/*! pim/template/mass-edit/family/set-requirements */ 34238),'pim/template/menu/tab':/*require.resolve*/(/*! pim/template/menu/tab */ 35478),'pim/template/menu/help':/*require.resolve*/(/*! pim/template/menu/help */ 56268),'pim/template/menu/menu':/*require.resolve*/(/*! pim/template/menu/menu */ 22339),'pim/template/menu/item':/*require.resolve*/(/*! pim/template/menu/item */ 85407),'pim/template/menu/user-navigation':/*require.resolve*/(/*! pim/template/menu/user-navigation */ 51348),'pim/template/menu/navigation-block':/*require.resolve*/(/*! pim/template/menu/navigation-block */ 18045),'pim/template/menu/logo':/*require.resolve*/(/*! pim/template/menu/logo */ 13168),'pim/template/app':/*require.resolve*/(/*! pim/template/app */ 72233),'pim/template/group/tab/properties/general':/*require.resolve*/(/*! pim/template/group/tab/properties/general */ 37933),'pim/template/group/meta/product-count':/*require.resolve*/(/*! pim/template/group/meta/product-count */ 30509),'pim/template/create/tab/properties/general':/*require.resolve*/(/*! pim/template/create/tab/properties/general */ 98661),'pim/template/export/product/edit/content/data/help':/*require.resolve*/(/*! pim/template/export/product/edit/content/data/help */ 5986),'pim/template/export/product/edit/content/data':/*require.resolve*/(/*! pim/template/export/product/edit/content/data */ 18874),'pim/template/export/product/edit/content/structure/scope':/*require.resolve*/(/*! pim/template/export/product/edit/content/structure/scope */ 59679),'pim/template/export/product/edit/content/structure/locales':/*require.resolve*/(/*! pim/template/export/product/edit/content/structure/locales */ 579),'pim/template/export/product/edit/content/structure/attributes':/*require.resolve*/(/*! pim/template/export/product/edit/content/structure/attributes */ 64575),'pim/template/export/product/edit/content/structure/attributes-selector':/*require.resolve*/(/*! pim/template/export/product/edit/content/structure/attributes-selector */ 65072),'pim/template/export/product/edit/content/structure/attribute-list':/*require.resolve*/(/*! pim/template/export/product/edit/content/structure/attribute-list */ 77166),'pim/template/export/product/edit/content/structure':/*require.resolve*/(/*! pim/template/export/product/edit/content/structure */ 19685),'pim/template/export/common/edit/properties':/*require.resolve*/(/*! pim/template/export/common/edit/properties */ 16673),'pim/template/export/common/edit/field/field':/*require.resolve*/(/*! pim/template/export/common/edit/field/field */ 60257),'pim/template/export/common/edit/field/text':/*require.resolve*/(/*! pim/template/export/common/edit/field/text */ 96367),'pim/template/export/common/edit/field/select':/*require.resolve*/(/*! pim/template/export/common/edit/field/select */ 21380),'pim/template/export/common/edit/field/switch':/*require.resolve*/(/*! pim/template/export/common/edit/field/switch */ 37939),'pim/template/export/common/edit/meta':/*require.resolve*/(/*! pim/template/export/common/edit/meta */ 29031),'pim/template/export/common/edit/validation':/*require.resolve*/(/*! pim/template/export/common/edit/validation */ 93095),'pim/template/export/common/edit/launch':/*require.resolve*/(/*! pim/template/export/common/edit/launch */ 32032),'pim/template/export/common/edit/upload':/*require.resolve*/(/*! pim/template/export/common/edit/upload */ 20693),'pim/template/export/product/edit/content':/*require.resolve*/(/*! pim/template/export/product/edit/content */ 21039),'pim/template/import/switcher':/*require.resolve*/(/*! pim/template/import/switcher */ 8250),'pim/template/import/file-path':/*require.resolve*/(/*! pim/template/import/file-path */ 32282),'pim/template/filter/filter':/*require.resolve*/(/*! pim/template/filter/filter */ 52105),'pim/template/filter/simpleselect':/*require.resolve*/(/*! pim/template/filter/simpleselect */ 46763),'pim/template/filter/product/family':/*require.resolve*/(/*! pim/template/filter/product/family */ 8575),'pim/template/filter/product/enabled':/*require.resolve*/(/*! pim/template/filter/product/enabled */ 58335),'pim/template/filter/product/updated':/*require.resolve*/(/*! pim/template/filter/product/updated */ 40065),'pim/template/filter/product/completeness':/*require.resolve*/(/*! pim/template/filter/product/completeness */ 39224),'pim/template/filter/product/category/selector':/*require.resolve*/(/*! pim/template/filter/product/category/selector */ 33917),'pim/template/filter/product/category':/*require.resolve*/(/*! pim/template/filter/product/category */ 59444),'pim/template/filter/product/identifier':/*require.resolve*/(/*! pim/template/filter/product/identifier */ 57884),'pim/template/filter/attribute/boolean':/*require.resolve*/(/*! pim/template/filter/attribute/boolean */ 62674),'pim/template/filter/attribute/string':/*require.resolve*/(/*! pim/template/filter/attribute/string */ 79412),'pim/template/filter/attribute/metric':/*require.resolve*/(/*! pim/template/filter/attribute/metric */ 78735),'pim/template/filter/attribute/price-collection':/*require.resolve*/(/*! pim/template/filter/attribute/price-collection */ 7765),'pim/template/filter/attribute/number':/*require.resolve*/(/*! pim/template/filter/attribute/number */ 97798),'pim/template/filter/attribute/select':/*require.resolve*/(/*! pim/template/filter/attribute/select */ 13870),'pim/template/filter/attribute/media':/*require.resolve*/(/*! pim/template/filter/attribute/media */ 44002),'pim/template/filter/attribute/date':/*require.resolve*/(/*! pim/template/filter/attribute/date */ 90595),'pim/template/filter/product/quality-score':/*require.resolve*/(/*! pim/template/filter/product/quality-score */ 99063),'pim/template/filter/product/quality-score-operator':/*require.resolve*/(/*! pim/template/filter/product/quality-score-operator */ 6655),'pim/template/filter/product/quality-score-filter':/*require.resolve*/(/*! pim/template/filter/product/quality-score-filter */ 78755),'pim/template/grid/view-selector/create-view-inputs':/*require.resolve*/(/*! pim/template/grid/view-selector/create-view-inputs */ 65602),'pim/template/grid/view-selector/line':/*require.resolve*/(/*! pim/template/grid/view-selector/line */ 78504),'pim/template/grid/view-selector/create-view':/*require.resolve*/(/*! pim/template/grid/view-selector/create-view */ 91575),'pim/template/grid/view-selector/save-view':/*require.resolve*/(/*! pim/template/grid/view-selector/save-view */ 60649),'pim/template/grid/view-selector/remove-view':/*require.resolve*/(/*! pim/template/grid/view-selector/remove-view */ 62276),'pim/template/grid/view-selector/current':/*require.resolve*/(/*! pim/template/grid/view-selector/current */ 51555),'pim/template/grid/view-selector':/*require.resolve*/(/*! pim/template/grid/view-selector */ 15168),'pim/template/attribute/tab/properties/group':/*require.resolve*/(/*! pim/template/attribute/tab/properties/group */ 53842),'pim/template/attribute/tab/choices/options-grid':/*require.resolve*/(/*! pim/template/attribute/tab/choices/options-grid */ 66828),'pim/template/attribute/attribute-line':/*require.resolve*/(/*! pim/template/attribute/attribute-line */ 42056),'pim/template/product-model/complete-variant-product':/*require.resolve*/(/*! pim/template/product-model/complete-variant-product */ 96905),'pim/template/product-model/history':/*require.resolve*/(/*! pim/template/product-model/history */ 43830),'pim/template/product-model-edit-form/add-child-form':/*require.resolve*/(/*! pim/template/product-model-edit-form/add-child-form */ 22188),'pim/template/product-model-edit-form/add-child-form-header':/*require.resolve*/(/*! pim/template/product-model-edit-form/add-child-form-header */ 80747),'pim/template/product-model-edit-form/add-child-form-fields-container':/*require.resolve*/(/*! pim/template/product-model-edit-form/add-child-form-fields-container */ 46126),'pim/form':/*require.resolve*/(/*! pim/form */ 59904),'pimcommunity/job/common/edit/launch':/*require.resolve*/(/*! pimcommunity/job/common/edit/launch */ 97710),'pimcommunity/grid/view-selector/selector':/*require.resolve*/(/*! pimcommunity/grid/view-selector/selector */ 53158),'pimcommunity/grid/view-selector/line':/*require.resolve*/(/*! pimcommunity/grid/view-selector/line */ 13149),'pimcommunity/grid/view-selector/current':/*require.resolve*/(/*! pimcommunity/grid/view-selector/current */ 64957),'pim/template/catalog-volume/number':/*require.resolve*/(/*! pim/template/catalog-volume/number */ 15253),'pim/template/catalog-volume/average-max':/*require.resolve*/(/*! pim/template/catalog-volume/average-max */ 91508),'pim/edition':/*require.resolve*/(/*! pim/edition */ 18747),'pim/job/common/edit/field/file-path':/*require.resolve*/(/*! pim/job/common/edit/field/file-path */ 5245),'pim/job/common/edit/field/allow-file-upload':/*require.resolve*/(/*! pim/job/common/edit/field/allow-file-upload */ 7782),'pim/controller/connectivity/connection/connect/apps':/*require.resolve*/(/*! pim/controller/connectivity/connection/connect/apps */ 9570),'pim/controller/connectivity/connection/connect/marketplace':/*require.resolve*/(/*! pim/controller/connectivity/connection/connect/marketplace */ 20802),'pim/controller/connectivity/connection/settings':/*require.resolve*/(/*! pim/controller/connectivity/connection/settings */ 54291),'pim/controller/connectivity/connection/error-management':/*require.resolve*/(/*! pim/controller/connectivity/connection/error-management */ 8990),'pim/controller/connectivity/connection/webhook':/*require.resolve*/(/*! pim/controller/connectivity/connection/webhook */ 55326),'pim/controller/connectivity/connection/audit':/*require.resolve*/(/*! pim/controller/connectivity/connection/audit */ 90514),'pim/controller/connectivity/connection/connect/connected-apps':/*require.resolve*/(/*! pim/controller/connectivity/connection/connect/connected-apps */ 13720),'pim/menu/connectivity/connection/connection-params-provider':/*require.resolve*/(/*! pim/menu/connectivity/connection/connection-params-provider */ 28974),'pim/permission-form-registry':/*require.resolve*/(/*! pim/permission-form-registry */ 98329),'akeneo/communication-channel':/*require.resolve*/(/*! akeneo/communication-channel */ 90312),'akeneo/communication-channel/panel':/*require.resolve*/(/*! akeneo/communication-channel/panel */ 44290),'akeneo/template/menu/communication-channel':/*require.resolve*/(/*! akeneo/template/menu/communication-channel */ 37513),'akeneo-data-quality-insights-dqi-dashboard-index':/*require.resolve*/(/*! akeneo-data-quality-insights-dqi-dashboard-index */ 8906),'oro/datagrid/quality-score-badge-cell':/*require.resolve*/(/*! oro/datagrid/quality-score-badge-cell */ 17029),'akeneo/data-quality-insights/view/dqi-dashboard/section':/*require.resolve*/(/*! akeneo/data-quality-insights/view/dqi-dashboard/section */ 77755),'akeneo/data-quality-insights/view/dqi-dashboard/base-dashboard':/*require.resolve*/(/*! akeneo/data-quality-insights/view/dqi-dashboard/base-dashboard */ 16586),'akeneo/data-quality-insights/view/dqi-dashboard/locale-switcher':/*require.resolve*/(/*! akeneo/data-quality-insights/view/dqi-dashboard/locale-switcher */ 38381),'akeneo/data-quality-insights/view/dqi-dashboard/channel-switcher':/*require.resolve*/(/*! akeneo/data-quality-insights/view/dqi-dashboard/channel-switcher */ 52419),'akeneo/data-quality-insights/view/dqi-dashboard/filters':/*require.resolve*/(/*! akeneo/data-quality-insights/view/dqi-dashboard/filters */ 18800),'akeneo/data-quality-insights/view/back-link':/*require.resolve*/(/*! akeneo/data-quality-insights/view/back-link */ 22537),'akeneo/data-quality-insights/infrastructure/product-edit-form/data-quality-insights-app':/*require.resolve*/(/*! akeneo/data-quality-insights/infrastructure/product-edit-form/data-quality-insights-app */ 26627),'akeneo/data-quality-insights/infrastructure/product-edit-form/data-quality-insights-tab-content':/*require.resolve*/(/*! akeneo/data-quality-insights/infrastructure/product-edit-form/data-quality-insights-tab-content */ 77064),'akeneo/data-quality-insights/infrastructure/product-edit-form/attributes-tab-content':/*require.resolve*/(/*! akeneo/data-quality-insights/infrastructure/product-edit-form/attributes-tab-content */ 47949),'akeneo/data-quality-insights/infrastructure/product-edit-form/product-quality-score':/*require.resolve*/(/*! akeneo/data-quality-insights/infrastructure/product-edit-form/product-quality-score */ 45744),'pim/product-edit-form/attribute-filter-all-missing-attributes':/*require.resolve*/(/*! pim/product-edit-form/attribute-filter-all-missing-attributes */ 679),'akeneo/data-quality-insights/infrastructure/attribute-group/dqi-activation':/*require.resolve*/(/*! akeneo/data-quality-insights/infrastructure/attribute-group/dqi-activation */ 86176),'akeneojob/controller/process-tracker':/*require.resolve*/(/*! akeneojob/controller/process-tracker */ 37459),'akeneojob/controller/job-instance':/*require.resolve*/(/*! akeneojob/controller/job-instance */ 49980),'pim/category-edit-form/history':/*require.resolve*/(/*! pim/category-edit-form/history */ 77872),'require-polyfill':/*require.resolve*/(/*! require-polyfill */ 26693),'require-context':/*require.resolve*/(/*! require-context */ 76925),'module-registry':/*require.resolve*/(/*! module-registry */ 2302),'routes':/*require.resolve*/(/*! routes */ 25805),'fos-routing-base':/*require.resolve*/(/*! fos-routing-base */ 60839),'jquery':/*require.resolve*/(/*! jquery */ 49845),'underscore':/*require.resolve*/(/*! underscore */ 13469)};

            if (paths[moduleName] === undefined) {
                return console.error(moduleName + ' is missing from the registry - include it in your requirejs.yml and clear the app cache');
            }

            return __webpack_require__(paths[moduleName])
        }

/***/ }),

/***/ 60839:
/*!************************************************************************************!*\
  !*** ./vendor/friendsofsymfony/jsrouting-bundle/Resources/public/js/router.min.js ***!
  \************************************************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(e){(t={}).__esModule=!0,t.Routing=t.Router=void 0,o=function(){function l(e,t){this.context_=e||{base_url:"",prefix:"",host:"",port:"",scheme:"",locale:""},this.setRoutes(t||{})}return l.getInstance=function(){return t.Routing},l.setData=function(e){l.getInstance().setRoutingData(e)},l.prototype.setRoutingData=function(e){this.setBaseUrl(e.base_url),this.setRoutes(e.routes),void 0!==e.prefix&&this.setPrefix(e.prefix),void 0!==e.port&&this.setPort(e.port),void 0!==e.locale&&this.setLocale(e.locale),this.setHost(e.host),void 0!==e.scheme&&this.setScheme(e.scheme)},l.prototype.setRoutes=function(e){this.routes_=Object.freeze(e)},l.prototype.getRoutes=function(){return this.routes_},l.prototype.setBaseUrl=function(e){this.context_.base_url=e},l.prototype.getBaseUrl=function(){return this.context_.base_url},l.prototype.setPrefix=function(e){this.context_.prefix=e},l.prototype.setScheme=function(e){this.context_.scheme=e},l.prototype.getScheme=function(){return this.context_.scheme},l.prototype.setHost=function(e){this.context_.host=e},l.prototype.getHost=function(){return this.context_.host},l.prototype.setPort=function(e){this.context_.port=e},l.prototype.getPort=function(){return this.context_.port},l.prototype.setLocale=function(e){this.context_.locale=e},l.prototype.getLocale=function(){return this.context_.locale},l.prototype.buildQueryParams=function(o,e,n){var t,r=this,s=new RegExp(/\[\]$/);if(e instanceof Array)e.forEach(function(e,t){s.test(o)?n(o,e):r.buildQueryParams(o+"["+("object"==typeof e?t:"")+"]",e,n)});else if("object"==typeof e)for(t in e)this.buildQueryParams(o+"["+t+"]",e[t],n);else n(o,e)},l.prototype.getRoute=function(e){var t,o=[this.context_.prefix+e,e+"."+this.context_.locale,this.context_.prefix+e+"."+this.context_.locale,e];for(t in o)if(o[t]in this.routes_)return this.routes_[o[t]];throw new Error('The route "'+e+'" does not exist.')},l.prototype.generate=function(r,e,p){var t,s=this.getRoute(r),i=e||{},u=Object.assign({},i),c="",a=!0,o="",e=void 0===this.getPort()||null===this.getPort()?"":this.getPort();if(s.tokens.forEach(function(e){if("text"===e[0]&&"string"==typeof e[1])return c=l.encodePathComponent(e[1])+c,void(a=!1);if("variable"!==e[0])throw new Error('The token type "'+e[0]+'" is not supported.');6===e.length&&!0===e[5]&&(a=!1);var t=s.defaults&&!Array.isArray(s.defaults)&&"string"==typeof e[3]&&e[3]in s.defaults;if(!1===a||!t||"string"==typeof e[3]&&e[3]in i&&!Array.isArray(s.defaults)&&i[e[3]]!=s.defaults[e[3]]){var o,n=void 0;if("string"==typeof e[3]&&e[3]in i)n=i[e[3]],delete u[e[3]];else{if("string"!=typeof e[3]||!t||Array.isArray(s.defaults)){if(a)return;throw new Error('The route "'+r+'" requires the parameter "'+e[3]+'".')}n=s.defaults[e[3]]}(!0===n||!1===n||""===n)&&a||(o=l.encodePathComponent(n),c=e[1]+(o="null"===o&&null===n?"":o)+c),a=!1}else t&&"string"==typeof e[3]&&e[3]in u&&delete u[e[3]]}),""===c&&(c="/"),s.hosttokens.forEach(function(e){var t;"text"!==e[0]?"variable"===e[0]&&(e[3]in i?(t=i[e[3]],delete u[e[3]]):s.defaults&&!Array.isArray(s.defaults)&&e[3]in s.defaults&&(t=s.defaults[e[3]]),o=e[1]+t+o):o=e[1]+o}),c=this.context_.base_url+c,s.requirements&&"_scheme"in s.requirements&&this.getScheme()!=s.requirements._scheme?(t=o||this.getHost(),c=s.requirements._scheme+"://"+t+(-1<t.indexOf(":"+e)||""===e?"":":"+e)+c):void 0!==s.schemes&&void 0!==s.schemes[0]&&this.getScheme()!==s.schemes[0]?(t=o||this.getHost(),c=s.schemes[0]+"://"+t+(-1<t.indexOf(":"+e)||""===e?"":":"+e)+c):o&&this.getHost()!==o+(-1<o.indexOf(":"+e)||""===e?"":":"+e)?c=this.getScheme()+"://"+o+(-1<o.indexOf(":"+e)||""===e?"":":"+e)+c:!0===p&&(c=this.getScheme()+"://"+this.getHost()+(-1<this.getHost().indexOf(":"+e)||""===e?"":":"+e)+c),0<Object.keys(u).length){function f(e,t){t=null===(t="function"==typeof t?t():t)?"":t,h.push(l.encodeQueryComponent(e)+"="+l.encodeQueryComponent(t))}var n,h=[];for(n in u)u.hasOwnProperty(n)&&this.buildQueryParams(n,u[n],f);c=c+"?"+h.join("&")}return c},l.customEncodeURIComponent=function(e){return encodeURIComponent(e).replace(/%2F/g,"/").replace(/%40/g,"@").replace(/%3A/g,":").replace(/%21/g,"!").replace(/%3B/g,";").replace(/%2C/g,",").replace(/%2A/g,"*").replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/'/g,"%27")},l.encodePathComponent=function(e){return l.customEncodeURIComponent(e).replace(/%3D/g,"=").replace(/%2B/g,"+").replace(/%21/g,"!").replace(/%7C/g,"|")},l.encodeQueryComponent=function(e){return l.customEncodeURIComponent(e).replace(/%3F/g,"?")},l}(),t.Router=o,t.Routing=new o,t.default=t.Routing;var t,o={Router:t.Router,Routing:t.Routing}; true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (o.Routing),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0}(this);

/***/ }),

/***/ 25805:
/*!**************************************!*\
  !*** ./public/js/fos_js_routes.json ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"base_url":"","routes":{"_wdt":{"tokens":[["variable","/","[^/]++","token"],["text","/_wdt"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_home":{"tokens":[["text","/_profiler/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_search":{"tokens":[["text","/_profiler/search"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_search_bar":{"tokens":[["text","/_profiler/search_bar"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_phpinfo":{"tokens":[["text","/_profiler/phpinfo"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_search_results":{"tokens":[["text","/search/results"],["variable","/","[^/]++","token"],["text","/_profiler"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_open_file":{"tokens":[["text","/_profiler/open"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler":{"tokens":[["variable","/","[^/]++","token"],["text","/_profiler"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_router":{"tokens":[["text","/router"],["variable","/","[^/]++","token"],["text","/_profiler"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_exception":{"tokens":[["text","/exception"],["variable","/","[^/]++","token"],["text","/_profiler"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_profiler_exception_css":{"tokens":[["text","/exception.css"],["variable","/","[^/]++","token"],["text","/_profiler"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"_preview_error":{"tokens":[["variable",".","[^/]++","_format"],["variable","/","\\\\d+","code"],["text","/_error"]],"defaults":{"_format":"html"},"requirements":{"code":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_locale_index":{"tokens":[["text","/configuration/locale/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_locale_rest_index":{"tokens":[["text","/configuration/locale/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_locale_list":{"tokens":[["text","/api/rest/v1/locales"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_locale_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/locales"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_channel_index":{"tokens":[["text","/configuration/channel/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_channel_create":{"tokens":[["text","/configuration/channel/create"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_channel_category_trees_get":{"tokens":[["text","/configuration/channel/category-tree"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_channel_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/channel"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_channel_rest_index":{"tokens":[["text","/configuration/channel/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_channel_rest_get":{"tokens":[["variable","/","[^/]++","identifier"],["text","/configuration/channel/rest"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_channel_rest_post":{"tokens":[["text","/configuration/channel/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_channel_rest_put":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/channel/rest"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["PUT"],"schemes":[]},"pim_enrich_channel_rest_remove":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/channel/rest"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_api_channel_list":{"tokens":[["text","/api/rest/v1/channels"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_channel_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/channels"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_channel_create":{"tokens":[["text","/api/rest/v1/channels"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_channel_partial_update":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/channels"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_channel_partial_update_list":{"tokens":[["text","/api/rest/v1/channels"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_currency_list":{"tokens":[["text","/api/rest/v1/currencies"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_currency_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/currencies"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_currency_rest_index":{"tokens":[["text","/configuration/currency/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_currency_index":{"tokens":[["text","/configuration/currency/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_currency_toggle":{"tokens":[["text","/toggle"],["variable","/","\\\\d+","id"],["text","/configuration/currency"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_api_attribute_list":{"tokens":[["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_attribute_create":{"tokens":[["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_attribute_partial_update":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_attribute_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_attribute_partial_update_list":{"tokens":[["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_attribute_option_list":{"tokens":[["text","/options"],["variable","/","[^/]++","attributeCode"],["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_attribute_option_create":{"tokens":[["text","/options"],["variable","/","[^/]++","attributeCode"],["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_attribute_option_partial_update":{"tokens":[["variable","/","[^/]++","code"],["text","/options"],["variable","/","[^/]++","attributeCode"],["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_attribute_option_partial_update_list":{"tokens":[["text","/options"],["variable","/","[^/]++","attributeCode"],["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_attribute_option_get":{"tokens":[["variable","/","[^/]++","code"],["text","/options"],["variable","/","[^/]++","attributeCode"],["text","/api/rest/v1/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_attribute_group_list":{"tokens":[["text","/api/rest/v1/attribute-groups"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_attribute_group_create":{"tokens":[["text","/api/rest/v1/attribute-groups"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_attribute_group_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/attribute-groups"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_attribute_group_partial_update":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/attribute-groups"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_attribute_group_partial_update_list":{"tokens":[["text","/api/rest/v1/attribute-groups"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_family_list":{"tokens":[["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_family_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_family_create":{"tokens":[["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_family_partial_update":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_family_partial_update_list":{"tokens":[["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_family_variant_list":{"tokens":[["text","/variants"],["variable","/","[^/]++","familyCode"],["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_family_variant_get":{"tokens":[["variable","/","[^/]++","code"],["text","/variants"],["variable","/","[^/]++","familyCode"],["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_family_variant_create":{"tokens":[["text","/variants"],["variable","/","[^/]++","familyCode"],["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_family_variant_partial_update":{"tokens":[["variable","/","[^/]++","code"],["text","/variants"],["variable","/","[^/]++","familyCode"],["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_family_variant_partial_update_list":{"tokens":[["text","/variants"],["variable","/","[^/]++","familyCode"],["text","/api/rest/v1/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_association_type_list":{"tokens":[["text","/api/rest/v1/association-types"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_association_type_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/association-types"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_association_type_create":{"tokens":[["text","/api/rest/v1/association-types"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_association_type_partial_update":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/association-types"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_association_type_partial_update_list":{"tokens":[["text","/api/rest/v1/association-types"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_enrich_attribute_rest_index":{"tokens":[["text","/rest/attribute/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET","POST"],"schemes":[]},"pim_enrich_attribute_rest_create":{"tokens":[["text","/rest/attribute/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PUT"],"schemes":[]},"pim_enrich_attribute_rest_get":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/rest/attribute"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_attribute_rest_post":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/rest/attribute"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_attribute_rest_remove":{"tokens":[["variable","/","[^/]++","code"],["text","/rest/attribute"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_attribute_axes_index":{"tokens":[["text","/rest/attribute/axes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_attributegroup_rest_index":{"tokens":[["text","/rest/attribute-group/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_attributegroup_rest_search":{"tokens":[["text","/rest/attribute-group/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_attributegroup_rest_create":{"tokens":[["text","/rest/attribute-group/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PUT"],"schemes":[]},"pim_enrich_attributegroup_rest_sort":{"tokens":[["text","/rest/attribute-group/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_enrich_attributegroup_rest_get":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/rest/attribute-group"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_attributegroup_rest_post":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/rest/attribute-group"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_attributegroup_rest_remove":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/rest/attribute-group"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_family_rest_create":{"tokens":[["text","/configuration/rest/family/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_family_rest_index":{"tokens":[["text","/configuration/rest/family/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_family_index_get_variants":{"tokens":[["text","/configuration/rest/family/with-variants"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_family_rest_get":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/rest/family"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_family_rest_put":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/rest/family"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["PUT"],"schemes":[]},"pim_enrich_family_rest_remove":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/rest/family"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_family_variant_rest_get":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/rest/family/family-variant"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_family_rest_get_available_axes":{"tokens":[["text","/available-axes"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/rest/family"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_family_variant_rest_index":{"tokens":[["text","/configuration/rest/family-variant/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_family_variant_rest_create":{"tokens":[["text","/configuration/rest/family-variant/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_family_variant_rest_put":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/rest/family-variant"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["PUT"],"schemes":[]},"pim_enrich_family_variant_rest_remove":{"tokens":[["variable","/","[a-zA-Z0-9_]+","familyVariantCode"],["text","/configuration/rest/family-variant"]],"defaults":[],"requirements":{"familyVariantCode":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_attributeoption_index":{"tokens":[["variable","/","\\\\d+","attributeId"],["text","/configuration/attribute-option"]],"defaults":[],"requirements":{"attributeId":"\\\\d+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_attributeoption_create":{"tokens":[["variable","/","\\\\d+","attributeId"],["text","/configuration/attribute-option"]],"defaults":[],"requirements":{"attributeId":"\\\\d+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_attributeoption_update":{"tokens":[["variable","/","\\\\d+","attributeOptionId"],["variable","/","\\\\d+","attributeId"],["text","/configuration/attribute-option"]],"defaults":[],"requirements":{"attributeId":"\\\\d+","attributeOptionId":"\\\\d+"},"hosttokens":[],"methods":["PUT"],"schemes":[]},"pim_enrich_attributeoption_delete":{"tokens":[["variable","/","\\\\d+","attributeOptionId"],["variable","/","\\\\d+","attributeId"],["text","/configuration/attribute-option"]],"defaults":[],"requirements":{"attributeId":"\\\\d+","attributeOptionId":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_attributeoption_update_sorting":{"tokens":[["text","/update-sorting"],["variable","/","\\\\d+","attributeId"],["text","/configuration/attribute-option"]],"defaults":[],"requirements":{"attributeId":"\\\\d+"},"hosttokens":[],"methods":["PUT"],"schemes":[]},"pim_enrich_attributeoption_get":{"tokens":[["text","/option"],["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/attribute-option/attribute"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET","POST"],"schemes":[]},"pim_enrich_attribute_type_index":{"tokens":[["text","/rest/attribute-type/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_associationtype_rest_create":{"tokens":[["text","/configuration/rest/association-type/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_associationtype_rest_index":{"tokens":[["text","/configuration/rest/association-type/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_associationtype_rest_get":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/rest/association-type"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_associationtype_rest_post":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/rest/association-type"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_associationtype_rest_remove":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/rest/association-type"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_reference_data_configuration_rest_get":{"tokens":[["text","/rest/reference-data-configuration/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_grouptype_rest_create":{"tokens":[["text","/configuration/rest/group-type/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_grouptype_rest_index":{"tokens":[["text","/configuration/rest/group-type/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_grouptype_rest_get":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/rest/group-type"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_grouptype_rest_post":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/rest/group-type"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_grouptype_rest_remove":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/rest/group-type"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_attribute_index":{"tokens":[["text","/configuration/attribute/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_attribute_create":{"tokens":[["text","/configuration/attribute/create"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_attribute_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/attribute"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_attributegroup_index":{"tokens":[["text","/configuration/attribute-group/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_attributegroup_create":{"tokens":[["text","/configuration/attribute-group/create"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_attributegroup_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/configuration/attribute-group"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_family_index":{"tokens":[["text","/configuration/family/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_family_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/family"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_associationtype_index":{"tokens":[["text","/configuration/association-type/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_associationtype_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/association-type"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_grouptype_index":{"tokens":[["text","/configuration/group-type"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_grouptype_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/configuration/group-type"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_comment_comment_delete":{"tokens":[["text","/remove"],["variable","/","\\\\d+","id"],["text","/comment"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_localization_format_index":{"tokens":[["text","/localization/format"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_localization_format_date":{"tokens":[["text","/localization/format/date"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_product_model_list":{"tokens":[["text","/api/rest/v1/product-models"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_product_model_get":{"tokens":[["variable","/","(?:.+$)(?<!/draft|/proposal)","code"],["text","/api/rest/v1/product-models"]],"defaults":[],"requirements":{"code":"(.+$)(?<!/draft|/proposal)"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_product_model_create":{"tokens":[["text","/api/rest/v1/product-models"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_product_model_partial_update":{"tokens":[["variable","/",".+","code"],["text","/api/rest/v1/product-models"]],"defaults":[],"requirements":{"code":".+"},"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_product_model_partial_update_list":{"tokens":[["text","/api/rest/v1/product-models"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_product_model_delete":{"tokens":[["variable","/",".+","code"],["text","/api/rest/v1/product-models"]],"defaults":[],"requirements":{"code":".+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_api_product_list":{"tokens":[["text","/api/rest/v1/products"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_product_get":{"tokens":[["variable","/","(?:.+$)(?<!/draft|/proposal)","code"],["text","/api/rest/v1/products"]],"defaults":[],"requirements":{"code":"(.+$)(?<!/draft|/proposal)"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_product_create":{"tokens":[["text","/api/rest/v1/products"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_product_partial_update":{"tokens":[["variable","/","(?:.+$)(?<!/draft|/proposal)","code"],["text","/api/rest/v1/products"]],"defaults":[],"requirements":{"code":"(.+$)(?<!/draft|/proposal)"},"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_product_partial_update_list":{"tokens":[["text","/api/rest/v1/products"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_product_delete":{"tokens":[["variable","/","(?:.+$)(?<!/draft|/proposal)","code"],["text","/api/rest/v1/products"]],"defaults":[],"requirements":{"code":"(.+$)(?<!/draft|/proposal)"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_api_product_uuid_delete":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/api/rest/v1/products-uuid"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_api_product_uuid_list":{"tokens":[["text","/api/rest/v1/products-uuid"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_product_uuid_get":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/api/rest/v1/products-uuid"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_product_uuid_create":{"tokens":[["text","/api/rest/v1/products-uuid"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_product_uuid_partial_update":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/api/rest/v1/products-uuid"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_product_uuid_partial_update_list":{"tokens":[["text","/api/rest/v1/products-uuid"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_enrich_product_category_rest_list":{"tokens":[["text","/categories"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product/rest"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_rest_index":{"tokens":[["text","/enrich/product/rest/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_rest_get":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product/rest"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_rest_create":{"tokens":[["text","/enrich/product/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_rest_post":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product/rest"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_rest_remove":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product/rest"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_product_remove_attribute_rest":{"tokens":[["variable","/","\\\\d+","attributeId"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product/rest"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","attributeId":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_product_rest_convert_to_simple":{"tokens":[["text","/convert-to-simple"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product/rest"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_comments_rest_get":{"tokens":[["text","/comments"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_comments_rest_post":{"tokens":[["text","/comments"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_comment_reply_rest_post":{"tokens":[["variable","/","[0-9a-f]+","commentId"],["text","/comments"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","commentId":"[0-9a-f]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_history_rest_get":{"tokens":[["text","/history"],["variable","/","[0-9a-f]+|(?:[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})","entityId"],["text","/enrich/product/rest/product"]],"defaults":[],"requirements":{"entityId":"[0-9a-f]+|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_pdf_generator_download_product_pdf":{"tokens":[["text","/download-pdf"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_category_rest_list":{"tokens":[["text","/categories"],["variable","/","[0-9a-f]+","id"],["text","/enrich/product-model/rest"]],"defaults":[],"requirements":{"id":"[0-9a-f]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_rest_get":{"tokens":[["variable","/","[0-9a-f]+","id"],["text","/enrich/product-model/rest"]],"defaults":[],"requirements":{"id":"[0-9a-f]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_rest_get_by_code":{"tokens":[["variable","/",".+","identifier"],["text","/enrich/product-model/rest-code"]],"defaults":[],"requirements":{"identifier":".+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_rest_index":{"tokens":[["text","/enrich/product-model/rest/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_rest_post":{"tokens":[["variable","/","[0-9a-f]+","id"],["text","/enrich/product-model/rest"]],"defaults":[],"requirements":{"id":"[0-9a-f]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_model_rest_children_list":{"tokens":[["text","/enrich/product-model/rest/children"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_family_variant_leaf":{"tokens":[["text","/enrich/product-model/rest/family-variant-leaf"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_for_family_variant_rest_list":{"tokens":[["text","/enrich/product-model/rest/product-model/family-variant"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_rest_remove":{"tokens":[["variable","/","\\\\d+","id"],["text","/enrich/product-model/rest"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_product_model_history_rest_get":{"tokens":[["text","/history"],["variable","/","[0-9a-f]+","entityId"],["text","/enrich/product-model/rest/product-model"]],"defaults":[],"requirements":{"entityId":"[0-9a-f]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_group_rest_search":{"tokens":[["text","/enrich/group/rest/search"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_group_rest_get":{"tokens":[["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/enrich/group/rest"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_group_rest_list_products":{"tokens":[["text","/products"],["variable","/","[a-zA-Z0-9_]+","identifier"],["text","/enrich/group/rest"]],"defaults":[],"requirements":{"identifier":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_group_rest_post":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/enrich/group/rest"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_group_rest_remove":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/enrich/group/rest"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_group_rest_create":{"tokens":[["text","/enrich/group/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_sequential_edit_rest_get_ids":{"tokens":[["text","/rest/sequential_edit/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_and_product_model_by_identifiers_rest_list":{"tokens":[["text","/rest/product-and-product-model/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_count_items_with_attribute_value":{"tokens":[["text","/rest/product-and-product-model/count_items_with_attribute_value"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_value_rest_validate":{"tokens":[["text","/rest/value/validate"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_mass_edit_rest_get_filter":{"tokens":[["text","/rest/mass_edit/get-filter"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_mass_edit_rest_launch":{"tokens":[["text","/rest/mass_edit/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_media_rest_post":{"tokens":[["text","/media/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_grid_category_tree_listtree":{"tokens":[["variable",".","json","_format"],["text","/enrich/product-category-tree/product-grid/list-tree"]],"defaults":[],"requirements":{"_format":"json"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_product_grid_category_tree_children":{"tokens":[["variable",".","json","_format"],["text","/enrich/product-category-tree/product-grid/children"]],"defaults":[],"requirements":{"_format":"json"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_categorytree_listtree":{"tokens":[["variable",".","json","_format"],["text","/enrich/product-category-tree/list-tree"]],"defaults":[],"requirements":{"_format":"json"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_categorytree_movenode":{"tokens":[["text","/enrich/product-category-tree/move-node"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_categorytree_children":{"tokens":[["variable",".","json","_format"],["text","/enrich/product-category-tree/children"]],"defaults":[],"requirements":{"_format":"json"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_categorytree_index":{"tokens":[["text","/enrich/product-category-tree/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_categorytree_create":{"tokens":[["text","/enrich/product-category-tree/create"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_categorytree_edit":{"tokens":[["text","/edit"],["variable","/","\\\\d+","id"],["text","/enrich/product-category-tree"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_categorytree_tree":{"tokens":[["text","/tree"],["variable","/","\\\\d+","id"],["text","/enrich/product-category-tree"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_categorytree_remove":{"tokens":[["text","/remove"],["variable","/","\\\\d+","id"],["text","/enrich/product-category-tree"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_categorytree_get_products_number":{"tokens":[["text","/enrich/product-category-tree/products-number-by-category-tree"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_categorytree_count_category_products":{"tokens":[["text","/count-products"],["variable","/","\\\\d+","id"],["text","/enrich/product-category-tree"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_categorytree_count_trees_children":{"tokens":[["text","/enrich/product-category-tree/count-trees-children"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_media_show":{"tokens":[["variable","/","[^/]++","filter"],["variable","/","[^/]++","filename"],["text","/media/show"]],"defaults":{"filter":null},"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_media_download":{"tokens":[["variable","/","[^/]++","filename"],["text","/media/download"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_default_thumbnail":{"tokens":[["variable","/","[a-z-]+/[a-z0-9.-]+","mimeType"],["text","/media/default-thumbnail"]],"defaults":[],"requirements":{"mimeType":"[a-z-]+/[a-z0-9.-]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_media_cache_resolve":{"tokens":[["variable","/",".+","path"],["variable","/","[A-z0-9_-]*","filter"],["text","/media/cache/resolve"]],"defaults":[],"requirements":{"filter":"[A-z0-9_-]*","path":".+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_media_cache":{"tokens":[["variable","/",".+","path"],["variable","/","[A-z0-9_-]*","filter"],["text","/media/cache"]],"defaults":[],"requirements":{"filter":"[A-z0-9_-]*","path":".+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_edit":{"tokens":[["variable","/","[^/]++","id"],["text","/enrich/product-model"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET","POST"],"schemes":[]},"pim_enrich_product_model_edit_categories":{"tokens":[["variable","/","[^/]++","id"],["text","/enrich/product-model/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_model_rest_create":{"tokens":[["text","/enrich/product-model/rest/create"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_model_listcategories":{"tokens":[["variable","/","\\\\d+","categoryId"],["text","/parent"],["variable","/","[0-9a-f]+","id"],["text","/enrich/product-model/list-categories/product-model"]],"defaults":[],"requirements":{"id":"[0-9a-f]+","categoryId":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_product_index":{"tokens":[["text","/enrich/product/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_product_edit":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["GET","POST"],"schemes":[]},"pim_enrich_product_edit_categories":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product/categories"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_product_toggle_status":{"tokens":[["text","/toggle-status"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_product_listcategories":{"tokens":[["variable","/","\\\\d+","categoryId"],["text","/parent"],["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","uuid"],["text","/enrich/product/list-categories/product"]],"defaults":[],"requirements":{"uuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","categoryId":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_group_index":{"tokens":[["text","/enrich/group/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_group_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/enrich/group"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_mass_edit_action":{"tokens":[["text","/enrich/mass-edit-action/mass_action"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_get_app_activate_url":{"tokens":[["variable","/","[^/]++","id"],["text","/rest/apps/activate"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_get_wizard_data":{"tokens":[["variable","/","[^/]++","clientId"],["text","/rest/apps/load-wizard-data"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_confirm_authorization":{"tokens":[["variable","/","[^/]++","clientId"],["text","/rest/apps/confirm-authorization"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_confirm_authentication":{"tokens":[["variable","/","[^/]++","clientId"],["text","/rest/apps/confirm-authentication"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_get_all_connected_app_scope_messages":{"tokens":[["text","/scope-messages"],["variable","/","[^/]++","connectionCode"],["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_get_connected_app_authentication_scopes":{"tokens":[["text","/authentication-scopes"],["variable","/","[^/]++","connectionCode"],["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_get_connected_app":{"tokens":[["variable","/","[^/]++","connectionCode"],["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_get_all_connected_apps":{"tokens":[["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_delete":{"tokens":[["variable","/","[^/]++","connectionCode"],["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_get_connected_app_monitoring_settings":{"tokens":[["text","/monitoring-settings"],["variable","/","[^/]++","connectionCode"],["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_update_connected_app_monitoring_settings":{"tokens":[["text","/monitoring-settings"],["variable","/","[^/]++","connectionCode"],["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_refresh":{"tokens":[["text","/refresh"],["variable","/","[^/]++","connectionCode"],["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_apps_rest_get_open_app_url":{"tokens":[["text","/open-app-url"],["variable","/","[^/]++","connectionCode"],["text","/rest/apps/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_connect_apps_v1_authorize":{"tokens":[["text","/connect/apps/v1/authorize"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_connect_apps_v1_token":{"tokens":[["text","/connect/apps/v1/oauth2/token"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_connect_apps_v1_openid_public_key":{"tokens":[["text","/connect/apps/v1/openid/public-key"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_connect_apps_v1_scopes_update":{"tokens":[["text","/connect/apps/v1/scopes/update"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_connect_apps_v1_redirect_to_catalog":{"tokens":[["variable","/","[^/]++","id"],["text","/connect/apps/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_connect_apps_v1_redirect_to_connected_app":{"tokens":[["variable","/","[^/]++","id"],["text","/connect/apps/v1/connected_app"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_connect_apps_activate":{"tokens":[["text","/connect/apps/activate"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_apps_authorize":{"tokens":[["text","/connect/apps/authorize"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_apps_authenticate":{"tokens":[["text","/connect/apps/authenticate"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_connected_apps":{"tokens":[["text","/connect/connected-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_connected_apps_edit":{"tokens":[["variable","/","[a-zA-Z0-9_-]+","connectionCode"],["text","/connect/connected-apps"]],"defaults":[],"requirements":{"connectionCode":"[a-zA-Z0-9_-]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_connected_apps_delete":{"tokens":[["text","/delete"],["variable","/","[a-zA-Z0-9_-]+","connectionCode"],["text","/connect/connected-apps"]],"defaults":[],"requirements":{"connectionCode":"[a-zA-Z0-9_-]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_connected_apps_open":{"tokens":[["text","/open"],["variable","/","[a-zA-Z0-9_-]+","connectionCode"],["text","/connect/connected-apps"]],"defaults":[],"requirements":{"connectionCode":"[a-zA-Z0-9_-]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_connected_apps_catalogs_edit":{"tokens":[["variable","/","[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}","catalogId"],["text","/catalogs"],["variable","/","[a-zA-Z0-9_-]+","connectionCode"],["text","/connect/connected-apps"]],"defaults":[],"requirements":{"connectionCode":"[a-zA-Z0-9_-]+","catalogId":"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_audit_rest_weekly":{"tokens":[["text","/rest/connections/audit/weekly"]],"defaults":[],"requirements":{"event_type":"[a-zA-Z_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_audit_rest_weekly_error":{"tokens":[["text","/rest/connections/audit/weekly-error"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_audit_rest_error_count_per_connection":{"tokens":[["text","/rest/connections/audit/error-count-per-connection"]],"defaults":[],"requirements":{"error_type":"[a-zA-Z_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_audit_index":{"tokens":[["text","/connect/data-flows"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_audit_any":{"tokens":[["variable","/",".*","any"],["text","/connect/data-flows"]],"defaults":[],"requirements":{"any":".*"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_redirect_audit":{"tokens":[["text","/connection/dashboard"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_rest_list":{"tokens":[["text","/rest/connections"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_rest_create":{"tokens":[["text","/rest/connections"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_rest_get":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/rest/connections"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_rest_update":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/rest/connections"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_rest_delete":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/rest/connections"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"akeneo_connectivity_connection_rest_regenerate_secret":{"tokens":[["text","/regenerate-secret"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/rest/connections"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_rest_regenerate_password":{"tokens":[["text","/regenerate-password"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/rest/connections"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_rest_wrong_credentials_combination_list":{"tokens":[["text","/rest/connections/wrong-credentials-combination"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_error_management_rest_get_connection_business_errors":{"tokens":[["text","/business-errors"],["variable","/","[a-zA-Z0-9_]+","connection_code"],["text","/rest/connections"]],"defaults":[],"requirements":{"connection_code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_error_management_dashboard":{"tokens":[["text","/connect/data-flows/business-errors"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_error_management_connection_monitoring":{"tokens":[["text","/monitoring"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/connect/connection-settings"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_marketplace_rest_get_web_marketplace_url":{"tokens":[["text","/rest/marketplace/marketplace-url"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_marketplace_rest_get_all_extensions":{"tokens":[["text","/rest/marketplace/extensions"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_marketplace_rest_get_all_apps":{"tokens":[["text","/rest/marketplace/apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_marketplace_rest_get_all_test_apps":{"tokens":[["text","/rest/marketplace/test-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_marketplace_rest_test_apps_create":{"tokens":[["text","/rest/marketplace/test-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_marketplace_rest_test_apps_delete":{"tokens":[["variable","/","[^/]++","testAppId"],["text","/rest/marketplace/test-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"akeneo_connectivity_connection_marketplace_api_test_apps_list":{"tokens":[["text","/api/rest/v1/test-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_marketplace_api_test_apps_create":{"tokens":[["text","/api/rest/v1/test-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_marketplace_api_test_apps_delete":{"tokens":[["variable","/","[^/]++","clientId"],["text","/api/rest/v1/test-apps"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"akeneo_connectivity_connection_connect_marketplace":{"tokens":[["text","/connect/app-store"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_marketplace_profile":{"tokens":[["text","/connect/app-store/profile"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_marketplace_test_app_create":{"tokens":[["text","/connect/app-store/test-apps/create"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_connect_marketplace_test_app_delete":{"tokens":[["text","/delete"],["variable","/","[a-zA-Z0-9_-]+","testAppId"],["text","/connect/app-store/test-apps"]],"defaults":[],"requirements":{"testAppId":"[a-zA-Z0-9_-]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_webhook_rest_regenerate_secret":{"tokens":[["text","/webhook/regenerate-secret"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/rest/connections"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_webhook_rest_get":{"tokens":[["text","/webhook"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/rest/connections"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_webhook_rest_check_reachability":{"tokens":[["text","/webhook/check-reachability"],["variable","/","[^/]++","code"],["text","/rest/connections"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_webhook_rest_update":{"tokens":[["text","/webhook"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/rest/connections"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_connectivity_connection_webhook_regenerate_secret":{"tokens":[["text","/event-subscription/regenerate-secret"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/connect/connection-settings"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_webhook_edit":{"tokens":[["text","/event-subscription"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/connect/connection-settings"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_webhook_event_logs":{"tokens":[["text","/event-logs"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/connect/connection-settings"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_events_api_debug_rest_search_event_subscription_logs":{"tokens":[["text","/rest/events-api-debug/search-event-subscription-logs"]],"defaults":[],"requirements":{"connection_code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_events_api_debug_rest_download_event_subscription_logs":{"tokens":[["text","/rest/events-api-debug/download-event-subscription-logs"]],"defaults":[],"requirements":{"connection_code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_rest_connections_max_limit_reached":{"tokens":[["text","/rest/connections/max-limit-reached"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_connectivity_connection_settings_redirect":{"tokens":[["text","/connections"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_settings_index":{"tokens":[["text","/connect/connection-settings"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_settings_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/connect/connection-settings"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_connectivity_connection_settings_any":{"tokens":[["variable","/",".*","any"],["text","/connect/connection-settings"]],"defaults":[],"requirements":{"any":".*"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_measurements_settings_index":{"tokens":[["text","/configuration/measurement"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_measurements_settings_any":{"tokens":[["variable","/",".*","any"],["text","/configuration/measurement"]],"defaults":[],"requirements":{"any":".*"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_measurements_measurement_family_create_rest":{"tokens":[["text","/rest/measurement-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_measurements_measurement_family_delete_rest":{"tokens":[["variable","/","[^/]++","code"],["text","/rest/measurement-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"akeneo_measurements_measurement_family_create_save":{"tokens":[["variable","/","[^/]++","measurement_family_code"],["text","/rest/measurement-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_measurements_validate_unit_rest":{"tokens":[["text","/validate-unit"],["variable","/","[^/]++","measurement_family_code"],["text","/rest/measurement-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"feature_flag":{"tokens":[["text","/configuration/feature-flags"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_communication_channel_announcement_list_rest":{"tokens":[["text","/rest/announcements"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_communication_channel_viewed_announcements_add_rest":{"tokens":[["text","/rest/viewed_announcements/add"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_communication_channel_has_new_announcements_rest":{"tokens":[["text","/rest/new_announcements"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_job_process_tracker_index":{"tokens":[["text","/job"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_job_process_tracker_details":{"tokens":[["variable","/","\\\\d+","id"],["text","/job/show"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_job_tracker_index":{"tokens":[["text","/job"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_job_index_action":{"tokens":[["text","/rest/process-tracker"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_job_get_job_type_action":{"tokens":[["text","/rest/process-tracker/job-type"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_job_get_job_user_action":{"tokens":[["text","/rest/process-tracker/job-user"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_public_create_catalog":{"tokens":[["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_catalogs_public_get_catalog":{"tokens":[["variable","/","[^/]++","id"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_public_delete_catalog":{"tokens":[["variable","/","[^/]++","id"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"akeneo_catalogs_public_update_catalog":{"tokens":[["variable","/","[^/]++","id"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"akeneo_catalogs_public_get_catalogs":{"tokens":[["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_public_get_product_identifiers":{"tokens":[["text","/product-identifiers"],["variable","/","[^/]++","id"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_public_get_product_uuids":{"tokens":[["text","/product-uuids"],["variable","/","[^/]++","id"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_public_get_product":{"tokens":[["variable","/","[^/]++","uuid"],["text","/products"],["variable","/","[^/]++","id"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_public_get_products":{"tokens":[["text","/products"],["variable","/","[^/]++","id"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_public_get_products_mapping_schema":{"tokens":[["text","/mapping-schemas/product"],["variable","/","[^/]++","catalogId"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_public_update_products_mapping_schema":{"tokens":[["text","/mapping-schemas/product"],["variable","/","[^/]++","catalogId"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PUT"],"schemes":[]},"akeneo_catalogs_public_delete_products_mapping_schema":{"tokens":[["text","/mapping-schemas/product"],["variable","/","[^/]++","catalogId"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"akeneo_catalogs_public_get_mapped_products":{"tokens":[["text","/mapped-products"],["variable","/","[^/]++","catalogId"],["text","/api/rest/v1/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_catalogs_by_owner":{"tokens":[["text","/rest/catalogs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_catalog_errors":{"tokens":[["text","/errors"],["variable","/","[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}","catalogId"],["text","/rest/catalogs"]],"defaults":[],"requirements":{"catalogId":"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_catalog":{"tokens":[["variable","/","[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}","catalogId"],["text","/rest/catalogs"]],"defaults":[],"requirements":{"catalogId":"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_update_catalog":{"tokens":[["variable","/","[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}","catalogId"],["text","/rest/catalogs"]],"defaults":[],"requirements":{"catalogId":"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"},"hosttokens":[],"methods":["PATCH"],"schemes":[]},"akeneo_catalogs_internal_get_families":{"tokens":[["text","/rest/catalogs/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_attribute_options":{"tokens":[["text","/options"],["variable","/","[^/]++","code"],["text","/rest/catalogs/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_attribute":{"tokens":[["variable","/","[^/]++","code"],["text","/rest/catalogs/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_attributes":{"tokens":[["text","/rest/catalogs/attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_catalogs_internal_get_channel_locales":{"tokens":[["text","/locales"],["variable","/","[^/]++","code"],["text","/rest/catalogs/channels"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_channel":{"tokens":[["variable","/","[^/]++","code"],["text","/rest/catalogs/channels"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_channels":{"tokens":[["text","/rest/catalogs/channels"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_locales":{"tokens":[["text","/rest/catalogs/locales"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_currencies":{"tokens":[["text","/rest/catalogs/currencies"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_category_children":{"tokens":[["text","/children"],["variable","/","[^/]++","categoryCode"],["text","/rest/catalogs/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_categories":{"tokens":[["text","/rest/catalogs/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_measurements_family_units":{"tokens":[["text","/units"],["variable","/","[^/]++","code"],["text","/rest/catalogs/measurement-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_get_product_mapping_schema":{"tokens":[["text","/mapping-schemas/product"],["variable","/","[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}","catalogId"],["text","/rest/catalogs"]],"defaults":[],"requirements":{"catalogId":"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"},"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_catalogs_internal_count_products_selected_by_criteria":{"tokens":[["text","/rest/catalogs/product-selection-criteria/product/count"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_analytics_data_collect":{"tokens":[["text","/analytics/collect_data"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_analytics_system_info_index":{"tokens":[["text","/system_info"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_analytics_system_info_rest_index":{"tokens":[["text","/system_info/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_analytics_system_info_download":{"tokens":[["text","/system_info/download"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_analytics_external_api_system_info_get":{"tokens":[["text","/api/rest/v1/system-information"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_load":{"tokens":[["text","/load"],["variable","/","[^/]++","alias"],["text","/datagrid"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET","POST"],"schemes":[]},"pim_datagrid_productgrid_attributes_filters":{"tokens":[["text","/datagrid/product-grid/attributes-filters"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_productgrid_available_columns":{"tokens":[["text","/datagrid/product-grid/available-columns"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_productgrid_available_columns_groups":{"tokens":[["text","/datagrid/product-grid/available-columns-groups"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_export_index":{"tokens":[["text","/datagrid/export/index"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_datagrid_export_product_index":{"tokens":[["text","/datagrid/export/product/index"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_datagrid_view_rest_types":{"tokens":[["text","/datagrid_view/rest/types"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_view_rest_index":{"tokens":[["text","/views"],["variable","/","[^/]++","alias"],["text","/datagrid_view/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_view_rest_default_columns":{"tokens":[["text","/default-columns"],["variable","/","[^/]++","alias"],["text","/datagrid_view/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_view_list_available_columns":{"tokens":[["text","/available-columns"],["variable","/","[^/]++","alias"],["text","/datagrid_view/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_view_rest_default_user_view":{"tokens":[["text","/default"],["variable","/","[^/]++","alias"],["text","/datagrid_view/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_view_rest_save":{"tokens":[["variable","/","[^/]++","alias"],["text","/datagrid_view/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_datagrid_view_rest_remove":{"tokens":[["variable","/","[^/]++","identifier"],["text","/datagrid_view/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_datagrid_view_rest_get":{"tokens":[["variable","/","[^/]++","identifier"],["text","/datagrid_view/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_datagrid_mass_action":{"tokens":[["variable","/","[^/]++","actionName"],["text","/massAction"],["variable","/","[^/]++","gridName"],["text","/datagrid"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_product_grid_filters":{"tokens":[["text","/enrich/product-grid-filter/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_dashboard_widget_data":{"tokens":[["variable","/","[^/]++","alias"],["text","/widget"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_dashboard_index":{"tokens":[["text","/dashboard"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_dashboard_version_data":{"tokens":[["text","/dashboard/version_data"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_ui_ajaxentity_list":{"tokens":[["text","/list.json"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_localization_locale_index":{"tokens":[["text","/system/locale/ui"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_measures_rest_index":{"tokens":[["text","/configuration/measures/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_settings_index":{"tokens":[["text","/settings"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_settings_count_entities":{"tokens":[["text","/settings/rest/count-entities"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_system_index":{"tokens":[["text","/system"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_system_count_entities":{"tokens":[["text","/system/rest/count-entities"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_user_index":{"tokens":[["text","/user/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_user_edit":{"tokens":[["text","/edit"],["variable","/","\\\\d+","identifier"],["text","/user"]],"defaults":[],"requirements":{"identifier":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_user_logout_redirect":{"tokens":[["text","/user/logout/redirect"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_user_user_rest_get_current":{"tokens":[["text","/rest/user/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_user_user_rest_get":{"tokens":[["variable","/","\\\\d+","identifier"],["text","/rest/user"]],"defaults":[],"requirements":{"identifier":"\\\\d+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_user_user_rest_post":{"tokens":[["variable","/","\\\\d+","identifier"],["text","/rest/user"]],"defaults":[],"requirements":{"identifier":"\\\\d+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_user_user_rest_profile":{"tokens":[["text","/profile"],["variable","/","\\\\d+","identifier"],["text","/rest/user"]],"defaults":[],"requirements":{"identifier":"\\\\d+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_user_user_rest_create":{"tokens":[["text","/rest/user/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_user_user_rest_delete":{"tokens":[["variable","/","\\\\d+","identifier"],["text","/rest/user"]],"defaults":[],"requirements":{"identifier":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_user_user_rest_duplicate":{"tokens":[["text","/duplicate"],["variable","/","\\\\d+","identifier"],["text","/rest/user"]],"defaults":[],"requirements":{"identifier":"\\\\d+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_user_rest_find_all_profiles":{"tokens":[["text","/rest/user/profiles"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_user_user_group_rest_index":{"tokens":[["text","/rest/user_group/"]],"defaults":[],"requirements":{"method":"GET"},"hosttokens":[],"methods":[],"schemes":[]},"pim_user_user_role_rest_index":{"tokens":[["text","/rest/user_role/"]],"defaults":[],"requirements":{"method":"GET"},"hosttokens":[],"methods":[],"schemes":[]},"pim_user_security_rest_get":{"tokens":[["text","/rest/security/"]],"defaults":[],"requirements":{"method":"GET"},"hosttokens":[],"methods":[],"schemes":[]},"pim_user_group_create":{"tokens":[["text","/user/group/create"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_user_group_update":{"tokens":[["variable","/","\\\\d+","id"],["text","/user/group/update"]],"defaults":{"id":0},"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_user_group_index":{"tokens":[["text","/user/group/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_user_group_delete":{"tokens":[["variable","/","\\\\d+","id"],["text","/user/group/delete"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_user_reset_request":{"tokens":[["text","/user/reset-request"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_user_reset_send_email":{"tokens":[["text","/user/send-email"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_user_reset_reset":{"tokens":[["variable","/","\\\\w+","token"],["text","/user/reset"]],"defaults":[],"requirements":{"token":"\\\\w+"},"hosttokens":[],"methods":["GET","POST"],"schemes":[]},"pim_user_role_create":{"tokens":[["text","/user/role/create"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_user_role_update":{"tokens":[["variable","/","\\\\d+","id"],["text","/user/role/update"]],"defaults":{"id":0},"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_user_role_index":{"tokens":[["text","/user/role/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_user_role_delete":{"tokens":[["variable","/","\\\\d+","id"],["text","/user/role/delete"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_user_security_login":{"tokens":[["text","/user/login"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_user_security_check":{"tokens":[["text","/user/login-check"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_user_security_logout":{"tokens":[["text","/user/logout"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_api_connection_index":{"tokens":[["text","/client/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_api_connection_rest_create":{"tokens":[["text","/client/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_api_connection_rest_revoke":{"tokens":[["variable","/","[^/]++","publicId"],["text","/client/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_importexport_export_profile_index":{"tokens":[["text","/spread/export/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_export_profile_show":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/spread/export"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_export_profile_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/spread/export"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_category_tree_list":{"tokens":[["text","/spread/export/category-trees"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_importexport_import_profile_index":{"tokens":[["text","/collect/import/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_import_profile_show":{"tokens":[["variable","/","[a-zA-Z0-9_]+","code"],["text","/collect/import"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_import_profile_edit":{"tokens":[["text","/edit"],["variable","/","[a-zA-Z0-9_]+","code"],["text","/collect/import"]],"defaults":[],"requirements":{"code":"[a-zA-Z0-9_]+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_import_execution_download_log":{"tokens":[["text","/download"],["variable","/","\\\\d+","id"],["text","/collect/import_execution"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_import_execution_download_file":{"tokens":[["variable","/","[^/]++","key"],["variable","/","[^/]++","archiver"],["text","/download"],["variable","/","\\\\d+","id"],["text","/collect/import_execution"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_export_execution_download_log":{"tokens":[["text","/download"],["variable","/","\\\\d+","id"],["text","/spread/export_execution"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_importexport_export_execution_download_file":{"tokens":[["variable","/","[^/]++","key"],["variable","/","[^/]++","archiver"],["text","/download"],["variable","/","\\\\d+","id"],["text","/spread/export_execution"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_job_instance_rest_import_get":{"tokens":[["variable","/","[^/]++","identifier"],["text","/job-instance/rest/import"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_job_instance_rest_import_create":{"tokens":[["text","/job-instance/rest/import"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_job_instance_rest_export_create":{"tokens":[["text","/job-instance/rest/export"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_job_instance_rest_import_put":{"tokens":[["variable","/","[^/]++","identifier"],["text","/job-instance/rest/import"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PUT","POST"],"schemes":[]},"pim_enrich_job_instance_rest_import_delete":{"tokens":[["variable","/","[^/]++","code"],["text","/job-instance/rest/import"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_job_instance_rest_import_launch":{"tokens":[["text","/launch"],["variable","/","[^/]++","code"],["text","/job-instance/rest/import"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST","GET"],"schemes":[]},"pim_enrich_job_instance_rest_export_get":{"tokens":[["variable","/","[^/]++","identifier"],["text","/job-instance/rest/export"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_job_instance_rest_export_put":{"tokens":[["variable","/","[^/]++","identifier"],["text","/job-instance/rest/export"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PUT","POST"],"schemes":[]},"pim_enrich_job_instance_rest_export_delete":{"tokens":[["variable","/","[^/]++","code"],["text","/job-instance/rest/export"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_enrich_job_instance_rest_export_launch":{"tokens":[["text","/launch"],["variable","/","[^/]++","code"],["text","/job-instance/rest/export"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST","GET"],"schemes":[]},"pim_enrich_job_instance_rest_jobs_get":{"tokens":[["text","/job-instance/rest/jobs"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_job_instance_rest_duplicate":{"tokens":[["text","/duplicate"],["variable","/","[^/]++","code"],["text","/job-instance/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_job_execution_rest_get":{"tokens":[["variable","/","[^/]++","identifier"],["text","/job-execution/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_job_tracker_rest_stop":{"tokens":[["text","/stop"],["variable","/","\\\\d+","id"],["text","/job"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_job_tracker_download_file":{"tokens":[["variable","/","[^/]++","key"],["variable","/","[^/]++","archiver"],["text","/download"],["variable","/","\\\\d+","id"],["text","/job"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_enrich_job_tracker_download_zip_archive":{"tokens":[["text","/download/zip"],["variable","/","\\\\d+","jobExecutionId"],["text","/job"]],"defaults":[],"requirements":{"jobExecutionId":"\\\\d+"},"hosttokens":[],"methods":[],"schemes":[]},"pim_notification_notification_list":{"tokens":[["text","/notification/list"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_notification_notification_count_unread":{"tokens":[["text","/notification/count_unread"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_notification_notification_mark_viewed":{"tokens":[["variable","/","\\\\d+","id"],["text","/notification/mark_viewed"]],"defaults":{"id":null},"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_notification_notification_remove":{"tokens":[["variable","/","\\\\d+","id"],["text","/notification/remove"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["DELETE"],"schemes":[]},"pim_api_media_file_list":{"tokens":[["text","/api/rest/v1/media-files"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_media_file_download":{"tokens":[["text","/download"],["variable","/","(?:[a-zA-Z0-9_./]+)","code"],["text","/api/rest/v1/media-files"]],"defaults":[],"requirements":{"code":"([a-zA-Z0-9_./]+)"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_media_file_get":{"tokens":[["variable","/","(?:[a-zA-Z0-9_./]+)","code"],["text","/api/rest/v1/media-files"]],"defaults":[],"requirements":{"code":"([a-zA-Z0-9_./]+)"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_media_file_create":{"tokens":[["text","/api/rest/v1/media-files"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"fos_oauth_server_token":{"tokens":[["text","/api/oauth/v1/token"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_root_endpoint":{"tokens":[["text","/api/rest/v1"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"legacy_pim_api_measure_family_list":{"tokens":[["text","/api/rest/v1/measure-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"legacy_pim_api_measure_family_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/measure-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_measurement_family_get":{"tokens":[["text","/api/rest/v1/measurement-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_measurement_family_create_or_update":{"tokens":[["text","/api/rest/v1/measurement-families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_enrich_catalog_volume_index":{"tokens":[["text","/catalog-volumes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"pim_volume_monitoring_get_volumes":{"tokens":[["text","/catalog-volume-monitoring/volumes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_dashboard":{"tokens":[["text","/data-quality-insights/dashboard"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_dashboard_overview":{"tokens":[["variable","/","[^/]++","timePeriod"],["variable","/","[^/]++","locale"],["variable","/","[^/]++","channel"],["text","/data-quality-insights/dashboard/overview"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_dashboard_widget_families":{"tokens":[["variable","/","[^/]++","locale"],["variable","/","[^/]++","channel"],["text","/data-quality-insights/dashboard/widget/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_dashboard_widget_categories":{"tokens":[["variable","/","[^/]++","locale"],["variable","/","[^/]++","channel"],["text","/data-quality-insights/dashboard/widget/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_dashboard_key_indicators":{"tokens":[["variable","/","[^/]++","locale"],["variable","/","[^/]++","channel"],["text","/data-quality-insights/dashboard/key_indicators"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_dashboard_quality_score_evolution":{"tokens":[["variable","/","[^/]++","locale"],["variable","/","[^/]++","channel"],["text","/data-quality-insights/dashboard/quality-score-evolution"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_product_evaluation":{"tokens":[["variable","/","[^/]++","productUuid"],["text","/data-quality-insights/product-evaluation"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_evaluate_product":{"tokens":[["variable","/","[^/]++","productId"],["text","/data-quality-insights/product-evaluation"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_data_quality_insights_product_model_evaluation":{"tokens":[["variable","/","[^/]++","productModelId"],["text","/data-quality-insights/product-model-evaluation"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_evaluate_product_model":{"tokens":[["variable","/","[^/]++","productId"],["text","/data-quality-insights/product-model-evaluation"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_data_quality_insights_update_attribute_group_activation":{"tokens":[["text","/data-quality-insights/attribute-group-activation"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_data_quality_insights_get_attribute_group_activation":{"tokens":[["variable","/","[^/]++","attributeGroupCode"],["text","/data-quality-insights/attribute-group-activation"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_get_all_attribute_groups_activation":{"tokens":[["text","/data-quality-insights/attribute-groups-activation"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_product_quality_score":{"tokens":[["variable","/","[^/]++","productUuid"],["text","/data-quality-insights/product-quality-score"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_product_model_quality_score":{"tokens":[["variable","/","[^/]++","productId"],["text","/data-quality-insights/product-model-quality-score"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_data_quality_insights_find_families":{"tokens":[["text","/data-quality-insights/families"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_category_list":{"tokens":[["text","/api/rest/v1/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_category_get":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_api_category_create":{"tokens":[["text","/api/rest/v1/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_api_category_partial_update":{"tokens":[["variable","/","[^/]++","code"],["text","/api/rest/v1/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_api_category_partial_update_list":{"tokens":[["text","/api/rest/v1/categories"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"pim_enrich_category_rest_list_selected_children":{"tokens":[["text","/selected-children"],["variable","/","[^/]++","identifier"],["text","/enrich/category/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enrich_category_rest_list":{"tokens":[["text","/enrich/category/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enrich_category_rest_get":{"tokens":[["variable","/","[^/]++","identifier"],["text","/enrich/category/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enriched_category_rest_update":{"tokens":[["variable","/","\\\\d+","id"],["text","/category/rest"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enriched_category_rest_get":{"tokens":[["variable","/","\\\\d+","id"],["text","/category/rest"]],"defaults":[],"requirements":{"id":"\\\\d+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_enriched_category_rest_file_upload":{"tokens":[["text","/category/rest/file/upload"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_enriched_category_rest_image_preview":{"tokens":[["variable","/","[^/]++","type"],["variable","/","[^/]++","attributeCode"],["text","/category/rest/file/image_preview"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET","POST"],"schemes":[]},"pim_category_template_rest_get_by_template_uuid":{"tokens":[["variable","/","[^/]++","templateUuid"],["text","/category/template/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_category_template_rest_get_by_template_uuid_in_memory":{"tokens":[["variable","/","[^/]++","templateUuid"],["text","/category/template/rest/in-memory"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"pim_category_template_rest_create":{"tokens":[["variable","/","[^/]++","categoryTreeId"],["text","/category/template/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"pim_category_template_edit":{"tokens":[["variable","/","[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}","templateUuid"],["text","/template"],["variable","/","\\\\d+","treeId"],["text","/enrich/product-category-tree"]],"defaults":[],"requirements":{"treeId":"\\\\d+","templateUuid":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"},"hosttokens":[],"methods":[],"schemes":[]},"akeneo_identifier_generator_index":{"tokens":[["text","/configuration/identifier-generator/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"akeneo_identifier_generator_edit":{"tokens":[["variable","/","[^/]++","code"],["text","/configuration/identifier-generator"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_identifier_generator_get_identifier_attributes":{"tokens":[["text","/identifier-generator/identifier-attributes"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_identifier_generator_rest_list":{"tokens":[["text","/rest/identifier-generator"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_identifier_generator_rest_create":{"tokens":[["text","/rest/identifier-generator"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"akeneo_identifier_generator_rest_delete":{"tokens":[["variable","/","[^/]++","code"],["text","/rest/identifier-generator"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["DELETE"],"schemes":[]},"akeneo_identifier_generator_rest_get":{"tokens":[["variable","/","[^/]++","code"],["text","/rest/identifier-generator"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"akeneo_identifier_generator_rest_update":{"tokens":[["variable","/","[^/]++","code"],["text","/rest/identifier-generator"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["PATCH"],"schemes":[]},"oro_default":{"tokens":[["text","/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"oro_config_configuration_system":{"tokens":[["text","/system/"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"oro_config_configuration_system_get":{"tokens":[["text","/system/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["GET"],"schemes":[]},"oro_config_configuration_system_post":{"tokens":[["text","/system/rest"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":["POST"],"schemes":[]},"oro_datagrid_index":{"tokens":[["variable","/","[^/]++","gridName"],["text","/datagrid"]],"defaults":[],"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"oro_translation_jstranslation":{"tokens":[["text",".js"],["variable","/","[^/\\\\.]++","_locale"],["text","/js/translation"]],"defaults":{"_locale":""},"requirements":[],"hosttokens":[],"methods":[],"schemes":[]},"fos_js_routing_js":{"tokens":[["variable",".","js|json","_format"],["text","/js/routing"]],"defaults":{"_format":"js"},"requirements":{"_format":"js|json"},"hosttokens":[],"methods":["GET"],"schemes":[]},"liip_imagine_filter_runtime":{"tokens":[["variable","/",".+","path"],["variable","/","[^/]++","hash"],["text","/rc"],["variable","/","[A-z0-9_-]*","filter"],["text","/media/cache/resolve"]],"defaults":[],"requirements":{"filter":"[A-z0-9_-]*","path":".+"},"hosttokens":[],"methods":["GET"],"schemes":[]},"liip_imagine_filter":{"tokens":[["variable","/",".+","path"],["variable","/","[A-z0-9_-]*","filter"],["text","/media/cache/resolve"]],"defaults":[],"requirements":{"filter":"[A-z0-9_-]*","path":".+"},"hosttokens":[],"methods":["GET"],"schemes":[]}},"prefix":"","host":"localhost:8080","port":"8080","scheme":"http","locale":""}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.hmd = (module) => {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: () => {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/dist/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkpim_community_standard"] = self["webpackChunkpim_community_standard"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["vendor"], () => (__webpack_require__(76124)))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendor"], () => (__webpack_require__(97158)))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;
//# sourceMappingURL=main.min.js.map